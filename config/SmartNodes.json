{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "have",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "want",
          "type": "address"
        }
      ],
      "name": "OnlyCoordinatorCanFulfill",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "validatorId",
          "type": "uint256"
        }
      ],
      "name": "ValidatorActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "ValidatorCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "validatorId",
          "type": "uint256"
        }
      ],
      "name": "ValidatorDeactivated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_subscriptionId",
          "type": "uint64"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobActivity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "jobIdByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobIdByRequestId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobIdByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "name": "rawFulfillRandomWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nValidators",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        }
      ],
      "name": "requestJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "updateJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "validatorId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "newReputation",
          "type": "uint8"
        }
      ],
      "name": "updateValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "workerId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "newReputation",
          "type": "uint8"
        }
      ],
      "name": "updateWorker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userActivity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userIdByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userIdByJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userKeyById",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validatorActivity",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "validatorIdByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validatorKeyById",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "workers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "5": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.0/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
    "7": "/Users/matthewhawken/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.0/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Upgradeable.sol",
    "9": "contracts/SmartNodes.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartNodes.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2128
      ],
      "ContextUpgradeable": [
        2273
      ],
      "ERC20Upgradeable": [
        1667
      ],
      "IERC20MetadataUpgradeable": [
        2231
      ],
      "IERC20Upgradeable": [
        2206
      ],
      "Initializable": [
        1054
      ],
      "SmartNodes": [
        980
      ],
      "VRFConsumerBaseV2Upgradeable": [
        1843
      ],
      "VRFCoordinatorV2Interface": [
        1763
      ],
      "VRFV2PlusClient": [
        1885
      ]
    },
    "id": 981,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 981,
        "sourceUnit": 1668,
        "src": "57:78:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 981,
        "sourceUnit": 1055,
        "src": "136:75:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.0/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Upgradeable.sol",
        "file": "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Upgradeable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 981,
        "sourceUnit": 1844,
        "src": "212:80:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.0/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 981,
        "sourceUnit": 1764,
        "src": "293:80:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.0/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
        "file": "@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 981,
        "sourceUnit": 1886,
        "src": "374:100:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "VRFV2PlusClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1885,
              "src": "382:15:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "586:16:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1667,
              "src": "586:16:9"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "586:16:9"
          },
          {
            "baseName": {
              "id": 11,
              "name": "VRFConsumerBaseV2Upgradeable",
              "nameLocations": [
                "604:28:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1843,
              "src": "604:28:9"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "604:28:9"
          }
        ],
        "canonicalName": "SmartNodes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "476:86:9",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 980,
        "linearizedBaseContracts": [
          980,
          1843,
          1667,
          2231,
          2206,
          2273,
          1054
        ],
        "name": "SmartNodes",
        "nameLocation": "572:10:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "378dc3dc",
            "id": 15,
            "mutability": "constant",
            "name": "initialSupply",
            "nameLocation": "697:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "673:53:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f3030305f303030653138",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "713:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000"
              },
              "value": "10_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d5abeb01",
            "id": 18,
            "mutability": "constant",
            "name": "maxSupply",
            "nameLocation": "756:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "732:49:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32315f3030305f303030653138",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "768:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "96afc450",
            "id": 21,
            "mutability": "constant",
            "name": "emissionRate",
            "nameLocation": "811:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "787:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "787:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38653138",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "826:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000000000000000000_by_1",
                "typeString": "int_const 8000000000000000000"
              },
              "value": "8e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d8df5dc1",
            "id": 24,
            "mutability": "constant",
            "name": "lockAmount",
            "nameLocation": "911:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "887:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "887:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35653138",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "924:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "c8df245a",
            "id": 27,
            "mutability": "constant",
            "name": "halving",
            "nameLocation": "1002:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "978:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "978:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1012:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "99439089",
            "id": 29,
            "mutability": "mutable",
            "name": "validatorContract",
            "nameLocation": "1126:17:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1111:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 31,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "1208:18:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1193:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1193:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2faba6ae",
            "id": 33,
            "mutability": "mutable",
            "name": "userIdCounter",
            "nameLocation": "1247:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1232:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1232:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 35,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "1281:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1266:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1266:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 37,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "1312:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1297:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1297:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 39,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "1346:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1331:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "s_subscriptionId",
            "nameLocation": "1405:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1398:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 40,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1398:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "linkAddress",
            "nameLocation": "1435:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1427:64:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1427:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837373938373741374230443945383630333136394464624437383336653437386234363234373839",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1449:42:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x779877A7B0D9E8603169DdbD7836e478b4624789"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "s_keyHash",
            "nameLocation": "1505:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1497:94:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 45,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307837383764373463616561313062326233353737393064356235323437633266363364316439313537326139383436663738303630366534643935333637376165",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1525:66:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_54499203786224664545214975898555686073558526619289911036465919174612406925230_by_1",
                "typeString": "int_const 5449...(69 digits omitted)...5230"
              },
              "value": "0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "callbackGasLimit",
            "nameLocation": "1604:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1597:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 48,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1597:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "313030303030",
              "id": 49,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1623:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "requestConfirmations",
            "nameLocation": "1642:20:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1635:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 51,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1635:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1665:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "numWords",
            "nameLocation": "1679:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1672:19:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 54,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1672:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1690:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "vrfCoordinator",
            "nameLocation": "1705:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1697:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 57,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1697:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "COORDINATOR",
            "nameLocation": "1751:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "1725:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1763",
              "typeString": "contract VRFCoordinatorV2Interface"
            },
            "typeName": {
              "id": 60,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59,
                "name": "VRFCoordinatorV2Interface",
                "nameLocations": [
                  "1725:25:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1763,
                "src": "1725:25:9"
              },
              "referencedDeclaration": 1763,
              "src": "1725:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1763",
                "typeString": "contract VRFCoordinatorV2Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "c278abaf901ee66c9c5ad86c559c69d95b3121ab80ffa1bb4a0097a9b9aee6a2",
            "id": 67,
            "name": "ValidatorCreated",
            "nameLocation": "1789:16:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1822:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1806:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "1834:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1826:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1805:46:9"
            },
            "src": "1783:69:9"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 73,
            "name": "TokensLocked",
            "nameLocation": "1863:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1892:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1876:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1911:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1903:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1875:43:9"
            },
            "src": "1857:62:9"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 79,
            "name": "UnlockInitiated",
            "nameLocation": "1930:15:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1962:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1946:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "1981:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1973:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1945:47:9"
            },
            "src": "1924:69:9"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 85,
            "name": "TokensUnlocked",
            "nameLocation": "2004:14:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2035:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2019:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2054:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2046:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:43:9"
            },
            "src": "1998:64:9"
          },
          {
            "anonymous": false,
            "eventSelector": "e2a191ee805447bcf5adabadd39cb816b1b46de1364263aef69980bdafd8370f",
            "id": 89,
            "name": "ValidatorActivated",
            "nameLocation": "2073:18:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "2108:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "2092:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2091:29:9"
            },
            "src": "2067:54:9"
          },
          {
            "anonymous": false,
            "eventSelector": "12048e179cb277774d73abb2f522205e0fcd471ab52fa6feb7b5b5508dd26a21",
            "id": 93,
            "name": "ValidatorDeactivated",
            "nameLocation": "2132:20:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "2169:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2153:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2152:29:9"
            },
            "src": "2126:56:9"
          },
          {
            "anonymous": false,
            "eventSelector": "dbd9082204763b590f250a641c459b7b94d813cd5b0937d3f77e5e393bfcf32f",
            "id": 97,
            "name": "JobRequested",
            "nameLocation": "2193:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "2222:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "2206:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2205:23:9"
            },
            "src": "2187:42:9"
          },
          {
            "anonymous": false,
            "eventSelector": "7e2409eb03fe1e2ea93add34ad736f8cddc41ffdc3c5875587b3e40ab490996a",
            "id": 101,
            "name": "JobStarted",
            "nameLocation": "2240:10:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "2267:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2251:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:23:9"
            },
            "src": "2234:40:9"
          },
          {
            "anonymous": false,
            "eventSelector": "02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be8929",
            "id": 105,
            "name": "JobCompleted",
            "nameLocation": "2285:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "2314:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2298:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2297:23:9"
            },
            "src": "2279:42:9"
          },
          {
            "canonicalName": "SmartNodes.User",
            "id": 112,
            "members": [
              {
                "constant": false,
                "id": 107,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2431:2:9",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2423:10:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 106,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2423:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 109,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "2451:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2443:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 108,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2443:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 111,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "2478:10:9",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "2472:16:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 110,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2472:5:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "2408:4:9",
            "nodeType": "StructDefinition",
            "scope": 980,
            "src": "2401:94:9",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.Validator",
            "id": 125,
            "members": [
              {
                "constant": false,
                "id": 114,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2639:2:9",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2631:10:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 113,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2631:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 116,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "2659:16:9",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2651:24:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 115,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2651:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 118,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "2693:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2685:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 117,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2685:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 120,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "2717:10:9",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2709:18:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 119,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2709:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "2743:10:9",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2737:16:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 121,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2737:5:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 124,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "2768:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2763:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 123,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2763:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "2611:9:9",
            "nodeType": "StructDefinition",
            "scope": 980,
            "src": "2604:179:9",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.Worker",
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2900:2:9",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "2892:10:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 126,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2892:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "2920:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "2912:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 128,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2912:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "2947:10:9",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "2941:16:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 130,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2941:5:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Worker",
            "nameLocation": "2875:6:9",
            "nodeType": "StructDefinition",
            "scope": 980,
            "src": "2868:96:9",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.Job",
            "id": 142,
            "members": [
              {
                "constant": false,
                "id": 134,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "3128:2:9",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "3120:10:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 133,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3120:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 136,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "3148:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "3140:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 135,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3140:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 138,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "3171:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "3163:16:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 137,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3163:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 141,
                "mutability": "mutable",
                "name": "validatorIds",
                "nameLocation": "3199:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "3189:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 140,
                  "nodeType": "ArrayTypeName",
                  "src": "3189:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "3106:3:9",
            "nodeType": "StructDefinition",
            "scope": 980,
            "src": "3099:119:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 147,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "3305:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3273:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$112_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.User)"
            },
            "typeName": {
              "id": 146,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 143,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3281:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3273:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$112_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 145,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 144,
                  "name": "User",
                  "nameLocations": [
                    "3292:4:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "3292:4:9"
                },
                "referencedDeclaration": 112,
                "src": "3292:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$112_storage_ptr",
                  "typeString": "struct SmartNodes.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 152,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "3353:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3316:47:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$125_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Validator)"
            },
            "typeName": {
              "id": 151,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 148,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3324:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3316:29:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$125_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 150,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 149,
                  "name": "Validator",
                  "nameLocations": [
                    "3335:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "3335:9:9"
                },
                "referencedDeclaration": 125,
                "src": "3335:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                  "typeString": "struct SmartNodes.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1a22dc2",
            "id": 157,
            "mutability": "mutable",
            "name": "workers",
            "nameLocation": "3403:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3369:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Worker_$132_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Worker)"
            },
            "typeName": {
              "id": 156,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 153,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3377:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3369:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Worker_$132_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Worker)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 155,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 154,
                  "name": "Worker",
                  "nameLocations": [
                    "3388:6:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "3388:6:9"
                },
                "referencedDeclaration": 132,
                "src": "3388:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Worker_$132_storage_ptr",
                  "typeString": "struct SmartNodes.Worker"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 162,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "3447:4:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3416:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Job)"
            },
            "typeName": {
              "id": 161,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 158,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3424:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3416:23:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 160,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 159,
                  "name": "Job",
                  "nameLocations": [
                    "3435:3:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "3435:3:9"
                },
                "referencedDeclaration": 142,
                "src": "3435:3:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$142_storage_ptr",
                  "typeString": "struct SmartNodes.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b759088",
            "id": 166,
            "mutability": "mutable",
            "name": "userIdByAddress",
            "nameLocation": "3517:15:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3482:50:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 165,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 163,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3490:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3482:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 164,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3501:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 170,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "3573:20:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3538:55:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 169,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 167,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3546:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3538:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 168,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3557:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32d40160",
            "id": 174,
            "mutability": "mutable",
            "name": "userIdByHash",
            "nameLocation": "3634:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3600:46:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 173,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 171,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3608:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3600:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 172,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3618:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2130a16f",
            "id": 178,
            "mutability": "mutable",
            "name": "validatorIdByHash",
            "nameLocation": "3686:17:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3652:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 177,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 175,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3660:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3652:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 176,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3670:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2f8e58c",
            "id": 182,
            "mutability": "mutable",
            "name": "jobIdByHash",
            "nameLocation": "3743:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3709:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 181,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 179,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3717:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3709:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 180,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3727:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "012dccdd",
            "id": 186,
            "mutability": "mutable",
            "name": "jobIdByUser",
            "nameLocation": "3795:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3760:46:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 185,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 183,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3768:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3760:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 184,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3779:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "83570395",
            "id": 190,
            "mutability": "mutable",
            "name": "jobIdByRequestId",
            "nameLocation": "3847:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3812:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 189,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 187,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3820:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3812:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 188,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3831:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4316e269",
            "id": 194,
            "mutability": "mutable",
            "name": "validatorKeyById",
            "nameLocation": "3904:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3870:50:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 193,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 191,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3878:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3870:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 192,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3889:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87a30a28",
            "id": 198,
            "mutability": "mutable",
            "name": "userKeyById",
            "nameLocation": "3960:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3926:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 197,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 195,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3934:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3926:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 196,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3945:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18306ef6",
            "id": 202,
            "mutability": "mutable",
            "name": "userIdByJob",
            "nameLocation": "4012:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "3977:46:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 201,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 199,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3985:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3977:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 200,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3996:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e707a21e",
            "id": 206,
            "mutability": "mutable",
            "name": "validatorActivity",
            "nameLocation": "4062:17:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "4030:49:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 205,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 203,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4038:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4030:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 204,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4049:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fc40303",
            "id": 210,
            "mutability": "mutable",
            "name": "userActivity",
            "nameLocation": "4117:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "4085:44:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 209,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 207,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4093:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4085:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 208,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4104:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2ced9ff",
            "id": 214,
            "mutability": "mutable",
            "name": "jobActivity",
            "nameLocation": "4167:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 980,
            "src": "4135:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 213,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 211,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4143:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4135:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 212,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4154:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "4218:151:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 217,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4249:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4253:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4249:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 219,
                          "name": "validatorContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "4263:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4249:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d757374206265207468652056616c696461746f724d756c746953696720636f6e7472616374",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4294:47:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d0c44231f2d337df7ddb5420596c33b475dbbc9c6082d7779a8cb0ce2bafe4",
                          "typeString": "literal_string \"Caller must be the ValidatorMultiSig contract\""
                        },
                        "value": "Caller must be the ValidatorMultiSig contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d0c44231f2d337df7ddb5420596c33b475dbbc9c6082d7779a8cb0ce2bafe4",
                          "typeString": "literal_string \"Caller must be the ValidatorMultiSig contract\""
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4228:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:123:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:123:9"
                },
                {
                  "id": 224,
                  "nodeType": "PlaceholderStatement",
                  "src": "4361:1:9"
                }
              ]
            },
            "id": 226,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "4194:21:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4215:2:9"
            },
            "src": "4185:184:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "4521:513:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d617274204e6f646573",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4544:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08c987e6bcfae77ecfc067fc661aa6a2a8ab8b94f0e33db7eb8fa2dd2330db6b",
                          "typeString": "literal_string \"Smart Nodes\""
                        },
                        "value": "Smart Nodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4559:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_08c987e6bcfae77ecfc067fc661aa6a2a8ab8b94f0e33db7eb8fa2dd2330db6b",
                          "typeString": "literal_string \"Smart Nodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 237,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1101,
                      "src": "4531:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4531:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "4531:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 243,
                        "name": "_vrfCoordinator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "4600:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 242,
                      "name": "__VRFConsumerBaseV2_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "4575:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4575:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4575:41:9"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 246,
                      "name": "COORDINATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4626:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1763",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 248,
                          "name": "_vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 230,
                          "src": "4666:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 247,
                        "name": "VRFCoordinatorV2Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "4640:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$1763_$",
                          "typeString": "type(contract VRFCoordinatorV2Interface)"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4640:42:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1763",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "src": "4626:56:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1763",
                      "typeString": "contract VRFCoordinatorV2Interface"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:56:9"
                },
                {
                  "expression": {
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 252,
                      "name": "validatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "4766:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 253,
                      "name": "_validatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "4786:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4766:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "4766:38:9"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 256,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "4814:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4835:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4814:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4814:22:9"
                },
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 260,
                      "name": "vrfCoordinator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "4846:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 261,
                      "name": "_vrfCoordinator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "4863:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4846:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:32:9"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 264,
                      "name": "s_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "4888:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 265,
                      "name": "_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "4907:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4888:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4888:34:9"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "4932:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4948:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4932:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:17:9"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4959:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4972:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4959:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4959:14:9"
                },
                {
                  "expression": {
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 276,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4983:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4999:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4983:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "4983:17:9"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 280,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "5010:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5026:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "5010:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "5010:17:9"
                }
              ]
            },
            "functionSelector": "7879ec31",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 234,
                  "name": "initializer",
                  "nameLocations": [
                    "4509:11:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1028,
                  "src": "4509:11:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4509:11:9"
              }
            ],
            "name": "initialize",
            "nameLocation": "4384:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "_validatorContract",
                  "nameLocation": "4412:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4404:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4404:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "4448:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4440:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "_subscriptionId",
                  "nameLocation": "4480:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "4473:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4394:107:9"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4521:0:9"
            },
            "scope": 980,
            "src": "4375:659:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "5183:463:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "userIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "5257:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "expression": {
                              "id": 293,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5273:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5277:6:9",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5273:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5257:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5288:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5257:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5291:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5249:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5249:69:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "5249:69:9"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 301,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "5329:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$112_storage_$",
                          "typeString": "mapping(uint256 => struct SmartNodes.User storage ref)"
                        }
                      },
                      "id": 303,
                      "indexExpression": {
                        "id": 302,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5335:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5329:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$112_storage",
                        "typeString": "struct SmartNodes.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 305,
                          "name": "userIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "5375:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 306,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5415:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5419:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5415:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5451:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 304,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "5352:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$112_storage_ptr_$",
                          "typeString": "type(struct SmartNodes.User storage pointer)"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5371:2:9",
                        "5402:11:9",
                        "5439:10:9"
                      ],
                      "names": [
                        "id",
                        "userAddress",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5352:111:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$112_memory_ptr",
                        "typeString": "struct SmartNodes.User memory"
                      }
                    },
                    "src": "5329:134:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$112_storage",
                      "typeString": "struct SmartNodes.User storage ref"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:134:9"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 312,
                        "name": "userIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "5474:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 315,
                      "indexExpression": {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5490:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5494:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5490:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5474:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 316,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "5504:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5474:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "5474:43:9"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 319,
                        "name": "userIdByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "5527:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "id": 320,
                        "name": "publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "5540:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5527:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 322,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "5553:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5527:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "5527:39:9"
                },
                {
                  "expression": {
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 325,
                        "name": "userKeyById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "5576:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 327,
                      "indexExpression": {
                        "id": 326,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5588:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5576:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 328,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "5605:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5576:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "5576:38:9"
                },
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5624:15:9",
                    "subExpression": {
                      "id": 331,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "5624:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "5624:15:9"
                }
              ]
            },
            "documentation": {
              "id": 286,
              "nodeType": "StructuredDocumentation",
              "src": "5040:84:9",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "507ffba5",
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "5138:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "publicKey",
                  "nameLocation": "5163:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "5149:23:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5149:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:25:9"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5183:0:9"
            },
            "scope": 980,
            "src": "5129:517:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "5830:951:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 342,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "5861:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 345,
                          "indexExpression": {
                            "expression": {
                              "id": 343,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5882:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5886:6:9",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5882:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5861:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5897:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5861:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220776974682074686973207075626c69634b65794861736820616c726561647920657869737473",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:50:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_404e460af5f23ac3821c81c9164ccad3cf2485556380ae8d62d8a680a8be21db",
                          "typeString": "literal_string \"Validator with this publicKeyHash already exists\""
                        },
                        "value": "Validator with this publicKeyHash already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_404e460af5f23ac3821c81c9164ccad3cf2485556380ae8d62d8a680a8be21db",
                          "typeString": "literal_string \"Validator with this publicKeyHash already exists\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5840:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5840:132:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "5840:132:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 353,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6014:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6018:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6014:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 352,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "6004:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6004:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 356,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "6029:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6004:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6053:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5983:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5983:109:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5983:109:9"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6142:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "6137:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6137:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 364,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6165:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6169:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6165:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 368,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6185:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartNodes_$980",
                              "typeString": "contract SmartNodes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartNodes_$980",
                              "typeString": "contract SmartNodes"
                            }
                          ],
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6177:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 366,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6177:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6177:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 370,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "6192:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 363,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "6152:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6152:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6137:66:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 374,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "6222:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6231:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6214:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6214:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "6214:41:9"
                },
                {
                  "expression": {
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "6266:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$125_storage_$",
                          "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "6277:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6266:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$125_storage",
                        "typeString": "struct SmartNodes.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 382,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "6327:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 383,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6377:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6381:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6377:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 385,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "6409:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6445:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "313030",
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6472:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6499:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 381,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "6299:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$125_storage_ptr_$",
                          "typeString": "type(struct SmartNodes.Validator storage pointer)"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6323:2:9",
                        "6359:16:9",
                        "6401:6:9",
                        "6433:10:9",
                        "6460:10:9",
                        "6489:8:9"
                      ],
                      "names": [
                        "id",
                        "validatorAddress",
                        "locked",
                        "unlockTime",
                        "reputation",
                        "isActive"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6299:215:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$125_memory_ptr",
                        "typeString": "struct SmartNodes.Validator memory"
                      }
                    },
                    "src": "6266:248:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$125_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:248:9"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 392,
                        "name": "validatorKeyById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "6525:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 394,
                      "indexExpression": {
                        "id": 393,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "6542:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6525:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 395,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 338,
                      "src": "6559:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6525:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "6525:43:9"
                },
                {
                  "expression": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 398,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "6578:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 401,
                      "indexExpression": {
                        "expression": {
                          "id": 399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6599:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6603:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6599:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6578:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 402,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "6613:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6578:53:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:53:9"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 405,
                        "name": "validatorIdByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "6641:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 407,
                      "indexExpression": {
                        "id": 406,
                        "name": "publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "6659:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6641:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 408,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "6672:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6641:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "6641:49:9"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 411,
                        "name": "validatorActivity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "6700:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 413,
                      "indexExpression": {
                        "id": 412,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "6718:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6700:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6740:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6700:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "6700:44:9"
                },
                {
                  "expression": {
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6754:20:9",
                    "subExpression": {
                      "id": 417,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "6754:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:20:9"
                }
              ]
            },
            "documentation": {
              "id": 336,
              "nodeType": "StructuredDocumentation",
              "src": "5652:114:9",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "cf6acd47",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "5780:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "publicKey",
                  "nameLocation": "5810:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "5796:23:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5796:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5795:25:9"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5830:0:9"
            },
            "scope": 980,
            "src": "5771:1010:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 535,
              "nodeType": "Block",
              "src": "6880:1148:9",
              "statements": [
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "6898:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 535,
                      "src": "6890:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6890:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 434,
                  "initialValue": {
                    "baseExpression": {
                      "id": 430,
                      "name": "userIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "6904:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 433,
                    "indexExpression": {
                      "expression": {
                        "id": 431,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6920:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6924:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6920:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6904:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6890:41:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 436,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "6949:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6956:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6949:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420726567697374657265642e",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6959:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        },
                        "value": "User not registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        }
                      ],
                      "id": 435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6941:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6941:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "6941:41:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 443,
                          "name": "capacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "7000:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7011:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7000:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4361706163697479206d7573742062652067726561746572207a65726f2e",
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7014:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        },
                        "value": "Capacity must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        }
                      ],
                      "id": 442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6992:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6992:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "6992:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 450,
                            "name": "userActivity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "7065:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 452,
                          "indexExpression": {
                            "id": 451,
                            "name": "uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "7078:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7065:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7086:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7065:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722068617320616e20616374697665206a6f622e",
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7093:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5918840e8b34f810604c24a138a53e51d77b2e91cc3fc96540abf275bcb87735",
                          "typeString": "literal_string \"User has an active job.\""
                        },
                        "value": "User has an active job."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5918840e8b34f810604c24a138a53e51d77b2e91cc3fc96540abf275bcb87735",
                          "typeString": "literal_string \"User has an active job.\""
                        }
                      ],
                      "id": 449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7057:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7057:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "7057:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 459,
                            "name": "jobIdByUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "7137:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "id": 460,
                            "name": "uid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "7149:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7137:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7157:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7137:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7129:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7129:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "7129:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 467,
                            "name": "nValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "7190:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7204:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7190:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 470,
                            "name": "nValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "7209:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 471,
                            "name": "maxValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "7223:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7209:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7190:46:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642076616c696461746f7220636f756e742e",
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7250:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e045b889a9092ad22a44f4f9784da6e19a47972cbb8c6d1d020cd783808f909",
                          "typeString": "literal_string \"Invalid validator count.\""
                        },
                        "value": "Invalid validator count."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e045b889a9092ad22a44f4f9784da6e19a47972cbb8c6d1d020cd783808f909",
                          "typeString": "literal_string \"Invalid validator count.\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7169:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7169:117:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "7169:117:9"
                },
                {
                  "assignments": [
                    478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 478,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "7364:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 535,
                      "src": "7356:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7356:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 487,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 481,
                        "name": "s_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "7420:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 482,
                        "name": "s_subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "7443:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 483,
                        "name": "requestConfirmations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "7473:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 484,
                        "name": "callbackGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "7507:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 485,
                        "name": "numWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "7537:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 479,
                        "name": "COORDINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "7376:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$1763",
                          "typeString": "contract VRFCoordinatorV2Interface"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7388:18:9",
                      "memberName": "requestRandomWords",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1696,
                      "src": "7376:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7376:179:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7356:199:9"
                },
                {
                  "expression": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 488,
                        "name": "jobIdByUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "7566:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 490,
                      "indexExpression": {
                        "id": 489,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "7578:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7566:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 491,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7585:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7566:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "7566:29:9"
                },
                {
                  "expression": {
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 494,
                        "name": "jobIdByRequestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "7605:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 496,
                      "indexExpression": {
                        "id": 495,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "7622:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7605:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 497,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7635:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7605:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "7605:40:9"
                },
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 500,
                        "name": "jobActivity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "7655:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 502,
                      "indexExpression": {
                        "id": 501,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "7667:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7655:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7681:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7655:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "7655:31:9"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 506,
                        "name": "userIdByJob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "7696:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 508,
                      "indexExpression": {
                        "id": 507,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "7708:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7696:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 509,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "7722:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7696:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "7696:29:9"
                },
                {
                  "expression": {
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 512,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "7780:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
                          "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                        }
                      },
                      "id": 514,
                      "indexExpression": {
                        "id": 513,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "7785:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7780:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$142_storage",
                        "typeString": "struct SmartNodes.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 516,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "7821:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 517,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7852:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7856:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7852:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 519,
                          "name": "capacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "7886:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "nValidators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "7936:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7922:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 520,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7926:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 521,
                              "nodeType": "ArrayTypeName",
                              "src": "7926:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7922:26:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "id": 515,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "7799:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$142_storage_ptr_$",
                          "typeString": "type(struct SmartNodes.Job storage pointer)"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7817:2:9",
                        "7845:5:9",
                        "7876:8:9",
                        "7908:12:9"
                      ],
                      "names": [
                        "id",
                        "owner",
                        "capacity",
                        "validatorIds"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7799:160:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$142_memory_ptr",
                        "typeString": "struct SmartNodes.Job memory"
                      }
                    },
                    "src": "7780:179:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$142_storage",
                      "typeString": "struct SmartNodes.Job storage ref"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "7780:179:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 529,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "7988:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 528,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "7975:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7975:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "EmitStatement",
                  "src": "7970:29:9"
                },
                {
                  "expression": {
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "8009:12:9",
                    "subExpression": {
                      "id": 532,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "8009:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "8009:12:9"
                }
              ]
            },
            "functionSelector": "0c97cf81",
            "id": 536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "6823:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "nValidators",
                  "nameLocation": "6840:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "6834:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6834:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "capacity",
                  "nameLocation": "6861:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "6853:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6853:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6833:37:9"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6880:0:9"
            },
            "scope": 980,
            "src": "6814:1214:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1816
            ],
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "8224:1277:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 546,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8255:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8259:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8255:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 548,
                          "name": "vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "8269:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8255:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8297:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
                          "typeString": "literal_string \"Only VRFCoordinator can fulfill\""
                        },
                        "value": "Only VRFCoordinator can fulfill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
                          "typeString": "literal_string \"Only VRFCoordinator can fulfill\""
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8234:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8234:106:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "8234:106:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 554,
                            "name": "randomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "8358:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8370:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8358:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8379:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8358:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072616e646f6d20776f7264732070726f7669646564",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8382:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92a7e688ffe34182386aee54ee8897436651c51e3ece43e09d868196ace3a674",
                          "typeString": "literal_string \"No random words provided\""
                        },
                        "value": "No random words provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92a7e688ffe34182386aee54ee8897436651c51e3ece43e09d868196ace3a674",
                          "typeString": "literal_string \"No random words provided\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8350:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8350:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "8350:59:9"
                },
                {
                  "assignments": [
                    562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 562,
                      "mutability": "mutable",
                      "name": "randomNumber",
                      "nameLocation": "8480:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 650,
                      "src": "8472:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8472:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": {
                    "baseExpression": {
                      "id": 563,
                      "name": "randomWords",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "8495:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 565,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8507:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8495:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8472:37:9"
                },
                {
                  "assignments": [
                    568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 568,
                      "mutability": "mutable",
                      "name": "jobId",
                      "nameLocation": "8527:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 650,
                      "src": "8519:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8519:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 572,
                  "initialValue": {
                    "baseExpression": {
                      "id": 569,
                      "name": "jobIdByRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "8535:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 571,
                    "indexExpression": {
                      "id": 570,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "8552:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8535:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8519:43:9"
                },
                {
                  "assignments": [
                    574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 574,
                      "mutability": "mutable",
                      "name": "nValidators",
                      "nameLocation": "8580:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 650,
                      "src": "8572:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 573,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8572:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 580,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 575,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "8594:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
                            "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                          }
                        },
                        "id": 577,
                        "indexExpression": {
                          "id": 576,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "8599:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8594:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$142_storage",
                          "typeString": "struct SmartNodes.Job storage ref"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8606:12:9",
                      "memberName": "validatorIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "8594:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8619:6:9",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8594:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8572:53:9"
                },
                {
                  "assignments": [
                    585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 585,
                      "mutability": "mutable",
                      "name": "selectedValidators",
                      "nameLocation": "8702:18:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 650,
                      "src": "8685:35:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8685:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 584,
                        "nodeType": "ArrayTypeName",
                        "src": "8685:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 591,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 589,
                        "name": "nValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "8737:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8723:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8727:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 587,
                        "nodeType": "ArrayTypeName",
                        "src": "8727:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8723:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8685:64:9"
                },
                {
                  "body": {
                    "id": 641,
                    "nodeType": "Block",
                    "src": "8862:379:9",
                    "statements": [
                      {
                        "assignments": [
                          603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 603,
                            "mutability": "mutable",
                            "name": "randomIndex",
                            "nameLocation": "8884:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 641,
                            "src": "8876:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 602,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8876:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 607,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 604,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "8898:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 605,
                            "name": "validatorIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "8913:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8898:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8876:55:9"
                      },
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "mutability": "mutable",
                            "name": "validatorId",
                            "nameLocation": "8953:11:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 641,
                            "src": "8945:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 608,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8945:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 619,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 612,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 610,
                                        "name": "randomIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 603,
                                        "src": "8969:11:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 611,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 593,
                                        "src": "8983:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "8969:15:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 613,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8968:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 614,
                                  "name": "validatorIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "8988:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8968:38:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 616,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8967:40:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9010:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8967:44:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8945:66:9"
                      },
                      {
                        "body": {
                          "id": 633,
                          "nodeType": "Block",
                          "src": "9106:85:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 624,
                                  "name": "validatorId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "9124:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 627,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 625,
                                          "name": "validatorId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "9139:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "id": 626,
                                          "name": "validatorIdCounter",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31,
                                          "src": "9153:18:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9139:32:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 628,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "9138:34:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9175:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "9138:38:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9124:52:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 632,
                              "nodeType": "ExpressionStatement",
                              "src": "9124:52:9"
                            }
                          ]
                        },
                        "condition": {
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9073:31:9",
                          "subExpression": {
                            "baseExpression": {
                              "id": 620,
                              "name": "validatorActivity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "9074:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 622,
                            "indexExpression": {
                              "id": 621,
                              "name": "validatorId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "9092:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9074:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 634,
                        "nodeType": "WhileStatement",
                        "src": "9066:125:9"
                      },
                      {
                        "expression": {
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 635,
                              "name": "selectedValidators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "9205:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 637,
                            "indexExpression": {
                              "id": 636,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 593,
                              "src": "9224:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9205:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9229:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9205:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 640,
                        "nodeType": "ExpressionStatement",
                        "src": "9205:25:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 596,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 593,
                      "src": "8840:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 597,
                      "name": "nValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "8844:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8840:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 642,
                  "initializationExpression": {
                    "assignments": [
                      593
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8833:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 642,
                        "src": "8827:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "8827:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 595,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8837:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8827:11:9"
                  },
                  "isSimpleCounterLoop": false,
                  "loopExpression": {
                    "expression": {
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8857:3:9",
                      "subExpression": {
                        "id": 599,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "8857:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 601,
                    "nodeType": "ExpressionStatement",
                    "src": "8857:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "8822:419:9"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 643,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "9306:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
                            "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                          }
                        },
                        "id": 645,
                        "indexExpression": {
                          "id": 644,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "9311:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9306:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$142_storage",
                          "typeString": "struct SmartNodes.Job storage ref"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9318:12:9",
                      "memberName": "validatorIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "9306:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 647,
                      "name": "selectedValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "9333:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "9306:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "9306:45:9"
                }
              ]
            },
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomWords",
            "nameLocation": "8116:18:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 543,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8215:8:9"
            },
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "8152:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "8144:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8144:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "randomWords",
                  "nameLocation": "8188:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "8171:28:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 539,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8171:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 540,
                    "nodeType": "ArrayTypeName",
                    "src": "8171:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8134:71:9"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8224:0:9"
            },
            "scope": 980,
            "src": "8107:1394:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "11882:250:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 662,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "11900:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11915:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11900:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642076616c696461746f72204944",
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11918:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11689a2fe55b12a9d93c15556228064f05ecfcf2ba42635ba3b914be700db161",
                          "typeString": "literal_string \"Invalid validator ID\""
                        },
                        "value": "Invalid validator ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11689a2fe55b12a9d93c15556228064f05ecfcf2ba42635ba3b914be700db161",
                          "typeString": "literal_string \"Invalid validator ID\""
                        }
                      ],
                      "id": 661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11892:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11892:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 667,
                  "nodeType": "ExpressionStatement",
                  "src": "11892:49:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 669,
                            "name": "newReputation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "11972:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11989:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11972:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 672,
                            "name": "newReputation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "11994:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12011:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "11994:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11972:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642072657075746174696f6e2076616c7565",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12028:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e743d06fc4c3b9f4bca5c2f4d51cd237a64de0e83979ef71c6b760d2103def59",
                          "typeString": "literal_string \"Invalid reputation value\""
                        },
                        "value": "Invalid reputation value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e743d06fc4c3b9f4bca5c2f4d51cd237a64de0e83979ef71c6b760d2103def59",
                          "typeString": "literal_string \"Invalid reputation value\""
                        }
                      ],
                      "id": 668,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11951:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11951:113:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "11951:113:9"
                },
                {
                  "expression": {
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 679,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "12075:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$125_storage_$",
                            "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                          }
                        },
                        "id": 681,
                        "indexExpression": {
                          "id": 680,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "12086:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12075:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$125_storage",
                          "typeString": "struct SmartNodes.Validator storage ref"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12099:10:9",
                      "memberName": "reputation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122,
                      "src": "12075:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 683,
                      "name": "newReputation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "12112:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12075:50:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "12075:50:9"
                }
              ]
            },
            "documentation": {
              "id": 652,
              "nodeType": "StructuredDocumentation",
              "src": "11554:203:9",
              "text": "TODO\n @dev Update the contract state, to be called by the ValidatorMultiSig contract.\n Updates job, worker, user, and validator key information, mines and distributes rewards."
            },
            "functionSelector": "ca58da74",
            "id": 687,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 658,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "11860:21:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 226,
                  "src": "11860:21:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "11860:21:9"
              }
            ],
            "name": "updateValidator",
            "nameLocation": "11771:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "11804:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "11796:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11796:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "newReputation",
                  "nameLocation": "11831:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "11825:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11825:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11786:64:9"
            },
            "returnParameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11882:0:9"
            },
            "scope": 980,
            "src": "11762:370:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "12238:216:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 697,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "12256:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12265:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12256:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206a6f62204944",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12268:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        },
                        "value": "Invalid job ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12248:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12248:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "12248:37:9"
                },
                {
                  "expression": {
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 703,
                        "name": "jobActivity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "12296:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 705,
                      "indexExpression": {
                        "id": 704,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "12308:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12296:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 706,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "12317:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12296:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "12296:27:9"
                },
                {
                  "condition": {
                    "id": 709,
                    "name": "active",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 691,
                    "src": "12338:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 719,
                    "nodeType": "Block",
                    "src": "12399:49:9",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 716,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "12431:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 715,
                            "name": "JobCompleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "12418:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12418:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 718,
                        "nodeType": "EmitStatement",
                        "src": "12413:24:9"
                      }
                    ]
                  },
                  "id": 720,
                  "nodeType": "IfStatement",
                  "src": "12334:114:9",
                  "trueBody": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "12346:47:9",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 711,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "12376:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 710,
                            "name": "JobStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "12365:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12365:17:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 713,
                        "nodeType": "EmitStatement",
                        "src": "12360:22:9"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2a6beba8",
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 693,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "12216:21:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 226,
                  "src": "12216:21:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "12216:21:9"
              }
            ],
            "name": "updateJob",
            "nameLocation": "12147:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "12174:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "12166:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12166:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "12194:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "12189:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12189:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12156:50:9"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12238:0:9"
            },
            "scope": 980,
            "src": "12138:316:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "12574:238:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 732,
                          "name": "workerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "12592:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12604:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12592:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420776f726b6572204944",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12607:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5db91477bdb75e1ef0e235227ceb4c51ccd21ab3e05cd55f4e2b1744388d667",
                          "typeString": "literal_string \"Invalid worker ID\""
                        },
                        "value": "Invalid worker ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5db91477bdb75e1ef0e235227ceb4c51ccd21ab3e05cd55f4e2b1744388d667",
                          "typeString": "literal_string \"Invalid worker ID\""
                        }
                      ],
                      "id": 731,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12584:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12584:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "12584:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 739,
                            "name": "newReputation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 726,
                            "src": "12658:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12675:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12658:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 742,
                            "name": "newReputation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 726,
                            "src": "12680:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12697:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "12680:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12658:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642072657075746174696f6e2076616c7565",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12714:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e743d06fc4c3b9f4bca5c2f4d51cd237a64de0e83979ef71c6b760d2103def59",
                          "typeString": "literal_string \"Invalid reputation value\""
                        },
                        "value": "Invalid reputation value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e743d06fc4c3b9f4bca5c2f4d51cd237a64de0e83979ef71c6b760d2103def59",
                          "typeString": "literal_string \"Invalid reputation value\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12637:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12637:113:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "12637:113:9"
                },
                {
                  "expression": {
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 749,
                          "name": "workers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "12761:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Worker_$132_storage_$",
                            "typeString": "mapping(uint256 => struct SmartNodes.Worker storage ref)"
                          }
                        },
                        "id": 751,
                        "indexExpression": {
                          "id": 750,
                          "name": "workerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "12769:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12761:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Worker_$132_storage",
                          "typeString": "struct SmartNodes.Worker storage ref"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12779:10:9",
                      "memberName": "reputation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "12761:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 753,
                      "name": "newReputation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "12792:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12761:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "12761:44:9"
                }
              ]
            },
            "functionSelector": "5a7f1a81",
            "id": 757,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 729,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 728,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "12552:21:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 226,
                  "src": "12552:21:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "12552:21:9"
              }
            ],
            "name": "updateWorker",
            "nameLocation": "12469:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "workerId",
                  "nameLocation": "12499:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "12491:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12491:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "newReputation",
                  "nameLocation": "12523:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "12517:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12517:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12481:61:9"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12574:0:9"
            },
            "scope": 980,
            "src": "12460:352:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "12943:547:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 764,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "12961:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12970:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12961:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12973:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12953:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12953:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "12953:56:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 772,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13037:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13041:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13037:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 771,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "13027:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13027:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 775,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "13052:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "13027:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13060:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13019:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13019:65:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "13019:65:9"
                },
                {
                  "assignments": [
                    781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "13103:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "13095:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13095:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 786,
                  "initialValue": {
                    "baseExpression": {
                      "id": 782,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "13117:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 785,
                    "indexExpression": {
                      "expression": {
                        "id": 783,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13138:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13142:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13138:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13117:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13095:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 788,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 781,
                          "src": "13167:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13182:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13167:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13185:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 787,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13159:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13159:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "13159:54:9"
                },
                {
                  "assignments": [
                    796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 796,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "13241:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "13223:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 795,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 794,
                          "name": "Validator",
                          "nameLocations": [
                            "13223:9:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 125,
                          "src": "13223:9:9"
                        },
                        "referencedDeclaration": 125,
                        "src": "13223:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "baseExpression": {
                      "id": 797,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "13253:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$125_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 799,
                    "indexExpression": {
                      "id": 798,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "13264:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13253:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$125_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13223:53:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 802,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 796,
                          "src": "13294:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                            "typeString": "struct SmartNodes.Validator storage pointer"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13304:8:9",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 124,
                        "src": "13294:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206973206e6f74206163746976652e",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13314:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        },
                        "value": "Validator is not active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        }
                      ],
                      "id": 801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13286:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13286:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "13286:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 808,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13365:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13369:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13365:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 812,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13385:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartNodes_$980",
                              "typeString": "contract SmartNodes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartNodes_$980",
                              "typeString": "contract SmartNodes"
                            }
                          ],
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13377:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 810,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13377:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13377:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "13392:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 807,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "13352:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13352:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "13352:47:9"
                },
                {
                  "expression": {
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 817,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "13409:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13419:6:9",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118,
                      "src": "13409:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 820,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "13429:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "13409:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "13409:26:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 824,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13464:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13468:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13464:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 826,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "13476:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 823,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "13451:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13451:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "EmitStatement",
                  "src": "13446:37:9"
                }
              ]
            },
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "12818:76:9",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "ec81560f",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "12908:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12926:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12919:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12919:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12918:15:9"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12943:0:9"
            },
            "scope": 980,
            "src": "12899:591:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "13542:1049:9",
              "statements": [
                {
                  "assignments": [
                    836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 836,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "13560:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "13552:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 835,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13552:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 841,
                  "initialValue": {
                    "baseExpression": {
                      "id": 837,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "13574:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 840,
                    "indexExpression": {
                      "expression": {
                        "id": 838,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "13595:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13599:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13595:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13574:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13552:54:9"
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "13634:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "13616:27:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 843,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 842,
                          "name": "Validator",
                          "nameLocations": [
                            "13616:9:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 125,
                          "src": "13616:9:9"
                        },
                        "referencedDeclaration": 125,
                        "src": "13616:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 848,
                  "initialValue": {
                    "baseExpression": {
                      "id": 845,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "13646:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$125_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 847,
                    "indexExpression": {
                      "id": 846,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "13657:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13646:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$125_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13616:53:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 850,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "13688:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 851,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "13698:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                              "typeString": "struct SmartNodes.Validator storage pointer"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13708:6:9",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 118,
                          "src": "13698:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13688:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13716:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13680:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13680:69:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "13680:69:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 858,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "13767:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13776:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13767:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13779:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13759:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13759:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "13759:56:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 864,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "13901:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13911:10:9",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120,
                      "src": "13901:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13925:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13901:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 912,
                    "nodeType": "Block",
                    "src": "14127:458:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 886,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14244:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14250:9:9",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14244:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 888,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "14263:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                                    "typeString": "struct SmartNodes.Validator storage pointer"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14273:10:9",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 120,
                                "src": "14263:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14244:39:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14301:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 885,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14219:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14219:122:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 893,
                        "nodeType": "ExpressionStatement",
                        "src": "14219:122:9"
                      },
                      {
                        "expression": {
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 894,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "14356:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                                "typeString": "struct SmartNodes.Validator storage pointer"
                              }
                            },
                            "id": 896,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14366:6:9",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 118,
                            "src": "14356:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 897,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "14376:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "14356:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "14356:26:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 901,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14402:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14406:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14402:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 903,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "14414:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 900,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "14396:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14396:25:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "14396:25:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 907,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14503:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14507:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14503:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 909,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "14515:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 906,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "14488:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14488:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 911,
                        "nodeType": "EmitStatement",
                        "src": "14483:39:9"
                      }
                    ]
                  },
                  "id": 913,
                  "nodeType": "IfStatement",
                  "src": "13897:688:9",
                  "trueBody": {
                    "id": 884,
                    "nodeType": "Block",
                    "src": "13928:193:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 868,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "13942:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                                "typeString": "struct SmartNodes.Validator storage pointer"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13952:10:9",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 120,
                            "src": "13942:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 871,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13965:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13971:9:9",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "13965:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3530343030",
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13983:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50400_by_1",
                                "typeString": "int_const 50400"
                              },
                              "value": "50400"
                            },
                            "src": "13965:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13942:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "13942:46:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 878,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14050:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14054:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14050:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 880,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "14062:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$125_storage_ptr",
                                  "typeString": "struct SmartNodes.Validator storage pointer"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14072:10:9",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 120,
                              "src": "14062:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 877,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "14034:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14034:49:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 883,
                        "nodeType": "EmitStatement",
                        "src": "14029:54:9"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "44c6957b",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "13505:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13525:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "13518:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13518:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13517:15:9"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13542:0:9"
            },
            "scope": 980,
            "src": "13496:1095:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 937,
              "nodeType": "Block",
              "src": "14762:207:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 922,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1159,
                              "src": "14793:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14793:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 924,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "14809:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14793:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 926,
                          "name": "maxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "14825:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14793:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c79207265616368656421",
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14848:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        },
                        "value": "Maximum supply reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        }
                      ],
                      "id": 921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14772:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14772:111:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "14772:111:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14943:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14947:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14943:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 934,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "14955:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 931,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "14937:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14937:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "14937:25:9"
                }
              ]
            },
            "documentation": {
              "id": 916,
              "nodeType": "StructuredDocumentation",
              "src": "14597:115:9",
              "text": " @dev Mint tokens for updating state rewards,\nTODO change to internal (external for testing)"
            },
            "functionSelector": "97304ced",
            "id": 938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokens",
            "nameLocation": "14726:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14745:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 938,
                  "src": "14737:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14737:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14736:16:9"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14762:0:9"
            },
            "scope": 980,
            "src": "14717:252:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 978,
              "nodeType": "Block",
              "src": "15142:275:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 947,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "15160:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 948,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "15168:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15160:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206a6f62204944",
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15180:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        },
                        "value": "Invalid job ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        }
                      ],
                      "id": 946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15152:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15152:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 952,
                  "nodeType": "ExpressionStatement",
                  "src": "15152:45:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 953,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "15211:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
                            "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                          }
                        },
                        "id": 955,
                        "indexExpression": {
                          "id": 954,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 940,
                          "src": "15216:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15211:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$142_storage",
                          "typeString": "struct SmartNodes.Job storage ref"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15223:2:9",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 134,
                      "src": "15211:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 957,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "15229:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15211:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 976,
                    "nodeType": "Block",
                    "src": "15362:49:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4a6f62206e6f7420666f756e6421",
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15383:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              },
                              "value": "Job not found!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              }
                            ],
                            "id": 972,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "15376:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15376:24:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 975,
                        "nodeType": "ExpressionStatement",
                        "src": "15376:24:9"
                      }
                    ]
                  },
                  "id": 977,
                  "nodeType": "IfStatement",
                  "src": "15207:204:9",
                  "trueBody": {
                    "id": 971,
                    "nodeType": "Block",
                    "src": "15236:120:9",
                    "statements": [
                      {
                        "assignments": [
                          963
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 963,
                            "mutability": "mutable",
                            "name": "jobValidatorIds",
                            "nameLocation": "15267:15:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 971,
                            "src": "15250:32:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 961,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15250:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 962,
                              "nodeType": "ArrayTypeName",
                              "src": "15250:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 968,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 964,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "15285:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$142_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                              }
                            },
                            "id": 966,
                            "indexExpression": {
                              "id": 965,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "15290:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15285:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$142_storage",
                              "typeString": "struct SmartNodes.Job storage ref"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15297:12:9",
                          "memberName": "validatorIds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 141,
                          "src": "15285:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15250:59:9"
                      },
                      {
                        "expression": {
                          "id": 969,
                          "name": "jobValidatorIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "15330:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 945,
                        "id": 970,
                        "nodeType": "Return",
                        "src": "15323:22:9"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6817dd5b",
            "id": 979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "15055:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "15089:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "15081:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15081:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15071:29:9"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "15124:16:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 942,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15124:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 943,
                    "nodeType": "ArrayTypeName",
                    "src": "15124:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15123:18:9"
            },
            "scope": 980,
            "src": "15046:371:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 981,
        "src": "563:14856:9",
        "usedErrors": [
          1776
        ],
        "usedEvents": [
          67,
          73,
          79,
          85,
          89,
          93,
          97,
          101,
          105,
          2196,
          2205
        ]
      }
    ],
    "src": "32:15388:9"
  },
  "bytecode": "6080604052609d8054600160401b600160e01b0319167b779877a7b0d9e8603169ddbd7836e478b462478900000000000000001790557f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae609e55609f80546001600160501b03191666010002000186a0179055348015607d57600080fd5b50612b5e8061008d6000396000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c8063507ffba51161019d578063a2f8e58c116100e9578063cf6acd47116100a2578063dd62ed3e1161007c578063dd62ed3e1461082e578063e707a21e14610867578063ec81560f1461088a578063f1a22dc21461089d57600080fd5b8063cf6acd47146107fa578063d5abeb011461080d578063d8df5dc11461081f57600080fd5b8063a2f8e58c14610785578063a457c2d7146107b0578063a9059cbb146107c3578063c5ab2241146107d6578063c8df245a146107df578063ca58da74146107e757600080fd5b806387a30a281161015657806396afc4501161013057806396afc4501461071557806397304ced146107245780639943908914610737578063a2ced9ff1461076257600080fd5b806387a30a28146106f15780638f029d5e1461070457806395d89b411461070d57600080fd5b8063507ffba51461064f5780635a7f1a81146106625780636817dd5b1461067557806370a08231146106955780637879ec31146106be57806383570395146106d157600080fd5b8063277645471161025c578063365b98b2116102155780634316e269116101ef5780634316e2691461060057806344c6957b146106135780634b7590881461062657806350355d761461064657600080fd5b8063365b98b214610579578063378dc3dc146105db57806339509351146105ed57600080fd5b806327764547146104765780632a6beba8146104965780632faba6ae146104a9578063313ce567146104b257806332d40160146104c157806335aa2e44146104ec57600080fd5b806318160ddd116102ae57806318160ddd146103da57806318306ef6146103e25780631fc40303146104025780631fe543e3146104255780632130a16f1461043857806323b872dd1461046357600080fd5b8063012dccdd146102f657806306fdde031461032957806308ac52561461033e578063095ea7b3146103475780630c97cf811461036a578063180aedf31461037f575b600080fd5b610316610304366004612411565b60aa6020526000908152604090205481565b6040519081526020015b60405180910390f35b6103316108d9565b604051610320919061244e565b610316609c5481565b61035a610355366004612498565b61096b565b6040519015158152602001610320565b61037d6103783660046124d3565b610985565b005b6103b761038d366004612411565b60a46020526000908152604090208054600182015460029092015490916001600160a01b03169083565b604080519384526001600160a01b03909216602084015290820152606001610320565b603554610316565b6103166103f0366004612411565b60ae6020526000908152604090205481565b61035a610410366004612411565b60b06020526000908152604090205460ff1681565b61037d610433366004612536565b610d1b565b6103166104463660046125e8565b805160208183018101805160a88252928201919093012091525481565b61035a61047136600461267d565b610d69565b6103166104843660046126b9565b60a66020526000908152604090205481565b61037d6104a43660046126db565b610d8d565b61031660995481565b60405160128152602001610320565b6103166104cf3660046125e8565b805160208183018101805160a78252928201919093012091525481565b61053f6104fa366004612411565b60a2602052600090815260409020805460018201546002830154600384015460049094015492936001600160a01b039092169290919060ff8082169161010090041686565b604080519687526001600160a01b03909516602087015293850192909252606084015260ff166080830152151560a082015260c001610320565b6105b5610587366004612411565b60a160205260009081526040902080546001909101546001600160a01b03811690600160a01b900460ff1683565b604080519384526001600160a01b03909216602084015260ff1690820152606001610320565b6103166a084595161401484a00000081565b61035a6105fb366004612498565b610e79565b61033161060e366004612411565b610eb8565b61037d610621366004612710565b610f52565b6103166106343660046126b9565b60a56020526000908152604090205481565b610316609a5481565b61037d61065d3660046125e8565b61110b565b61037d610670366004612736565b611236565b610688610683366004612411565b611323565b6040516103209190612762565b6103166106a33660046126b9565b6001600160a01b031660009081526033602052604090205490565b61037d6106cc3660046127a6565b611421565b6103166106df366004612411565b60ab6020526000908152604090205481565b6103316106ff366004612411565b6115ca565b61031660985481565b6103316115e3565b610316676f05b59d3b20000081565b61037d610732366004612411565b6115f2565b60975461074a906001600160a01b031681565b6040516001600160a01b039091168152602001610320565b61035a610770366004612411565b60b16020526000908152604090205460ff1681565b6103166107933660046125e8565b805160208183018101805160a98252928201919093012091525481565b61035a6107be366004612498565b611675565b61035a6107d1366004612498565b611707565b610316609b5481565b610316600281565b61037d6107f5366004612736565b611715565b61037d6108083660046125e8565b6117fa565b6103166a115eec47f6cf7e3500000081565b610316674563918244f4000081565b61031661083c3660046127fa565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61035a610875366004612411565b60af6020526000908152604090205460ff1681565b61037d610898366004612710565b611a65565b6105b56108ab366004612411565b60a360205260009081526040902080546001909101546001600160a01b03811690600160a01b900460ff1683565b6060603680546108e890612824565b80601f016020809104026020016040519081016040528092919081815260200182805461091490612824565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b5050505050905090565b600033610979818585611c18565b60019150505b92915050565b33600090815260a56020526040812054908190036109e15760405162461bcd60e51b81526020600482015260146024820152732ab9b2b9103737ba103932b3b4b9ba32b932b21760611b60448201526064015b60405180910390fd5b60008211610a315760405162461bcd60e51b815260206004820152601e60248201527f4361706163697479206d7573742062652067726561746572207a65726f2e000060448201526064016109d8565b600081815260b0602052604090205460ff1615610a905760405162461bcd60e51b815260206004820152601760248201527f557365722068617320616e20616374697665206a6f622e00000000000000000060448201526064016109d8565b600081815260aa602052604090205415610aa957600080fd5b60008360ff16118015610ac05750609c548360ff16105b610b0c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642076616c696461746f7220636f756e742e000000000000000060448201526064016109d8565b60a054609e54609d54609f546040516305d3b1d360e41b8152600481019390935267ffffffffffffffff9091166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526000916001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015610ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc6919061285e565b609a8054600085815260aa6020908152604080832084905585835260ab825280832084905592825260b18152828220805460ff191690558354825260ae815290829020869055815160808101835292548352339083015281018590529091506060810160ff861667ffffffffffffffff811115610c4557610c456124ef565b604051908082528060200260200182016040528015610c6e578160200160208202803683370190505b509052609a54600090815260a4602090815260409182902083518155838201516001820180546001600160a01b0319166001600160a01b0390921691909117905591830151600283015560608301518051610ccf92600385019201906123b1565b5050609a546040519091507fdbd9082204763b590f250a641c459b7b94d813cd5b0937d3f77e5e393bfcf32f90600090a2609a8054906000610d108361288d565b919050555050505050565b6065546001600160a01b03163314610d5b5760655460405163073e64fd60e21b81523360048201526001600160a01b0390911660248201526044016109d8565b610d658282611d3c565b5050565b600033610d77858285611f5c565b610d82858585611fe8565b506001949350505050565b6097546001600160a01b03163314610db75760405162461bcd60e51b81526004016109d8906128a6565b81600003610df85760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081a9bd888125160921b60448201526064016109d8565b600082815260b160205260409020805460ff19168215801591909117909155610e4a5760405182907f7e2409eb03fe1e2ea93add34ad736f8cddc41ffdc3c5875587b3e40ab490996a90600090a25050565b60405182907f02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be892990600090a25050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906109799082908690610eb39087906128f3565b611c18565b60ac6020526000908152604090208054610ed190612824565b80601f0160208091040260200160405190810160405280929190818152602001828054610efd90612824565b8015610f4a5780601f10610f1f57610100808354040283529160200191610f4a565b820191906000526020600020905b815481529060010190602001808311610f2d57829003601f168201915b505050505081565b33600090815260a6602090815260408083205480845260a2909252909120600281015463ffffffff84161115610fca5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e000060448201526064016109d8565b60008363ffffffff1611610ff05760405162461bcd60e51b81526004016109d890612906565b806003015460000361104a576110084261c4e06128f3565b6003820181905560405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a2505050565b806003015442101561109e5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e000000000000000060448201526064016109d8565b8263ffffffff168160020160008282546110b89190612947565b909155506110ce90503363ffffffff85166121b6565b60405163ffffffff8416815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e11958889060200161103d565b505050565b33600090815260a56020526040902054156111685760405162461bcd60e51b815260206004820152601860248201527f5573657220616c726561647920726567697374657265642e000000000000000060448201526064016109d8565b6040805160608101825260998054808352336020808501828152600086880181815294815260a1835287812096518755905160019096018054945160ff16600160a01b026001600160a81b03199095166001600160a01b03979097169690961793909317909455915491815260a590925290829020819055905160a7906111f090849061295a565b908152604080516020928190038301902092909255609954600090815260ad9091522061121d82826129c6565b506099805490600061122e8361288d565b919050555050565b6097546001600160a01b031633146112605760405162461bcd60e51b81526004016109d8906128a6565b816000036112a45760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081ddbdc9ad95c881251607a1b60448201526064016109d8565b60648160ff1611156112f35760405162461bcd60e51b8152602060048201526018602482015277496e76616c69642072657075746174696f6e2076616c756560401b60448201526064016109d8565b600091825260a36020526040909120600101805460ff909216600160a01b0260ff60a01b19909216919091179055565b6060609a5482106113675760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081a9bd888125160921b60448201526064016109d8565b600082815260a460205260409020548290036113e357600082815260a460209081526040808320600301805482518185028101850190935280835291929091908301828280156113d657602002820191906000526020600020905b8154815260200190600101908083116113c2575b5093979650505050505050565b60405162461bcd60e51b815260206004820152600e60248201526d4a6f62206e6f7420666f756e642160901b60448201526064016109d8565b919050565b600054610100900460ff1661143c5760005460ff1615611440565b303b155b6114a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109d8565b600054610100900460ff161580156114c5576000805461ffff19166101011790555b61150d6040518060400160405280600b81526020016a536d617274204e6f64657360a81b81525060405180604001604052806003815260200162534e4f60e81b815250612295565b611516836122c6565b60a080546001600160a01b03199081166001600160a01b038681169182179093556097805490921692871692909217905560016098819055609f80547fffff0000000000000000000000000000000000000000ffffffffffffffffffff16600160501b90930292909217909155609d805467ffffffffffffffff191667ffffffffffffffff85161790556099819055609a819055609b556003609c5580156115c4576000805461ff00191690555b50505050565b60ad6020526000908152604090208054610ed190612824565b6060603780546108e890612824565b6a115eec47f6cf7e35000000676f05b59d3b20000061161060355490565b61161a91906128f3565b11156116685760405162461bcd60e51b815260206004820152601760248201527f4d6178696d756d20737570706c7920726561636865642100000000000000000060448201526064016109d8565b61167233826121b6565b50565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156116fa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109d8565b610d828286868403611c18565b600033610979818585611fe8565b6097546001600160a01b0316331461173f5760405162461bcd60e51b81526004016109d8906128a6565b816000036117865760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d985b1a59185d1bdc88125160621b60448201526064016109d8565b60648160ff1611156117d55760405162461bcd60e51b8152602060048201526018602482015277496e76616c69642072657075746174696f6e2076616c756560401b60448201526064016109d8565b600091825260a26020526040909120600401805460ff191660ff909216919091179055565b33600090815260a66020526040902054156118705760405162461bcd60e51b815260206004820152603060248201527f56616c696461746f7220776974682074686973207075626c69634b657948617360448201526f6820616c72656164792065786973747360801b60648201526084016109d8565b33600090815260336020526040902054674563918244f4000011156118d75760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064016109d8565b60006118ec3330674563918244f40000610d69565b9050806119335760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016109d8565b6040805160c081018252609854808252336020808401918252674563918244f40000848601908152600060608601818152606460808801908152600160a0890181815297845260a2865289842098518955955195880180546001600160a01b03979097166001600160a01b0319909716969096179095559151600287015590516003860155915160049094018054935115156101000261ffff1990941660ff959095169490941792909217909255609954825260ac9052206119f583826129c6565b5060985433600090815260a66020526040908190208290555160a890611a1c90859061295a565b908152604080519182900360209081019092209290925560988054600090815260af909252918120805460ff1916600117905581549190611a5c8361288d565b91905055505050565b60008163ffffffff1611611a8b5760405162461bcd60e51b81526004016109d890612906565b3360009081526033602052604090205463ffffffff82161115611ae85760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016109d8565b33600090815260a6602052604081205490819003611b485760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220646f6573206e6f742065786973742e0000000000000060448201526064016109d8565b600081815260a2602052604090206004810154610100900460ff16611baf5760405162461bcd60e51b815260206004820152601860248201527f56616c696461746f72206973206e6f74206163746976652e000000000000000060448201526064016109d8565b611bc033308563ffffffff16610d69565b508263ffffffff16816002016000828254611bdb91906128f3565b909155505060405163ffffffff8416815233907fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c9060200161103d565b6001600160a01b038316611c7a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109d8565b6001600160a01b038216611cdb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109d8565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b609f54600160501b90046001600160a01b03163314611d9d5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016109d8565b6000815111611dee5760405162461bcd60e51b815260206004820152601860248201527f4e6f2072616e646f6d20776f7264732070726f7669646564000000000000000060448201526064016109d8565b600081600081518110611e0357611e03612a86565b602090810291909101810151600085815260ab835260408082205480835260a49094528120600301549193508167ffffffffffffffff811115611e4857611e486124ef565b604051908082528060200260200182016040528015611e71578160200160208202803683370190505b50905060005b828160ff161015611f2d57600060985486611e929190612a9c565b905060006098548360ff1683611ea891906128f3565b611eb29190612a9c565b611ebd9060016128f3565b90505b600081815260af602052604090205460ff16611ef557609854611ee39082612a9c565b611eee9060016128f3565b9050611ec0565b6001848460ff1681518110611f0c57611f0c612a86565b60200260200101818152505050508080611f2590612abe565b915050611e77565b50600083815260a4602090815260409091208251611f53926003909201918401906123b1565b50505050505050565b6001600160a01b0383811660009081526034602090815260408083209386168352929052205460001981146115c45781811015611fdb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109d8565b6115c48484848403611c18565b6001600160a01b03831661204c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109d8565b6001600160a01b0382166120ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109d8565b6001600160a01b038316600090815260336020526040902054818110156121265760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109d8565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061215d9084906128f3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516121a991815260200190565b60405180910390a36115c4565b6001600160a01b03821661220c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016109d8565b806035600082825461221e91906128f3565b90915550506001600160a01b0382166000908152603360205260408120805483929061224b9084906128f3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff166122bc5760405162461bcd60e51b81526004016109d890612add565b610d658282612371565b600054610100900460ff166122ed5760405162461bcd60e51b81526004016109d890612add565b6001600160a01b03811661234f5760405162461bcd60e51b815260206004820152602360248201527f6d75737420676976652076616c696420636f6f7264696e61746f72206164647260448201526265737360e81b60648201526084016109d8565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff166123985760405162461bcd60e51b81526004016109d890612add565b60366123a483826129c6565b50603761110682826129c6565b8280548282559060005260206000209081019282156123ec579160200282015b828111156123ec5782518255916020019190600101906123d1565b506123f89291506123fc565b5090565b5b808211156123f857600081556001016123fd565b60006020828403121561242357600080fd5b5035919050565b60005b8381101561244557818101518382015260200161242d565b50506000910152565b602081526000825180602084015261246d81604085016020870161242a565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461141c57600080fd5b600080604083850312156124ab57600080fd5b6124b483612481565b946020939093013593505050565b803560ff8116811461141c57600080fd5b600080604083850312156124e657600080fd5b6124b4836124c2565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561252e5761252e6124ef565b604052919050565b6000806040838503121561254957600080fd5b8235915060208084013567ffffffffffffffff8082111561256957600080fd5b818601915086601f83011261257d57600080fd5b81358181111561258f5761258f6124ef565b8060051b91506125a0848301612505565b81815291830184019184810190898411156125ba57600080fd5b938501935b838510156125d8578435825293850193908501906125bf565b8096505050505050509250929050565b600060208083850312156125fb57600080fd5b823567ffffffffffffffff8082111561261357600080fd5b818501915085601f83011261262757600080fd5b813581811115612639576126396124ef565b61264b601f8201601f19168501612505565b9150808252868482850101111561266157600080fd5b8084840185840137600090820190930192909252509392505050565b60008060006060848603121561269257600080fd5b61269b84612481565b92506126a960208501612481565b9150604084013590509250925092565b6000602082840312156126cb57600080fd5b6126d482612481565b9392505050565b600080604083850312156126ee57600080fd5b823591506020830135801515811461270557600080fd5b809150509250929050565b60006020828403121561272257600080fd5b813563ffffffff811681146126d457600080fd5b6000806040838503121561274957600080fd5b82359150612759602084016124c2565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561279a5783518352928401929184019160010161277e565b50909695505050505050565b6000806000606084860312156127bb57600080fd5b6127c484612481565b92506127d260208501612481565b9150604084013567ffffffffffffffff811681146127ef57600080fd5b809150509250925092565b6000806040838503121561280d57600080fd5b61281683612481565b915061275960208401612481565b600181811c9082168061283857607f821691505b60208210810361285857634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561287057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161289f5761289f612877565b5060010190565b6020808252602d908201527f43616c6c6572206d757374206265207468652056616c696461746f724d756c7460408201526c1a54da59c818dbdb9d1c9858dd609a1b606082015260800190565b8082018082111561097f5761097f612877565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b8181038181111561097f5761097f612877565b6000825161296c81846020870161242a565b9190910192915050565b601f821115611106576000816000526020600020601f850160051c8101602086101561299f5750805b601f850160051c820191505b818110156129be578281556001016129ab565b505050505050565b815167ffffffffffffffff8111156129e0576129e06124ef565b6129f4816129ee8454612824565b84612976565b602080601f831160018114612a295760008415612a115750858301515b600019600386901b1c1916600185901b1785556129be565b600085815260208120601f198616915b82811015612a5857888601518255948401946001909101908401612a39565b5085821015612a765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600082612ab957634e487b7160e01b600052601260045260246000fd5b500690565b600060ff821660ff8103612ad457612ad4612877565b60010192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212207ac20e34d24a30533cc079f0826006fab678bd98cdeb2562f4faeba1b8e77e6164736f6c63430008190033",
  "bytecodeSha1": "ff233f1c04a42f0b9418061b63043d4b09b5c87e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartNodes",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "153": [
            2952,
            2965,
            true
          ]
        },
        "SmartNodes.initialize": {
          "151": [
            2369,
            2382,
            true
          ],
          "152": [
            2369,
            2417,
            true
          ]
        }
      },
      "1": {
        "ERC20Upgradeable._approve": {
          "143": [
            10591,
            10610,
            true
          ],
          "144": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "150": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "145": [
            11303,
            11340,
            false
          ],
          "146": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "147": [
            7951,
            7969,
            true
          ],
          "148": [
            8029,
            8045,
            true
          ],
          "149": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "142": [
            7152,
            7187,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {},
      "6": {},
      "7": {
        "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init": {
          "155": [
            6818,
            6847,
            false
          ]
        },
        "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords": {
          "154": [
            8178,
            8206,
            false
          ]
        }
      },
      "9": {
        "SmartNodes.createUser": {
          "125": [
            5257,
            5289,
            true
          ]
        },
        "SmartNodes.createValidator": {
          "133": [
            5861,
            5898,
            true
          ],
          "134": [
            6004,
            6039,
            true
          ],
          "135": [
            6222,
            6229,
            true
          ]
        },
        "SmartNodes.fulfillRandomWords": {
          "140": [
            8255,
            8283,
            true
          ],
          "141": [
            8358,
            8380,
            true
          ]
        },
        "SmartNodes.getJobValidators": {
          "128": [
            15160,
            15178,
            true
          ],
          "129": [
            15211,
            15234,
            false
          ]
        },
        "SmartNodes.lockTokens": {
          "136": [
            12961,
            12971,
            true
          ],
          "137": [
            13027,
            13058,
            true
          ],
          "138": [
            13167,
            13183,
            true
          ],
          "139": [
            13294,
            13312,
            true
          ]
        },
        "SmartNodes.mintTokens": {
          "130": [
            14793,
            14834,
            true
          ]
        },
        "SmartNodes.requestJob": {
          "114": [
            6949,
            6957,
            true
          ],
          "115": [
            7000,
            7012,
            true
          ],
          "116": [
            7065,
            7091,
            true
          ],
          "117": [
            7137,
            7158,
            true
          ],
          "118": [
            7190,
            7205,
            false
          ],
          "119": [
            7209,
            7236,
            true
          ]
        },
        "SmartNodes.unlockTokens": {
          "121": [
            13688,
            13714,
            true
          ],
          "122": [
            13767,
            13777,
            true
          ],
          "123": [
            13901,
            13926,
            false
          ],
          "124": [
            14244,
            14283,
            true
          ]
        },
        "SmartNodes.updateJob": {
          "120": [
            12256,
            12266,
            true
          ]
        },
        "SmartNodes.updateValidator": {
          "131": [
            11900,
            11916,
            true
          ],
          "132": [
            11994,
            12014,
            true
          ]
        },
        "SmartNodes.updateWorker": {
          "126": [
            12592,
            12605,
            true
          ],
          "127": [
            12680,
            12700,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Initializable._isConstructor": {
          "49": [
            3101,
            3153
          ]
        }
      },
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "109": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "112": [
            2381,
            2394
          ],
          "113": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "86": [
            10583,
            10651
          ],
          "87": [
            10661,
            10729
          ],
          "88": [
            10740,
            10776
          ],
          "89": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "105": [
            8827,
            8892
          ],
          "106": [
            8963,
            8985
          ],
          "107": [
            8995,
            9023
          ],
          "108": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "96": [
            11356,
            11424
          ],
          "97": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "98": [
            7943,
            8011
          ],
          "99": [
            8021,
            8085
          ],
          "100": [
            8192,
            8264
          ],
          "101": [
            8298,
            8336
          ],
          "102": [
            8356,
            8379
          ],
          "103": [
            8390,
            8421
          ],
          "104": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "3": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "6": [
            4907,
            4939
          ],
          "7": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "2": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "64": [
            7144,
            7229
          ],
          "65": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "29": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "4": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "61": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "66": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "22": [
            5712,
            5750
          ],
          "23": [
            5760,
            5787
          ],
          "24": [
            5797,
            5808
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {
        "ContextUpgradeable._msgSender": {
          "5": [
            922,
            939
          ]
        }
      },
      "6": {},
      "7": {
        "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init": {
          "110": [
            6910,
            6955
          ],
          "111": [
            6968,
            7000
          ]
        },
        "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords": {
          "20": [
            8174,
            8283
          ],
          "21": [
            8288,
            8330
          ]
        }
      },
      "9": {
        "SmartNodes.createUser": {
          "38": [
            5249,
            5318
          ],
          "39": [
            5329,
            5463
          ],
          "40": [
            5474,
            5517
          ],
          "41": [
            5527,
            5566
          ],
          "42": [
            5576,
            5614
          ],
          "43": [
            5624,
            5639
          ]
        },
        "SmartNodes.createValidator": {
          "70": [
            5840,
            5972
          ],
          "71": [
            5983,
            6092
          ],
          "72": [
            6214,
            6255
          ],
          "73": [
            6266,
            6514
          ],
          "74": [
            6525,
            6568
          ],
          "75": [
            6578,
            6631
          ],
          "76": [
            6641,
            6690
          ],
          "77": [
            6700,
            6744
          ],
          "78": [
            6754,
            6774
          ]
        },
        "SmartNodes.fulfillRandomWords": {
          "90": [
            8234,
            8340
          ],
          "91": [
            8350,
            8409
          ],
          "92": [
            9124,
            9176
          ],
          "93": [
            9205,
            9230
          ],
          "94": [
            8857,
            8860
          ],
          "95": [
            9306,
            9351
          ]
        },
        "SmartNodes.getJobValidators": {
          "47": [
            15152,
            15197
          ],
          "48": [
            15376,
            15400
          ]
        },
        "SmartNodes.initialize": {
          "50": [
            4531,
            4565
          ],
          "51": [
            4575,
            4616
          ],
          "52": [
            4626,
            4682
          ],
          "53": [
            4766,
            4804
          ],
          "54": [
            4814,
            4836
          ],
          "55": [
            4846,
            4878
          ],
          "56": [
            4888,
            4922
          ],
          "57": [
            4932,
            4949
          ],
          "58": [
            4959,
            4973
          ],
          "59": [
            4983,
            5000
          ],
          "60": [
            5010,
            5027
          ]
        },
        "SmartNodes.lockTokens": {
          "79": [
            12953,
            13009
          ],
          "80": [
            13019,
            13084
          ],
          "81": [
            13159,
            13213
          ],
          "82": [
            13286,
            13341
          ],
          "83": [
            13352,
            13399
          ],
          "84": [
            13409,
            13435
          ],
          "85": [
            13446,
            13483
          ]
        },
        "SmartNodes.mintTokens": {
          "62": [
            14772,
            14883
          ],
          "63": [
            14937,
            14962
          ]
        },
        "SmartNodes.requestJob": {
          "8": [
            6941,
            6982
          ],
          "9": [
            6992,
            7047
          ],
          "10": [
            7057,
            7119
          ],
          "11": [
            7129,
            7159
          ],
          "12": [
            7169,
            7286
          ],
          "13": [
            7566,
            7595
          ],
          "14": [
            7605,
            7645
          ],
          "15": [
            7655,
            7686
          ],
          "16": [
            7696,
            7725
          ],
          "17": [
            7780,
            7959
          ],
          "18": [
            7970,
            7999
          ],
          "19": [
            8009,
            8021
          ]
        },
        "SmartNodes.unlockTokens": {
          "30": [
            13680,
            13749
          ],
          "31": [
            13759,
            13815
          ],
          "32": [
            13942,
            13988
          ],
          "33": [
            14029,
            14083
          ],
          "34": [
            14219,
            14341
          ],
          "35": [
            14356,
            14382
          ],
          "36": [
            14396,
            14421
          ],
          "37": [
            14483,
            14522
          ]
        },
        "SmartNodes.updateJob": {
          "25": [
            12248,
            12285
          ],
          "26": [
            12296,
            12323
          ],
          "27": [
            12360,
            12382
          ],
          "28": [
            12413,
            12437
          ]
        },
        "SmartNodes.updateValidator": {
          "67": [
            11892,
            11941
          ],
          "68": [
            11951,
            12064
          ],
          "69": [
            12075,
            12125
          ]
        },
        "SmartNodes.updateWorker": {
          "44": [
            12584,
            12627
          ],
          "45": [
            12637,
            12750
          ],
          "46": [
            12761,
            12805
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable",
    "smartcontractkit/chainlink-brownie-contracts@1.1.0/VRFConsumerBaseV2Upgradeable",
    "smartcontractkit/chainlink-brownie-contracts@1.1.0/VRFCoordinatorV2Interface"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "563:14856:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3760:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;345:25:10;;;333:2;318:18;3760:46:9;;;;;;;;2493:98:1;;;:::i;:::-;;;;;;;:::i;1331:28:9:-;;;;;;4770:197:1;;;;;;:::i;:::-;;:::i;:::-;;;1639:14:10;;1632:22;1614:41;;1602:2;1587:18;4770:197:1;1474:187:10;6814:1214:9;;;;;;:::i;:::-;;:::i;:::-;;3416:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3416:35:9;;;;;;;;2284:25:10;;;-1:-1:-1;;;;;2345:32:10;;;2340:2;2325:18;;2318:60;2394:18;;;2387:34;2272:2;2257:18;3416:35:9;2082:345:10;3581:106:1;3668:12;;3581:106;;3977:46:9;;;;;;:::i;:::-;;;;;;;;;;;;;;4085:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8079:256:7;;;;;;:::i;:::-;;:::i;3652:51:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5529:286:1;;;;;;:::i;:::-;;:::i;3538:55:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;12138:316;;;;;;:::i;:::-;;:::i;1232:28::-;;;;;;3430:91:1;;;3512:2;5644:36:10;;5632:2;5617:18;3430:91:1;5502:184:10;3600:46:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3316:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3316:47:9;;;;;;;;;;;;;;;;;;;;;;5968:25:10;;;-1:-1:-1;;;;;6029:32:10;;;6024:2;6009:18;;6002:60;6078:18;;;6071:34;;;;6136:2;6121:18;;6114:34;6197:4;6185:17;6179:3;6164:19;;6157:46;6247:14;6240:22;6049:3;6219:19;;6212:51;5955:3;5940:19;3316:47:9;5691:578:10;3273:37:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3273:37:9;;;-1:-1:-1;;;3273:37:9;;;;;;;;;;6472:25:10;;;-1:-1:-1;;;;;6533:32:10;;;6528:2;6513:18;;6506:60;6614:4;6602:17;6582:18;;;6575:45;6460:2;6445:18;3273:37:9;6274:352:10;673:53:9;;713:13;673:53;;6210:236:1;;;;;;:::i;:::-;;:::i;3870:50:9:-;;;;;;:::i;:::-;;:::i;13496:1095::-;;;;;;:::i;:::-;;:::i;3482:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1266:25;;;;;;5129:517;;;;;;:::i;:::-;;:::i;12460:352::-;;;;;;:::i;:::-;;:::i;15046:371::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3745:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:1;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;4375:659:9;;;;;;:::i;:::-;;:::i;3812:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3926:45;;;;;;:::i;:::-;;:::i;1193:33::-;;;;;;2704:102:1;;;:::i;787:43:9:-;;826:4;787:43;;14717:252;;;;;;:::i;:::-;;:::i;1111:32::-;;;;;-1:-1:-1;;;;;1111:32:9;;;;;;-1:-1:-1;;;;;8405:32:10;;;8387:51;;8375:2;8360:18;1111:32:9;8241:203:10;4135:43:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3709:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6933:429:1;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1297:28:9:-;;;;;;978:35;;1012:1;978:35;;11762:370;;;;;;:::i;:::-;;:::i;5771:1010::-;;;;;;:::i;:::-;;:::i;732:49::-;;768:13;732:49;;887:41;;924:4;887:41;;4313:149:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:1;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;4030:49:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;12899:591;;;;;;:::i;:::-;;:::i;3369:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3369:41:9;;;-1:-1:-1;;;3369:41:9;;;;;;2493:98:1;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:5;4907:32:1;929:10:5;4923:7:1;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;6814:1214:9:-;6920:10;6890:11;6904:27;;;:15;:27;;;;;;;6949:8;;;6941:41;;;;-1:-1:-1;;;6941:41:9;;9301:2:10;6941:41:9;;;9283:21:10;9340:2;9320:18;;;9313:30;-1:-1:-1;;;9359:18:10;;;9352:50;9419:18;;6941:41:9;;;;;;;;;7011:1;7000:8;:12;6992:55;;;;-1:-1:-1;;;6992:55:9;;9650:2:10;6992:55:9;;;9632:21:10;9689:2;9669:18;;;9662:30;9728:32;9708:18;;;9701:60;9778:18;;6992:55:9;9448:354:10;6992:55:9;7065:17;;;;:12;:17;;;;;;;;:26;7057:62;;;;-1:-1:-1;;;7057:62:9;;10009:2:10;7057:62:9;;;9991:21:10;10048:2;10028:18;;;10021:30;10087:25;10067:18;;;10060:53;10130:18;;7057:62:9;9807:347:10;7057:62:9;7157:1;7137:16;;;:11;:16;;;;;;:21;7129:30;;;;;;7204:1;7190:11;:15;;;:46;;;;;7223:13;;7209:11;:27;;;7190:46;7169:117;;;;-1:-1:-1;;;7169:117:9;;10361:2:10;7169:117:9;;;10343:21:10;10400:2;10380:18;;;10373:30;10439:26;10419:18;;;10412:54;10483:18;;7169:117:9;10159:348:10;7169:117:9;7376:11;;7420:9;;7443:16;;7473:20;;7376:179;;-1:-1:-1;;;7376:179:9;;7473:20;7376:179;;10763:25:10;;;;7443:16:9;;;;10804:18:10;;;10797:59;7473:20:9;;;;;10872:18:10;;;10865:47;7507:16:9;;;;10957:18:10;;;10950:43;7537:8:9;;;;;11009:19:10;;;11002:44;7356:17:9;;-1:-1:-1;;;;;7376:11:9;;:30;;10735:19:10;;7376:179:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7585:10;;;7566:16;;;;:11;:16;;;;;;;;:29;;;7605:27;;;:16;:27;;;;;:40;;;7655:23;;;:11;:23;;;;;:31;;-1:-1:-1;;7655:31:9;;;7708:10;;7696:23;;:11;:23;;;;;;:29;;;7799:160;;;;;;;7821:10;;7799:160;;7852:10;7799:160;;;;;;;;;7356:199;;-1:-1:-1;7799:160:9;;;7655:31;7922:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7922:26:9;-1:-1:-1;7799:160:9;;7785:10;;7780:16;;;;:4;:16;;;;;;;;;:179;;;;;;;;;;;;;-1:-1:-1;;;;;;7780:179:9;-1:-1:-1;;;;;7780:179:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7988:10:9;;7975:24;;7988:10;;-1:-1:-1;7975:24:9;;;;;8009:10;:12;;;:10;:12;;;:::i;:::-;;;;;;6880:1148;;6814:1214;;:::o;8079:256:7:-;8192:14;;-1:-1:-1;;;;;8192:14:7;8178:10;:28;8174:109;;8261:14;;8223:53;;-1:-1:-1;;;8223:53:7;;8249:10;8223:53;;;11730:34:10;-1:-1:-1;;;;;8261:14:7;;;11780:18:10;;;11773:43;11665:18;;8223:53:7;11518:304:10;8174:109:7;8288:42;8307:9;8318:11;8288:18;:42::i;:::-;8079:256;;:::o;5529:286:1:-;5656:4;929:10:5;5712:38:1;5728:4;929:10:5;5743:6:1;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:1;;5529:286;-1:-1:-1;;;;5529:286:1:o;12138:316:9:-;4263:17;;-1:-1:-1;;;;;4263:17:9;4249:10;:31;4228:123;;;;-1:-1:-1;;;4228:123:9;;;;;;;:::i;:::-;12256:5:::1;12265:1;12256:10:::0;12248:37:::1;;;::::0;-1:-1:-1;;;12248:37:9;;12443:2:10;12248:37:9::1;::::0;::::1;12425:21:10::0;12482:2;12462:18;;;12455:30;-1:-1:-1;;;12501:18:10;;;12494:44;12555:18;;12248:37:9::1;12241:338:10::0;12248:37:9::1;12296:18;::::0;;;:11:::1;:18;::::0;;;;:27;;-1:-1:-1;;12296:27:9::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;12334:114:::1;;12365:17;::::0;12376:5;;12365:17:::1;::::0;;;::::1;8079:256:7::0;;:::o;12334:114:9:-:1;12418:19;::::0;12431:5;;12418:19:::1;::::0;;;::::1;12138:316:::0;;:::o;6210:236:1:-;929:10:5;6298:4:1;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:1;;;;;;;;;;6298:4;;929:10:5;6352:66:1;;929:10:5;;6377:27:1;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;3870:50:9:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13496:1095::-;13595:10;13552:19;13574:32;;;:20;:32;;;;;;;;;13646:23;;;:10;:23;;;;;;13698:16;;;;13688:26;;;;;13680:69;;;;-1:-1:-1;;;13680:69:9;;12916:2:10;13680:69:9;;;12898:21:10;12955:2;12935:18;;;12928:30;12994:32;12974:18;;;12967:60;13044:18;;13680:69:9;12714:354:10;13680:69:9;13776:1;13767:6;:10;;;13759:56;;;;-1:-1:-1;;;13759:56:9;;;;;;;:::i;:::-;13901:9;:20;;;13925:1;13901:25;13897:688;;13965:23;:15;13983:5;13965:23;:::i;:::-;13942:20;;;:46;;;14034:49;;345:25:10;;;14050:10:9;;14034:49;;333:2:10;318:18;14034:49:9;;;;;;;;13542:1049;;13496:1095;:::o;13897:688::-;14263:9;:20;;;14244:15;:39;;14219:122;;;;-1:-1:-1;;;14219:122:9;;13677:2:10;14219:122:9;;;13659:21:10;13716:2;13696:18;;;13689:30;13755:26;13735:18;;;13728:54;13799:18;;14219:122:9;13475:348:10;14219:122:9;14376:6;14356:26;;:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;14396:25:9;;-1:-1:-1;14402:10:9;14396:25;;;:5;:25::i;:::-;14488:34;;14136:10:10;14124:23;;14106:42;;14503:10:9;;14488:34;;14094:2:10;14079:18;14488:34:9;13961:193:10;13897:688:9;13542:1049;;13496:1095;:::o;5129:517::-;5273:10;5257:27;;;;:15;:27;;;;;;:32;5249:69;;;;-1:-1:-1;;;5249:69:9;;14361:2:10;5249:69:9;;;14343:21:10;14400:2;14380:18;;;14373:30;14439:26;14419:18;;;14412:54;14483:18;;5249:69:9;14159:348:10;5249:69:9;5352:111;;;;;;;;5375:13;;;5352:111;;;5415:10;5352:111;;;;;;;-1:-1:-1;5352:111:9;;;;;;5329:20;;;:5;:20;;;;;:134;;;;;;;;;;;;;;5352:111;5329:134;-1:-1:-1;;;5329:134:9;-1:-1:-1;;;;;;5329:134:9;;;-1:-1:-1;;;;;5329:134:9;;;;;;;;;;;;;;;5504:13;;5474:27;;;:15;:27;;;;;;;:43;;;5527:23;;:12;;:23;;5540:9;;5527:23;:::i;:::-;;;;;;;;;;;;;;;;:39;;;;5588:13;;5576:26;;;;:11;:26;;;;:38;5605:9;5576:26;:38;:::i;:::-;-1:-1:-1;5624:13:9;:15;;;:13;:15;;;:::i;:::-;;;;;;5129:517;:::o;12460:352::-;4263:17;;-1:-1:-1;;;;;4263:17:9;4249:10;:31;4228:123;;;;-1:-1:-1;;;4228:123:9;;;;;;;:::i;:::-;12592:8:::1;12604:1;12592:13:::0;12584:43:::1;;;::::0;-1:-1:-1;;;12584:43:9;;17203:2:10;12584:43:9::1;::::0;::::1;17185:21:10::0;17242:2;17222:18;;;17215:30;-1:-1:-1;;;17261:18:10;;;17254:47;17318:18;;12584:43:9::1;17001:341:10::0;12584:43:9::1;12697:3;12680:13;:20;;;;12637:113;;;::::0;-1:-1:-1;;;12637:113:9;;17549:2:10;12637:113:9::1;::::0;::::1;17531:21:10::0;17588:2;17568:18;;;17561:30;-1:-1:-1;;;17607:18:10;;;17600:54;17671:18;;12637:113:9::1;17347:348:10::0;12637:113:9::1;12761:17;::::0;;;:7:::1;:17;::::0;;;;;:28:::1;;:44:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;12761:44:9::1;-1:-1:-1::0;;;;12761:44:9;;::::1;::::0;;;::::1;::::0;;12460:352::o;15046:371::-;15124:16;15168:10;;15160:5;:18;15152:45;;;;-1:-1:-1;;;15152:45:9;;12443:2:10;15152:45:9;;;12425:21:10;12482:2;12462:18;;;12455:30;-1:-1:-1;;;12501:18:10;;;12494:44;12555:18;;15152:45:9;12241:338:10;15152:45:9;15211:11;;;;:4;:11;;;;;:14;:23;;;15207:204;;15250:32;15285:11;;;:4;:11;;;;;;;;:24;;15250:59;;;;;;;;;;;;;;;;;;;15285:24;;15250:59;;;15285:24;15250:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15250:59:9;;15046:371;-1:-1:-1;;;;;;;15046:371:9:o;15207:204::-;15376:24;;-1:-1:-1;;;15376:24:9;;17902:2:10;15376:24:9;;;17884:21:10;17941:2;17921:18;;;17914:30;-1:-1:-1;;;17960:18:10;;;17953:44;18014:18;;15376:24:9;17700:338:10;15207:204:9;15046:371;;;:::o;4375:659::-;2369:13:0;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:4;:23;2385:16:0;2361:107;;;;-1:-1:-1;;;2361:107:0;;18245:2:10;2361:107:0;;;18227:21:10;18284:2;18264:18;;;18257:30;18323:34;18303:18;;;18296:62;-1:-1:-1;;;18374:18:10;;;18367:44;18428:19;;2361:107:0;18043:410:10;2361:107:0;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:0;;;;;2525:98;4531:34:9::1;;;;;;;;;;;;;;-1:-1:-1::0;;;4531:34:9::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;4531:34:9::1;;::::0;:12:::1;:34::i;:::-;4575:41;4600:15;4575:24;:41::i;:::-;4626:11;:56:::0;;-1:-1:-1;;;;;;4626:56:9;;::::1;-1:-1:-1::0;;;;;4626:56:9;;::::1;::::0;;::::1;::::0;;;4766:17:::1;:38:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;4814:18:9::1;:22:::0;;;4846:14:::1;:32:::0;;;::::1;-1:-1:-1::0;;;4846:32:9;;::::1;::::0;;;::::1;::::0;;;4888:16:::1;:34:::0;;-1:-1:-1;;4888:34:9::1;;::::0;::::1;;::::0;;4932:13:::1;:17:::0;;;4959:10:::1;:14:::0;;;4983:13:::1;:17:::0;-1:-1:-1;5010:13:9::1;:17:::0;2645:66:0;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:0;;;2645:66;2080:637;4375:659:9;;;:::o;3926:45::-;;;;;;;;;;;;;;;;:::i;2704:102:1:-;2760:13;2792:7;2785:14;;;;;:::i;14717:252:9:-;768:13;826:4;14793:13;3668:12:1;;;3581:106;14793:13:9;:28;;;;:::i;:::-;:41;;14772:111;;;;-1:-1:-1;;;14772:111:9;;18660:2:10;14772:111:9;;;18642:21:10;18699:2;18679:18;;;18672:30;18738:25;18718:18;;;18711:53;18781:18;;14772:111:9;18458:347:10;14772:111:9;14937:25;14943:10;14955:6;14937:5;:25::i;:::-;14717:252;:::o;6933:429:1:-;929:10:5;7026:4:1;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:1;;;;;;;;;;7026:4;;929:10:5;7152:35:1;;;;7144:85;;;;-1:-1:-1;;;7144:85:1;;19012:2:10;7144:85:1;;;18994:21:10;19051:2;19031:18;;;19024:30;19090:34;19070:18;;;19063:62;-1:-1:-1;;;19141:18:10;;;19134:35;19186:19;;7144:85:1;18810:401:10;7144:85:1;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:5;4199:28:1;929:10:5;4216:2:1;4220:6;4199:9;:28::i;11762:370:9:-;4263:17;;-1:-1:-1;;;;;4263:17:9;4249:10;:31;4228:123;;;;-1:-1:-1;;;4228:123:9;;;;;;;:::i;:::-;11900:11:::1;11915:1;11900:16:::0;11892:49:::1;;;::::0;-1:-1:-1;;;11892:49:9;;19418:2:10;11892:49:9::1;::::0;::::1;19400:21:10::0;19457:2;19437:18;;;19430:30;-1:-1:-1;;;19476:18:10;;;19469:50;19536:18;;11892:49:9::1;19216:344:10::0;11892:49:9::1;12011:3;11994:13;:20;;;;11951:113;;;::::0;-1:-1:-1;;;11951:113:9;;17549:2:10;11951:113:9::1;::::0;::::1;17531:21:10::0;17588:2;17568:18;;;17561:30;-1:-1:-1;;;17607:18:10;;;17600:54;17671:18;;11951:113:9::1;17347:348:10::0;11951:113:9::1;12075:23;::::0;;;:10:::1;:23;::::0;;;;;:34:::1;;:50:::0;;-1:-1:-1;;12075:50:9::1;;::::0;;::::1;::::0;;;::::1;::::0;;11762:370::o;5771:1010::-;5882:10;5861:32;;;;:20;:32;;;;;;:37;5840:132;;;;-1:-1:-1;;;5840:132:9;;19767:2:10;5840:132:9;;;19749:21:10;19806:2;19786:18;;;19779:30;19845:34;19825:18;;;19818:62;-1:-1:-1;;;19896:18:10;;;19889:46;19952:19;;5840:132:9;19565:412:10;5840:132:9;6014:10;3819:7:1;3845:18;;;:9;:18;;;;;;924:4:9;-1:-1:-1;6004:35:9;5983:109;;;;-1:-1:-1;;;5983:109:9;;20184:2:10;5983:109:9;;;20166:21:10;20223:2;20203:18;;;20196:30;20262:29;20242:18;;;20235:57;20309:18;;5983:109:9;19982:351:10;5983:109:9;6137:12;6152:51;6165:10;6185:4;924;6152:12;:51::i;:::-;6137:66;;6222:7;6214:41;;;;-1:-1:-1;;;6214:41:9;;20540:2:10;6214:41:9;;;20522:21:10;20579:2;20559:18;;;20552:30;-1:-1:-1;;;20598:18:10;;;20591:51;20659:18;;6214:41:9;20338:345:10;6214:41:9;6299:215;;;;;;;;6327:18;;6299:215;;;6377:10;6299:215;;;;;;;924:4;6299:215;;;;;;-1:-1:-1;6299:215:9;;;;;;6472:3;6299:215;;;;;;6499:4;6299:215;;;;;;6266:30;;;:10;:30;;;;;:248;;;;;;;;;;;-1:-1:-1;;;;;6266:248:9;;;;-1:-1:-1;;;;;;6266:248:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6266:248:9;;;6299:215;6266:248;;;;;;;;;;;;;;;6542:13;;6525:31;;:16;:31;;;:43;6559:9;6525:31;:43;:::i;:::-;-1:-1:-1;6613:18:9;;6599:10;6578:32;;;;:20;:32;;;;;;;:53;;;6641:28;:17;;:28;;6659:9;;6641:28;:::i;:::-;;;;;;;;;;;;;;;;;;:49;;;;6718:18;;;6700:37;;;;:17;:37;;;;;;:44;;-1:-1:-1;;6700:44:9;6740:4;6700:44;;;6754:20;;;6718:18;6754:20;;;:::i;:::-;;;;;;5830:951;5771:1010;:::o;12899:591::-;12970:1;12961:6;:10;;;12953:56;;;;-1:-1:-1;;;12953:56:9;;;;;;;:::i;:::-;13037:10;3819:7:1;3845:18;;;:9;:18;;;;;;13027:31:9;;;-1:-1:-1;13027:31:9;13019:65;;;;-1:-1:-1;;;13019:65:9;;20890:2:10;13019:65:9;;;20872:21:10;20929:2;20909:18;;;20902:30;-1:-1:-1;;;20948:18:10;;;20941:51;21009:18;;13019:65:9;20688:345:10;13019:65:9;13138:10;13095:19;13117:32;;;:20;:32;;;;;;;13167:16;;;13159:54;;;;-1:-1:-1;;;13159:54:9;;21240:2:10;13159:54:9;;;21222:21:10;21279:2;21259:18;;;21252:30;21318:27;21298:18;;;21291:55;21363:18;;13159:54:9;21038:349:10;13159:54:9;13223:27;13253:23;;;:10;:23;;;;;13294:18;;;;;;;;;13286:55;;;;-1:-1:-1;;;13286:55:9;;21594:2:10;13286:55:9;;;21576:21:10;21633:2;21613:18;;;21606:30;21672:26;21652:18;;;21645:54;21716:18;;13286:55:9;21392:348:10;13286:55:9;13352:47;13365:10;13385:4;13392:6;13352:47;;:12;:47::i;:::-;;13429:6;13409:26;;:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;13451:32:9;;14136:10:10;14124:23;;14106:42;;13464:10:9;;13451:32;;14094:2:10;14079:18;13451:32:9;13961:193:10;10460:370:1;-1:-1:-1;;;;;10591:19:1;;10583:68;;;;-1:-1:-1;;;10583:68:1;;21947:2:10;10583:68:1;;;21929:21:10;21986:2;21966:18;;;21959:30;22025:34;22005:18;;;21998:62;-1:-1:-1;;;22076:18:10;;;22069:34;22120:19;;10583:68:1;21745:400:10;10583:68:1;-1:-1:-1;;;;;10669:21:1;;10661:68;;;;-1:-1:-1;;;10661:68:1;;22352:2:10;10661:68:1;;;22334:21:10;22391:2;22371:18;;;22364:30;22430:34;22410:18;;;22403:62;-1:-1:-1;;;22481:18:10;;;22474:32;22523:19;;10661:68:1;22150:398:10;10661:68:1;-1:-1:-1;;;;;10740:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;345:25:10;;;10791:32:1;;318:18:10;10791:32:1;;;;;;;10460:370;;;:::o;8107:1394:9:-;8269:14;;-1:-1:-1;;;8269:14:9;;-1:-1:-1;;;;;8269:14:9;8255:10;:28;8234:106;;;;-1:-1:-1;;;8234:106:9;;22755:2:10;8234:106:9;;;22737:21:10;22794:2;22774:18;;;22767:30;22833:33;22813:18;;;22806:61;22884:18;;8234:106:9;22553:355:10;8234:106:9;8379:1;8358:11;:18;:22;8350:59;;;;-1:-1:-1;;;8350:59:9;;23115:2:10;8350:59:9;;;23097:21:10;23154:2;23134:18;;;23127:30;23193:26;23173:18;;;23166:54;23237:18;;8350:59:9;22913:348:10;8350:59:9;8472:20;8495:11;8507:1;8495:14;;;;;;;;:::i;:::-;;;;;;;;;;;;8519:13;8535:27;;;:16;:27;;;;;;;8594:11;;;:4;:11;;;;;:24;;:31;8495:14;;-1:-1:-1;8594:31:9;8723:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8723:26:9;;8685:64;;8827:7;8822:419;8844:11;8840:1;:15;;;8822:419;;;8876:19;8913:18;;8898:12;:33;;;;:::i;:::-;8876:55;;8945:19;8988:18;;8983:1;8969:15;;:11;:15;;;;:::i;:::-;8968:38;;;;:::i;:::-;8967:44;;9010:1;8967:44;:::i;:::-;8945:66;;9066:125;9074:30;;;;:17;:30;;;;;;;;9066:125;;9153:18;;9139:32;;:11;:32;:::i;:::-;9138:38;;9175:1;9138:38;:::i;:::-;9124:52;;9066:125;;;9229:1;9205:18;9224:1;9205:21;;;;;;;;;;:::i;:::-;;;;;;:25;;;;;8862:379;;8857:3;;;;;:::i;:::-;;;;8822:419;;;-1:-1:-1;9306:11:9;;;;:4;:11;;;;;;;;:45;;;;:24;;;;;:45;;;;:::i;:::-;;8224:1277;;;;8107:1394;;:::o;11107:441:1:-;-1:-1:-1;;;;;4428:18:1;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:1;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:1;;23994:2:10;11356:68:1;;;23976:21:10;24033:2;24013:18;;;24006:30;24072:31;24052:18;;;24045:59;24121:18;;11356:68:1;23792:353:10;11356:68:1;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;7825:651::-;-1:-1:-1;;;;;7951:18:1;;7943:68;;;;-1:-1:-1;;;7943:68:1;;24352:2:10;7943:68:1;;;24334:21:10;24391:2;24371:18;;;24364:30;24430:34;24410:18;;;24403:62;-1:-1:-1;;;24481:18:10;;;24474:35;24526:19;;7943:68:1;24150:401:10;7943:68:1;-1:-1:-1;;;;;8029:16:1;;8021:64;;;;-1:-1:-1;;;8021:64:1;;24758:2:10;8021:64:1;;;24740:21:10;24797:2;24777:18;;;24770:30;24836:34;24816:18;;;24809:62;-1:-1:-1;;;24887:18:10;;;24880:33;24930:19;;8021:64:1;24556:399:10;8021:64:1;-1:-1:-1;;;;;8167:15:1;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:1;;25162:2:10;8192:72:1;;;25144:21:10;25201:2;25181:18;;;25174:30;25240:34;25220:18;;;25213:62;-1:-1:-1;;;25291:18:10;;;25284:36;25337:19;;8192:72:1;24960:402:10;8192:72:1;-1:-1:-1;;;;;8298:15:1;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:1;8404:4;-1:-1:-1;;;;;8395:26:1;;8414:6;8395:26;;;;345:25:10;;333:2;318:18;;199:177;8395:26:1;;;;;;;;8432:37;13496:1095:9;8752:389:1;-1:-1:-1;;;;;8835:21:1;;8827:65;;;;-1:-1:-1;;;8827:65:1;;25569:2:10;8827:65:1;;;25551:21:10;25608:2;25588:18;;;25581:30;25647:33;25627:18;;;25620:61;25698:18;;8827:65:1;25367:355:10;8827:65:1;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:1;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:1;;345:25:10;;;-1:-1:-1;;;;;9038:37:1;;;9055:1;;9038:37;;333:2:10;318:18;9038:37:1;;;;;;;8079:256:7;;:::o;2116:147:1:-;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2218:38:1::1;2241:5;2248:7;2218:22;:38::i;6723:282:7:-:0;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6818:29:7;::::1;6814:148;;6910:45;::::0;-1:-1:-1;;;6910:45:7;;26341:2:10;6910:45:7::1;::::0;::::1;26323:21:10::0;26380:2;26360:18;;;26353:30;26419:34;26399:18;;;26392:62;-1:-1:-1;;;26470:18:10;;;26463:33;26513:19;;6910:45:7::1;26139:399:10::0;6814:148:7::1;6968:14;:32:::0;;-1:-1:-1;;;;;;6968:32:7::1;-1:-1:-1::0;;;;;6968:32:7;;;::::1;::::0;;;::::1;::::0;;6723:282::o;2269:159:1:-;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2381:5:1::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:1::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:10;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:10;;14:180;-1:-1:-1;14:180:10:o;381:250::-;466:1;476:113;490:6;487:1;484:13;476:113;;;566:11;;;560:18;547:11;;;540:39;512:2;505:10;476:113;;;-1:-1:-1;;623:1:10;605:16;;598:27;381:250::o;636:396::-;785:2;774:9;767:21;748:4;817:6;811:13;860:6;855:2;844:9;840:18;833:34;876:79;948:6;943:2;932:9;928:18;923:2;915:6;911:15;876:79;:::i;:::-;1016:2;995:15;-1:-1:-1;;991:29:10;976:45;;;;1023:2;972:54;;636:396;-1:-1:-1;;636:396:10:o;1037:173::-;1105:20;;-1:-1:-1;;;;;1154:31:10;;1144:42;;1134:70;;1200:1;1197;1190:12;1215:254;1283:6;1291;1344:2;1332:9;1323:7;1319:23;1315:32;1312:52;;;1360:1;1357;1350:12;1312:52;1383:29;1402:9;1383:29;:::i;:::-;1373:39;1459:2;1444:18;;;;1431:32;;-1:-1:-1;;;1215:254:10:o;1666:156::-;1732:20;;1792:4;1781:16;;1771:27;;1761:55;;1812:1;1809;1802:12;1827:250;1893:6;1901;1954:2;1942:9;1933:7;1929:23;1925:32;1922:52;;;1970:1;1967;1960:12;1922:52;1993:27;2010:9;1993:27;:::i;2432:127::-;2493:10;2488:3;2484:20;2481:1;2474:31;2524:4;2521:1;2514:15;2548:4;2545:1;2538:15;2564:275;2635:2;2629:9;2700:2;2681:13;;-1:-1:-1;;2677:27:10;2665:40;;2735:18;2720:34;;2756:22;;;2717:62;2714:88;;;2782:18;;:::i;:::-;2818:2;2811:22;2564:275;;-1:-1:-1;2564:275:10:o;2844:1014::-;2937:6;2945;2998:2;2986:9;2977:7;2973:23;2969:32;2966:52;;;3014:1;3011;3004:12;2966:52;3050:9;3037:23;3027:33;;3079:2;3132;3121:9;3117:18;3104:32;3155:18;3196:2;3188:6;3185:14;3182:34;;;3212:1;3209;3202:12;3182:34;3250:6;3239:9;3235:22;3225:32;;3295:7;3288:4;3284:2;3280:13;3276:27;3266:55;;3317:1;3314;3307:12;3266:55;3353:2;3340:16;3375:2;3371;3368:10;3365:36;;;3381:18;;:::i;:::-;3427:2;3424:1;3420:10;3410:20;;3450:28;3474:2;3470;3466:11;3450:28;:::i;:::-;3512:15;;;3582:11;;;3578:20;;;3543:12;;;;3610:19;;;3607:39;;;3642:1;3639;3632:12;3607:39;3666:11;;;;3686:142;3702:6;3697:3;3694:15;3686:142;;;3768:17;;3756:30;;3719:12;;;;3806;;;;3686:142;;;3847:5;3837:15;;;;;;;;2844:1014;;;;;:::o;3863:764::-;3932:6;3963:2;4006;3994:9;3985:7;3981:23;3977:32;3974:52;;;4022:1;4019;4012:12;3974:52;4062:9;4049:23;4091:18;4132:2;4124:6;4121:14;4118:34;;;4148:1;4145;4138:12;4118:34;4186:6;4175:9;4171:22;4161:32;;4231:7;4224:4;4220:2;4216:13;4212:27;4202:55;;4253:1;4250;4243:12;4202:55;4289:2;4276:16;4311:2;4307;4304:10;4301:36;;;4317:18;;:::i;:::-;4359:53;4402:2;4383:13;;-1:-1:-1;;4379:27:10;4375:36;;4359:53;:::i;:::-;4346:66;;4435:2;4428:5;4421:17;4475:7;4470:2;4465;4461;4457:11;4453:20;4450:33;4447:53;;;4496:1;4493;4486:12;4447:53;4551:2;4546;4542;4538:11;4533:2;4526:5;4522:14;4509:45;4595:1;4574:14;;;4570:23;;;4563:34;;;;-1:-1:-1;4578:5:10;3863:764;-1:-1:-1;;;3863:764:10:o;4632:328::-;4709:6;4717;4725;4778:2;4766:9;4757:7;4753:23;4749:32;4746:52;;;4794:1;4791;4784:12;4746:52;4817:29;4836:9;4817:29;:::i;:::-;4807:39;;4865:38;4899:2;4888:9;4884:18;4865:38;:::i;:::-;4855:48;;4950:2;4939:9;4935:18;4922:32;4912:42;;4632:328;;;;;:::o;4965:186::-;5024:6;5077:2;5065:9;5056:7;5052:23;5048:32;5045:52;;;5093:1;5090;5083:12;5045:52;5116:29;5135:9;5116:29;:::i;:::-;5106:39;4965:186;-1:-1:-1;;;4965:186:10:o;5156:341::-;5221:6;5229;5282:2;5270:9;5261:7;5257:23;5253:32;5250:52;;;5298:1;5295;5288:12;5250:52;5334:9;5321:23;5311:33;;5394:2;5383:9;5379:18;5366:32;5441:5;5434:13;5427:21;5420:5;5417:32;5407:60;;5463:1;5460;5453:12;5407:60;5486:5;5476:15;;;5156:341;;;;;:::o;6631:276::-;6689:6;6742:2;6730:9;6721:7;6717:23;6713:32;6710:52;;;6758:1;6755;6748:12;6710:52;6797:9;6784:23;6847:10;6840:5;6836:22;6829:5;6826:33;6816:61;;6873:1;6870;6863:12;6912:250;6978:6;6986;7039:2;7027:9;7018:7;7014:23;7010:32;7007:52;;;7055:1;7052;7045:12;7007:52;7091:9;7078:23;7068:33;;7120:36;7152:2;7141:9;7137:18;7120:36;:::i;:::-;7110:46;;6912:250;;;;;:::o;7167:632::-;7338:2;7390:21;;;7460:13;;7363:18;;;7482:22;;;7309:4;;7338:2;7561:15;;;;7535:2;7520:18;;;7309:4;7604:169;7618:6;7615:1;7612:13;7604:169;;;7679:13;;7667:26;;7748:15;;;;7713:12;;;;7640:1;7633:9;7604:169;;;-1:-1:-1;7790:3:10;;7167:632;-1:-1:-1;;;;;;7167:632:10:o;7804:432::-;7880:6;7888;7896;7949:2;7937:9;7928:7;7924:23;7920:32;7917:52;;;7965:1;7962;7955:12;7917:52;7988:29;8007:9;7988:29;:::i;:::-;7978:39;;8036:38;8070:2;8059:9;8055:18;8036:38;:::i;:::-;8026:48;;8124:2;8113:9;8109:18;8096:32;8168:18;8161:5;8157:30;8150:5;8147:41;8137:69;;8202:1;8199;8192:12;8137:69;8225:5;8215:15;;;7804:432;;;;;:::o;8449:260::-;8517:6;8525;8578:2;8566:9;8557:7;8553:23;8549:32;8546:52;;;8594:1;8591;8584:12;8546:52;8617:29;8636:9;8617:29;:::i;:::-;8607:39;;8665:38;8699:2;8688:9;8684:18;8665:38;:::i;8714:380::-;8793:1;8789:12;;;;8836;;;8857:61;;8911:4;8903:6;8899:17;8889:27;;8857:61;8964:2;8956:6;8953:14;8933:18;8930:38;8927:161;;9010:10;9005:3;9001:20;8998:1;8991:31;9045:4;9042:1;9035:15;9073:4;9070:1;9063:15;8927:161;;8714:380;;;:::o;11057:184::-;11127:6;11180:2;11168:9;11159:7;11155:23;11151:32;11148:52;;;11196:1;11193;11186:12;11148:52;-1:-1:-1;11219:16:10;;11057:184;-1:-1:-1;11057:184:10:o;11246:127::-;11307:10;11302:3;11298:20;11295:1;11288:31;11338:4;11335:1;11328:15;11362:4;11359:1;11352:15;11378:135;11417:3;11438:17;;;11435:43;;11458:18;;:::i;:::-;-1:-1:-1;11505:1:10;11494:13;;11378:135::o;11827:409::-;12029:2;12011:21;;;12068:2;12048:18;;;12041:30;12107:34;12102:2;12087:18;;12080:62;-1:-1:-1;;;12173:2:10;12158:18;;12151:43;12226:3;12211:19;;11827:409::o;12584:125::-;12649:9;;;12670:10;;;12667:36;;;12683:18;;:::i;13073:397::-;13275:2;13257:21;;;13314:2;13294:18;;;13287:30;13353:34;13348:2;13333:18;;13326:62;-1:-1:-1;;;13419:2:10;13404:18;;13397:31;13460:3;13445:19;;13073:397::o;13828:128::-;13895:9;;;13916:11;;;13913:37;;;13930:18;;:::i;14512:289::-;14643:3;14681:6;14675:13;14697:66;14756:6;14751:3;14744:4;14736:6;14732:17;14697:66;:::i;:::-;14779:16;;;;;14512:289;-1:-1:-1;;14512:289:10:o;14932:543::-;15034:2;15029:3;15026:11;15023:446;;;15070:1;15094:5;15091:1;15084:16;15138:4;15135:1;15125:18;15208:2;15196:10;15192:19;15189:1;15185:27;15179:4;15175:38;15244:4;15232:10;15229:20;15226:47;;;-1:-1:-1;15267:4:10;15226:47;15322:2;15317:3;15313:12;15310:1;15306:20;15300:4;15296:31;15286:41;;15377:82;15395:2;15388:5;15385:13;15377:82;;;15440:17;;;15421:1;15410:13;15377:82;;;15381:3;;;14932:543;;;:::o;15651:1345::-;15777:3;15771:10;15804:18;15796:6;15793:30;15790:56;;;15826:18;;:::i;:::-;15855:97;15945:6;15905:38;15937:4;15931:11;15905:38;:::i;:::-;15899:4;15855:97;:::i;:::-;16007:4;;16064:2;16053:14;;16081:1;16076:663;;;;16783:1;16800:6;16797:89;;;-1:-1:-1;16852:19:10;;;16846:26;16797:89;-1:-1:-1;;15608:1:10;15604:11;;;15600:24;15596:29;15586:40;15632:1;15628:11;;;15583:57;16899:81;;16046:944;;16076:663;14879:1;14872:14;;;14916:4;14903:18;;-1:-1:-1;;16112:20:10;;;16230:236;16244:7;16241:1;16238:14;16230:236;;;16333:19;;;16327:26;16312:42;;16425:27;;;;16393:1;16381:14;;;;16260:19;;16230:236;;;16234:3;16494:6;16485:7;16482:19;16479:201;;;16555:19;;;16549:26;-1:-1:-1;;16638:1:10;16634:14;;;16650:3;16630:24;16626:37;16622:42;16607:58;16592:74;;16479:201;-1:-1:-1;;;;;16726:1:10;16710:14;;;16706:22;16693:36;;-1:-1:-1;15651:1345:10:o;23266:127::-;23327:10;23322:3;23318:20;23315:1;23308:31;23358:4;23355:1;23348:15;23382:4;23379:1;23372:15;23398:209;23430:1;23456;23446:132;;23500:10;23495:3;23491:20;23488:1;23481:31;23535:4;23532:1;23525:15;23563:4;23560:1;23553:15;23446:132;-1:-1:-1;23592:9:10;;23398:209::o;23612:175::-;23649:3;23693:4;23686:5;23682:16;23722:4;23713:7;23710:17;23707:43;;23730:18;;:::i;:::-;23779:1;23766:15;;23612:175;-1:-1:-1;;23612:175:10:o;25727:407::-;25929:2;25911:21;;;25968:2;25948:18;;;25941:30;26007:34;26002:2;25987:18;;25980:62;-1:-1:-1;;;26073:2:10;26058:18;;26051:41;26124:3;26109:19;;25727:407::o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(string)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(string)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint32)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(uint256)": {
        "details": "Mint tokens for updating state rewards, TODO change to internal (external for testing)"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "updateValidator(uint256,uint8)": {
        "details": "Update the contract state, to be called by the ValidatorMultiSig contract. Updates job, worker, user, and validator key information, mines and distributes rewards.",
        "notice": "TODO"
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    563,
    15419
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2F1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x507FFBA5 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xA2F8E58C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xCF6ACD47 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xE707A21E EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0xEC81560F EQ PUSH2 0x88A JUMPI DUP1 PUSH4 0xF1A22DC2 EQ PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF6ACD47 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2F8E58C EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xC8DF245A EQ PUSH2 0x7DF JUMPI DUP1 PUSH4 0xCA58DA74 EQ PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87A30A28 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x96AFC450 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0x97304CED EQ PUSH2 0x724 JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xA2CED9FF EQ PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87A30A28 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x507FFBA5 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x5A7F1A81 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0x6817DD5B EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0x7879EC31 EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0x83570395 EQ PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27764547 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x365B98B2 GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x4316E269 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x4316E269 EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0x44C6957B EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0x4B759088 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27764547 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x2A6BEBA8 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x2FABA6AE EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x32D40160 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x2AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x18306EF6 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x1FC40303 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x2130A16F EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12DCCDD EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xC97CF81 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x37F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x316 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x316 PUSH1 0x9C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x2498 JUMP JUMPDEST PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D3 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xA4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x316 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xAE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xB0 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x2536 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x316 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xA8 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x471 CALLDATASIZE PUSH1 0x4 PUSH2 0x267D JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH1 0xA6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x26DB JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST PUSH2 0x316 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x25E8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xA7 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x53F PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x5B5 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x316 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x5FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2498 JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x60E CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x621 CALLDATASIZE PUSH1 0x4 PUSH2 0x2710 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x634 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH1 0xA5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x65D CALLDATASIZE PUSH1 0x4 PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST PUSH2 0x37D PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x2736 JUMP JUMPDEST PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x688 PUSH2 0x683 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x6A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x6CC CALLDATASIZE PUSH1 0x4 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xAB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x316 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x316 PUSH8 0x6F05B59D3B200000 DUP2 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x732 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH2 0x74A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x770 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xB1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x793 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xA9 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2498 JUMP JUMPDEST PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x7D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2498 JUMP JUMPDEST PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x9B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x316 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2736 JUMP JUMPDEST PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x316 PUSH11 0x115EEC47F6CF7E35000000 DUP2 JUMP JUMPDEST PUSH2 0x316 PUSH8 0x4563918244F40000 DUP2 JUMP JUMPDEST PUSH2 0x316 PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x27FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x875 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xAF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x898 CALLDATASIZE PUSH1 0x4 PUSH2 0x2710 JUMP JUMPDEST PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x5B5 PUSH2 0x8AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x2824 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x2824 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x979 DUP2 DUP6 DUP6 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B9103737BA103932B3B4B9BA32B932B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4361706163697479206D7573742062652067726561746572207A65726F2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616E20616374697665206A6F622E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0xAC0 JUMPI POP PUSH1 0x9C SLOAD DUP4 PUSH1 0xFF AND LT JUMPDEST PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642076616C696461746F7220636F756E742E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0xA0 SLOAD PUSH1 0x9E SLOAD PUSH1 0x9D SLOAD PUSH1 0x9F SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH5 0x100000000 DUP2 DIV PUSH2 0xFFFF AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH7 0x1000000000000 SWAP1 SWAP2 DIV AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x9A DUP1 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xAA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP4 MSTORE PUSH1 0xAB DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0xB1 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 SLOAD DUP3 MSTORE PUSH1 0xAE DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE SWAP3 SLOAD DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x60 DUP2 ADD PUSH1 0xFF DUP7 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC6E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE PUSH1 0x9A SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xCCF SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x23B1 JUMP JUMPDEST POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH32 0xDBD9082204763B590F250A641C459B7B94D813CD5B0937D3F77E5E393BFCF32F SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x9A DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD10 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD5B JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xD65 DUP3 DUP3 PUSH2 0x1D3C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xD77 DUP6 DUP3 DUP6 PUSH2 0x1F5C JUMP JUMPDEST PUSH2 0xD82 DUP6 DUP6 DUP6 PUSH2 0x1FE8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x28A6 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081A9BD8881251 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x7E2409EB03FE1E2EA93ADD34AD736F8CDDC41FFDC3C5875587B3E40AB490996A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x979 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xEB3 SWAP1 DUP8 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0xAC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xED1 SWAP1 PUSH2 0x2824 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEFD SWAP1 PUSH2 0x2824 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0xA2 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP5 AND GT ISZERO PUSH2 0xFCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x2906 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x104A JUMPI PUSH2 0x1008 TIMESTAMP PUSH2 0xC4E0 PUSH2 0x28F3 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10B8 SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10CE SWAP1 POP CALLER PUSH4 0xFFFFFFFF DUP6 AND PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0x103D JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x99 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x0 DUP7 DUP9 ADD DUP2 DUP2 MSTORE SWAP5 DUP2 MSTORE PUSH1 0xA1 DUP4 MSTORE DUP8 DUP2 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP5 MLOAD PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP5 SSTORE SWAP2 SLOAD SWAP2 DUP2 MSTORE PUSH1 0xA5 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 MLOAD PUSH1 0xA7 SWAP1 PUSH2 0x11F0 SWAP1 DUP5 SWAP1 PUSH2 0x295A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x99 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xAD SWAP1 SWAP2 MSTORE KECCAK256 PUSH2 0x121D DUP3 DUP3 PUSH2 0x29C6 JUMP JUMPDEST POP PUSH1 0x99 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x122E DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1260 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x28A6 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081DDBDC9AD95C881251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x12F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C69642072657075746174696F6E2076616C7565 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9A SLOAD DUP3 LT PUSH2 0x1367 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081A9BD8881251 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 SUB PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13D6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13C2 JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4A6F62206E6F7420666F756E6421 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x143C JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1440 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x150D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x536D617274204E6F646573 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x2295 JUMP JUMPDEST PUSH2 0x1516 DUP4 PUSH2 0x22C6 JUMP JUMPDEST PUSH1 0xA0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x97 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x98 DUP2 SWAP1 SSTORE PUSH1 0x9F DUP1 SLOAD PUSH32 0xFFFF0000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x50 SHL SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x9D DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x99 DUP2 SWAP1 SSTORE PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0x9B SSTORE PUSH1 0x3 PUSH1 0x9C SSTORE DUP1 ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xAD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xED1 SWAP1 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x2824 JUMP JUMPDEST PUSH11 0x115EEC47F6CF7E35000000 PUSH8 0x6F05B59D3B200000 PUSH2 0x1610 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x161A SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST GT ISZERO PUSH2 0x1668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20737570706C79207265616368656421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x1672 CALLER DUP3 PUSH2 0x21B6 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x16FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xD82 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x979 DUP2 DUP6 DUP6 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x173F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x28A6 JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x1786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D985B1A59185D1BDC881251 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x17D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C69642072657075746174696F6E2076616C7565 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220776974682074686973207075626C69634B6579486173 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6820616C726561647920657869737473 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0x4563918244F40000 GT ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC CALLER ADDRESS PUSH8 0x4563918244F40000 PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x98 SLOAD DUP1 DUP3 MSTORE CALLER PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH8 0x4563918244F40000 DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x64 PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP10 ADD DUP2 DUP2 MSTORE SWAP8 DUP5 MSTORE PUSH1 0xA2 DUP7 MSTORE DUP10 DUP5 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP6 MLOAD SWAP6 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP4 MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP5 AND PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x99 SLOAD DUP3 MSTORE PUSH1 0xAC SWAP1 MSTORE KECCAK256 PUSH2 0x19F5 DUP4 DUP3 PUSH2 0x29C6 JUMP JUMPDEST POP PUSH1 0x98 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH1 0xA8 SWAP1 PUSH2 0x1A1C SWAP1 DUP6 SWAP1 PUSH2 0x295A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x98 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xAF SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x1A5C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1A8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x2906 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 AND GT ISZERO PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x1B48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206973206E6F74206163746976652E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x1BC0 CALLER ADDRESS DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0xD69 JUMP JUMPDEST POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BDB SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP1 PUSH1 0x20 ADD PUSH2 0x103D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1DEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072616E646F6D20776F7264732070726F76696465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E03 JUMPI PUSH2 0x1E03 PUSH2 0x2A86 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xAB DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP1 DUP4 MSTORE PUSH1 0xA4 SWAP1 SWAP5 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP4 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E48 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E71 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1F2D JUMPI PUSH1 0x0 PUSH1 0x98 SLOAD DUP7 PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x2A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x98 SLOAD DUP4 PUSH1 0xFF AND DUP4 PUSH2 0x1EA8 SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x1EB2 SWAP2 SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH2 0x1EBD SWAP1 PUSH1 0x1 PUSH2 0x28F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xAF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1EF5 JUMPI PUSH1 0x98 SLOAD PUSH2 0x1EE3 SWAP1 DUP3 PUSH2 0x2A9C JUMP JUMPDEST PUSH2 0x1EEE SWAP1 PUSH1 0x1 PUSH2 0x28F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x1 DUP5 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1F0C JUMPI PUSH2 0x1F0C PUSH2 0x2A86 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x1F25 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E77 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x1F53 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 0x23B1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x15C4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1FDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x15C4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x204C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2126 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x215D SWAP1 DUP5 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x21A9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x220C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9D8 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x221E SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x224B SWAP1 DUP5 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x2ADD JUMP JUMPDEST PUSH2 0xD65 DUP3 DUP3 PUSH2 0x2371 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x234F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D75737420676976652076616C696420636F6F7264696E61746F722061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x2ADD JUMP JUMPDEST PUSH1 0x36 PUSH2 0x23A4 DUP4 DUP3 PUSH2 0x29C6 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x1106 DUP3 DUP3 PUSH2 0x29C6 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x23EC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23EC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x23D1 JUMP JUMPDEST POP PUSH2 0x23F8 SWAP3 SWAP2 POP PUSH2 0x23FC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23F8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2445 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x242D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x246D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x242A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B4 DUP4 PUSH2 0x2481 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B4 DUP4 PUSH2 0x24C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x252E JUMPI PUSH2 0x252E PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x257D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x258F JUMPI PUSH2 0x258F PUSH2 0x24EF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x25A0 DUP5 DUP4 ADD PUSH2 0x2505 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x25BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x25D8 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x25BF JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2639 JUMPI PUSH2 0x2639 PUSH2 0x24EF JUMP JUMPDEST PUSH2 0x264B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x2505 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x269B DUP5 PUSH2 0x2481 JUMP JUMPDEST SWAP3 POP PUSH2 0x26A9 PUSH1 0x20 DUP6 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26D4 DUP3 PUSH2 0x2481 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x26D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2759 PUSH1 0x20 DUP5 ADD PUSH2 0x24C2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x279A JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x277E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27C4 DUP5 PUSH2 0x2481 JUMP JUMPDEST SWAP3 POP PUSH2 0x27D2 PUSH1 0x20 DUP6 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x27EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x280D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2816 DUP4 PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP PUSH2 0x2759 PUSH1 0x20 DUP5 ADD PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2838 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2858 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x289F JUMPI PUSH2 0x289F PUSH2 0x2877 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207468652056616C696461746F724D756C74 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1A54DA59C818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x97F JUMPI PUSH2 0x97F PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH2 0x97F PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x296C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x242A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x299F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29BE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x29AB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29E0 JUMPI PUSH2 0x29E0 PUSH2 0x24EF JUMP JUMPDEST PUSH2 0x29F4 DUP2 PUSH2 0x29EE DUP5 SLOAD PUSH2 0x2824 JUMP JUMPDEST DUP5 PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A29 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2A11 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A58 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2A39 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2A76 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AB9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x2AD4 JUMPI PUSH2 0x2AD4 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xC20E34D24A30533CC079F0826006FAB678BD98CDEB2562F4FAEBA1 0xB8 0xE7 PUSH31 0x6164736F6C6343000819003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F1"
    },
    "25": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x507FFBA5"
    },
    "38": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19D"
    },
    "42": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA2F8E58C"
    },
    "49": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE9"
    },
    "53": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xCF6ACD47"
    },
    "60": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x82E"
    },
    "86": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xE707A21E"
    },
    "93": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x867"
    },
    "97": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "99": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xEC81560F"
    },
    "104": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "105": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x88A"
    },
    "108": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "109": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "110": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF1A22DC2"
    },
    "115": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "116": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x89D"
    },
    "119": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "120": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "123": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "124": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xCF6ACD47"
    },
    "131": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7FA"
    },
    "135": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "137": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD5ABEB01"
    },
    "142": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "143": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x80D"
    },
    "146": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "147": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "148": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD8DF5DC1"
    },
    "153": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "154": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x81F"
    },
    "157": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "158": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "161": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "162": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "164": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA2F8E58C"
    },
    "169": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "170": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x785"
    },
    "173": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA457C2D7"
    },
    "180": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "181": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7B0"
    },
    "184": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "185": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "186": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "191": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7C3"
    },
    "195": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "196": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC5AB2241"
    },
    "202": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "203": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7D6"
    },
    "206": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "207": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "208": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC8DF245A"
    },
    "213": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "214": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7DF"
    },
    "217": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "218": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "219": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xCA58DA74"
    },
    "224": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "225": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7E7"
    },
    "228": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "229": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "232": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "233": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "234": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "235": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x87A30A28"
    },
    "240": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "241": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x156"
    },
    "244": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "245": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "246": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x96AFC450"
    },
    "251": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "252": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "256": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "257": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x96AFC450"
    },
    "262": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "263": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x715"
    },
    "266": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "267": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "268": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x97304CED"
    },
    "273": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "274": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x724"
    },
    "277": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "278": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "279": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x99439089"
    },
    "284": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "285": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x737"
    },
    "288": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "289": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "290": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA2CED9FF"
    },
    "295": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "296": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x762"
    },
    "299": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "300": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "303": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "304": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "305": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "306": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x87A30A28"
    },
    "311": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "312": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6F1"
    },
    "315": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "316": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "317": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8F029D5E"
    },
    "322": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "323": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x704"
    },
    "326": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "327": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "328": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x95D89B41"
    },
    "333": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "334": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x70D"
    },
    "337": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "338": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "341": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "342": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "343": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "344": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x507FFBA5"
    },
    "349": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "350": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x64F"
    },
    "353": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "354": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "355": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5A7F1A81"
    },
    "360": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "361": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x662"
    },
    "364": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "365": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "366": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6817DD5B"
    },
    "371": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "372": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x675"
    },
    "375": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "376": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "377": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "382": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "383": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x695"
    },
    "386": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "387": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "388": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x7879EC31"
    },
    "393": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "394": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6BE"
    },
    "397": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "398": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "399": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x83570395"
    },
    "404": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "405": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6D1"
    },
    "408": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "409": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "412": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "413": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "414": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "415": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x27764547"
    },
    "420": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "421": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25C"
    },
    "424": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "425": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "426": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x365B98B2"
    },
    "431": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "432": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x215"
    },
    "435": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "436": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "437": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4316E269"
    },
    "442": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "443": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EF"
    },
    "446": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "447": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "448": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4316E269"
    },
    "453": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "454": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x600"
    },
    "457": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "458": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "459": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x44C6957B"
    },
    "464": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "465": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x613"
    },
    "468": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "469": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "470": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4B759088"
    },
    "475": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "476": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x626"
    },
    "479": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "480": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "481": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x50355D76"
    },
    "486": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "487": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x646"
    },
    "490": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "491": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "494": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "495": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "496": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "497": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x365B98B2"
    },
    "502": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "503": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x579"
    },
    "506": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "507": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "508": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x378DC3DC"
    },
    "513": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "514": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5DB"
    },
    "517": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "518": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "519": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x39509351"
    },
    "524": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "525": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5ED"
    },
    "528": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "529": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "531": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "532": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "533": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "534": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "535": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x27764547"
    },
    "540": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "541": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x476"
    },
    "544": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "545": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "546": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x2A6BEBA8"
    },
    "551": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "552": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x496"
    },
    "555": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "556": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "557": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x2FABA6AE"
    },
    "562": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "563": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A9"
    },
    "566": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "567": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "568": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x313CE567"
    },
    "573": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "574": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4B2"
    },
    "577": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "578": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "579": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x32D40160"
    },
    "584": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "585": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C1"
    },
    "588": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "589": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "590": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x35AA2E44"
    },
    "595": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "596": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4EC"
    },
    "599": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "600": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "602": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "603": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "604": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "605": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "606": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x18160DDD"
    },
    "611": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "GT",
      "path": "9"
    },
    "612": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AE"
    },
    "615": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "616": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "617": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x18160DDD"
    },
    "622": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "623": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DA"
    },
    "626": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "627": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "628": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x18306EF6"
    },
    "633": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "634": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E2"
    },
    "637": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "638": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "639": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1FC40303"
    },
    "644": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "645": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x402"
    },
    "648": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "649": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "650": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1FE543E3"
    },
    "655": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "656": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x425"
    },
    "659": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "660": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "661": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x2130A16F"
    },
    "666": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "667": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x438"
    },
    "670": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "671": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "672": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x23B872DD"
    },
    "677": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "678": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x463"
    },
    "681": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "682": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "684": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "685": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "686": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "687": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "688": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x12DCCDD"
    },
    "693": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "694": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F6"
    },
    "697": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "698": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "699": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6FDDE03"
    },
    "704": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "705": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x329"
    },
    "708": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "709": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "710": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8AC5256"
    },
    "715": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "716": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x33E"
    },
    "719": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "720": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "721": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x95EA7B3"
    },
    "726": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "727": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x347"
    },
    "730": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "731": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "732": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC97CF81"
    },
    "737": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "738": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x36A"
    },
    "741": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "742": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "743": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x180AEDF3"
    },
    "748": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "EQ",
      "path": "9"
    },
    "749": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37F"
    },
    "752": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "753": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "754": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "756": {
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "DUP1",
      "path": "9"
    },
    "757": {
      "first_revert": true,
      "fn": null,
      "offset": [
        563,
        15419
      ],
      "op": "REVERT",
      "path": "9"
    },
    "758": {
      "offset": [
        3760,
        3806
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "759": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "762": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x304"
    },
    "765": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "766": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "768": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "771": {
      "fn": null,
      "jump": "i",
      "offset": [
        3760,
        3806
      ],
      "op": "JUMP",
      "path": "9"
    },
    "772": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "773": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAA"
    },
    "775": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "777": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "778": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "780": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "781": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "DUP2",
      "path": "9"
    },
    "782": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "783": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "785": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "786": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "787": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "788": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "DUP2",
      "path": "9"
    },
    "789": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "JUMP",
      "path": "9"
    },
    "790": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "791": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "793": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "794": {
      "op": "SWAP1"
    },
    "795": {
      "op": "DUP2"
    },
    "796": {
      "op": "MSTORE"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "799": {
      "op": "ADD"
    },
    "800": {
      "offset": [
        3760,
        3806
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "801": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "803": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "804": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "DUP1",
      "path": "9"
    },
    "805": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "806": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "SUB",
      "path": "9"
    },
    "807": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "808": {
      "fn": null,
      "offset": [
        3760,
        3806
      ],
      "op": "RETURN",
      "path": "9"
    },
    "809": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "810": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "813": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D9"
    },
    "816": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "817": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "818": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "820": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "821": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "824": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "825": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "826": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244E"
    },
    "829": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "830": {
      "offset": [
        1331,
        1359
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "831": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1331,
        1359
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "834": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1331,
        1359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9C"
    },
    "836": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1331,
        1359
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "837": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1331,
        1359
      ],
      "op": "DUP2",
      "path": "9"
    },
    "838": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        1331,
        1359
      ],
      "op": "JUMP",
      "path": "9"
    },
    "839": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "840": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35A"
    },
    "843": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x355"
    },
    "846": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "847": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "849": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2498"
    },
    "852": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "853": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "854": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96B"
    },
    "857": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "858": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "859": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "861": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "862": {
      "op": "SWAP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "873": {
      "op": "JUMP"
    },
    "874": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "875": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "878": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x378"
    },
    "881": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "882": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "884": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24D3"
    },
    "887": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMP",
      "path": "9"
    },
    "888": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "889": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x985"
    },
    "892": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMP",
      "path": "9"
    },
    "893": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "894": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "STOP",
      "path": "9"
    },
    "895": {
      "offset": [
        3416,
        3451
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "896": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B7"
    },
    "899": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x38D"
    },
    "902": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "903": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "905": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "908": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        3416,
        3451
      ],
      "op": "JUMP",
      "path": "9"
    },
    "909": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "910": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "912": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "914": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "915": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "917": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "918": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "DUP2",
      "path": "9"
    },
    "919": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "920": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "922": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "923": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "924": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "DUP1",
      "path": "9"
    },
    "925": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "926": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "928": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "DUP3",
      "path": "9"
    },
    "929": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "ADD",
      "path": "9"
    },
    "930": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "931": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "933": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "934": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "935": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "ADD",
      "path": "9"
    },
    "936": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "937": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "938": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "offset": [
        3416,
        3451
      ],
      "op": "AND",
      "path": "9"
    },
    "948": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "949": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "DUP4",
      "path": "9"
    },
    "950": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "JUMP",
      "path": "9"
    },
    "951": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "952": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "954": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "DUP1",
      "path": "9"
    },
    "955": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        3416,
        3451
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "956": {
      "op": "SWAP4"
    },
    "957": {
      "op": "DUP5"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "op": "SWAP1"
    },
    "968": {
      "op": "SWAP3"
    },
    "969": {
      "op": "AND"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "972": {
      "op": "DUP5"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "SWAP1"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "offset": [
        3416,
        3451
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x320"
    },
    "985": {
      "op": "JUMP"
    },
    "986": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "987": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x35"
    },
    "989": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "990": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x316"
    },
    "993": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "994": {
      "offset": [
        3977,
        4023
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "995": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "998": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3F0"
    },
    "1001": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1002": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1004": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1007": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "i",
      "offset": [
        3977,
        4023
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1008": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1009": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAE"
    },
    "1011": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1013": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1014": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1016": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1017": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1018": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1019": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1021": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1022": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1023": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1024": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1025": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3977,
        4023
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1026": {
      "offset": [
        4085,
        4129
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1027": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x35A"
    },
    "1030": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x410"
    },
    "1033": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1034": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1036": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1039": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "i",
      "offset": [
        4085,
        4129
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1040": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1041": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB0"
    },
    "1043": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1045": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1046": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1048": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1049": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1050": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1051": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1054": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1055": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1056": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1058": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "AND",
      "path": "9"
    },
    "1059": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1060": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        4085,
        4129
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1061": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1062": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37D"
    },
    "1065": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x433"
    },
    "1068": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1069": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1071": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2536"
    },
    "1074": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1075": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1076": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD1B"
    },
    "1079": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1080": {
      "offset": [
        3652,
        3703
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1081": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1084": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x446"
    },
    "1087": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1088": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1090": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E8"
    },
    "1093": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        3652,
        3703
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1094": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1095": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1096": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1097": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1099": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1100": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1101": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "ADD",
      "path": "9"
    },
    "1102": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1103": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "ADD",
      "path": "9"
    },
    "1104": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1105": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1106": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "1108": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1109": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1110": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1111": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1112": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "ADD",
      "path": "9"
    },
    "1113": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1114": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1115": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1116": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "ADD",
      "path": "9"
    },
    "1117": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1118": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1119": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1120": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1121": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1122": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        3652,
        3703
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1123": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1124": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35A"
    },
    "1127": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x471"
    },
    "1130": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1131": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1133": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267D"
    },
    "1136": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1137": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1138": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD69"
    },
    "1141": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1142": {
      "offset": [
        3538,
        3593
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1143": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1146": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x484"
    },
    "1149": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1150": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1152": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26B9"
    },
    "1155": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        3538,
        3593
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1156": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1157": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA6"
    },
    "1159": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1161": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1162": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1164": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1165": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1166": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1167": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1169": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1170": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1171": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1172": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1173": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        3538,
        3593
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1174": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1175": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "1178": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A4"
    },
    "1181": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1182": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1184": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26DB"
    },
    "1187": {
      "fn": "SmartNodes.updateJob",
      "jump": "i",
      "offset": [
        12138,
        12454
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1188": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1189": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD8D"
    },
    "1192": {
      "fn": "SmartNodes.updateJob",
      "jump": "i",
      "offset": [
        12138,
        12454
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1193": {
      "offset": [
        1232,
        1260
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1194": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        1232,
        1260
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1197": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        1232,
        1260
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x99"
    },
    "1199": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        1232,
        1260
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1200": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        1232,
        1260
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1201": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        1232,
        1260
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1202": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1203": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1205": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x320"
    },
    "1216": {
      "op": "JUMP"
    },
    "1217": {
      "offset": [
        3600,
        3646
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1218": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1221": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4CF"
    },
    "1224": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1225": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1227": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E8"
    },
    "1230": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        3600,
        3646
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1231": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1232": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1233": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1234": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1236": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1237": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1238": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "ADD",
      "path": "9"
    },
    "1239": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1240": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "ADD",
      "path": "9"
    },
    "1241": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1242": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1243": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA7"
    },
    "1245": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1246": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1247": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1248": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1249": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "ADD",
      "path": "9"
    },
    "1250": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1251": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1252": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1253": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "ADD",
      "path": "9"
    },
    "1254": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1255": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1256": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1257": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1258": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1259": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3600,
        3646
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1260": {
      "offset": [
        3316,
        3363
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1261": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x53F"
    },
    "1264": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4FA"
    },
    "1267": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1268": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1270": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1273": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        3316,
        3363
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1274": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1275": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA2"
    },
    "1277": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1279": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1280": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1282": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1283": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1284": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1285": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1287": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1288": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1289": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1290": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1291": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1293": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1294": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "ADD",
      "path": "9"
    },
    "1295": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1296": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1298": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1299": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "ADD",
      "path": "9"
    },
    "1300": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1301": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1303": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1304": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "ADD",
      "path": "9"
    },
    "1305": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1306": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1308": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1309": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1310": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "ADD",
      "path": "9"
    },
    "1311": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1312": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1313": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "SUB"
    },
    "1322": {
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1323": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1324": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "AND",
      "path": "9"
    },
    "1325": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1326": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1327": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1328": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1329": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1331": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1332": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1333": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "AND",
      "path": "9"
    },
    "1334": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1335": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "1338": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1339": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DIV",
      "path": "9"
    },
    "1340": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "AND",
      "path": "9"
    },
    "1341": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1342": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1343": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1344": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1347": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3316,
        3363
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1348": {
      "op": "SWAP7"
    },
    "1349": {
      "op": "DUP8"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "SUB"
    },
    "1359": {
      "op": "SWAP1"
    },
    "1360": {
      "op": "SWAP6"
    },
    "1361": {
      "op": "AND"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1364": {
      "op": "DUP8"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "op": "SWAP4"
    },
    "1368": {
      "op": "DUP6"
    },
    "1369": {
      "op": "ADD"
    },
    "1370": {
      "op": "SWAP3"
    },
    "1371": {
      "op": "SWAP1"
    },
    "1372": {
      "op": "SWAP3"
    },
    "1373": {
      "op": "MSTORE"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1376": {
      "op": "DUP5"
    },
    "1377": {
      "op": "ADD"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1381": {
      "op": "AND"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1384": {
      "op": "DUP4"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "MSTORE"
    },
    "1387": {
      "op": "ISZERO"
    },
    "1388": {
      "op": "ISZERO"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "offset": [
        3316,
        3363
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x320"
    },
    "1400": {
      "op": "JUMP"
    },
    "1401": {
      "offset": [
        3273,
        3310
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1402": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5B5"
    },
    "1405": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x587"
    },
    "1408": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1409": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1411": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1414": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        3273,
        3310
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1415": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1416": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA1"
    },
    "1418": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1420": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1421": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1423": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1424": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1425": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1426": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1428": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1429": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1430": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1431": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1432": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1434": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1435": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1436": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "ADD",
      "path": "9"
    },
    "1437": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "op": "SUB"
    },
    "1446": {
      "offset": [
        3273,
        3310
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1447": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "AND",
      "path": "9"
    },
    "1448": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "offset": [
        3273,
        3310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1455": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "DIV",
      "path": "9"
    },
    "1456": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1458": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "AND",
      "path": "9"
    },
    "1459": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1460": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1461": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1462": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1464": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1465": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3273,
        3310
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1466": {
      "op": "SWAP4"
    },
    "1467": {
      "op": "DUP5"
    },
    "1468": {
      "op": "MSTORE"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "op": "SWAP3"
    },
    "1479": {
      "op": "AND"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1482": {
      "op": "DUP5"
    },
    "1483": {
      "op": "ADD"
    },
    "1484": {
      "op": "MSTORE"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1487": {
      "op": "AND"
    },
    "1488": {
      "op": "SWAP1"
    },
    "1489": {
      "op": "DUP3"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "offset": [
        3273,
        3310
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x320"
    },
    "1498": {
      "op": "JUMP"
    },
    "1499": {
      "offset": [
        673,
        726
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1500": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        673,
        726
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1503": {
      "offset": [
        713,
        726
      ],
      "op": "PUSH11",
      "path": "9",
      "value": "0x84595161401484A000000"
    },
    "1515": {
      "offset": [
        673,
        726
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1516": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        673,
        726
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1517": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1518": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35A"
    },
    "1521": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FB"
    },
    "1524": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1525": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1527": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2498"
    },
    "1530": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1531": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1532": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE79"
    },
    "1535": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1536": {
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1537": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x331"
    },
    "1540": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x60E"
    },
    "1543": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1544": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1546": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1549": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1550": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1551": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEB8"
    },
    "1554": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1555": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1556": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "1559": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x621"
    },
    "1562": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1563": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1565": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2710"
    },
    "1568": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1569": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1570": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF52"
    },
    "1573": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1574": {
      "offset": [
        3482,
        3532
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1575": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1578": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x634"
    },
    "1581": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1582": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1584": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26B9"
    },
    "1587": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        3482,
        3532
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1588": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1589": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA5"
    },
    "1591": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1593": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1594": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1596": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1597": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1598": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1599": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1601": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1602": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1603": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1604": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1605": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        3482,
        3532
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1606": {
      "offset": [
        1266,
        1291
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1607": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1266,
        1291
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1610": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1266,
        1291
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9A"
    },
    "1612": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1266,
        1291
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1613": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1266,
        1291
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1614": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1266,
        1291
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1615": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1616": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "1619": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x65D"
    },
    "1622": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1623": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1625": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E8"
    },
    "1628": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        5129,
        5646
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1629": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1630": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x110B"
    },
    "1633": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        5129,
        5646
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1634": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1635": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "1638": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x670"
    },
    "1641": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1642": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1644": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2736"
    },
    "1647": {
      "fn": "SmartNodes.updateWorker",
      "jump": "i",
      "offset": [
        12460,
        12812
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1648": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1649": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1236"
    },
    "1652": {
      "fn": "SmartNodes.updateWorker",
      "jump": "i",
      "offset": [
        12460,
        12812
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1653": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1654": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x688"
    },
    "1657": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x683"
    },
    "1660": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1661": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1663": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1666": {
      "fn": "SmartNodes.getJobValidators",
      "jump": "i",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1667": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1668": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1323"
    },
    "1671": {
      "fn": "SmartNodes.getJobValidators",
      "jump": "i",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1672": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1673": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1675": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1676": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x320"
    },
    "1679": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1680": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1681": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2762"
    },
    "1684": {
      "fn": "SmartNodes.getJobValidators",
      "jump": "i",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1685": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1686": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x316"
    },
    "1689": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A3"
    },
    "1692": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1693": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1695": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B9"
    },
    "1698": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1699": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "op": "SUB"
    },
    "1708": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "1709": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1711": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1713": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1714": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "1716": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1718": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1719": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1722": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1723": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1724": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1725": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1726": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1727": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "1730": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6CC"
    },
    "1733": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1734": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1736": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x27A6"
    },
    "1739": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        4375,
        5034
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1740": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1741": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1421"
    },
    "1744": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        4375,
        5034
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1745": {
      "offset": [
        3812,
        3863
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1746": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1749": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6DF"
    },
    "1752": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1753": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1755": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1758": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        3812,
        3863
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1759": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1760": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAB"
    },
    "1762": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1764": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1765": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1767": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1768": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1769": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1770": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1772": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1773": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1774": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1775": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1776": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3812,
        3863
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1777": {
      "offset": [
        3926,
        3971
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1778": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x331"
    },
    "1781": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6FF"
    },
    "1784": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1785": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1787": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1790": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        3926,
        3971
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1791": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1792": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15CA"
    },
    "1795": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        3926,
        3971
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1796": {
      "offset": [
        1193,
        1226
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1797": {
      "fn": "SmartNodes.initialize",
      "offset": [
        1193,
        1226
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1800": {
      "fn": "SmartNodes.initialize",
      "offset": [
        1193,
        1226
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x98"
    },
    "1802": {
      "fn": "SmartNodes.initialize",
      "offset": [
        1193,
        1226
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1803": {
      "fn": "SmartNodes.initialize",
      "offset": [
        1193,
        1226
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1804": {
      "fn": "SmartNodes.initialize",
      "offset": [
        1193,
        1226
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1805": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1806": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x331"
    },
    "1809": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15E3"
    },
    "1812": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1813": {
      "offset": [
        787,
        830
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1814": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        787,
        830
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1817": {
      "offset": [
        826,
        830
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x6F05B59D3B200000"
    },
    "1826": {
      "offset": [
        787,
        830
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1827": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        787,
        830
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1828": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1829": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "1832": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x732"
    },
    "1835": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1836": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1838": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1841": {
      "fn": "SmartNodes.mintTokens",
      "jump": "i",
      "offset": [
        14717,
        14969
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1842": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1843": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15F2"
    },
    "1846": {
      "fn": "SmartNodes.mintTokens",
      "jump": "i",
      "offset": [
        14717,
        14969
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1847": {
      "offset": [
        1111,
        1143
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1848": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x97"
    },
    "1850": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1851": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x74A"
    },
    "1854": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "op": "SUB"
    },
    "1863": {
      "offset": [
        1111,
        1143
      ],
      "op": "AND",
      "path": "9"
    },
    "1864": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1865": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1866": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1867": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1869": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        1111,
        1143
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "op": "SWAP1"
    },
    "1879": {
      "op": "SWAP2"
    },
    "1880": {
      "op": "AND"
    },
    "1881": {
      "op": "DUP2"
    },
    "1882": {
      "op": "MSTORE"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "offset": [
        1111,
        1143
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x320"
    },
    "1889": {
      "op": "JUMP"
    },
    "1890": {
      "offset": [
        4135,
        4178
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1891": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x35A"
    },
    "1894": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x770"
    },
    "1897": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1898": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1900": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "1903": {
      "fn": "SmartNodes.mintTokens",
      "jump": "i",
      "offset": [
        4135,
        4178
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1904": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1905": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB1"
    },
    "1907": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1909": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1910": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1912": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1913": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1914": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1915": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1917": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1918": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1919": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1920": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1922": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "AND",
      "path": "9"
    },
    "1923": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1924": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        4135,
        4178
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1925": {
      "offset": [
        3709,
        3754
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1926": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "1929": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x793"
    },
    "1932": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1933": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1935": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E8"
    },
    "1938": {
      "fn": "SmartNodes.mintTokens",
      "jump": "i",
      "offset": [
        3709,
        3754
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1939": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1940": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1941": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1942": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1944": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1945": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1946": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1947": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1948": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1949": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1950": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1951": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA9"
    },
    "1953": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1954": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1955": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1956": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1957": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1958": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1959": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1960": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1961": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "ADD",
      "path": "9"
    },
    "1962": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1963": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1964": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1965": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1966": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1967": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        3709,
        3754
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1968": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1969": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35A"
    },
    "1972": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BE"
    },
    "1975": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1976": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1978": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2498"
    },
    "1981": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1982": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1983": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1675"
    },
    "1986": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1987": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1988": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35A"
    },
    "1991": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D1"
    },
    "1994": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1995": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1997": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2498"
    },
    "2000": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2001": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2002": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1707"
    },
    "2005": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2006": {
      "offset": [
        1297,
        1325
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2007": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1297,
        1325
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "2010": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1297,
        1325
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9B"
    },
    "2012": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1297,
        1325
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2013": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1297,
        1325
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2014": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1297,
        1325
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2015": {
      "offset": [
        978,
        1013
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2016": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        978,
        1013
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "2019": {
      "offset": [
        1012,
        1013
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2021": {
      "offset": [
        978,
        1013
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2022": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        978,
        1013
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2023": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2024": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "2027": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7F5"
    },
    "2030": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "2031": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2033": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2736"
    },
    "2036": {
      "fn": "SmartNodes.updateValidator",
      "jump": "i",
      "offset": [
        11762,
        12132
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2037": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2038": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1715"
    },
    "2041": {
      "fn": "SmartNodes.updateValidator",
      "jump": "i",
      "offset": [
        11762,
        12132
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2042": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2043": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "2046": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x808"
    },
    "2049": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "2050": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2052": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25E8"
    },
    "2055": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        5771,
        6781
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2056": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2057": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17FA"
    },
    "2060": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        5771,
        6781
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2061": {
      "offset": [
        732,
        781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2062": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        732,
        781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "2065": {
      "offset": [
        768,
        781
      ],
      "op": "PUSH11",
      "path": "9",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "2077": {
      "offset": [
        732,
        781
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2078": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        732,
        781
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2079": {
      "offset": [
        887,
        928
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2080": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        887,
        928
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x316"
    },
    "2083": {
      "offset": [
        924,
        928
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x4563918244F40000"
    },
    "2092": {
      "offset": [
        887,
        928
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2093": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        887,
        928
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2094": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2095": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x316"
    },
    "2098": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83C"
    },
    "2101": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2102": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2104": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27FA"
    },
    "2107": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2108": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2115": {
      "op": "SHL"
    },
    "2116": {
      "op": "SUB"
    },
    "2117": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 3
    },
    "2118": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2119": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "2120": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2122": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2123": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2124": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2125": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "2127": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2129": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2130": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2131": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2132": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2134": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2135": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2136": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2137": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2138": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2139": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2140": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "2141": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2142": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2143": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2144": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2145": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2146": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2147": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2148": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2149": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2150": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2151": {
      "offset": [
        4030,
        4079
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2152": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x35A"
    },
    "2155": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x875"
    },
    "2158": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "2159": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2161": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "2164": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4030,
        4079
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2165": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2166": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAF"
    },
    "2168": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2170": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2171": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2173": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2174": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2175": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2176": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2178": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2179": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2180": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2181": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2183": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "AND",
      "path": "9"
    },
    "2184": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2185": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4030,
        4079
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2186": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2187": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x37D"
    },
    "2190": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x898"
    },
    "2193": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "2194": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2196": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2710"
    },
    "2199": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        12899,
        13490
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2200": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2201": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A65"
    },
    "2204": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        12899,
        13490
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2205": {
      "offset": [
        3369,
        3410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2206": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5B5"
    },
    "2209": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8AB"
    },
    "2212": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "2213": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2215": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2411"
    },
    "2218": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        3369,
        3410
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2219": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2220": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA3"
    },
    "2222": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2224": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2225": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2227": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2228": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2229": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2230": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2232": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2233": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2234": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2235": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2236": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2238": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2239": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2240": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "ADD",
      "path": "9"
    },
    "2241": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "op": "SUB"
    },
    "2250": {
      "offset": [
        3369,
        3410
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2251": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "AND",
      "path": "9"
    },
    "2252": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2257": {
      "op": "SHL"
    },
    "2258": {
      "offset": [
        3369,
        3410
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2259": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "DIV",
      "path": "9"
    },
    "2260": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2262": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "AND",
      "path": "9"
    },
    "2263": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2264": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        3369,
        3410
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2265": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2266": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2268": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x36"
    },
    "2270": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2271": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2272": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E8"
    },
    "2275": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2276": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2824"
    },
    "2279": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2280": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2281": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2282": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2284": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2285": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2287": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2288": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2289": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "2290": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "2291": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2293": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2294": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2296": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2297": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2298": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2299": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2300": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2302": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2303": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2304": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2305": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2306": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2307": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2308": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2309": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2310": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2312": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2313": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2314": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2315": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2316": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x914"
    },
    "2319": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2320": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2824"
    },
    "2323": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2324": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2325": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2326": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2327": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x961"
    },
    "2330": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2331": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2332": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2334": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "1"
    },
    "2335": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x936"
    },
    "2338": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2339": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2342": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2343": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2344": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2345": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "2346": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "2347": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2348": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2349": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2350": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2352": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2353": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2354": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x961"
    },
    "2357": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2358": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2359": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2360": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2361": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2362": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2363": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2365": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2366": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2368": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2370": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2371": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2372": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2373": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2374": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2375": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2376": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2377": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2378": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2380": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2381": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2382": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2384": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2385": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2386": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2387": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "1"
    },
    "2388": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x944"
    },
    "2391": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2392": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2393": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2394": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "1"
    },
    "2395": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2397": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "1"
    },
    "2398": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2399": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "2400": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2401": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2402": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2403": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2404": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2405": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2406": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2407": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2408": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "2409": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2410": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2411": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2412": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2414": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 5
    },
    "2415": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x979"
    },
    "2418": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2419": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2420": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2421": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C18"
    },
    "2424": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2425": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2426": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "2428": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2429": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "2430": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "2431": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2432": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2433": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2434": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "2435": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "2436": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2437": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2438": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6920,
        6930
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2439": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6890,
        6901
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2441": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2442": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2443": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2444": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6919
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA5"
    },
    "2446": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2448": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2449": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2451": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2452": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2453": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2454": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6904,
        6931
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2455": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6949,
        6957
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 8
    },
    "2456": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6949,
        6957
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2457": {
      "branch": 114,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6949,
        6957
      ],
      "op": "SUB",
      "path": "9"
    },
    "2458": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9E1"
    },
    "2461": {
      "branch": 114,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2462": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2464": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2471": {
      "op": "SHL"
    },
    "2472": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2473": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2476": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2478": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2479": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "ADD",
      "path": "9"
    },
    "2480": {
      "op": "MSTORE"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2485": {
      "op": "DUP3"
    },
    "2486": {
      "op": "ADD"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "PUSH20",
      "value": "0x2AB9B2B9103737BA103932B3B4B9BA32B932B217"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2511": {
      "op": "SHL"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2514": {
      "op": "DUP3"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2521": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2523": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2524": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2525": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2526": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "SUB",
      "path": "9"
    },
    "2527": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2528": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "2529": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6941,
        6982
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2530": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7011,
        7012
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x0"
    },
    "2532": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7000,
        7008
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2533": {
      "branch": 115,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7000,
        7012
      ],
      "op": "GT",
      "path": "9"
    },
    "2534": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA31"
    },
    "2537": {
      "branch": 115,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2538": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2540": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2547": {
      "op": "SHL"
    },
    "2548": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2549": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2552": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2554": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2555": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "ADD",
      "path": "9"
    },
    "2556": {
      "op": "MSTORE"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2561": {
      "op": "DUP3"
    },
    "2562": {
      "op": "ADD"
    },
    "2563": {
      "op": "MSTORE"
    },
    "2564": {
      "op": "PUSH32",
      "value": "0x4361706163697479206D7573742062652067726561746572207A65726F2E0000"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2599": {
      "op": "DUP3"
    },
    "2600": {
      "op": "ADD"
    },
    "2601": {
      "op": "MSTORE"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2604": {
      "op": "ADD"
    },
    "2605": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "2608": {
      "op": "JUMP"
    },
    "2609": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6992,
        7047
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2610": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 10,
      "value": "0x0"
    },
    "2612": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2613": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2614": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2615": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7077
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB0"
    },
    "2617": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2619": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2620": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2622": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2623": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2624": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2625": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2627": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7082
      ],
      "op": "AND",
      "path": "9"
    },
    "2628": {
      "branch": 116,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7065,
        7091
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2629": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA90"
    },
    "2632": {
      "branch": 116,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2633": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2635": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2644": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2647": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2649": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2650": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "ADD",
      "path": "9"
    },
    "2651": {
      "op": "MSTORE"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2656": {
      "op": "DUP3"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "op": "PUSH32",
      "value": "0x557365722068617320616E20616374697665206A6F622E000000000000000000"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2694": {
      "op": "DUP3"
    },
    "2695": {
      "op": "ADD"
    },
    "2696": {
      "op": "MSTORE"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2699": {
      "op": "ADD"
    },
    "2700": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "2703": {
      "op": "JUMP"
    },
    "2704": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7057,
        7119
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2705": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7157,
        7158
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 11,
      "value": "0x0"
    },
    "2707": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2708": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2709": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2710": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7148
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAA"
    },
    "2712": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2714": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2715": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2717": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2718": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2719": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7153
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2720": {
      "branch": 117,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7137,
        7158
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2721": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7129,
        7159
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAA9"
    },
    "2724": {
      "branch": 117,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7129,
        7159
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2725": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7129,
        7159
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2727": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7129,
        7159
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2728": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7129,
        7159
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2729": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7129,
        7159
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2730": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7204,
        7205
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 12,
      "value": "0x0"
    },
    "2732": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7201
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2733": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7205
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2735": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7205
      ],
      "op": "AND",
      "path": "9"
    },
    "2736": {
      "branch": 118,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7205
      ],
      "op": "GT",
      "path": "9"
    },
    "2737": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7236
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2738": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7236
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2739": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7236
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAC0"
    },
    "2742": {
      "branch": 118,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7236
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2743": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7236
      ],
      "op": "POP",
      "path": "9"
    },
    "2744": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7223,
        7236
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9C"
    },
    "2746": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7223,
        7236
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2747": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7209,
        7220
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2748": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7209,
        7236
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2750": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7209,
        7236
      ],
      "op": "AND",
      "path": "9"
    },
    "2751": {
      "branch": 119,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7209,
        7236
      ],
      "op": "LT",
      "path": "9"
    },
    "2752": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7190,
        7236
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2753": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB0C"
    },
    "2756": {
      "branch": 119,
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2757": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2759": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2768": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2771": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2773": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2774": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "ADD",
      "path": "9"
    },
    "2775": {
      "op": "MSTORE"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2780": {
      "op": "DUP3"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH32",
      "value": "0x496E76616C69642076616C696461746F7220636F756E742E0000000000000000"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2818": {
      "op": "DUP3"
    },
    "2819": {
      "op": "ADD"
    },
    "2820": {
      "op": "MSTORE"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2823": {
      "op": "ADD"
    },
    "2824": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "2827": {
      "op": "JUMP"
    },
    "2828": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7169,
        7286
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2829": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7387
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "2831": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7387
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2832": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7420,
        7429
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9E"
    },
    "2834": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7420,
        7429
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2835": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9D"
    },
    "2837": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7443,
        7459
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2838": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9F"
    },
    "2840": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2841": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2843": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2844": {
      "op": "PUSH4",
      "value": "0x5D3B1D3"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2853": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2854": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2856": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2857": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "ADD",
      "path": "9"
    },
    "2858": {
      "op": "SWAP4"
    },
    "2859": {
      "op": "SWAP1"
    },
    "2860": {
      "op": "SWAP4"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2871": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7443,
        7459
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2872": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7443,
        7459
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2873": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7443,
        7459
      ],
      "op": "AND",
      "path": "9"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2876": {
      "op": "DUP4"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "op": "MSTORE"
    },
    "2879": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x100000000"
    },
    "2885": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2886": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "DIV",
      "path": "9"
    },
    "2887": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFFFF"
    },
    "2890": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7473,
        7493
      ],
      "op": "AND",
      "path": "9"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2893": {
      "op": "DUP4"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "op": "MSTORE"
    },
    "2896": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7507,
        7523
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2901": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7507,
        7523
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2902": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7507,
        7523
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2903": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7507,
        7523
      ],
      "op": "AND",
      "path": "9"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2906": {
      "op": "DUP5"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "op": "MSTORE"
    },
    "2909": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7537,
        7545
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x1000000000000"
    },
    "2917": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7537,
        7545
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2918": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7537,
        7545
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2919": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7537,
        7545
      ],
      "op": "DIV",
      "path": "9"
    },
    "2920": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7537,
        7545
      ],
      "op": "AND",
      "path": "9"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2923": {
      "op": "DUP3"
    },
    "2924": {
      "op": "ADD"
    },
    "2925": {
      "op": "MSTORE"
    },
    "2926": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7356,
        7373
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2928": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7356,
        7373
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7387
      ],
      "op": "AND",
      "path": "9"
    },
    "2938": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7387
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2939": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7406
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5D3B1D30"
    },
    "2944": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7406
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2947": {
      "op": "ADD"
    },
    "2948": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2950": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2952": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2953": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2954": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2955": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "SUB",
      "path": "9"
    },
    "2956": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2957": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2959": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2960": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "GAS",
      "path": "9"
    },
    "2961": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "CALL",
      "path": "9"
    },
    "2962": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2963": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2964": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2965": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBA2"
    },
    "2968": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2969": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2970": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2972": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2973": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "2974": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2975": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2977": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2978": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2979": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "POP",
      "path": "9"
    },
    "2980": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "POP",
      "path": "9"
    },
    "2981": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "POP",
      "path": "9"
    },
    "2982": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "POP",
      "path": "9"
    },
    "2983": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2985": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2986": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2987": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2989": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "NOT",
      "path": "9"
    },
    "2990": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2992": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2993": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "ADD",
      "path": "9"
    },
    "2994": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "AND",
      "path": "9"
    },
    "2995": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2996": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "ADD",
      "path": "9"
    },
    "2997": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2998": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3000": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3001": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "POP",
      "path": "9"
    },
    "3002": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3003": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "ADD",
      "path": "9"
    },
    "3004": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3005": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBC6"
    },
    "3008": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3009": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3010": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x285E"
    },
    "3013": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        7376,
        7555
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3014": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7376,
        7555
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3015": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7585,
        7595
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x9A"
    },
    "3017": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7585,
        7595
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3018": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7585,
        7595
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3019": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3021": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3022": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3023": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3024": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7577
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAA"
    },
    "3026": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3028": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3029": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3030": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3031": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3033": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3034": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3035": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7582
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3036": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7595
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3037": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7595
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3038": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7566,
        7595
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3039": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "DUP6",
      "path": "9",
      "statement": 14
    },
    "3040": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3041": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3042": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7621
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAB"
    },
    "3044": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3045": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3046": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3047": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3048": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7632
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3049": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7645
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3050": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7645
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3051": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7605,
        7645
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3052": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "SWAP3",
      "path": "9",
      "statement": 15
    },
    "3053": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3054": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3055": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7666
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB1"
    },
    "3057": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3058": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3059": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3060": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3061": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7678
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3062": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7686
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3063": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7686
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3066": {
      "op": "NOT"
    },
    "3067": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7686
      ],
      "op": "AND",
      "path": "9"
    },
    "3068": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7686
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3069": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7686
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3070": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7708,
        7718
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 16
    },
    "3071": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7708,
        7718
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3072": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3073": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3074": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAE"
    },
    "3076": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3077": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3078": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3079": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3080": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3081": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7719
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3082": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7725
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3083": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7725
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3084": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7696,
        7725
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3085": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 17
    },
    "3086": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3087": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3089": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3090": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3091": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3092": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3093": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7821,
        7831
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3094": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7821,
        7831
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3095": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3096": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3097": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7852,
        7862
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3098": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3099": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3100": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3101": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3102": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3103": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3104": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3105": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3106": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3107": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7356,
        7555
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3108": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7356,
        7555
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "3112": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3113": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3114": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7655,
        7686
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "3116": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3117": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "AND",
      "path": "9"
    },
    "3118": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3127": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3128": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "GT",
      "path": "9"
    },
    "3129": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3130": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC45"
    },
    "3133": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3134": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC45"
    },
    "3137": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24EF"
    },
    "3140": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        7922,
        7948
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3141": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3142": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3144": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3145": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3146": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3147": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3148": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3149": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3150": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3152": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "MUL",
      "path": "9"
    },
    "3153": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3155": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "ADD",
      "path": "9"
    },
    "3156": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3157": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "ADD",
      "path": "9"
    },
    "3158": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3160": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3161": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3162": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3163": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC6E"
    },
    "3166": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3167": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3168": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3170": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "ADD",
      "path": "9"
    },
    "3171": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3173": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3174": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "MUL",
      "path": "9"
    },
    "3175": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3176": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "3177": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3178": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "CALLDATACOPY",
      "path": "9"
    },
    "3179": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "ADD",
      "path": "9"
    },
    "3180": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3181": {
      "op": "POP"
    },
    "3182": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7922,
        7948
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3183": {
      "op": "POP"
    },
    "3184": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3185": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7799,
        7959
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3186": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7785,
        7795
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9A"
    },
    "3188": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7785,
        7795
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3189": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3191": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3192": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3193": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3194": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7784
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "3196": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3198": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3199": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3200": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3201": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3203": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3204": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3205": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3206": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7796
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3207": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3208": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3209": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3210": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3211": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3212": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3213": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3214": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3215": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3217": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3218": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3219": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3220": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3227": {
      "op": "SHL"
    },
    "3228": {
      "op": "SUB"
    },
    "3229": {
      "op": "NOT"
    },
    "3230": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "AND",
      "path": "9"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "SUB"
    },
    "3239": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3240": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3241": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "AND",
      "path": "9"
    },
    "3242": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3243": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3244": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3245": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "OR",
      "path": "9"
    },
    "3246": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3247": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3248": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3249": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3250": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3251": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3252": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3254": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3255": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3256": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3257": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "3259": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3260": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3261": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3262": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3263": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3264": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCCF"
    },
    "3267": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3268": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3270": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3271": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3272": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3273": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "ADD",
      "path": "9"
    },
    "3274": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3275": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x23B1"
    },
    "3278": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        7780,
        7959
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3279": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7780,
        7959
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3280": {
      "op": "POP"
    },
    "3281": {
      "op": "POP"
    },
    "3282": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7988,
        7998
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 18,
      "value": "0x9A"
    },
    "3284": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7988,
        7998
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3285": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3287": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3288": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7988,
        7998
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3289": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7988,
        7998
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xDBD9082204763B590F250A641C459B7B94D813CD5B0937D3F77E5E393BFCF32F"
    },
    "3324": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3325": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3327": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3328": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7975,
        7999
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3329": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8019
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 19,
      "value": "0x9A"
    },
    "3331": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3332": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3333": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3334": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8019
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3336": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD10"
    },
    "3339": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3340": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x288D"
    },
    "3343": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        8009,
        8021
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3344": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3345": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3346": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3347": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "POP",
      "path": "9"
    },
    "3348": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3349": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        8009,
        8021
      ],
      "op": "POP",
      "path": "9"
    },
    "3350": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6880,
        8028
      ],
      "op": "POP",
      "path": "9"
    },
    "3351": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6880,
        8028
      ],
      "op": "POP",
      "path": "9"
    },
    "3352": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "POP",
      "path": "9"
    },
    "3353": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6814,
        8028
      ],
      "op": "POP",
      "path": "9"
    },
    "3354": {
      "fn": "SmartNodes.requestJob",
      "jump": "o",
      "offset": [
        6814,
        8028
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3355": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3356": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8192,
        8206
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x65"
    },
    "3358": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8192,
        8206
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "SUB"
    },
    "3367": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8192,
        8206
      ],
      "op": "AND",
      "path": "7"
    },
    "3368": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8178,
        8188
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3369": {
      "branch": 154,
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8178,
        8206
      ],
      "op": "EQ",
      "path": "7"
    },
    "3370": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8174,
        8283
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD5B"
    },
    "3373": {
      "branch": 154,
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8174,
        8283
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3374": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8261,
        8275
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x65"
    },
    "3376": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8261,
        8275
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3377": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3379": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3380": {
      "op": "PUSH4",
      "value": "0x73E64FD"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3387": {
      "op": "SHL"
    },
    "3388": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3389": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3390": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8249,
        8259
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3391": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3393": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3394": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "ADD",
      "path": "7"
    },
    "3395": {
      "op": "MSTORE"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "op": "SUB"
    },
    "3404": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8261,
        8275
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3405": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8261,
        8275
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3406": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8261,
        8275
      ],
      "op": "AND",
      "path": "7"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3409": {
      "op": "DUP3"
    },
    "3410": {
      "op": "ADD"
    },
    "3411": {
      "op": "MSTORE"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8223,
        8276
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D8"
    },
    "3418": {
      "op": "JUMP"
    },
    "3419": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8174,
        8283
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3420": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8288,
        8330
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 21,
      "value": "0xD65"
    },
    "3423": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8307,
        8316
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3424": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8318,
        8329
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3425": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8288,
        8306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3C"
    },
    "3428": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        8288,
        8330
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3429": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8288,
        8330
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3430": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "POP",
      "path": "7"
    },
    "3431": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "POP",
      "path": "7"
    },
    "3432": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3433": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3434": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3436": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3437": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0xD77"
    },
    "3440": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3441": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3442": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3443": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F5C"
    },
    "3446": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3447": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3448": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 23,
      "value": "0xD82"
    },
    "3451": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3452": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3453": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3454": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FE8"
    },
    "3457": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3458": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3459": {
      "op": "POP"
    },
    "3460": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x1"
    },
    "3462": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3463": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "POP"
    },
    "3468": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3469": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3470": {
      "offset": [
        4263,
        4280
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x97"
    },
    "3472": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4263,
        4280
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3479": {
      "op": "SHL"
    },
    "3480": {
      "op": "SUB"
    },
    "3481": {
      "offset": [
        4263,
        4280
      ],
      "op": "AND",
      "path": "9"
    },
    "3482": {
      "offset": [
        4249,
        4259
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3483": {
      "offset": [
        4249,
        4280
      ],
      "op": "EQ",
      "path": "9"
    },
    "3484": {
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDB7"
    },
    "3487": {
      "offset": [
        4228,
        4351
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3488": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3490": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3497": {
      "op": "SHL"
    },
    "3498": {
      "offset": [
        4228,
        4351
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3499": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3500": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3502": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "ADD",
      "path": "9"
    },
    "3503": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "3506": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3507": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28A6"
    },
    "3510": {
      "fn": "SmartNodes.updateJob",
      "jump": "i",
      "offset": [
        4228,
        4351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3511": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        4228,
        4351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3512": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12256,
        12261
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 25
    },
    "3513": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12265,
        12266
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3515": {
      "branch": 120,
      "fn": "SmartNodes.updateJob",
      "offset": [
        12256,
        12266
      ],
      "op": "SUB",
      "path": "9"
    },
    "3516": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDF8"
    },
    "3519": {
      "branch": 120,
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3520": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3522": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3529": {
      "op": "SHL"
    },
    "3530": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3531": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3534": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3536": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3537": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "ADD",
      "path": "9"
    },
    "3538": {
      "op": "MSTORE"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3543": {
      "op": "DUP3"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "PUSH14",
      "value": "0x125B9D985B1A59081A9BD8881251"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3563": {
      "op": "SHL"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3566": {
      "op": "DUP3"
    },
    "3567": {
      "op": "ADD"
    },
    "3568": {
      "op": "MSTORE"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "3575": {
      "op": "JUMP"
    },
    "3576": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12248,
        12285
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3577": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 26,
      "value": "0x0"
    },
    "3579": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3580": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3581": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3582": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12307
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB1"
    },
    "3584": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3586": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3587": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3589": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3590": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12314
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3591": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3592": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3595": {
      "op": "NOT"
    },
    "3596": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "AND",
      "path": "9"
    },
    "3597": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3598": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3599": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3600": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3601": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3602": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3603": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3604": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "OR",
      "path": "9"
    },
    "3605": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3606": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3607": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12296,
        12323
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3608": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12334,
        12448
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE4A"
    },
    "3611": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12334,
        12448
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3612": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 27,
      "value": "0x40"
    },
    "3614": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3615": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12376,
        12381
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3616": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12376,
        12381
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3617": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x7E2409EB03FE1E2EA93ADD34AD736F8CDDC41FFDC3C5875587B3E40AB490996A"
    },
    "3650": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3651": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3653": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3654": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12365,
        12382
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3655": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "POP",
      "path": "7"
    },
    "3656": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "POP",
      "path": "7"
    },
    "3657": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3658": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12334,
        12448
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3659": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 28,
      "value": "0x40"
    },
    "3661": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3662": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12431,
        12436
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3663": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12431,
        12436
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3664": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929"
    },
    "3697": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3698": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3700": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3701": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12418,
        12437
      ],
      "op": "LOG2",
      "path": "9"
    },
    "3702": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "POP",
      "path": "9"
    },
    "3703": {
      "fn": "SmartNodes.updateJob",
      "offset": [
        12138,
        12454
      ],
      "op": "POP",
      "path": "9"
    },
    "3704": {
      "fn": "SmartNodes.updateJob",
      "jump": "o",
      "offset": [
        12138,
        12454
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3705": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3706": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3707": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3709": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 29
    },
    "3710": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3711": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3712": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "3714": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3716": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3717": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3718": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3719": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3721": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3722": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3723": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3733": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "1"
    },
    "3734": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3735": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3736": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3737": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3738": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3739": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3740": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3741": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3742": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3743": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3744": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3745": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x979"
    },
    "3748": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3749": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3750": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3751": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3752": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3753": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEB3"
    },
    "3756": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3757": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3758": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3759": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F3"
    },
    "3762": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3763": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3764": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C18"
    },
    "3767": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3768": {
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3769": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAC"
    },
    "3771": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3773": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3774": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3776": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3777": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3778": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3779": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3781": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3782": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3783": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3784": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3785": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED1"
    },
    "3788": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3789": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2824"
    },
    "3792": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3793": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3794": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3795": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3797": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3798": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3800": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3801": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3802": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DIV",
      "path": "9"
    },
    "3803": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MUL",
      "path": "9"
    },
    "3804": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3806": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3807": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3809": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3810": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3811": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3812": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3813": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3815": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3816": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3817": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3818": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3819": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3820": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3821": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3822": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3823": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3825": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3826": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3827": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3828": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3829": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEFD"
    },
    "3832": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3833": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2824"
    },
    "3836": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3837": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3838": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3839": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3840": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF4A"
    },
    "3843": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3844": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3845": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3847": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "LT",
      "path": "9"
    },
    "3848": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF1F"
    },
    "3851": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3852": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "3855": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3856": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3857": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3858": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DIV",
      "path": "9"
    },
    "3859": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MUL",
      "path": "9"
    },
    "3860": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3861": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3862": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3863": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3865": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3866": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3867": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF4A"
    },
    "3870": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3871": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3872": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3873": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3874": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3875": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3876": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3878": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3879": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3881": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3883": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3884": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3885": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3886": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3887": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3888": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3889": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3890": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3891": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3893": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3894": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3895": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3897": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3898": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3899": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3900": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "GT",
      "path": "9"
    },
    "3901": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF2D"
    },
    "3904": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3905": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3906": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3907": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SUB",
      "path": "9"
    },
    "3908": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "3910": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "AND",
      "path": "9"
    },
    "3911": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3912": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "ADD",
      "path": "9"
    },
    "3913": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3914": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3915": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "POP",
      "path": "9"
    },
    "3916": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "POP",
      "path": "9"
    },
    "3917": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "POP",
      "path": "9"
    },
    "3918": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "POP",
      "path": "9"
    },
    "3919": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "POP",
      "path": "9"
    },
    "3920": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        3870,
        3920
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3921": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "o",
      "offset": [
        3870,
        3920
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3922": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3923": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13595,
        13605
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3924": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13552,
        13571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3926": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3927": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3928": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3929": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13594
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA6"
    },
    "3931": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3933": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3934": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3935": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3936": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3938": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3939": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3940": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3941": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13574,
        13606
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3942": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3943": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3944": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3945": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13656
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA2"
    },
    "3947": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3948": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3949": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3950": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3951": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3952": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13646,
        13669
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3953": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13698,
        13714
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 30,
      "value": "0x2"
    },
    "3955": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13698,
        13714
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3956": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13698,
        13714
      ],
      "op": "ADD",
      "path": "9"
    },
    "3957": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13698,
        13714
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3958": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13688,
        13714
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3963": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13688,
        13714
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3964": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13688,
        13714
      ],
      "op": "AND",
      "path": "9"
    },
    "3965": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13688,
        13714
      ],
      "op": "GT",
      "path": "9"
    },
    "3966": {
      "branch": 121,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13688,
        13714
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3967": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFCA"
    },
    "3970": {
      "branch": 121,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3971": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3973": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3982": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3985": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3987": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3988": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "ADD",
      "path": "9"
    },
    "3989": {
      "op": "MSTORE"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4032": {
      "op": "DUP3"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "op": "MSTORE"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4037": {
      "op": "ADD"
    },
    "4038": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4041": {
      "op": "JUMP"
    },
    "4042": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13680,
        13749
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4043": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13776,
        13777
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 31,
      "value": "0x0"
    },
    "4045": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13767,
        13773
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4046": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13767,
        13777
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4051": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13767,
        13777
      ],
      "op": "AND",
      "path": "9"
    },
    "4052": {
      "branch": 122,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13767,
        13777
      ],
      "op": "GT",
      "path": "9"
    },
    "4053": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFF0"
    },
    "4056": {
      "branch": 122,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4057": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4059": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4066": {
      "op": "SHL"
    },
    "4067": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4068": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4069": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4071": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "ADD",
      "path": "9"
    },
    "4072": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4075": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4076": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2906"
    },
    "4079": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        13759,
        13815
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4080": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13759,
        13815
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4081": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13901,
        13910
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4082": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13901,
        13921
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "4084": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13901,
        13921
      ],
      "op": "ADD",
      "path": "9"
    },
    "4085": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13901,
        13921
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4086": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13925,
        13926
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4088": {
      "branch": 123,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13901,
        13926
      ],
      "op": "SUB",
      "path": "9"
    },
    "4089": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13897,
        14585
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x104A"
    },
    "4092": {
      "branch": 123,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13897,
        14585
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4093": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13965,
        13988
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 32,
      "value": "0x1008"
    },
    "4096": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13965,
        13980
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "4097": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13983,
        13988
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC4E0"
    },
    "4100": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13965,
        13988
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28F3"
    },
    "4103": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        13965,
        13988
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4104": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13965,
        13988
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4105": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13942,
        13962
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "4107": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13942,
        13962
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4108": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13942,
        13962
      ],
      "op": "ADD",
      "path": "9"
    },
    "4109": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13942,
        13988
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4110": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13942,
        13988
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4111": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13942,
        13988
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4112": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 33,
      "value": "0x40"
    },
    "4114": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4115": {
      "op": "SWAP1"
    },
    "4116": {
      "op": "DUP2"
    },
    "4117": {
      "op": "MSTORE"
    },
    "4118": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14050,
        14060
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4119": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14050,
        14060
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4120": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "4153": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4158": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4160": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4161": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4162": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4163": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "SUB",
      "path": "9"
    },
    "4164": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4165": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14034,
        14083
      ],
      "op": "LOG2",
      "path": "9"
    },
    "4166": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13542,
        14591
      ],
      "op": "POP",
      "path": "9"
    },
    "4167": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13542,
        14591
      ],
      "op": "POP",
      "path": "9"
    },
    "4168": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "POP",
      "path": "9"
    },
    "4169": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "o",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4170": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13897,
        14585
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4171": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14263,
        14272
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 34
    },
    "4172": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14263,
        14283
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "4174": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14263,
        14283
      ],
      "op": "ADD",
      "path": "9"
    },
    "4175": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14263,
        14283
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4176": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14244,
        14259
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "4177": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14244,
        14283
      ],
      "op": "LT",
      "path": "9"
    },
    "4178": {
      "branch": 124,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14244,
        14283
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4179": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x109E"
    },
    "4182": {
      "branch": 124,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4183": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4185": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4192": {
      "op": "SHL"
    },
    "4193": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4194": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4197": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4199": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4200": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "ADD",
      "path": "9"
    },
    "4201": {
      "op": "MSTORE"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "ADD"
    },
    "4208": {
      "op": "MSTORE"
    },
    "4209": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4244": {
      "op": "DUP3"
    },
    "4245": {
      "op": "ADD"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4253": {
      "op": "JUMP"
    },
    "4254": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14219,
        14341
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4255": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14376,
        14382
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 35
    },
    "4256": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4261": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "AND",
      "path": "9"
    },
    "4262": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14365
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4263": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "4265": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14372
      ],
      "op": "ADD",
      "path": "9"
    },
    "4266": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4268": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4269": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4270": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4271": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10B8"
    },
    "4274": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4275": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4276": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2947"
    },
    "4279": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        14356,
        14382
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4280": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4281": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4282": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4283": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14356,
        14382
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4284": {
      "op": "POP"
    },
    "4285": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14421
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 36,
      "value": "0x10CE"
    },
    "4288": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14421
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4289": {
      "op": "POP"
    },
    "4290": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14402,
        14412
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4291": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14421
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4296": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14421
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4297": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14421
      ],
      "op": "AND",
      "path": "9"
    },
    "4298": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14401
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21B6"
    },
    "4301": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        14396,
        14421
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4302": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14396,
        14421
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4303": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14488,
        14522
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 37,
      "value": "0x40"
    },
    "4305": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14488,
        14522
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4306": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4311": {
      "op": "DUP5"
    },
    "4312": {
      "op": "AND"
    },
    "4313": {
      "op": "DUP2"
    },
    "4314": {
      "op": "MSTORE"
    },
    "4315": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14503,
        14513
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4316": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14503,
        14513
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4317": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14488,
        14522
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "4350": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14488,
        14522
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4353": {
      "op": "ADD"
    },
    "4354": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        14488,
        14522
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x103D"
    },
    "4357": {
      "op": "JUMP"
    },
    "4358": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13897,
        14585
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4359": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13542,
        14591
      ],
      "op": "POP",
      "path": "9"
    },
    "4360": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13542,
        14591
      ],
      "op": "POP",
      "path": "9"
    },
    "4361": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "POP",
      "path": "9"
    },
    "4362": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "o",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4363": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4364": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5273,
        5283
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 38
    },
    "4365": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4367": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4368": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4369": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4370": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5272
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA5"
    },
    "4372": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4374": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4375": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4377": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4378": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4379": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5284
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4380": {
      "branch": 125,
      "fn": "SmartNodes.createUser",
      "offset": [
        5257,
        5289
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4381": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1168"
    },
    "4384": {
      "branch": 125,
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4385": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4387": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4394": {
      "op": "SHL"
    },
    "4395": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4396": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4399": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4401": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4402": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "ADD",
      "path": "9"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4408": {
      "op": "DUP3"
    },
    "4409": {
      "op": "ADD"
    },
    "4410": {
      "op": "MSTORE"
    },
    "4411": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "MSTORE"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4455": {
      "op": "JUMP"
    },
    "4456": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5249,
        5318
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4457": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 39,
      "value": "0x40"
    },
    "4459": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4460": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4461": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "4463": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4464": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "ADD",
      "path": "9"
    },
    "4465": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4466": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4467": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5375,
        5388
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x99"
    },
    "4469": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5375,
        5388
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4470": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5375,
        5388
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4471": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4472": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4473": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4474": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5415,
        5425
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4475": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4477": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4478": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4479": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "ADD",
      "path": "9"
    },
    "4480": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4481": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4482": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4485": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP7",
      "path": "9"
    },
    "4486": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP9",
      "path": "9"
    },
    "4487": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "ADD",
      "path": "9"
    },
    "4488": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4489": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4490": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4491": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4492": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4493": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4494": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5334
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA1"
    },
    "4496": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4497": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4498": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4499": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4500": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5349
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4501": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4502": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4503": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4504": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4505": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4506": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4507": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4509": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4510": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4511": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "ADD",
      "path": "9"
    },
    "4512": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4513": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4514": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4515": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4516": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5352,
        5463
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4518": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "AND",
      "path": "9"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4523": {
      "op": "SHL"
    },
    "4524": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "MUL",
      "path": "9"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4531": {
      "op": "SHL"
    },
    "4532": {
      "op": "SUB"
    },
    "4533": {
      "op": "NOT"
    },
    "4534": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4535": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "4536": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "AND",
      "path": "9"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4543": {
      "op": "SHL"
    },
    "4544": {
      "op": "SUB"
    },
    "4545": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "4546": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4547": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "4548": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "AND",
      "path": "9"
    },
    "4549": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4550": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4551": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4552": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "OR",
      "path": "9"
    },
    "4553": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4554": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4555": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4556": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "OR",
      "path": "9"
    },
    "4557": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4558": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4559": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5329,
        5463
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4560": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5504,
        5517
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 40
    },
    "4561": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5504,
        5517
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4562": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4563": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4564": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4565": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5489
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA5"
    },
    "4567": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4568": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4569": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4570": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4571": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4572": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4573": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5501
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4574": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5517
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4575": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5517
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4576": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5474,
        5517
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4577": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 41
    },
    "4578": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4579": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5539
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA7"
    },
    "4581": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5539
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4582": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11F0"
    },
    "4585": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4586": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5540,
        5549
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4587": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5540,
        5549
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4588": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x295A"
    },
    "4591": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        5527,
        5550
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4592": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4593": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4594": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4595": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4596": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4598": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4599": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4600": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4602": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4603": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4604": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4605": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SUB",
      "path": "9"
    },
    "4606": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4607": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "ADD",
      "path": "9"
    },
    "4608": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4609": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5550
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4610": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5566
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4611": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5566
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4612": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5566
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4613": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5527,
        5566
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4614": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5588,
        5601
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 42,
      "value": "0x99"
    },
    "4616": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5588,
        5601
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4617": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4619": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4620": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4621": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4622": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5587
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAD"
    },
    "4624": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4625": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4626": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4627": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4628": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5614
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x121D"
    },
    "4631": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5605,
        5614
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4632": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5602
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4633": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5614
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C6"
    },
    "4636": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        5576,
        5614
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4637": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5576,
        5614
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 43,
      "value": "0x99"
    },
    "4641": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4642": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4643": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4644": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5637
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4646": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x122E"
    },
    "4649": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4650": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x288D"
    },
    "4653": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        5624,
        5639
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4654": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4655": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4656": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4657": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "POP",
      "path": "9"
    },
    "4658": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4659": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5624,
        5639
      ],
      "op": "POP",
      "path": "9"
    },
    "4660": {
      "fn": "SmartNodes.createUser",
      "offset": [
        5129,
        5646
      ],
      "op": "POP",
      "path": "9"
    },
    "4661": {
      "fn": "SmartNodes.createUser",
      "jump": "o",
      "offset": [
        5129,
        5646
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4662": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12460,
        12812
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4663": {
      "offset": [
        4263,
        4280
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x97"
    },
    "4665": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4263,
        4280
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4672": {
      "op": "SHL"
    },
    "4673": {
      "op": "SUB"
    },
    "4674": {
      "offset": [
        4263,
        4280
      ],
      "op": "AND",
      "path": "9"
    },
    "4675": {
      "offset": [
        4249,
        4259
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4676": {
      "offset": [
        4249,
        4280
      ],
      "op": "EQ",
      "path": "9"
    },
    "4677": {
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1260"
    },
    "4680": {
      "offset": [
        4228,
        4351
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4681": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4683": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4690": {
      "op": "SHL"
    },
    "4691": {
      "offset": [
        4228,
        4351
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4692": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4693": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4695": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "ADD",
      "path": "9"
    },
    "4696": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4699": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4700": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28A6"
    },
    "4703": {
      "fn": "SmartNodes.updateWorker",
      "jump": "i",
      "offset": [
        4228,
        4351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4704": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        4228,
        4351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4705": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12592,
        12600
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 44
    },
    "4706": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12604,
        12605
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4708": {
      "branch": 126,
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12592,
        12605
      ],
      "op": "SUB",
      "path": "9"
    },
    "4709": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12A4"
    },
    "4712": {
      "branch": 126,
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4713": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4715": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4722": {
      "op": "SHL"
    },
    "4723": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4724": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4727": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4729": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4730": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "ADD",
      "path": "9"
    },
    "4731": {
      "op": "MSTORE"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4736": {
      "op": "DUP3"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "MSTORE"
    },
    "4739": {
      "op": "PUSH17",
      "value": "0x125B9D985B1A59081DDBDC9AD95C881251"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4759": {
      "op": "SHL"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4762": {
      "op": "DUP3"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "op": "MSTORE"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4767": {
      "op": "ADD"
    },
    "4768": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4771": {
      "op": "JUMP"
    },
    "4772": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12584,
        12627
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4773": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12697,
        12700
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 45,
      "value": "0x64"
    },
    "4775": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12680,
        12693
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4776": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12680,
        12700
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4778": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12680,
        12700
      ],
      "op": "AND",
      "path": "9"
    },
    "4779": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12680,
        12700
      ],
      "op": "GT",
      "path": "9"
    },
    "4780": {
      "branch": 127,
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12680,
        12700
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4781": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12F3"
    },
    "4784": {
      "branch": 127,
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4785": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4787": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4794": {
      "op": "SHL"
    },
    "4795": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4796": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4799": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4801": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4802": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "ADD",
      "path": "9"
    },
    "4803": {
      "op": "MSTORE"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4808": {
      "op": "DUP3"
    },
    "4809": {
      "op": "ADD"
    },
    "4810": {
      "op": "MSTORE"
    },
    "4811": {
      "op": "PUSH24",
      "value": "0x496E76616C69642072657075746174696F6E2076616C7565"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4841": {
      "op": "DUP3"
    },
    "4842": {
      "op": "ADD"
    },
    "4843": {
      "op": "MSTORE"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4846": {
      "op": "ADD"
    },
    "4847": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4850": {
      "op": "JUMP"
    },
    "4851": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12637,
        12750
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4852": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 46,
      "value": "0x0"
    },
    "4854": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4855": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4856": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4857": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12768
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA3"
    },
    "4859": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4861": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4862": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4864": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4865": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4866": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12778
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4867": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12789
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4869": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12789
      ],
      "op": "ADD",
      "path": "9"
    },
    "4870": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4871": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4872": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4874": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4875": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4876": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "AND",
      "path": "9"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4881": {
      "op": "SHL"
    },
    "4882": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "MUL",
      "path": "9"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4887": {
      "op": "SHL"
    },
    "4888": {
      "op": "NOT"
    },
    "4889": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4890": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4891": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "AND",
      "path": "9"
    },
    "4892": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4893": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4894": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4895": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "OR",
      "path": "9"
    },
    "4896": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4897": {
      "fn": "SmartNodes.updateWorker",
      "offset": [
        12761,
        12805
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4898": {
      "fn": "SmartNodes.updateWorker",
      "jump": "o",
      "offset": [
        12460,
        12812
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4899": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4900": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15124,
        15140
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "4902": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15168,
        15178
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 47,
      "value": "0x9A"
    },
    "4904": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15168,
        15178
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4905": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15160,
        15165
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4906": {
      "branch": 128,
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15160,
        15178
      ],
      "op": "LT",
      "path": "9"
    },
    "4907": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1367"
    },
    "4910": {
      "branch": 128,
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4911": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4913": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4920": {
      "op": "SHL"
    },
    "4921": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4922": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4925": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4927": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4928": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "ADD",
      "path": "9"
    },
    "4929": {
      "op": "MSTORE"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4934": {
      "op": "DUP3"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "MSTORE"
    },
    "4937": {
      "op": "PUSH14",
      "value": "0x125B9D985B1A59081A9BD8881251"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4957": {
      "op": "DUP3"
    },
    "4958": {
      "op": "ADD"
    },
    "4959": {
      "op": "MSTORE"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4962": {
      "op": "ADD"
    },
    "4963": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "4966": {
      "op": "JUMP"
    },
    "4967": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15152,
        15197
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4968": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4970": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4971": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4972": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4973": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15215
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "4975": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4977": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4978": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4980": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4981": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15222
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4982": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15225
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4983": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15234
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4984": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15234
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4985": {
      "branch": 129,
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15211,
        15234
      ],
      "op": "SUB",
      "path": "9"
    },
    "4986": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15207,
        15411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13E3"
    },
    "4989": {
      "branch": 129,
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15207,
        15411
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4990": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15282
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4992": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4993": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4994": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4995": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15289
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "4997": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4999": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5000": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5001": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5002": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5004": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5005": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5006": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15296
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5007": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "5009": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5010": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5011": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5012": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5013": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5014": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5015": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5016": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MUL",
      "path": "9"
    },
    "5017": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5018": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5019": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5020": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5021": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5022": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5023": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5024": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5025": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5026": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5027": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5028": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5029": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5030": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15309
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5031": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5032": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5033": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5034": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15285,
        15309
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5035": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5036": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5037": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5038": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13D6"
    },
    "5041": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5042": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5044": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MUL",
      "path": "9"
    },
    "5045": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5046": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5047": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5048": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5049": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5051": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5052": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5054": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5056": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5057": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5058": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5059": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5060": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5061": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5062": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5063": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5065": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5066": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5067": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5069": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "ADD",
      "path": "9"
    },
    "5070": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5071": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5072": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5073": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "GT",
      "path": "9"
    },
    "5074": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13C2"
    },
    "5077": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5078": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5079": {
      "op": "POP"
    },
    "5080": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5081": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15250,
        15309
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "5082": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "op": "POP"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "op": "POP"
    },
    "5087": {
      "op": "POP"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "POP"
    },
    "5090": {
      "fn": "SmartNodes.getJobValidators",
      "jump": "o",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5091": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15207,
        15411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5092": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 48,
      "value": "0x40"
    },
    "5094": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5095": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5101": {
      "op": "SHL"
    },
    "5102": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5103": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5106": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5108": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5109": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "ADD",
      "path": "9"
    },
    "5110": {
      "op": "MSTORE"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5115": {
      "op": "DUP3"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "op": "MSTORE"
    },
    "5118": {
      "op": "PUSH14",
      "value": "0x4A6F62206E6F7420666F756E6421"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5135": {
      "op": "SHL"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5138": {
      "op": "DUP3"
    },
    "5139": {
      "op": "ADD"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5143": {
      "op": "ADD"
    },
    "5144": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15376,
        15400
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "5147": {
      "op": "JUMP"
    },
    "5148": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15207,
        15411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5149": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5150": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5151": {
      "fn": "SmartNodes.getJobValidators",
      "offset": [
        15046,
        15417
      ],
      "op": "POP",
      "path": "9"
    },
    "5152": {
      "fn": "SmartNodes.getJobValidators",
      "jump": "o",
      "offset": [
        15046,
        15417
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5153": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5154": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5156": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5157": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5160": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5161": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "0"
    },
    "5162": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5164": {
      "branch": 151,
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "0"
    },
    "5165": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143C"
    },
    "5168": {
      "branch": 151,
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5169": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5171": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5172": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5174": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "0"
    },
    "5175": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5176": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1440"
    },
    "5179": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5180": {
      "branch": 152,
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5181": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 49
    },
    "5182": {
      "op": "EXTCODESIZE"
    },
    "5183": {
      "op": "ISZERO"
    },
    "5184": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5185": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A3"
    },
    "5188": {
      "branch": 152,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5189": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5191": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5198": {
      "op": "SHL"
    },
    "5199": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5200": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5203": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5205": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5206": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "0"
    },
    "5207": {
      "op": "MSTORE"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5212": {
      "op": "DUP3"
    },
    "5213": {
      "op": "ADD"
    },
    "5214": {
      "op": "MSTORE"
    },
    "5215": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5250": {
      "op": "DUP3"
    },
    "5251": {
      "op": "ADD"
    },
    "5252": {
      "op": "MSTORE"
    },
    "5253": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5270": {
      "op": "SHL"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5273": {
      "op": "DUP3"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "op": "MSTORE"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5278": {
      "op": "ADD"
    },
    "5279": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D8"
    },
    "5282": {
      "op": "JUMP"
    },
    "5283": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5284": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5286": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5287": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5290": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5291": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "0"
    },
    "5292": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5294": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "0"
    },
    "5295": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5296": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5297": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5298": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C5"
    },
    "5301": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5302": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5304": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5305": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5309": {
      "op": "NOT"
    },
    "5310": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "0"
    },
    "5311": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "5314": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "0"
    },
    "5315": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5316": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5317": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5318": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 50,
      "value": "0x150D"
    },
    "5321": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5323": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5324": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5325": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5327": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "ADD",
      "path": "9"
    },
    "5328": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5330": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5331": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5332": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "5334": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5335": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5336": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5338": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "ADD",
      "path": "9"
    },
    "5339": {
      "op": "PUSH11",
      "value": "0x536D617274204E6F646573"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5353": {
      "op": "SHL"
    },
    "5354": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5355": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5356": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "POP",
      "path": "9"
    },
    "5357": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5359": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5360": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5361": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5363": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "ADD",
      "path": "9"
    },
    "5364": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5366": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5367": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5368": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "5370": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5371": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5372": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5374": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "ADD",
      "path": "9"
    },
    "5375": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5381": {
      "op": "SHL"
    },
    "5382": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5383": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5384": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "POP",
      "path": "9"
    },
    "5385": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4543
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2295"
    },
    "5388": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        4531,
        4565
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5389": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4531,
        4565
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5390": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4575,
        4616
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 51,
      "value": "0x1516"
    },
    "5393": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4600,
        4615
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5394": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4575,
        4599
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x22C6"
    },
    "5397": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        4575,
        4616
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5398": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4575,
        4616
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5399": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4637
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 52,
      "value": "0xA0"
    },
    "5401": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5402": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5409": {
      "op": "SHL"
    },
    "5410": {
      "op": "SUB"
    },
    "5411": {
      "op": "NOT"
    },
    "5412": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5413": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5414": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "AND",
      "path": "9"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5421": {
      "op": "SHL"
    },
    "5422": {
      "op": "SUB"
    },
    "5423": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "DUP7",
      "path": "9"
    },
    "5424": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5425": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "AND",
      "path": "9"
    },
    "5426": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5427": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5428": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "OR",
      "path": "9"
    },
    "5429": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5430": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5431": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4626,
        4682
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5432": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4783
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 53,
      "value": "0x97"
    },
    "5434": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5435": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5436": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5437": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5438": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "AND",
      "path": "9"
    },
    "5439": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5440": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "DUP8",
      "path": "9"
    },
    "5441": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "AND",
      "path": "9"
    },
    "5442": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5443": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5444": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5445": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "OR",
      "path": "9"
    },
    "5446": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5447": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4766,
        4804
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5450": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4814,
        4832
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 54,
      "value": "0x98"
    },
    "5452": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4814,
        4836
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5453": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4814,
        4836
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5454": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4814,
        4836
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5455": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4860
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 55,
      "value": "0x9F"
    },
    "5457": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5458": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5459": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xFFFF0000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFF"
    },
    "5492": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "AND",
      "path": "9"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5497": {
      "op": "SHL"
    },
    "5498": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5499": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5500": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "MUL",
      "path": "9"
    },
    "5501": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5502": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5503": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5504": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "OR",
      "path": "9"
    },
    "5505": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5506": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5507": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4846,
        4878
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5508": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4904
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 56,
      "value": "0x9D"
    },
    "5510": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5511": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5512": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5521": {
      "op": "NOT"
    },
    "5522": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "AND",
      "path": "9"
    },
    "5523": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5532": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5533": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "AND",
      "path": "9"
    },
    "5534": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "OR",
      "path": "9"
    },
    "5535": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5536": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4888,
        4922
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5537": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4932,
        4945
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 57,
      "value": "0x99"
    },
    "5539": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4932,
        4949
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5540": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4932,
        4949
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5541": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4932,
        4949
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5542": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4959,
        4969
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 58,
      "value": "0x9A"
    },
    "5544": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4959,
        4973
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5545": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4959,
        4973
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5546": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4959,
        4973
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5547": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4983,
        4996
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 59,
      "value": "0x9B"
    },
    "5549": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4983,
        5000
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5552": {
      "fn": "SmartNodes.initialize",
      "offset": [
        5010,
        5023
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 60,
      "value": "0x9C"
    },
    "5554": {
      "fn": "SmartNodes.initialize",
      "offset": [
        5010,
        5027
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5555": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5556": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5557": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C4"
    },
    "5560": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5561": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5563": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5564": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5565": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5568": {
      "op": "NOT"
    },
    "5569": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "5570": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5571": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5572": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5573": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "0"
    },
    "5574": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "POP",
      "path": "9"
    },
    "5575": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "POP",
      "path": "9"
    },
    "5576": {
      "fn": "SmartNodes.initialize",
      "offset": [
        4375,
        5034
      ],
      "op": "POP",
      "path": "9"
    },
    "5577": {
      "fn": "SmartNodes.initialize",
      "jump": "o",
      "offset": [
        4375,
        5034
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5578": {
      "offset": [
        3926,
        3971
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5579": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAD"
    },
    "5581": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5583": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5584": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5586": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5587": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5588": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5589": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5591": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5592": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5593": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5594": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5595": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xED1"
    },
    "5598": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5599": {
      "fn": "SmartNodes.initialize",
      "offset": [
        3926,
        3971
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2824"
    },
    "5602": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        3926,
        3971
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5603": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5604": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "5606": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 61,
      "value": "0x37"
    },
    "5608": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5609": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5610": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E8"
    },
    "5613": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5614": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2824"
    },
    "5617": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5618": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5619": {
      "offset": [
        768,
        781
      ],
      "op": "PUSH11",
      "path": "9",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "5631": {
      "offset": [
        826,
        830
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x6F05B59D3B200000"
    },
    "5640": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14806
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 62,
      "value": "0x1610"
    },
    "5643": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "5645": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5646": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5647": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5648": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14806
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5649": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14821
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x161A"
    },
    "5652": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14821
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5653": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14821
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5654": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14821
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28F3"
    },
    "5657": {
      "fn": "SmartNodes.mintTokens",
      "jump": "i",
      "offset": [
        14793,
        14821
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5658": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14821
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5659": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14834
      ],
      "op": "GT",
      "path": "9"
    },
    "5660": {
      "branch": 130,
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14793,
        14834
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5661": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1668"
    },
    "5664": {
      "branch": 130,
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5665": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5667": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5674": {
      "op": "SHL"
    },
    "5675": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5676": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5679": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5681": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5682": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "ADD",
      "path": "9"
    },
    "5683": {
      "op": "MSTORE"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5688": {
      "op": "DUP3"
    },
    "5689": {
      "op": "ADD"
    },
    "5690": {
      "op": "MSTORE"
    },
    "5691": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D20737570706C79207265616368656421000000000000000000"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5726": {
      "op": "DUP3"
    },
    "5727": {
      "op": "ADD"
    },
    "5728": {
      "op": "MSTORE"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5731": {
      "op": "ADD"
    },
    "5732": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "5735": {
      "op": "JUMP"
    },
    "5736": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14772,
        14883
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5737": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14937,
        14962
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 63,
      "value": "0x1672"
    },
    "5740": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14943,
        14953
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5741": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14955,
        14961
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5742": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14937,
        14942
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21B6"
    },
    "5745": {
      "fn": "SmartNodes.mintTokens",
      "jump": "i",
      "offset": [
        14937,
        14962
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5746": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14937,
        14962
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5747": {
      "fn": "SmartNodes.mintTokens",
      "offset": [
        14717,
        14969
      ],
      "op": "POP",
      "path": "9"
    },
    "5748": {
      "fn": "SmartNodes.mintTokens",
      "jump": "o",
      "offset": [
        14717,
        14969
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5749": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5750": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5751": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5753": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5754": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5755": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5756": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "5758": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5760": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5761": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5762": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5763": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5765": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5766": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5767": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5774": {
      "op": "SHL"
    },
    "5775": {
      "op": "SUB"
    },
    "5776": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5777": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "1"
    },
    "5778": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5779": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5780": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5781": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5782": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5783": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5784": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5785": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5786": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5787": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5788": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5789": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 64
    },
    "5790": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5791": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "1"
    },
    "5792": {
      "branch": 142,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5793": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16FA"
    },
    "5796": {
      "branch": 142,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5797": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5799": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5806": {
      "op": "SHL"
    },
    "5807": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5808": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5811": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5813": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5814": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "1"
    },
    "5815": {
      "op": "MSTORE"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5820": {
      "op": "DUP3"
    },
    "5821": {
      "op": "ADD"
    },
    "5822": {
      "op": "MSTORE"
    },
    "5823": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5858": {
      "op": "DUP3"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5869": {
      "op": "SHL"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5872": {
      "op": "DUP3"
    },
    "5873": {
      "op": "ADD"
    },
    "5874": {
      "op": "MSTORE"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5877": {
      "op": "ADD"
    },
    "5878": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "5881": {
      "op": "JUMP"
    },
    "5882": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5883": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 65,
      "value": "0xD82"
    },
    "5886": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5887": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5888": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5889": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5890": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "1"
    },
    "5891": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C18"
    },
    "5894": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5895": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5896": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5898": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5899": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 66,
      "value": "0x979"
    },
    "5902": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5903": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5904": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5905": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FE8"
    },
    "5908": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5909": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11762,
        12132
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5910": {
      "offset": [
        4263,
        4280
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x97"
    },
    "5912": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4263,
        4280
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5919": {
      "op": "SHL"
    },
    "5920": {
      "op": "SUB"
    },
    "5921": {
      "offset": [
        4263,
        4280
      ],
      "op": "AND",
      "path": "9"
    },
    "5922": {
      "offset": [
        4249,
        4259
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5923": {
      "offset": [
        4249,
        4280
      ],
      "op": "EQ",
      "path": "9"
    },
    "5924": {
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x173F"
    },
    "5927": {
      "offset": [
        4228,
        4351
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5928": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5930": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5937": {
      "op": "SHL"
    },
    "5938": {
      "offset": [
        4228,
        4351
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5939": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5940": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5942": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "ADD",
      "path": "9"
    },
    "5943": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "5946": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5947": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28A6"
    },
    "5950": {
      "fn": "SmartNodes.updateValidator",
      "jump": "i",
      "offset": [
        4228,
        4351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5951": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        4228,
        4351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5952": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11900,
        11911
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 67
    },
    "5953": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11915,
        11916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5955": {
      "branch": 131,
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11900,
        11916
      ],
      "op": "SUB",
      "path": "9"
    },
    "5956": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1786"
    },
    "5959": {
      "branch": 131,
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5960": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5962": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5969": {
      "op": "SHL"
    },
    "5970": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5971": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5974": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5976": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5977": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "ADD",
      "path": "9"
    },
    "5978": {
      "op": "MSTORE"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5983": {
      "op": "DUP3"
    },
    "5984": {
      "op": "ADD"
    },
    "5985": {
      "op": "MSTORE"
    },
    "5986": {
      "op": "PUSH20",
      "value": "0x125B9D985B1A59081D985B1A59185D1BDC881251"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6012": {
      "op": "DUP3"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "op": "MSTORE"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6017": {
      "op": "ADD"
    },
    "6018": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6021": {
      "op": "JUMP"
    },
    "6022": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11892,
        11941
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6023": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12011,
        12014
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 68,
      "value": "0x64"
    },
    "6025": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11994,
        12007
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6026": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11994,
        12014
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "6028": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11994,
        12014
      ],
      "op": "AND",
      "path": "9"
    },
    "6029": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11994,
        12014
      ],
      "op": "GT",
      "path": "9"
    },
    "6030": {
      "branch": 132,
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11994,
        12014
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6031": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17D5"
    },
    "6034": {
      "branch": 132,
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6035": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6037": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6044": {
      "op": "SHL"
    },
    "6045": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6046": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6049": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6051": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6052": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "ADD",
      "path": "9"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6058": {
      "op": "DUP3"
    },
    "6059": {
      "op": "ADD"
    },
    "6060": {
      "op": "MSTORE"
    },
    "6061": {
      "op": "PUSH24",
      "value": "0x496E76616C69642072657075746174696F6E2076616C7565"
    },
    "6086": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6088": {
      "op": "SHL"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6091": {
      "op": "DUP3"
    },
    "6092": {
      "op": "ADD"
    },
    "6093": {
      "op": "MSTORE"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6100": {
      "op": "JUMP"
    },
    "6101": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        11951,
        12064
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6102": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 69,
      "value": "0x0"
    },
    "6104": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6105": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6106": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6107": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12085
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA2"
    },
    "6109": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6111": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6112": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6114": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6115": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6116": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12098
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6117": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12109
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6119": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12109
      ],
      "op": "ADD",
      "path": "9"
    },
    "6120": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6121": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6124": {
      "op": "NOT"
    },
    "6125": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "AND",
      "path": "9"
    },
    "6126": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "6128": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6129": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6130": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "AND",
      "path": "9"
    },
    "6131": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6132": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6133": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6134": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "OR",
      "path": "9"
    },
    "6135": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6136": {
      "fn": "SmartNodes.updateValidator",
      "offset": [
        12075,
        12125
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6137": {
      "fn": "SmartNodes.updateValidator",
      "jump": "o",
      "offset": [
        11762,
        12132
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6138": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6139": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5882,
        5892
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 70
    },
    "6140": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6142": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6143": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6144": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6145": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5881
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA6"
    },
    "6147": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6149": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6150": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6152": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6153": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6154": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5893
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6155": {
      "branch": 133,
      "fn": "SmartNodes.createValidator",
      "offset": [
        5861,
        5898
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6156": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1870"
    },
    "6159": {
      "branch": 133,
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6160": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6162": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6169": {
      "op": "SHL"
    },
    "6170": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6171": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6174": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6176": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6177": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "ADD",
      "path": "9"
    },
    "6178": {
      "op": "MSTORE"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6183": {
      "op": "DUP3"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "MSTORE"
    },
    "6186": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220776974682074686973207075626C69634B6579486173"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6221": {
      "op": "DUP3"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "op": "MSTORE"
    },
    "6224": {
      "op": "PUSH16",
      "value": "0x6820616C726561647920657869737473"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6243": {
      "op": "SHL"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6246": {
      "op": "DUP3"
    },
    "6247": {
      "op": "ADD"
    },
    "6248": {
      "op": "MSTORE"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6251": {
      "op": "ADD"
    },
    "6252": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6255": {
      "op": "JUMP"
    },
    "6256": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5840,
        5972
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6257": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6014,
        6024
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 71
    },
    "6258": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6260": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6261": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6262": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6263": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "6265": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6267": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6268": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6270": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6271": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6272": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6273": {
      "offset": [
        924,
        928
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x4563918244F40000"
    },
    "6282": {
      "op": "GT"
    },
    "6283": {
      "branch": 134,
      "fn": "SmartNodes.createValidator",
      "offset": [
        6004,
        6039
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6284": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18D7"
    },
    "6287": {
      "branch": 134,
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6288": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6290": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6297": {
      "op": "SHL"
    },
    "6298": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6299": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6302": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6304": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6305": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "ADD",
      "path": "9"
    },
    "6306": {
      "op": "MSTORE"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6311": {
      "op": "DUP3"
    },
    "6312": {
      "op": "ADD"
    },
    "6313": {
      "op": "MSTORE"
    },
    "6314": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6349": {
      "op": "DUP3"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "MSTORE"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6354": {
      "op": "ADD"
    },
    "6355": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6358": {
      "op": "JUMP"
    },
    "6359": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5983,
        6092
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6360": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6137,
        6149
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6362": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6152,
        6203
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18EC"
    },
    "6365": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6165,
        6175
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6366": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6185,
        6189
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "6367": {
      "offset": [
        924,
        928
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x4563918244F40000"
    },
    "6376": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6152,
        6164
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD69"
    },
    "6379": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        6152,
        6203
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6380": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6152,
        6203
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6381": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6137,
        6203
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6382": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6137,
        6203
      ],
      "op": "POP",
      "path": "9"
    },
    "6383": {
      "branch": 135,
      "fn": "SmartNodes.createValidator",
      "offset": [
        6222,
        6229
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 72
    },
    "6384": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1933"
    },
    "6387": {
      "branch": 135,
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6388": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6390": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6397": {
      "op": "SHL"
    },
    "6398": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6399": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6402": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6404": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6405": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "ADD",
      "path": "9"
    },
    "6406": {
      "op": "MSTORE"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6411": {
      "op": "DUP3"
    },
    "6412": {
      "op": "ADD"
    },
    "6413": {
      "op": "MSTORE"
    },
    "6414": {
      "op": "PUSH21",
      "value": "0x151BDAD95B881D1C985B9CD9995C8819985A5B1959"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6438": {
      "op": "SHL"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6441": {
      "op": "DUP3"
    },
    "6442": {
      "op": "ADD"
    },
    "6443": {
      "op": "MSTORE"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6450": {
      "op": "JUMP"
    },
    "6451": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6214,
        6255
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6452": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 73,
      "value": "0x40"
    },
    "6454": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6455": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6456": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC0"
    },
    "6458": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6459": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6460": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6461": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6462": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6327,
        6345
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x98"
    },
    "6464": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6327,
        6345
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6465": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6466": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6467": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6468": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6377,
        6387
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6469": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6471": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6472": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6473": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6474": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6475": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6476": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6477": {
      "offset": [
        924,
        928
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x4563918244F40000"
    },
    "6486": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6487": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP7",
      "path": "9"
    },
    "6488": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6489": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6490": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6491": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6494": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "6496": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP7",
      "path": "9"
    },
    "6497": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6498": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6499": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6500": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6501": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6472,
        6475
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6503": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "6505": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP9",
      "path": "9"
    },
    "6506": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6507": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6508": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6509": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6510": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6499,
        6503
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6512": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "6514": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP10",
      "path": "9"
    },
    "6515": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6516": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6517": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6518": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6519": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "6520": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6521": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6522": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6276
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA2"
    },
    "6524": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "DUP7",
      "path": "9"
    },
    "6525": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6526": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "DUP10",
      "path": "9"
    },
    "6527": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6528": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6296
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6529": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "6530": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6531": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "DUP10",
      "path": "9"
    },
    "6532": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6533": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "6534": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6535": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "6536": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "DUP9",
      "path": "9"
    },
    "6537": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6538": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6539": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6546": {
      "op": "SHL"
    },
    "6547": {
      "op": "SUB"
    },
    "6548": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "6549": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6550": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "6551": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "AND",
      "path": "9"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6558": {
      "op": "SHL"
    },
    "6559": {
      "op": "SUB"
    },
    "6560": {
      "op": "NOT"
    },
    "6561": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6562": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "6563": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "AND",
      "path": "9"
    },
    "6564": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "6565": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6566": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "6567": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "OR",
      "path": "9"
    },
    "6568": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6569": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "6570": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6571": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6572": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6573": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "6575": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "DUP8",
      "path": "9"
    },
    "6576": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6577": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6578": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6579": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6580": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "6582": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "DUP7",
      "path": "9"
    },
    "6583": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6584": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6585": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6586": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6587": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6589": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6590": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6591": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "ADD",
      "path": "9"
    },
    "6592": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6593": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6594": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6595": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6596": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6597": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6598": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "6601": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "MUL",
      "path": "9"
    },
    "6602": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6605": {
      "op": "NOT"
    },
    "6606": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6607": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6608": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "AND",
      "path": "9"
    },
    "6609": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6299,
        6514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "6611": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "6612": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6613": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "6614": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "AND",
      "path": "9"
    },
    "6615": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6616": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6617": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6618": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "OR",
      "path": "9"
    },
    "6619": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6620": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6621": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6622": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "OR",
      "path": "9"
    },
    "6623": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6624": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6625": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6266,
        6514
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6626": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6542,
        6555
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 74,
      "value": "0x99"
    },
    "6628": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6542,
        6555
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6629": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6556
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6630": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6556
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6631": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6541
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAC"
    },
    "6633": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6556
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6634": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6556
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6635": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6556
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6636": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6568
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19F5"
    },
    "6639": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6559,
        6568
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6640": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6556
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6641": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6568
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29C6"
    },
    "6644": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        6525,
        6568
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6645": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6525,
        6568
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6646": {
      "op": "POP"
    },
    "6647": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6613,
        6631
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 75,
      "value": "0x98"
    },
    "6649": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6613,
        6631
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6650": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6599,
        6609
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6651": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6653": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6654": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6655": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6656": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6598
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA6"
    },
    "6658": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6660": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6661": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6663": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6664": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6665": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6666": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6610
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6667": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6631
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6668": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6631
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6669": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6578,
        6631
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6670": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "MLOAD",
      "path": "9",
      "statement": 76
    },
    "6671": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6658
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA8"
    },
    "6673": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6658
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6674": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A1C"
    },
    "6677": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6678": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6659,
        6668
      ],
      "op": "DUP6",
      "path": "9"
    },
    "6679": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6659,
        6668
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6680": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x295A"
    },
    "6683": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        6641,
        6669
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6684": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6685": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6686": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6687": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6688": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6690": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6691": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6692": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6693": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6694": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6695": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SUB",
      "path": "9"
    },
    "6696": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6698": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6699": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6700": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "ADD",
      "path": "9"
    },
    "6701": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6702": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6703": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6669
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6704": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6690
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6705": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6690
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6706": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6690
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6707": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6641,
        6690
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6708": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6718,
        6736
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 77,
      "value": "0x98"
    },
    "6710": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6718,
        6736
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6711": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6718,
        6736
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6712": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6714": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6715": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6716": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6717": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6717
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAF"
    },
    "6719": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6720": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6721": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6722": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6723": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6724": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6737
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6725": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6744
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6726": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6744
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6729": {
      "op": "NOT"
    },
    "6730": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6744
      ],
      "op": "AND",
      "path": "9"
    },
    "6731": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6740,
        6744
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6733": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6744
      ],
      "op": "OR",
      "path": "9"
    },
    "6734": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6744
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6735": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6700,
        6744
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6736": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 78
    },
    "6737": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6738": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6739": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6718,
        6736
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6740": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A5C"
    },
    "6743": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6744": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x288D"
    },
    "6747": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        6754,
        6774
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6748": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6749": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6750": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6751": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "POP",
      "path": "9"
    },
    "6752": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6753": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        6754,
        6774
      ],
      "op": "POP",
      "path": "9"
    },
    "6754": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5830,
        6781
      ],
      "op": "POP",
      "path": "9"
    },
    "6755": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        5771,
        6781
      ],
      "op": "POP",
      "path": "9"
    },
    "6756": {
      "fn": "SmartNodes.createValidator",
      "jump": "o",
      "offset": [
        5771,
        6781
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6757": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12899,
        13490
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6758": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12970,
        12971
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 79,
      "value": "0x0"
    },
    "6760": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12961,
        12967
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6761": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12961,
        12971
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "6766": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12961,
        12971
      ],
      "op": "AND",
      "path": "9"
    },
    "6767": {
      "branch": 136,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12961,
        12971
      ],
      "op": "GT",
      "path": "9"
    },
    "6768": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A8B"
    },
    "6771": {
      "branch": 136,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6772": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6774": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6775": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6781": {
      "op": "SHL"
    },
    "6782": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6783": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6784": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6786": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "ADD",
      "path": "9"
    },
    "6787": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6790": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6791": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2906"
    },
    "6794": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        12953,
        13009
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6795": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        12953,
        13009
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6796": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13037,
        13047
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 80
    },
    "6797": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6799": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6800": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6801": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6802": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "6804": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6806": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6807": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6809": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6810": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6811": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6812": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13027,
        13058
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "6817": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13027,
        13058
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6818": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13027,
        13058
      ],
      "op": "AND",
      "path": "9"
    },
    "6819": {
      "op": "GT"
    },
    "6820": {
      "branch": 137,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13027,
        13058
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6821": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE8"
    },
    "6824": {
      "branch": 137,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6825": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6827": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6834": {
      "op": "SHL"
    },
    "6835": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6836": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6839": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6841": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6842": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "ADD",
      "path": "9"
    },
    "6843": {
      "op": "MSTORE"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6848": {
      "op": "DUP3"
    },
    "6849": {
      "op": "ADD"
    },
    "6850": {
      "op": "MSTORE"
    },
    "6851": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "6875": {
      "op": "SHL"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "MSTORE"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6883": {
      "op": "ADD"
    },
    "6884": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6887": {
      "op": "JUMP"
    },
    "6888": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13019,
        13084
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6889": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13138,
        13148
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6890": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13095,
        13114
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6892": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6893": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6894": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6895": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13137
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA6"
    },
    "6897": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6899": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6900": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6902": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6903": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6904": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6905": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13117,
        13149
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6906": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13167,
        13183
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 81
    },
    "6907": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13167,
        13183
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6908": {
      "branch": 138,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13167,
        13183
      ],
      "op": "SUB",
      "path": "9"
    },
    "6909": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B48"
    },
    "6912": {
      "branch": 138,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6913": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6915": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6922": {
      "op": "SHL"
    },
    "6923": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6924": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6927": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6929": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6930": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "ADD",
      "path": "9"
    },
    "6931": {
      "op": "MSTORE"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6936": {
      "op": "DUP3"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "op": "MSTORE"
    },
    "6939": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6974": {
      "op": "DUP3"
    },
    "6975": {
      "op": "ADD"
    },
    "6976": {
      "op": "MSTORE"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6979": {
      "op": "ADD"
    },
    "6980": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "6983": {
      "op": "JUMP"
    },
    "6984": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13159,
        13213
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6985": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13223,
        13250
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6987": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6988": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6989": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6990": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13263
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA2"
    },
    "6992": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6994": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6995": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6997": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6998": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13253,
        13276
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6999": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 82,
      "value": "0x4"
    },
    "7001": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7002": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "ADD",
      "path": "9"
    },
    "7003": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7004": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "7007": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7008": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "DIV",
      "path": "9"
    },
    "7009": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "7011": {
      "branch": 139,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13294,
        13312
      ],
      "op": "AND",
      "path": "9"
    },
    "7012": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BAF"
    },
    "7015": {
      "branch": 139,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7016": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7018": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7025": {
      "op": "SHL"
    },
    "7026": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7027": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7030": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7032": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7033": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "ADD",
      "path": "9"
    },
    "7034": {
      "op": "MSTORE"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7039": {
      "op": "DUP3"
    },
    "7040": {
      "op": "ADD"
    },
    "7041": {
      "op": "MSTORE"
    },
    "7042": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206973206E6F74206163746976652E0000000000000000"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7077": {
      "op": "DUP3"
    },
    "7078": {
      "op": "ADD"
    },
    "7079": {
      "op": "MSTORE"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7082": {
      "op": "ADD"
    },
    "7083": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "7086": {
      "op": "JUMP"
    },
    "7087": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13286,
        13341
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7088": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13352,
        13399
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 83,
      "value": "0x1BC0"
    },
    "7091": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13365,
        13375
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7092": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13385,
        13389
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "7093": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13392,
        13398
      ],
      "op": "DUP6",
      "path": "9"
    },
    "7094": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13352,
        13399
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "7099": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13352,
        13399
      ],
      "op": "AND",
      "path": "9"
    },
    "7100": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13352,
        13364
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD69"
    },
    "7103": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        13352,
        13399
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7104": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13352,
        13399
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7105": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13352,
        13399
      ],
      "op": "POP",
      "path": "9"
    },
    "7106": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13429,
        13435
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 84
    },
    "7107": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "7112": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "AND",
      "path": "9"
    },
    "7113": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13418
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7114": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13425
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "7116": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13425
      ],
      "op": "ADD",
      "path": "9"
    },
    "7117": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13425
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7119": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7120": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7121": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7122": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BDB"
    },
    "7125": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7126": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7127": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28F3"
    },
    "7130": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        13409,
        13435
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7131": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7132": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7133": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7134": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13409,
        13435
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "7135": {
      "op": "POP"
    },
    "7136": {
      "op": "POP"
    },
    "7137": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13451,
        13483
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 85,
      "value": "0x40"
    },
    "7139": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13451,
        13483
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7140": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7145": {
      "op": "DUP5"
    },
    "7146": {
      "op": "AND"
    },
    "7147": {
      "op": "DUP2"
    },
    "7148": {
      "op": "MSTORE"
    },
    "7149": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13464,
        13474
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7150": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13464,
        13474
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7151": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13451,
        13483
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "7184": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13451,
        13483
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7187": {
      "op": "ADD"
    },
    "7188": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        13451,
        13483
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x103D"
    },
    "7191": {
      "op": "JUMP"
    },
    "7192": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7199": {
      "op": "SHL"
    },
    "7200": {
      "op": "SUB"
    },
    "7201": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 86
    },
    "7202": {
      "branch": 143,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "1"
    },
    "7203": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C7A"
    },
    "7206": {
      "branch": 143,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7207": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7209": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7216": {
      "op": "SHL"
    },
    "7217": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7218": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7221": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7223": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7224": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "1"
    },
    "7225": {
      "op": "MSTORE"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7228": {
      "op": "DUP1"
    },
    "7229": {
      "op": "DUP3"
    },
    "7230": {
      "op": "ADD"
    },
    "7231": {
      "op": "MSTORE"
    },
    "7232": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "MSTORE"
    },
    "7270": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7277": {
      "op": "SHL"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7280": {
      "op": "DUP3"
    },
    "7281": {
      "op": "ADD"
    },
    "7282": {
      "op": "MSTORE"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7285": {
      "op": "ADD"
    },
    "7286": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "7289": {
      "op": "JUMP"
    },
    "7290": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7297": {
      "op": "SHL"
    },
    "7298": {
      "op": "SUB"
    },
    "7299": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 87
    },
    "7300": {
      "branch": 144,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "1"
    },
    "7301": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CDB"
    },
    "7304": {
      "branch": 144,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7305": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7307": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7314": {
      "op": "SHL"
    },
    "7315": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7316": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7319": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7321": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7322": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "1"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7328": {
      "op": "DUP3"
    },
    "7329": {
      "op": "ADD"
    },
    "7330": {
      "op": "MSTORE"
    },
    "7331": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "7364": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7366": {
      "op": "DUP3"
    },
    "7367": {
      "op": "ADD"
    },
    "7368": {
      "op": "MSTORE"
    },
    "7369": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7374": {
      "op": "SHL"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7377": {
      "op": "DUP3"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "op": "MSTORE"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7382": {
      "op": "ADD"
    },
    "7383": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "7386": {
      "op": "JUMP"
    },
    "7387": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7394": {
      "op": "SHL"
    },
    "7395": {
      "op": "SUB"
    },
    "7396": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 88
    },
    "7397": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7398": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "1"
    },
    "7399": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7401": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7402": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7403": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7404": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "7406": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7408": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7409": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7410": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7411": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7413": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7414": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7415": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7416": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7417": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7418": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "1"
    },
    "7419": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7420": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7421": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7422": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7423": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7424": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7425": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7426": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7427": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7428": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7429": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7430": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7431": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7432": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 89
    },
    "7433": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7434": {
      "op": "DUP5"
    },
    "7435": {
      "op": "DUP2"
    },
    "7436": {
      "op": "MSTORE"
    },
    "7437": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7470": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7471": {
      "op": "ADD"
    },
    "7472": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7474": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7475": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7476": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7477": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "1"
    },
    "7478": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7479": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "1"
    },
    "7480": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "7481": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "7482": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "7483": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7484": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8107,
        9501
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7485": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8269,
        8283
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 90,
      "value": "0x9F"
    },
    "7487": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8269,
        8283
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7492": {
      "op": "SHL"
    },
    "7493": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8269,
        8283
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7494": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8269,
        8283
      ],
      "op": "DIV",
      "path": "9"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7501": {
      "op": "SHL"
    },
    "7502": {
      "op": "SUB"
    },
    "7503": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8269,
        8283
      ],
      "op": "AND",
      "path": "9"
    },
    "7504": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8255,
        8265
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7505": {
      "branch": 140,
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8255,
        8283
      ],
      "op": "EQ",
      "path": "9"
    },
    "7506": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1D9D"
    },
    "7509": {
      "branch": 140,
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7510": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7512": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7521": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7524": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7526": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7527": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "ADD",
      "path": "9"
    },
    "7528": {
      "op": "MSTORE"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7533": {
      "op": "DUP3"
    },
    "7534": {
      "op": "ADD"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7571": {
      "op": "DUP3"
    },
    "7572": {
      "op": "ADD"
    },
    "7573": {
      "op": "MSTORE"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7576": {
      "op": "ADD"
    },
    "7577": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "7580": {
      "op": "JUMP"
    },
    "7581": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8234,
        8340
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7582": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8379,
        8380
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 91,
      "value": "0x0"
    },
    "7584": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8358,
        8369
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7585": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8358,
        8376
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7586": {
      "branch": 141,
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8358,
        8380
      ],
      "op": "GT",
      "path": "9"
    },
    "7587": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DEE"
    },
    "7590": {
      "branch": 141,
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7591": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7593": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7600": {
      "op": "SHL"
    },
    "7601": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7602": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7605": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "7607": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7608": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "ADD",
      "path": "9"
    },
    "7609": {
      "op": "MSTORE"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7614": {
      "op": "DUP3"
    },
    "7615": {
      "op": "ADD"
    },
    "7616": {
      "op": "MSTORE"
    },
    "7617": {
      "op": "PUSH32",
      "value": "0x4E6F2072616E646F6D20776F7264732070726F76696465640000000000000000"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7652": {
      "op": "DUP3"
    },
    "7653": {
      "op": "ADD"
    },
    "7654": {
      "op": "MSTORE"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7657": {
      "op": "ADD"
    },
    "7658": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9D8"
    },
    "7661": {
      "op": "JUMP"
    },
    "7662": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8350,
        8409
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7663": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8472,
        8492
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7665": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8506
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7666": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8507,
        8508
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7668": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7669": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7670": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7671": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "LT",
      "path": "9"
    },
    "7672": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E03"
    },
    "7675": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7676": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E03"
    },
    "7679": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A86"
    },
    "7682": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8495,
        8509
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7683": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7684": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7686": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7687": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7688": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "MUL",
      "path": "9"
    },
    "7689": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7690": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7691": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7692": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "ADD",
      "path": "9"
    },
    "7693": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7694": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "ADD",
      "path": "9"
    },
    "7695": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7696": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8519,
        8532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7698": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "DUP6",
      "path": "9"
    },
    "7699": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7700": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7701": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8551
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAB"
    },
    "7703": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7704": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7705": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7707": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7708": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7709": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "7710": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8535,
        8562
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7711": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7712": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7713": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7714": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8598
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "7716": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7717": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "7718": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7719": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7720": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8605
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "7721": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8618
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "7723": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8618
      ],
      "op": "ADD",
      "path": "9"
    },
    "7724": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8625
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7725": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7726": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8495,
        8509
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "7727": {
      "op": "POP"
    },
    "7728": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8594,
        8625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7729": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7738": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7739": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "GT",
      "path": "9"
    },
    "7740": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "7741": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E48"
    },
    "7744": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7745": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E48"
    },
    "7748": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24EF"
    },
    "7751": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8723,
        8749
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7752": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7753": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7755": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7756": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7757": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7758": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7759": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7760": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7761": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7763": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "MUL",
      "path": "9"
    },
    "7764": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7766": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "ADD",
      "path": "9"
    },
    "7767": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7768": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "ADD",
      "path": "9"
    },
    "7769": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7771": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7772": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7773": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "7774": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E71"
    },
    "7777": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7778": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7779": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7781": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "ADD",
      "path": "9"
    },
    "7782": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7784": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7785": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "MUL",
      "path": "9"
    },
    "7786": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7787": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "7788": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7789": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "CALLDATACOPY",
      "path": "9"
    },
    "7790": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "ADD",
      "path": "9"
    },
    "7791": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7792": {
      "op": "POP"
    },
    "7793": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7794": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8723,
        8749
      ],
      "op": "POP",
      "path": "9"
    },
    "7795": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8685,
        8749
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7796": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8685,
        8749
      ],
      "op": "POP",
      "path": "9"
    },
    "7797": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8827,
        8834
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7799": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7800": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8844,
        8855
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7801": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8840,
        8841
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7802": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8840,
        8855
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "7804": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8840,
        8855
      ],
      "op": "AND",
      "path": "9"
    },
    "7805": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8840,
        8855
      ],
      "op": "LT",
      "path": "9"
    },
    "7806": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "7807": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F2D"
    },
    "7810": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7811": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8876,
        8895
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7813": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8913,
        8931
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x98"
    },
    "7815": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8913,
        8931
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7816": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8898,
        8910
      ],
      "op": "DUP7",
      "path": "9"
    },
    "7817": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8898,
        8931
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E92"
    },
    "7820": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8898,
        8931
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7821": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8898,
        8931
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7822": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8898,
        8931
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A9C"
    },
    "7825": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8898,
        8931
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7826": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8898,
        8931
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7827": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8876,
        8931
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7828": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8876,
        8931
      ],
      "op": "POP",
      "path": "9"
    },
    "7829": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8945,
        8964
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7831": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8988,
        9006
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x98"
    },
    "7833": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8988,
        9006
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7834": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8983,
        8984
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7835": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "7837": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "AND",
      "path": "9"
    },
    "7838": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8980
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7839": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EA8"
    },
    "7842": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7843": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7844": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28F3"
    },
    "7847": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8969,
        8984
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7848": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8969,
        8984
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7849": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8968,
        9006
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EB2"
    },
    "7852": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8968,
        9006
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7853": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8968,
        9006
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7854": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8968,
        9006
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A9C"
    },
    "7857": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8968,
        9006
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7858": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8968,
        9006
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7859": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8967,
        9011
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EBD"
    },
    "7862": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8967,
        9011
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7863": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9010,
        9011
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7865": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8967,
        9011
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28F3"
    },
    "7868": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8967,
        9011
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7869": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8967,
        9011
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7870": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8945,
        9011
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7871": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8945,
        9011
      ],
      "op": "POP",
      "path": "9"
    },
    "7872": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9066,
        9191
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7873": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "7875": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7876": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7877": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7878": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9091
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xAF"
    },
    "7880": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7882": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7883": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7885": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7886": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "7887": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7888": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "7890": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9074,
        9104
      ],
      "op": "AND",
      "path": "9"
    },
    "7891": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9066,
        9191
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EF5"
    },
    "7894": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9066,
        9191
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7895": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9153,
        9171
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 92,
      "value": "0x98"
    },
    "7897": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9153,
        9171
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "7898": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9139,
        9171
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EE3"
    },
    "7901": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9139,
        9171
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7902": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9139,
        9150
      ],
      "op": "DUP3",
      "path": "9"
    },
    "7903": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9139,
        9171
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A9C"
    },
    "7906": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        9139,
        9171
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7907": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9139,
        9171
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7908": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9138,
        9176
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EEE"
    },
    "7911": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9138,
        9176
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7912": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9175,
        9176
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "7914": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9138,
        9176
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x28F3"
    },
    "7917": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        9138,
        9176
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7918": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9138,
        9176
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7919": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9124,
        9176
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7920": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9124,
        9176
      ],
      "op": "POP",
      "path": "9"
    },
    "7921": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9066,
        9191
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EC0"
    },
    "7924": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9066,
        9191
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7925": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9066,
        9191
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7926": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9229,
        9230
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 93,
      "value": "0x1"
    },
    "7928": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9223
      ],
      "op": "DUP5",
      "path": "9"
    },
    "7929": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9224,
        9225
      ],
      "op": "DUP5",
      "path": "9"
    },
    "7930": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "7932": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "AND",
      "path": "9"
    },
    "7933": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7934": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "7935": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7936": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "LT",
      "path": "9"
    },
    "7937": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F0C"
    },
    "7940": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "7941": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F0C"
    },
    "7944": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A86"
    },
    "7947": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        9205,
        9226
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7948": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7949": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7951": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "MUL",
      "path": "9"
    },
    "7952": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7954": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "ADD",
      "path": "9"
    },
    "7955": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9226
      ],
      "op": "ADD",
      "path": "9"
    },
    "7956": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7957": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9230
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7958": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9230
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7959": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9230
      ],
      "op": "POP",
      "path": "9"
    },
    "7960": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9205,
        9230
      ],
      "op": "POP",
      "path": "9"
    },
    "7961": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8862,
        9241
      ],
      "op": "POP",
      "path": "9"
    },
    "7962": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8862,
        9241
      ],
      "op": "POP",
      "path": "9"
    },
    "7963": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 94
    },
    "7964": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7965": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F25"
    },
    "7968": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7969": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2ABE"
    },
    "7972": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        8857,
        8860
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7973": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7974": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7975": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "POP",
      "path": "9"
    },
    "7976": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8857,
        8860
      ],
      "op": "POP",
      "path": "9"
    },
    "7977": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E77"
    },
    "7980": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7981": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8822,
        9241
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7982": {
      "op": "POP"
    },
    "7983": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 95,
      "value": "0x0"
    },
    "7985": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "DUP4",
      "path": "9"
    },
    "7986": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7987": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7988": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9310
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "7990": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "7992": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7993": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "DUP2",
      "path": "9"
    },
    "7994": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "7995": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "7997": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7998": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "7999": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9317
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "8000": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "DUP3",
      "path": "9"
    },
    "8001": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "8002": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F53"
    },
    "8005": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "8006": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "8008": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9330
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8009": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9330
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "8010": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9330
      ],
      "op": "ADD",
      "path": "9"
    },
    "8011": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9330
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "8012": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "DUP5",
      "path": "9"
    },
    "8013": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "ADD",
      "path": "9"
    },
    "8014": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8015": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x23B1"
    },
    "8018": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "i",
      "offset": [
        9306,
        9351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8019": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8020": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        9306,
        9351
      ],
      "op": "POP",
      "path": "9"
    },
    "8021": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8224,
        9501
      ],
      "op": "POP",
      "path": "9"
    },
    "8022": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8224,
        9501
      ],
      "op": "POP",
      "path": "9"
    },
    "8023": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8224,
        9501
      ],
      "op": "POP",
      "path": "9"
    },
    "8024": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8224,
        9501
      ],
      "op": "POP",
      "path": "9"
    },
    "8025": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8107,
        9501
      ],
      "op": "POP",
      "path": "9"
    },
    "8026": {
      "fn": "SmartNodes.fulfillRandomWords",
      "offset": [
        8107,
        9501
      ],
      "op": "POP",
      "path": "9"
    },
    "8027": {
      "fn": "SmartNodes.fulfillRandomWords",
      "jump": "o",
      "offset": [
        8107,
        9501
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8028": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8035": {
      "op": "SHL"
    },
    "8036": {
      "op": "SUB"
    },
    "8037": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8038": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8039": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "8040": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8042": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8043": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8044": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8045": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "8047": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8049": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8050": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8051": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8052": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8054": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8055": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8056": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8057": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8058": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "1"
    },
    "8059": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "8060": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8061": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8062": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8063": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8064": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8065": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8066": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8069": {
      "op": "NOT"
    },
    "8070": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8071": {
      "branch": 145,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "1"
    },
    "8072": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C4"
    },
    "8075": {
      "branch": 145,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8076": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 96
    },
    "8077": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8078": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "1"
    },
    "8079": {
      "branch": 146,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8080": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FDB"
    },
    "8083": {
      "branch": 146,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8084": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8086": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8087": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8093": {
      "op": "SHL"
    },
    "8094": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8095": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8098": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8100": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8101": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "1"
    },
    "8102": {
      "op": "MSTORE"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8105": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8107": {
      "op": "DUP3"
    },
    "8108": {
      "op": "ADD"
    },
    "8109": {
      "op": "MSTORE"
    },
    "8110": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8145": {
      "op": "DUP3"
    },
    "8146": {
      "op": "ADD"
    },
    "8147": {
      "op": "MSTORE"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8150": {
      "op": "ADD"
    },
    "8151": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "8154": {
      "op": "JUMP"
    },
    "8155": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8156": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 97,
      "value": "0x15C4"
    },
    "8159": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8160": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8161": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8162": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8163": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "1"
    },
    "8164": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C18"
    },
    "8167": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8168": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8175": {
      "op": "SHL"
    },
    "8176": {
      "op": "SUB"
    },
    "8177": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 98
    },
    "8178": {
      "branch": 147,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "1"
    },
    "8179": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x204C"
    },
    "8182": {
      "branch": 147,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8183": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8185": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8192": {
      "op": "SHL"
    },
    "8193": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8194": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8197": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8199": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8200": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "1"
    },
    "8201": {
      "op": "MSTORE"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8206": {
      "op": "DUP3"
    },
    "8207": {
      "op": "ADD"
    },
    "8208": {
      "op": "MSTORE"
    },
    "8209": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8244": {
      "op": "DUP3"
    },
    "8245": {
      "op": "ADD"
    },
    "8246": {
      "op": "MSTORE"
    },
    "8247": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "8253": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "8255": {
      "op": "SHL"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8258": {
      "op": "DUP3"
    },
    "8259": {
      "op": "ADD"
    },
    "8260": {
      "op": "MSTORE"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8263": {
      "op": "ADD"
    },
    "8264": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "8267": {
      "op": "JUMP"
    },
    "8268": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8275": {
      "op": "SHL"
    },
    "8276": {
      "op": "SUB"
    },
    "8277": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 99
    },
    "8278": {
      "branch": 148,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "1"
    },
    "8279": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20AE"
    },
    "8282": {
      "branch": 148,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8283": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8285": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8286": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8292": {
      "op": "SHL"
    },
    "8293": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8294": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8297": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8299": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8300": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "1"
    },
    "8301": {
      "op": "MSTORE"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8306": {
      "op": "DUP3"
    },
    "8307": {
      "op": "ADD"
    },
    "8308": {
      "op": "MSTORE"
    },
    "8309": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8344": {
      "op": "DUP3"
    },
    "8345": {
      "op": "ADD"
    },
    "8346": {
      "op": "MSTORE"
    },
    "8347": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "8353": {
      "op": "SHL"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8356": {
      "op": "DUP3"
    },
    "8357": {
      "op": "ADD"
    },
    "8358": {
      "op": "MSTORE"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "8365": {
      "op": "JUMP"
    },
    "8366": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8373": {
      "op": "SHL"
    },
    "8374": {
      "op": "SUB"
    },
    "8375": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8376": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "1"
    },
    "8377": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8379": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8380": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8381": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8382": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "8384": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8386": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8387": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8389": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8390": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8391": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8392": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 100
    },
    "8393": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8394": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "1"
    },
    "8395": {
      "branch": 149,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8396": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2126"
    },
    "8399": {
      "branch": 149,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8400": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8402": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8403": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8409": {
      "op": "SHL"
    },
    "8410": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8411": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8414": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8416": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8417": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "1"
    },
    "8418": {
      "op": "MSTORE"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8423": {
      "op": "DUP3"
    },
    "8424": {
      "op": "ADD"
    },
    "8425": {
      "op": "MSTORE"
    },
    "8426": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8461": {
      "op": "DUP3"
    },
    "8462": {
      "op": "ADD"
    },
    "8463": {
      "op": "MSTORE"
    },
    "8464": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8473": {
      "op": "SHL"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8476": {
      "op": "DUP3"
    },
    "8477": {
      "op": "ADD"
    },
    "8478": {
      "op": "MSTORE"
    },
    "8479": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8481": {
      "op": "ADD"
    },
    "8482": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "8485": {
      "op": "JUMP"
    },
    "8486": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8493": {
      "op": "SHL"
    },
    "8494": {
      "op": "SUB"
    },
    "8495": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 101
    },
    "8496": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8497": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "1"
    },
    "8498": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8500": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8501": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8502": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8503": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "8505": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8507": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8508": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8510": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8511": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8512": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8513": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8514": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8515": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "1"
    },
    "8516": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8517": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8518": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 102
    },
    "8519": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8520": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "1"
    },
    "8521": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8522": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8523": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8524": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8525": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8526": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8527": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8528": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8529": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8530": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8531": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x215D"
    },
    "8534": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8535": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8536": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8537": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F3"
    },
    "8540": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8541": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8542": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8543": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "8544": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "8545": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8546": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8547": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8548": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "8549": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 103
    },
    "8550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8556": {
      "op": "SHL"
    },
    "8557": {
      "op": "SUB"
    },
    "8558": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "8559": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8566": {
      "op": "SHL"
    },
    "8567": {
      "op": "SUB"
    },
    "8568": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "8569": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8602": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8603": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8605": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8606": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A9"
    },
    "8609": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8610": {
      "op": "DUP2"
    },
    "8611": {
      "op": "MSTORE"
    },
    "8612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8614": {
      "op": "ADD"
    },
    "8615": {
      "op": "SWAP1"
    },
    "8616": {
      "op": "JUMP"
    },
    "8617": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8618": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8620": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8621": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8622": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8623": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "1"
    },
    "8624": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8625": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8626": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 104,
      "value": "0x15C4"
    },
    "8629": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        13496,
        14591
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8630": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8637": {
      "op": "SHL"
    },
    "8638": {
      "op": "SUB"
    },
    "8639": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 105
    },
    "8640": {
      "branch": 150,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "1"
    },
    "8641": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x220C"
    },
    "8644": {
      "branch": 150,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8645": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8647": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8654": {
      "op": "SHL"
    },
    "8655": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8656": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8659": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8661": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8662": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "1"
    },
    "8663": {
      "op": "MSTORE"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8668": {
      "op": "DUP3"
    },
    "8669": {
      "op": "ADD"
    },
    "8670": {
      "op": "MSTORE"
    },
    "8671": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8706": {
      "op": "DUP3"
    },
    "8707": {
      "op": "ADD"
    },
    "8708": {
      "op": "MSTORE"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8711": {
      "op": "ADD"
    },
    "8712": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D8"
    },
    "8715": {
      "op": "JUMP"
    },
    "8716": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8717": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 106
    },
    "8718": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "8720": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8722": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8723": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8724": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8725": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x221E"
    },
    "8728": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8729": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8730": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F3"
    },
    "8733": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8734": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8735": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8736": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8737": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8738": {
      "op": "POP"
    },
    "8739": {
      "op": "POP"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8746": {
      "op": "SHL"
    },
    "8747": {
      "op": "SUB"
    },
    "8748": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 107
    },
    "8749": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "1"
    },
    "8750": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8752": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8753": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8754": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8755": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "8757": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8759": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8760": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8762": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8763": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8764": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8765": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8766": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8767": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8768": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8769": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224B"
    },
    "8772": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8773": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8774": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8775": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F3"
    },
    "8778": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8779": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8780": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8781": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8782": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8783": {
      "op": "POP"
    },
    "8784": {
      "op": "POP"
    },
    "8785": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 108,
      "value": "0x40"
    },
    "8787": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8788": {
      "op": "DUP2"
    },
    "8789": {
      "op": "DUP2"
    },
    "8790": {
      "op": "MSTORE"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8797": {
      "op": "SHL"
    },
    "8798": {
      "op": "SUB"
    },
    "8799": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8800": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "1"
    },
    "8801": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8802": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8804": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8805": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8838": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8841": {
      "op": "ADD"
    },
    "8842": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8844": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8845": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8846": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8847": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "1"
    },
    "8848": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8849": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8850": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "POP",
      "path": "7"
    },
    "8851": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "offset": [
        8079,
        8335
      ],
      "op": "POP",
      "path": "7"
    },
    "8852": {
      "fn": "VRFConsumerBaseV2Upgradeable.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        8079,
        8335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8853": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8854": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8856": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8857": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8860": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8861": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "8862": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8864": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "8865": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22BC"
    },
    "8868": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8869": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8871": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8878": {
      "op": "SHL"
    },
    "8879": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8880": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8881": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8883": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "8884": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D8"
    },
    "8887": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8888": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ADD"
    },
    "8891": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8892": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8893": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 109,
      "value": "0xD65"
    },
    "8896": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8897": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8898": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2371"
    },
    "8901": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8902": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6723,
        7005
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8903": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8905": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8906": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8909": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8910": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "8911": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8913": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "8914": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22ED"
    },
    "8917": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8918": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8920": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8927": {
      "op": "SHL"
    },
    "8928": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8929": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8930": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8932": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "8933": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D8"
    },
    "8936": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8937": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ADD"
    },
    "8940": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8941": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8948": {
      "op": "SHL"
    },
    "8949": {
      "op": "SUB"
    },
    "8950": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8951": {
      "branch": 155,
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6818,
        6847
      ],
      "op": "AND",
      "path": "7"
    },
    "8952": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6814,
        6962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x234F"
    },
    "8955": {
      "branch": 155,
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6814,
        6962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8956": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 110,
      "value": "0x40"
    },
    "8958": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8965": {
      "op": "SHL"
    },
    "8966": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8967": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8970": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "8972": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8973": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "ADD",
      "path": "7"
    },
    "8974": {
      "op": "MSTORE"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8979": {
      "op": "DUP3"
    },
    "8980": {
      "op": "ADD"
    },
    "8981": {
      "op": "MSTORE"
    },
    "8982": {
      "op": "PUSH32",
      "value": "0x6D75737420676976652076616C696420636F6F7264696E61746F722061646472"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9017": {
      "op": "DUP3"
    },
    "9018": {
      "op": "ADD"
    },
    "9019": {
      "op": "MSTORE"
    },
    "9020": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "9024": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9026": {
      "op": "SHL"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9029": {
      "op": "DUP3"
    },
    "9030": {
      "op": "ADD"
    },
    "9031": {
      "op": "MSTORE"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9034": {
      "op": "ADD"
    },
    "9035": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6910,
        6955
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D8"
    },
    "9038": {
      "op": "JUMP"
    },
    "9039": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6814,
        6962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9040": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        6982
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 111,
      "value": "0x65"
    },
    "9042": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9043": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9050": {
      "op": "SHL"
    },
    "9051": {
      "op": "SUB"
    },
    "9052": {
      "op": "NOT"
    },
    "9053": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "AND",
      "path": "7"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9060": {
      "op": "SHL"
    },
    "9061": {
      "op": "SUB"
    },
    "9062": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "9063": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9064": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "9065": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "AND",
      "path": "7"
    },
    "9066": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9067": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9068": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9069": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "OR",
      "path": "7"
    },
    "9070": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9071": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "offset": [
        6968,
        7000
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9072": {
      "fn": "VRFConsumerBaseV2Upgradeable.__VRFConsumerBaseV2_init",
      "jump": "o",
      "offset": [
        6723,
        7005
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9073": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9074": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9076": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9077": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9080": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9081": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "9082": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "9084": {
      "branch": 153,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "9085": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2398"
    },
    "9088": {
      "branch": 153,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9089": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9091": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9098": {
      "op": "SHL"
    },
    "9099": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9100": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9101": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9103": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "9104": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D8"
    },
    "9107": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9108": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ADD"
    },
    "9111": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9112": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9113": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 112,
      "value": "0x36"
    },
    "9115": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A4"
    },
    "9118": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9119": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9120": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29C6"
    },
    "9123": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9124": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9125": {
      "op": "POP"
    },
    "9126": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 113,
      "value": "0x37"
    },
    "9128": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1106"
    },
    "9131": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9132": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9133": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29C6"
    },
    "9136": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9137": {
      "op": "JUMPDEST"
    },
    "9138": {
      "op": "DUP3"
    },
    "9139": {
      "op": "DUP1"
    },
    "9140": {
      "op": "SLOAD"
    },
    "9141": {
      "op": "DUP3"
    },
    "9142": {
      "op": "DUP3"
    },
    "9143": {
      "op": "SSTORE"
    },
    "9144": {
      "op": "SWAP1"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9147": {
      "op": "MSTORE"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9152": {
      "op": "KECCAK256"
    },
    "9153": {
      "op": "SWAP1"
    },
    "9154": {
      "op": "DUP2"
    },
    "9155": {
      "op": "ADD"
    },
    "9156": {
      "op": "SWAP3"
    },
    "9157": {
      "op": "DUP3"
    },
    "9158": {
      "op": "ISZERO"
    },
    "9159": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9162": {
      "op": "JUMPI"
    },
    "9163": {
      "op": "SWAP2"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9166": {
      "op": "MUL"
    },
    "9167": {
      "op": "DUP3"
    },
    "9168": {
      "op": "ADD"
    },
    "9169": {
      "op": "JUMPDEST"
    },
    "9170": {
      "op": "DUP3"
    },
    "9171": {
      "op": "DUP2"
    },
    "9172": {
      "op": "GT"
    },
    "9173": {
      "op": "ISZERO"
    },
    "9174": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9177": {
      "op": "JUMPI"
    },
    "9178": {
      "op": "DUP3"
    },
    "9179": {
      "op": "MLOAD"
    },
    "9180": {
      "op": "DUP3"
    },
    "9181": {
      "op": "SSTORE"
    },
    "9182": {
      "op": "SWAP2"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9185": {
      "op": "ADD"
    },
    "9186": {
      "op": "SWAP2"
    },
    "9187": {
      "op": "SWAP1"
    },
    "9188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9190": {
      "op": "ADD"
    },
    "9191": {
      "op": "SWAP1"
    },
    "9192": {
      "op": "PUSH2",
      "value": "0x23D1"
    },
    "9195": {
      "op": "JUMP"
    },
    "9196": {
      "op": "JUMPDEST"
    },
    "9197": {
      "op": "POP"
    },
    "9198": {
      "op": "PUSH2",
      "value": "0x23F8"
    },
    "9201": {
      "op": "SWAP3"
    },
    "9202": {
      "op": "SWAP2"
    },
    "9203": {
      "op": "POP"
    },
    "9204": {
      "op": "PUSH2",
      "value": "0x23FC"
    },
    "9207": {
      "jump": "i",
      "op": "JUMP"
    },
    "9208": {
      "op": "JUMPDEST"
    },
    "9209": {
      "op": "POP"
    },
    "9210": {
      "op": "SWAP1"
    },
    "9211": {
      "jump": "o",
      "op": "JUMP"
    },
    "9212": {
      "op": "JUMPDEST"
    },
    "9213": {
      "op": "JUMPDEST"
    },
    "9214": {
      "op": "DUP1"
    },
    "9215": {
      "op": "DUP3"
    },
    "9216": {
      "op": "GT"
    },
    "9217": {
      "op": "ISZERO"
    },
    "9218": {
      "op": "PUSH2",
      "value": "0x23F8"
    },
    "9221": {
      "op": "JUMPI"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9224": {
      "op": "DUP2"
    },
    "9225": {
      "op": "SSTORE"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9228": {
      "op": "ADD"
    },
    "9229": {
      "op": "PUSH2",
      "value": "0x23FD"
    },
    "9232": {
      "op": "JUMP"
    },
    "9233": {
      "op": "JUMPDEST"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9238": {
      "op": "DUP3"
    },
    "9239": {
      "op": "DUP5"
    },
    "9240": {
      "op": "SUB"
    },
    "9241": {
      "op": "SLT"
    },
    "9242": {
      "op": "ISZERO"
    },
    "9243": {
      "op": "PUSH2",
      "value": "0x2423"
    },
    "9246": {
      "op": "JUMPI"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9249": {
      "op": "DUP1"
    },
    "9250": {
      "op": "REVERT"
    },
    "9251": {
      "op": "JUMPDEST"
    },
    "9252": {
      "op": "POP"
    },
    "9253": {
      "op": "CALLDATALOAD"
    },
    "9254": {
      "op": "SWAP2"
    },
    "9255": {
      "op": "SWAP1"
    },
    "9256": {
      "op": "POP"
    },
    "9257": {
      "jump": "o",
      "op": "JUMP"
    },
    "9258": {
      "op": "JUMPDEST"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9261": {
      "op": "JUMPDEST"
    },
    "9262": {
      "op": "DUP4"
    },
    "9263": {
      "op": "DUP2"
    },
    "9264": {
      "op": "LT"
    },
    "9265": {
      "op": "ISZERO"
    },
    "9266": {
      "op": "PUSH2",
      "value": "0x2445"
    },
    "9269": {
      "op": "JUMPI"
    },
    "9270": {
      "op": "DUP2"
    },
    "9271": {
      "op": "DUP2"
    },
    "9272": {
      "op": "ADD"
    },
    "9273": {
      "op": "MLOAD"
    },
    "9274": {
      "op": "DUP4"
    },
    "9275": {
      "op": "DUP3"
    },
    "9276": {
      "op": "ADD"
    },
    "9277": {
      "op": "MSTORE"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9280": {
      "op": "ADD"
    },
    "9281": {
      "op": "PUSH2",
      "value": "0x242D"
    },
    "9284": {
      "op": "JUMP"
    },
    "9285": {
      "op": "JUMPDEST"
    },
    "9286": {
      "op": "POP"
    },
    "9287": {
      "op": "POP"
    },
    "9288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9290": {
      "op": "SWAP2"
    },
    "9291": {
      "op": "ADD"
    },
    "9292": {
      "op": "MSTORE"
    },
    "9293": {
      "jump": "o",
      "op": "JUMP"
    },
    "9294": {
      "op": "JUMPDEST"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9297": {
      "op": "DUP2"
    },
    "9298": {
      "op": "MSTORE"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9301": {
      "op": "DUP3"
    },
    "9302": {
      "op": "MLOAD"
    },
    "9303": {
      "op": "DUP1"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9306": {
      "op": "DUP5"
    },
    "9307": {
      "op": "ADD"
    },
    "9308": {
      "op": "MSTORE"
    },
    "9309": {
      "op": "PUSH2",
      "value": "0x246D"
    },
    "9312": {
      "op": "DUP2"
    },
    "9313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9315": {
      "op": "DUP6"
    },
    "9316": {
      "op": "ADD"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9319": {
      "op": "DUP8"
    },
    "9320": {
      "op": "ADD"
    },
    "9321": {
      "op": "PUSH2",
      "value": "0x242A"
    },
    "9324": {
      "jump": "i",
      "op": "JUMP"
    },
    "9325": {
      "op": "JUMPDEST"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9328": {
      "op": "ADD"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9331": {
      "op": "NOT"
    },
    "9332": {
      "op": "AND"
    },
    "9333": {
      "op": "SWAP2"
    },
    "9334": {
      "op": "SWAP1"
    },
    "9335": {
      "op": "SWAP2"
    },
    "9336": {
      "op": "ADD"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9339": {
      "op": "ADD"
    },
    "9340": {
      "op": "SWAP3"
    },
    "9341": {
      "op": "SWAP2"
    },
    "9342": {
      "op": "POP"
    },
    "9343": {
      "op": "POP"
    },
    "9344": {
      "jump": "o",
      "op": "JUMP"
    },
    "9345": {
      "op": "JUMPDEST"
    },
    "9346": {
      "op": "DUP1"
    },
    "9347": {
      "op": "CALLDATALOAD"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9354": {
      "op": "SHL"
    },
    "9355": {
      "op": "SUB"
    },
    "9356": {
      "op": "DUP2"
    },
    "9357": {
      "op": "AND"
    },
    "9358": {
      "op": "DUP2"
    },
    "9359": {
      "op": "EQ"
    },
    "9360": {
      "op": "PUSH2",
      "value": "0x141C"
    },
    "9363": {
      "op": "JUMPI"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9366": {
      "op": "DUP1"
    },
    "9367": {
      "op": "REVERT"
    },
    "9368": {
      "op": "JUMPDEST"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9371": {
      "op": "DUP1"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9374": {
      "op": "DUP4"
    },
    "9375": {
      "op": "DUP6"
    },
    "9376": {
      "op": "SUB"
    },
    "9377": {
      "op": "SLT"
    },
    "9378": {
      "op": "ISZERO"
    },
    "9379": {
      "op": "PUSH2",
      "value": "0x24AB"
    },
    "9382": {
      "op": "JUMPI"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9385": {
      "op": "DUP1"
    },
    "9386": {
      "op": "REVERT"
    },
    "9387": {
      "op": "JUMPDEST"
    },
    "9388": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9391": {
      "op": "DUP4"
    },
    "9392": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "9395": {
      "jump": "i",
      "op": "JUMP"
    },
    "9396": {
      "op": "JUMPDEST"
    },
    "9397": {
      "op": "SWAP5"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9400": {
      "op": "SWAP4"
    },
    "9401": {
      "op": "SWAP1"
    },
    "9402": {
      "op": "SWAP4"
    },
    "9403": {
      "op": "ADD"
    },
    "9404": {
      "op": "CALLDATALOAD"
    },
    "9405": {
      "op": "SWAP4"
    },
    "9406": {
      "op": "POP"
    },
    "9407": {
      "op": "POP"
    },
    "9408": {
      "op": "POP"
    },
    "9409": {
      "jump": "o",
      "op": "JUMP"
    },
    "9410": {
      "op": "JUMPDEST"
    },
    "9411": {
      "op": "DUP1"
    },
    "9412": {
      "op": "CALLDATALOAD"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9415": {
      "op": "DUP2"
    },
    "9416": {
      "op": "AND"
    },
    "9417": {
      "op": "DUP2"
    },
    "9418": {
      "op": "EQ"
    },
    "9419": {
      "op": "PUSH2",
      "value": "0x141C"
    },
    "9422": {
      "op": "JUMPI"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9425": {
      "op": "DUP1"
    },
    "9426": {
      "op": "REVERT"
    },
    "9427": {
      "op": "JUMPDEST"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9430": {
      "op": "DUP1"
    },
    "9431": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9433": {
      "op": "DUP4"
    },
    "9434": {
      "op": "DUP6"
    },
    "9435": {
      "op": "SUB"
    },
    "9436": {
      "op": "SLT"
    },
    "9437": {
      "op": "ISZERO"
    },
    "9438": {
      "op": "PUSH2",
      "value": "0x24E6"
    },
    "9441": {
      "op": "JUMPI"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9444": {
      "op": "DUP1"
    },
    "9445": {
      "op": "REVERT"
    },
    "9446": {
      "op": "JUMPDEST"
    },
    "9447": {
      "op": "PUSH2",
      "value": "0x24B4"
    },
    "9450": {
      "op": "DUP4"
    },
    "9451": {
      "op": "PUSH2",
      "value": "0x24C2"
    },
    "9454": {
      "jump": "i",
      "op": "JUMP"
    },
    "9455": {
      "op": "JUMPDEST"
    },
    "9456": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9461": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9463": {
      "op": "SHL"
    },
    "9464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9466": {
      "op": "MSTORE"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9471": {
      "op": "MSTORE"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9476": {
      "op": "REVERT"
    },
    "9477": {
      "op": "JUMPDEST"
    },
    "9478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9480": {
      "op": "MLOAD"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9483": {
      "op": "DUP3"
    },
    "9484": {
      "op": "ADD"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9487": {
      "op": "NOT"
    },
    "9488": {
      "op": "AND"
    },
    "9489": {
      "op": "DUP2"
    },
    "9490": {
      "op": "ADD"
    },
    "9491": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9500": {
      "op": "DUP2"
    },
    "9501": {
      "op": "GT"
    },
    "9502": {
      "op": "DUP3"
    },
    "9503": {
      "op": "DUP3"
    },
    "9504": {
      "op": "LT"
    },
    "9505": {
      "op": "OR"
    },
    "9506": {
      "op": "ISZERO"
    },
    "9507": {
      "op": "PUSH2",
      "value": "0x252E"
    },
    "9510": {
      "op": "JUMPI"
    },
    "9511": {
      "op": "PUSH2",
      "value": "0x252E"
    },
    "9514": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "9517": {
      "jump": "i",
      "op": "JUMP"
    },
    "9518": {
      "op": "JUMPDEST"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9521": {
      "op": "MSTORE"
    },
    "9522": {
      "op": "SWAP2"
    },
    "9523": {
      "op": "SWAP1"
    },
    "9524": {
      "op": "POP"
    },
    "9525": {
      "jump": "o",
      "op": "JUMP"
    },
    "9526": {
      "op": "JUMPDEST"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9529": {
      "op": "DUP1"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9532": {
      "op": "DUP4"
    },
    "9533": {
      "op": "DUP6"
    },
    "9534": {
      "op": "SUB"
    },
    "9535": {
      "op": "SLT"
    },
    "9536": {
      "op": "ISZERO"
    },
    "9537": {
      "op": "PUSH2",
      "value": "0x2549"
    },
    "9540": {
      "op": "JUMPI"
    },
    "9541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9543": {
      "op": "DUP1"
    },
    "9544": {
      "op": "REVERT"
    },
    "9545": {
      "op": "JUMPDEST"
    },
    "9546": {
      "op": "DUP3"
    },
    "9547": {
      "op": "CALLDATALOAD"
    },
    "9548": {
      "op": "SWAP2"
    },
    "9549": {
      "op": "POP"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9552": {
      "op": "DUP1"
    },
    "9553": {
      "op": "DUP5"
    },
    "9554": {
      "op": "ADD"
    },
    "9555": {
      "op": "CALLDATALOAD"
    },
    "9556": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9565": {
      "op": "DUP1"
    },
    "9566": {
      "op": "DUP3"
    },
    "9567": {
      "op": "GT"
    },
    "9568": {
      "op": "ISZERO"
    },
    "9569": {
      "op": "PUSH2",
      "value": "0x2569"
    },
    "9572": {
      "op": "JUMPI"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9575": {
      "op": "DUP1"
    },
    "9576": {
      "op": "REVERT"
    },
    "9577": {
      "op": "JUMPDEST"
    },
    "9578": {
      "op": "DUP2"
    },
    "9579": {
      "op": "DUP7"
    },
    "9580": {
      "op": "ADD"
    },
    "9581": {
      "op": "SWAP2"
    },
    "9582": {
      "op": "POP"
    },
    "9583": {
      "op": "DUP7"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9586": {
      "op": "DUP4"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "op": "SLT"
    },
    "9589": {
      "op": "PUSH2",
      "value": "0x257D"
    },
    "9592": {
      "op": "JUMPI"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9595": {
      "op": "DUP1"
    },
    "9596": {
      "op": "REVERT"
    },
    "9597": {
      "op": "JUMPDEST"
    },
    "9598": {
      "op": "DUP2"
    },
    "9599": {
      "op": "CALLDATALOAD"
    },
    "9600": {
      "op": "DUP2"
    },
    "9601": {
      "op": "DUP2"
    },
    "9602": {
      "op": "GT"
    },
    "9603": {
      "op": "ISZERO"
    },
    "9604": {
      "op": "PUSH2",
      "value": "0x258F"
    },
    "9607": {
      "op": "JUMPI"
    },
    "9608": {
      "op": "PUSH2",
      "value": "0x258F"
    },
    "9611": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "9614": {
      "jump": "i",
      "op": "JUMP"
    },
    "9615": {
      "op": "JUMPDEST"
    },
    "9616": {
      "op": "DUP1"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9619": {
      "op": "SHL"
    },
    "9620": {
      "op": "SWAP2"
    },
    "9621": {
      "op": "POP"
    },
    "9622": {
      "op": "PUSH2",
      "value": "0x25A0"
    },
    "9625": {
      "op": "DUP5"
    },
    "9626": {
      "op": "DUP4"
    },
    "9627": {
      "op": "ADD"
    },
    "9628": {
      "op": "PUSH2",
      "value": "0x2505"
    },
    "9631": {
      "jump": "i",
      "op": "JUMP"
    },
    "9632": {
      "op": "JUMPDEST"
    },
    "9633": {
      "op": "DUP2"
    },
    "9634": {
      "op": "DUP2"
    },
    "9635": {
      "op": "MSTORE"
    },
    "9636": {
      "op": "SWAP2"
    },
    "9637": {
      "op": "DUP4"
    },
    "9638": {
      "op": "ADD"
    },
    "9639": {
      "op": "DUP5"
    },
    "9640": {
      "op": "ADD"
    },
    "9641": {
      "op": "SWAP2"
    },
    "9642": {
      "op": "DUP5"
    },
    "9643": {
      "op": "DUP2"
    },
    "9644": {
      "op": "ADD"
    },
    "9645": {
      "op": "SWAP1"
    },
    "9646": {
      "op": "DUP10"
    },
    "9647": {
      "op": "DUP5"
    },
    "9648": {
      "op": "GT"
    },
    "9649": {
      "op": "ISZERO"
    },
    "9650": {
      "op": "PUSH2",
      "value": "0x25BA"
    },
    "9653": {
      "op": "JUMPI"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9656": {
      "op": "DUP1"
    },
    "9657": {
      "op": "REVERT"
    },
    "9658": {
      "op": "JUMPDEST"
    },
    "9659": {
      "op": "SWAP4"
    },
    "9660": {
      "op": "DUP6"
    },
    "9661": {
      "op": "ADD"
    },
    "9662": {
      "op": "SWAP4"
    },
    "9663": {
      "op": "JUMPDEST"
    },
    "9664": {
      "op": "DUP4"
    },
    "9665": {
      "op": "DUP6"
    },
    "9666": {
      "op": "LT"
    },
    "9667": {
      "op": "ISZERO"
    },
    "9668": {
      "op": "PUSH2",
      "value": "0x25D8"
    },
    "9671": {
      "op": "JUMPI"
    },
    "9672": {
      "op": "DUP5"
    },
    "9673": {
      "op": "CALLDATALOAD"
    },
    "9674": {
      "op": "DUP3"
    },
    "9675": {
      "op": "MSTORE"
    },
    "9676": {
      "op": "SWAP4"
    },
    "9677": {
      "op": "DUP6"
    },
    "9678": {
      "op": "ADD"
    },
    "9679": {
      "op": "SWAP4"
    },
    "9680": {
      "op": "SWAP1"
    },
    "9681": {
      "op": "DUP6"
    },
    "9682": {
      "op": "ADD"
    },
    "9683": {
      "op": "SWAP1"
    },
    "9684": {
      "op": "PUSH2",
      "value": "0x25BF"
    },
    "9687": {
      "op": "JUMP"
    },
    "9688": {
      "op": "JUMPDEST"
    },
    "9689": {
      "op": "DUP1"
    },
    "9690": {
      "op": "SWAP7"
    },
    "9691": {
      "op": "POP"
    },
    "9692": {
      "op": "POP"
    },
    "9693": {
      "op": "POP"
    },
    "9694": {
      "op": "POP"
    },
    "9695": {
      "op": "POP"
    },
    "9696": {
      "op": "POP"
    },
    "9697": {
      "op": "POP"
    },
    "9698": {
      "op": "SWAP3"
    },
    "9699": {
      "op": "POP"
    },
    "9700": {
      "op": "SWAP3"
    },
    "9701": {
      "op": "SWAP1"
    },
    "9702": {
      "op": "POP"
    },
    "9703": {
      "jump": "o",
      "op": "JUMP"
    },
    "9704": {
      "op": "JUMPDEST"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9709": {
      "op": "DUP1"
    },
    "9710": {
      "op": "DUP4"
    },
    "9711": {
      "op": "DUP6"
    },
    "9712": {
      "op": "SUB"
    },
    "9713": {
      "op": "SLT"
    },
    "9714": {
      "op": "ISZERO"
    },
    "9715": {
      "op": "PUSH2",
      "value": "0x25FB"
    },
    "9718": {
      "op": "JUMPI"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9721": {
      "op": "DUP1"
    },
    "9722": {
      "op": "REVERT"
    },
    "9723": {
      "op": "JUMPDEST"
    },
    "9724": {
      "op": "DUP3"
    },
    "9725": {
      "op": "CALLDATALOAD"
    },
    "9726": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9735": {
      "op": "DUP1"
    },
    "9736": {
      "op": "DUP3"
    },
    "9737": {
      "op": "GT"
    },
    "9738": {
      "op": "ISZERO"
    },
    "9739": {
      "op": "PUSH2",
      "value": "0x2613"
    },
    "9742": {
      "op": "JUMPI"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9745": {
      "op": "DUP1"
    },
    "9746": {
      "op": "REVERT"
    },
    "9747": {
      "op": "JUMPDEST"
    },
    "9748": {
      "op": "DUP2"
    },
    "9749": {
      "op": "DUP6"
    },
    "9750": {
      "op": "ADD"
    },
    "9751": {
      "op": "SWAP2"
    },
    "9752": {
      "op": "POP"
    },
    "9753": {
      "op": "DUP6"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9756": {
      "op": "DUP4"
    },
    "9757": {
      "op": "ADD"
    },
    "9758": {
      "op": "SLT"
    },
    "9759": {
      "op": "PUSH2",
      "value": "0x2627"
    },
    "9762": {
      "op": "JUMPI"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9765": {
      "op": "DUP1"
    },
    "9766": {
      "op": "REVERT"
    },
    "9767": {
      "op": "JUMPDEST"
    },
    "9768": {
      "op": "DUP2"
    },
    "9769": {
      "op": "CALLDATALOAD"
    },
    "9770": {
      "op": "DUP2"
    },
    "9771": {
      "op": "DUP2"
    },
    "9772": {
      "op": "GT"
    },
    "9773": {
      "op": "ISZERO"
    },
    "9774": {
      "op": "PUSH2",
      "value": "0x2639"
    },
    "9777": {
      "op": "JUMPI"
    },
    "9778": {
      "op": "PUSH2",
      "value": "0x2639"
    },
    "9781": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "9784": {
      "jump": "i",
      "op": "JUMP"
    },
    "9785": {
      "op": "JUMPDEST"
    },
    "9786": {
      "op": "PUSH2",
      "value": "0x264B"
    },
    "9789": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9791": {
      "op": "DUP3"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9795": {
      "op": "NOT"
    },
    "9796": {
      "op": "AND"
    },
    "9797": {
      "op": "DUP6"
    },
    "9798": {
      "op": "ADD"
    },
    "9799": {
      "op": "PUSH2",
      "value": "0x2505"
    },
    "9802": {
      "jump": "i",
      "op": "JUMP"
    },
    "9803": {
      "op": "JUMPDEST"
    },
    "9804": {
      "op": "SWAP2"
    },
    "9805": {
      "op": "POP"
    },
    "9806": {
      "op": "DUP1"
    },
    "9807": {
      "op": "DUP3"
    },
    "9808": {
      "op": "MSTORE"
    },
    "9809": {
      "op": "DUP7"
    },
    "9810": {
      "op": "DUP5"
    },
    "9811": {
      "op": "DUP3"
    },
    "9812": {
      "op": "DUP6"
    },
    "9813": {
      "op": "ADD"
    },
    "9814": {
      "op": "ADD"
    },
    "9815": {
      "op": "GT"
    },
    "9816": {
      "op": "ISZERO"
    },
    "9817": {
      "op": "PUSH2",
      "value": "0x2661"
    },
    "9820": {
      "op": "JUMPI"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9823": {
      "op": "DUP1"
    },
    "9824": {
      "op": "REVERT"
    },
    "9825": {
      "op": "JUMPDEST"
    },
    "9826": {
      "op": "DUP1"
    },
    "9827": {
      "op": "DUP5"
    },
    "9828": {
      "op": "DUP5"
    },
    "9829": {
      "op": "ADD"
    },
    "9830": {
      "op": "DUP6"
    },
    "9831": {
      "op": "DUP5"
    },
    "9832": {
      "op": "ADD"
    },
    "9833": {
      "op": "CALLDATACOPY"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9836": {
      "op": "SWAP1"
    },
    "9837": {
      "op": "DUP3"
    },
    "9838": {
      "op": "ADD"
    },
    "9839": {
      "op": "SWAP1"
    },
    "9840": {
      "op": "SWAP4"
    },
    "9841": {
      "op": "ADD"
    },
    "9842": {
      "op": "SWAP3"
    },
    "9843": {
      "op": "SWAP1"
    },
    "9844": {
      "op": "SWAP3"
    },
    "9845": {
      "op": "MSTORE"
    },
    "9846": {
      "op": "POP"
    },
    "9847": {
      "op": "SWAP4"
    },
    "9848": {
      "op": "SWAP3"
    },
    "9849": {
      "op": "POP"
    },
    "9850": {
      "op": "POP"
    },
    "9851": {
      "op": "POP"
    },
    "9852": {
      "jump": "o",
      "op": "JUMP"
    },
    "9853": {
      "op": "JUMPDEST"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9856": {
      "op": "DUP1"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9861": {
      "op": "DUP5"
    },
    "9862": {
      "op": "DUP7"
    },
    "9863": {
      "op": "SUB"
    },
    "9864": {
      "op": "SLT"
    },
    "9865": {
      "op": "ISZERO"
    },
    "9866": {
      "op": "PUSH2",
      "value": "0x2692"
    },
    "9869": {
      "op": "JUMPI"
    },
    "9870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9872": {
      "op": "DUP1"
    },
    "9873": {
      "op": "REVERT"
    },
    "9874": {
      "op": "JUMPDEST"
    },
    "9875": {
      "op": "PUSH2",
      "value": "0x269B"
    },
    "9878": {
      "op": "DUP5"
    },
    "9879": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "9882": {
      "jump": "i",
      "op": "JUMP"
    },
    "9883": {
      "op": "JUMPDEST"
    },
    "9884": {
      "op": "SWAP3"
    },
    "9885": {
      "op": "POP"
    },
    "9886": {
      "op": "PUSH2",
      "value": "0x26A9"
    },
    "9889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9891": {
      "op": "DUP6"
    },
    "9892": {
      "op": "ADD"
    },
    "9893": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "9896": {
      "jump": "i",
      "op": "JUMP"
    },
    "9897": {
      "op": "JUMPDEST"
    },
    "9898": {
      "op": "SWAP2"
    },
    "9899": {
      "op": "POP"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9902": {
      "op": "DUP5"
    },
    "9903": {
      "op": "ADD"
    },
    "9904": {
      "op": "CALLDATALOAD"
    },
    "9905": {
      "op": "SWAP1"
    },
    "9906": {
      "op": "POP"
    },
    "9907": {
      "op": "SWAP3"
    },
    "9908": {
      "op": "POP"
    },
    "9909": {
      "op": "SWAP3"
    },
    "9910": {
      "op": "POP"
    },
    "9911": {
      "op": "SWAP3"
    },
    "9912": {
      "jump": "o",
      "op": "JUMP"
    },
    "9913": {
      "op": "JUMPDEST"
    },
    "9914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9918": {
      "op": "DUP3"
    },
    "9919": {
      "op": "DUP5"
    },
    "9920": {
      "op": "SUB"
    },
    "9921": {
      "op": "SLT"
    },
    "9922": {
      "op": "ISZERO"
    },
    "9923": {
      "op": "PUSH2",
      "value": "0x26CB"
    },
    "9926": {
      "op": "JUMPI"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9929": {
      "op": "DUP1"
    },
    "9930": {
      "op": "REVERT"
    },
    "9931": {
      "op": "JUMPDEST"
    },
    "9932": {
      "op": "PUSH2",
      "value": "0x26D4"
    },
    "9935": {
      "op": "DUP3"
    },
    "9936": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "9939": {
      "jump": "i",
      "op": "JUMP"
    },
    "9940": {
      "op": "JUMPDEST"
    },
    "9941": {
      "op": "SWAP4"
    },
    "9942": {
      "op": "SWAP3"
    },
    "9943": {
      "op": "POP"
    },
    "9944": {
      "op": "POP"
    },
    "9945": {
      "op": "POP"
    },
    "9946": {
      "jump": "o",
      "op": "JUMP"
    },
    "9947": {
      "op": "JUMPDEST"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9950": {
      "op": "DUP1"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9953": {
      "op": "DUP4"
    },
    "9954": {
      "op": "DUP6"
    },
    "9955": {
      "op": "SUB"
    },
    "9956": {
      "op": "SLT"
    },
    "9957": {
      "op": "ISZERO"
    },
    "9958": {
      "op": "PUSH2",
      "value": "0x26EE"
    },
    "9961": {
      "op": "JUMPI"
    },
    "9962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9964": {
      "op": "DUP1"
    },
    "9965": {
      "op": "REVERT"
    },
    "9966": {
      "op": "JUMPDEST"
    },
    "9967": {
      "op": "DUP3"
    },
    "9968": {
      "op": "CALLDATALOAD"
    },
    "9969": {
      "op": "SWAP2"
    },
    "9970": {
      "op": "POP"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9973": {
      "op": "DUP4"
    },
    "9974": {
      "op": "ADD"
    },
    "9975": {
      "op": "CALLDATALOAD"
    },
    "9976": {
      "op": "DUP1"
    },
    "9977": {
      "op": "ISZERO"
    },
    "9978": {
      "op": "ISZERO"
    },
    "9979": {
      "op": "DUP2"
    },
    "9980": {
      "op": "EQ"
    },
    "9981": {
      "op": "PUSH2",
      "value": "0x2705"
    },
    "9984": {
      "op": "JUMPI"
    },
    "9985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9987": {
      "op": "DUP1"
    },
    "9988": {
      "op": "REVERT"
    },
    "9989": {
      "op": "JUMPDEST"
    },
    "9990": {
      "op": "DUP1"
    },
    "9991": {
      "op": "SWAP2"
    },
    "9992": {
      "op": "POP"
    },
    "9993": {
      "op": "POP"
    },
    "9994": {
      "op": "SWAP3"
    },
    "9995": {
      "op": "POP"
    },
    "9996": {
      "op": "SWAP3"
    },
    "9997": {
      "op": "SWAP1"
    },
    "9998": {
      "op": "POP"
    },
    "9999": {
      "jump": "o",
      "op": "JUMP"
    },
    "10000": {
      "op": "JUMPDEST"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10005": {
      "op": "DUP3"
    },
    "10006": {
      "op": "DUP5"
    },
    "10007": {
      "op": "SUB"
    },
    "10008": {
      "op": "SLT"
    },
    "10009": {
      "op": "ISZERO"
    },
    "10010": {
      "op": "PUSH2",
      "value": "0x2722"
    },
    "10013": {
      "op": "JUMPI"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10016": {
      "op": "DUP1"
    },
    "10017": {
      "op": "REVERT"
    },
    "10018": {
      "op": "JUMPDEST"
    },
    "10019": {
      "op": "DUP2"
    },
    "10020": {
      "op": "CALLDATALOAD"
    },
    "10021": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10026": {
      "op": "DUP2"
    },
    "10027": {
      "op": "AND"
    },
    "10028": {
      "op": "DUP2"
    },
    "10029": {
      "op": "EQ"
    },
    "10030": {
      "op": "PUSH2",
      "value": "0x26D4"
    },
    "10033": {
      "op": "JUMPI"
    },
    "10034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10036": {
      "op": "DUP1"
    },
    "10037": {
      "op": "REVERT"
    },
    "10038": {
      "op": "JUMPDEST"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10041": {
      "op": "DUP1"
    },
    "10042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10044": {
      "op": "DUP4"
    },
    "10045": {
      "op": "DUP6"
    },
    "10046": {
      "op": "SUB"
    },
    "10047": {
      "op": "SLT"
    },
    "10048": {
      "op": "ISZERO"
    },
    "10049": {
      "op": "PUSH2",
      "value": "0x2749"
    },
    "10052": {
      "op": "JUMPI"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10055": {
      "op": "DUP1"
    },
    "10056": {
      "op": "REVERT"
    },
    "10057": {
      "op": "JUMPDEST"
    },
    "10058": {
      "op": "DUP3"
    },
    "10059": {
      "op": "CALLDATALOAD"
    },
    "10060": {
      "op": "SWAP2"
    },
    "10061": {
      "op": "POP"
    },
    "10062": {
      "op": "PUSH2",
      "value": "0x2759"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10067": {
      "op": "DUP5"
    },
    "10068": {
      "op": "ADD"
    },
    "10069": {
      "op": "PUSH2",
      "value": "0x24C2"
    },
    "10072": {
      "jump": "i",
      "op": "JUMP"
    },
    "10073": {
      "op": "JUMPDEST"
    },
    "10074": {
      "op": "SWAP1"
    },
    "10075": {
      "op": "POP"
    },
    "10076": {
      "op": "SWAP3"
    },
    "10077": {
      "op": "POP"
    },
    "10078": {
      "op": "SWAP3"
    },
    "10079": {
      "op": "SWAP1"
    },
    "10080": {
      "op": "POP"
    },
    "10081": {
      "jump": "o",
      "op": "JUMP"
    },
    "10082": {
      "op": "JUMPDEST"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10085": {
      "op": "DUP1"
    },
    "10086": {
      "op": "DUP3"
    },
    "10087": {
      "op": "MSTORE"
    },
    "10088": {
      "op": "DUP3"
    },
    "10089": {
      "op": "MLOAD"
    },
    "10090": {
      "op": "DUP3"
    },
    "10091": {
      "op": "DUP3"
    },
    "10092": {
      "op": "ADD"
    },
    "10093": {
      "op": "DUP2"
    },
    "10094": {
      "op": "SWAP1"
    },
    "10095": {
      "op": "MSTORE"
    },
    "10096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10098": {
      "op": "SWAP2"
    },
    "10099": {
      "op": "SWAP1"
    },
    "10100": {
      "op": "DUP5"
    },
    "10101": {
      "op": "DUP3"
    },
    "10102": {
      "op": "ADD"
    },
    "10103": {
      "op": "SWAP1"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10106": {
      "op": "DUP6"
    },
    "10107": {
      "op": "ADD"
    },
    "10108": {
      "op": "SWAP1"
    },
    "10109": {
      "op": "DUP5"
    },
    "10110": {
      "op": "JUMPDEST"
    },
    "10111": {
      "op": "DUP2"
    },
    "10112": {
      "op": "DUP2"
    },
    "10113": {
      "op": "LT"
    },
    "10114": {
      "op": "ISZERO"
    },
    "10115": {
      "op": "PUSH2",
      "value": "0x279A"
    },
    "10118": {
      "op": "JUMPI"
    },
    "10119": {
      "op": "DUP4"
    },
    "10120": {
      "op": "MLOAD"
    },
    "10121": {
      "op": "DUP4"
    },
    "10122": {
      "op": "MSTORE"
    },
    "10123": {
      "op": "SWAP3"
    },
    "10124": {
      "op": "DUP5"
    },
    "10125": {
      "op": "ADD"
    },
    "10126": {
      "op": "SWAP3"
    },
    "10127": {
      "op": "SWAP2"
    },
    "10128": {
      "op": "DUP5"
    },
    "10129": {
      "op": "ADD"
    },
    "10130": {
      "op": "SWAP2"
    },
    "10131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10133": {
      "op": "ADD"
    },
    "10134": {
      "op": "PUSH2",
      "value": "0x277E"
    },
    "10137": {
      "op": "JUMP"
    },
    "10138": {
      "op": "JUMPDEST"
    },
    "10139": {
      "op": "POP"
    },
    "10140": {
      "op": "SWAP1"
    },
    "10141": {
      "op": "SWAP7"
    },
    "10142": {
      "op": "SWAP6"
    },
    "10143": {
      "op": "POP"
    },
    "10144": {
      "op": "POP"
    },
    "10145": {
      "op": "POP"
    },
    "10146": {
      "op": "POP"
    },
    "10147": {
      "op": "POP"
    },
    "10148": {
      "op": "POP"
    },
    "10149": {
      "jump": "o",
      "op": "JUMP"
    },
    "10150": {
      "op": "JUMPDEST"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10153": {
      "op": "DUP1"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10158": {
      "op": "DUP5"
    },
    "10159": {
      "op": "DUP7"
    },
    "10160": {
      "op": "SUB"
    },
    "10161": {
      "op": "SLT"
    },
    "10162": {
      "op": "ISZERO"
    },
    "10163": {
      "op": "PUSH2",
      "value": "0x27BB"
    },
    "10166": {
      "op": "JUMPI"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10169": {
      "op": "DUP1"
    },
    "10170": {
      "op": "REVERT"
    },
    "10171": {
      "op": "JUMPDEST"
    },
    "10172": {
      "op": "PUSH2",
      "value": "0x27C4"
    },
    "10175": {
      "op": "DUP5"
    },
    "10176": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "10179": {
      "jump": "i",
      "op": "JUMP"
    },
    "10180": {
      "op": "JUMPDEST"
    },
    "10181": {
      "op": "SWAP3"
    },
    "10182": {
      "op": "POP"
    },
    "10183": {
      "op": "PUSH2",
      "value": "0x27D2"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10188": {
      "op": "DUP6"
    },
    "10189": {
      "op": "ADD"
    },
    "10190": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "10193": {
      "jump": "i",
      "op": "JUMP"
    },
    "10194": {
      "op": "JUMPDEST"
    },
    "10195": {
      "op": "SWAP2"
    },
    "10196": {
      "op": "POP"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10199": {
      "op": "DUP5"
    },
    "10200": {
      "op": "ADD"
    },
    "10201": {
      "op": "CALLDATALOAD"
    },
    "10202": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10211": {
      "op": "DUP2"
    },
    "10212": {
      "op": "AND"
    },
    "10213": {
      "op": "DUP2"
    },
    "10214": {
      "op": "EQ"
    },
    "10215": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "10218": {
      "op": "JUMPI"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10221": {
      "op": "DUP1"
    },
    "10222": {
      "op": "REVERT"
    },
    "10223": {
      "op": "JUMPDEST"
    },
    "10224": {
      "op": "DUP1"
    },
    "10225": {
      "op": "SWAP2"
    },
    "10226": {
      "op": "POP"
    },
    "10227": {
      "op": "POP"
    },
    "10228": {
      "op": "SWAP3"
    },
    "10229": {
      "op": "POP"
    },
    "10230": {
      "op": "SWAP3"
    },
    "10231": {
      "op": "POP"
    },
    "10232": {
      "op": "SWAP3"
    },
    "10233": {
      "jump": "o",
      "op": "JUMP"
    },
    "10234": {
      "op": "JUMPDEST"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10237": {
      "op": "DUP1"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10240": {
      "op": "DUP4"
    },
    "10241": {
      "op": "DUP6"
    },
    "10242": {
      "op": "SUB"
    },
    "10243": {
      "op": "SLT"
    },
    "10244": {
      "op": "ISZERO"
    },
    "10245": {
      "op": "PUSH2",
      "value": "0x280D"
    },
    "10248": {
      "op": "JUMPI"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10251": {
      "op": "DUP1"
    },
    "10252": {
      "op": "REVERT"
    },
    "10253": {
      "op": "JUMPDEST"
    },
    "10254": {
      "op": "PUSH2",
      "value": "0x2816"
    },
    "10257": {
      "op": "DUP4"
    },
    "10258": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "10261": {
      "jump": "i",
      "op": "JUMP"
    },
    "10262": {
      "op": "JUMPDEST"
    },
    "10263": {
      "op": "SWAP2"
    },
    "10264": {
      "op": "POP"
    },
    "10265": {
      "op": "PUSH2",
      "value": "0x2759"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10270": {
      "op": "DUP5"
    },
    "10271": {
      "op": "ADD"
    },
    "10272": {
      "op": "PUSH2",
      "value": "0x2481"
    },
    "10275": {
      "jump": "i",
      "op": "JUMP"
    },
    "10276": {
      "op": "JUMPDEST"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10279": {
      "op": "DUP2"
    },
    "10280": {
      "op": "DUP2"
    },
    "10281": {
      "op": "SHR"
    },
    "10282": {
      "op": "SWAP1"
    },
    "10283": {
      "op": "DUP3"
    },
    "10284": {
      "op": "AND"
    },
    "10285": {
      "op": "DUP1"
    },
    "10286": {
      "op": "PUSH2",
      "value": "0x2838"
    },
    "10289": {
      "op": "JUMPI"
    },
    "10290": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10292": {
      "op": "DUP3"
    },
    "10293": {
      "op": "AND"
    },
    "10294": {
      "op": "SWAP2"
    },
    "10295": {
      "op": "POP"
    },
    "10296": {
      "op": "JUMPDEST"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10299": {
      "op": "DUP3"
    },
    "10300": {
      "op": "LT"
    },
    "10301": {
      "op": "DUP2"
    },
    "10302": {
      "op": "SUB"
    },
    "10303": {
      "op": "PUSH2",
      "value": "0x2858"
    },
    "10306": {
      "op": "JUMPI"
    },
    "10307": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10314": {
      "op": "SHL"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10317": {
      "op": "MSTORE"
    },
    "10318": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10322": {
      "op": "MSTORE"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10327": {
      "op": "REVERT"
    },
    "10328": {
      "op": "JUMPDEST"
    },
    "10329": {
      "op": "POP"
    },
    "10330": {
      "op": "SWAP2"
    },
    "10331": {
      "op": "SWAP1"
    },
    "10332": {
      "op": "POP"
    },
    "10333": {
      "jump": "o",
      "op": "JUMP"
    },
    "10334": {
      "op": "JUMPDEST"
    },
    "10335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10339": {
      "op": "DUP3"
    },
    "10340": {
      "op": "DUP5"
    },
    "10341": {
      "op": "SUB"
    },
    "10342": {
      "op": "SLT"
    },
    "10343": {
      "op": "ISZERO"
    },
    "10344": {
      "op": "PUSH2",
      "value": "0x2870"
    },
    "10347": {
      "op": "JUMPI"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10350": {
      "op": "DUP1"
    },
    "10351": {
      "op": "REVERT"
    },
    "10352": {
      "op": "JUMPDEST"
    },
    "10353": {
      "op": "POP"
    },
    "10354": {
      "op": "MLOAD"
    },
    "10355": {
      "op": "SWAP2"
    },
    "10356": {
      "op": "SWAP1"
    },
    "10357": {
      "op": "POP"
    },
    "10358": {
      "jump": "o",
      "op": "JUMP"
    },
    "10359": {
      "op": "JUMPDEST"
    },
    "10360": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10367": {
      "op": "SHL"
    },
    "10368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10370": {
      "op": "MSTORE"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10375": {
      "op": "MSTORE"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10380": {
      "op": "REVERT"
    },
    "10381": {
      "op": "JUMPDEST"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10386": {
      "op": "DUP3"
    },
    "10387": {
      "op": "ADD"
    },
    "10388": {
      "op": "PUSH2",
      "value": "0x289F"
    },
    "10391": {
      "op": "JUMPI"
    },
    "10392": {
      "op": "PUSH2",
      "value": "0x289F"
    },
    "10395": {
      "op": "PUSH2",
      "value": "0x2877"
    },
    "10398": {
      "jump": "i",
      "op": "JUMP"
    },
    "10399": {
      "op": "JUMPDEST"
    },
    "10400": {
      "op": "POP"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10403": {
      "op": "ADD"
    },
    "10404": {
      "op": "SWAP1"
    },
    "10405": {
      "jump": "o",
      "op": "JUMP"
    },
    "10406": {
      "op": "JUMPDEST"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10409": {
      "op": "DUP1"
    },
    "10410": {
      "op": "DUP3"
    },
    "10411": {
      "op": "MSTORE"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "10414": {
      "op": "SWAP1"
    },
    "10415": {
      "op": "DUP3"
    },
    "10416": {
      "op": "ADD"
    },
    "10417": {
      "op": "MSTORE"
    },
    "10418": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265207468652056616C696461746F724D756C74"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10453": {
      "op": "DUP3"
    },
    "10454": {
      "op": "ADD"
    },
    "10455": {
      "op": "MSTORE"
    },
    "10456": {
      "op": "PUSH13",
      "value": "0x1A54DA59C818DBDB9D1C9858DD"
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "10472": {
      "op": "SHL"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10475": {
      "op": "DUP3"
    },
    "10476": {
      "op": "ADD"
    },
    "10477": {
      "op": "MSTORE"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10480": {
      "op": "ADD"
    },
    "10481": {
      "op": "SWAP1"
    },
    "10482": {
      "jump": "o",
      "op": "JUMP"
    },
    "10483": {
      "op": "JUMPDEST"
    },
    "10484": {
      "op": "DUP1"
    },
    "10485": {
      "op": "DUP3"
    },
    "10486": {
      "op": "ADD"
    },
    "10487": {
      "op": "DUP1"
    },
    "10488": {
      "op": "DUP3"
    },
    "10489": {
      "op": "GT"
    },
    "10490": {
      "op": "ISZERO"
    },
    "10491": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "10494": {
      "op": "JUMPI"
    },
    "10495": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "10498": {
      "op": "PUSH2",
      "value": "0x2877"
    },
    "10501": {
      "jump": "i",
      "op": "JUMP"
    },
    "10502": {
      "op": "JUMPDEST"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10505": {
      "op": "DUP1"
    },
    "10506": {
      "op": "DUP3"
    },
    "10507": {
      "op": "MSTORE"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10510": {
      "op": "SWAP1"
    },
    "10511": {
      "op": "DUP3"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "op": "MSTORE"
    },
    "10514": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10547": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10549": {
      "op": "DUP3"
    },
    "10550": {
      "op": "ADD"
    },
    "10551": {
      "op": "MSTORE"
    },
    "10552": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10554": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10556": {
      "op": "SHL"
    },
    "10557": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10559": {
      "op": "DUP3"
    },
    "10560": {
      "op": "ADD"
    },
    "10561": {
      "op": "MSTORE"
    },
    "10562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10564": {
      "op": "ADD"
    },
    "10565": {
      "op": "SWAP1"
    },
    "10566": {
      "jump": "o",
      "op": "JUMP"
    },
    "10567": {
      "op": "JUMPDEST"
    },
    "10568": {
      "op": "DUP2"
    },
    "10569": {
      "op": "DUP2"
    },
    "10570": {
      "op": "SUB"
    },
    "10571": {
      "op": "DUP2"
    },
    "10572": {
      "op": "DUP2"
    },
    "10573": {
      "op": "GT"
    },
    "10574": {
      "op": "ISZERO"
    },
    "10575": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "10578": {
      "op": "JUMPI"
    },
    "10579": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "10582": {
      "op": "PUSH2",
      "value": "0x2877"
    },
    "10585": {
      "jump": "i",
      "op": "JUMP"
    },
    "10586": {
      "op": "JUMPDEST"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10589": {
      "op": "DUP3"
    },
    "10590": {
      "op": "MLOAD"
    },
    "10591": {
      "op": "PUSH2",
      "value": "0x296C"
    },
    "10594": {
      "op": "DUP2"
    },
    "10595": {
      "op": "DUP5"
    },
    "10596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10598": {
      "op": "DUP8"
    },
    "10599": {
      "op": "ADD"
    },
    "10600": {
      "op": "PUSH2",
      "value": "0x242A"
    },
    "10603": {
      "jump": "i",
      "op": "JUMP"
    },
    "10604": {
      "op": "JUMPDEST"
    },
    "10605": {
      "op": "SWAP2"
    },
    "10606": {
      "op": "SWAP1"
    },
    "10607": {
      "op": "SWAP2"
    },
    "10608": {
      "op": "ADD"
    },
    "10609": {
      "op": "SWAP3"
    },
    "10610": {
      "op": "SWAP2"
    },
    "10611": {
      "op": "POP"
    },
    "10612": {
      "op": "POP"
    },
    "10613": {
      "jump": "o",
      "op": "JUMP"
    },
    "10614": {
      "op": "JUMPDEST"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10617": {
      "op": "DUP3"
    },
    "10618": {
      "op": "GT"
    },
    "10619": {
      "op": "ISZERO"
    },
    "10620": {
      "op": "PUSH2",
      "value": "0x1106"
    },
    "10623": {
      "op": "JUMPI"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10626": {
      "op": "DUP2"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10629": {
      "op": "MSTORE"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10634": {
      "op": "KECCAK256"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10637": {
      "op": "DUP6"
    },
    "10638": {
      "op": "ADD"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10641": {
      "op": "SHR"
    },
    "10642": {
      "op": "DUP2"
    },
    "10643": {
      "op": "ADD"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10646": {
      "op": "DUP7"
    },
    "10647": {
      "op": "LT"
    },
    "10648": {
      "op": "ISZERO"
    },
    "10649": {
      "op": "PUSH2",
      "value": "0x299F"
    },
    "10652": {
      "op": "JUMPI"
    },
    "10653": {
      "op": "POP"
    },
    "10654": {
      "op": "DUP1"
    },
    "10655": {
      "op": "JUMPDEST"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10658": {
      "op": "DUP6"
    },
    "10659": {
      "op": "ADD"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10662": {
      "op": "SHR"
    },
    "10663": {
      "op": "DUP3"
    },
    "10664": {
      "op": "ADD"
    },
    "10665": {
      "op": "SWAP2"
    },
    "10666": {
      "op": "POP"
    },
    "10667": {
      "op": "JUMPDEST"
    },
    "10668": {
      "op": "DUP2"
    },
    "10669": {
      "op": "DUP2"
    },
    "10670": {
      "op": "LT"
    },
    "10671": {
      "op": "ISZERO"
    },
    "10672": {
      "op": "PUSH2",
      "value": "0x29BE"
    },
    "10675": {
      "op": "JUMPI"
    },
    "10676": {
      "op": "DUP3"
    },
    "10677": {
      "op": "DUP2"
    },
    "10678": {
      "op": "SSTORE"
    },
    "10679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10681": {
      "op": "ADD"
    },
    "10682": {
      "op": "PUSH2",
      "value": "0x29AB"
    },
    "10685": {
      "op": "JUMP"
    },
    "10686": {
      "op": "JUMPDEST"
    },
    "10687": {
      "op": "POP"
    },
    "10688": {
      "op": "POP"
    },
    "10689": {
      "op": "POP"
    },
    "10690": {
      "op": "POP"
    },
    "10691": {
      "op": "POP"
    },
    "10692": {
      "op": "POP"
    },
    "10693": {
      "jump": "o",
      "op": "JUMP"
    },
    "10694": {
      "op": "JUMPDEST"
    },
    "10695": {
      "op": "DUP2"
    },
    "10696": {
      "op": "MLOAD"
    },
    "10697": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10706": {
      "op": "DUP2"
    },
    "10707": {
      "op": "GT"
    },
    "10708": {
      "op": "ISZERO"
    },
    "10709": {
      "op": "PUSH2",
      "value": "0x29E0"
    },
    "10712": {
      "op": "JUMPI"
    },
    "10713": {
      "op": "PUSH2",
      "value": "0x29E0"
    },
    "10716": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "10719": {
      "jump": "i",
      "op": "JUMP"
    },
    "10720": {
      "op": "JUMPDEST"
    },
    "10721": {
      "op": "PUSH2",
      "value": "0x29F4"
    },
    "10724": {
      "op": "DUP2"
    },
    "10725": {
      "op": "PUSH2",
      "value": "0x29EE"
    },
    "10728": {
      "op": "DUP5"
    },
    "10729": {
      "op": "SLOAD"
    },
    "10730": {
      "op": "PUSH2",
      "value": "0x2824"
    },
    "10733": {
      "jump": "i",
      "op": "JUMP"
    },
    "10734": {
      "op": "JUMPDEST"
    },
    "10735": {
      "op": "DUP5"
    },
    "10736": {
      "op": "PUSH2",
      "value": "0x2976"
    },
    "10739": {
      "jump": "i",
      "op": "JUMP"
    },
    "10740": {
      "op": "JUMPDEST"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10743": {
      "op": "DUP1"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10746": {
      "op": "DUP4"
    },
    "10747": {
      "op": "GT"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10750": {
      "op": "DUP2"
    },
    "10751": {
      "op": "EQ"
    },
    "10752": {
      "op": "PUSH2",
      "value": "0x2A29"
    },
    "10755": {
      "op": "JUMPI"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10758": {
      "op": "DUP5"
    },
    "10759": {
      "op": "ISZERO"
    },
    "10760": {
      "op": "PUSH2",
      "value": "0x2A11"
    },
    "10763": {
      "op": "JUMPI"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "op": "DUP6"
    },
    "10766": {
      "op": "DUP4"
    },
    "10767": {
      "op": "ADD"
    },
    "10768": {
      "op": "MLOAD"
    },
    "10769": {
      "op": "JUMPDEST"
    },
    "10770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10772": {
      "op": "NOT"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10775": {
      "op": "DUP7"
    },
    "10776": {
      "op": "SWAP1"
    },
    "10777": {
      "op": "SHL"
    },
    "10778": {
      "op": "SHR"
    },
    "10779": {
      "op": "NOT"
    },
    "10780": {
      "op": "AND"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10783": {
      "op": "DUP6"
    },
    "10784": {
      "op": "SWAP1"
    },
    "10785": {
      "op": "SHL"
    },
    "10786": {
      "op": "OR"
    },
    "10787": {
      "op": "DUP6"
    },
    "10788": {
      "op": "SSTORE"
    },
    "10789": {
      "op": "PUSH2",
      "value": "0x29BE"
    },
    "10792": {
      "op": "JUMP"
    },
    "10793": {
      "op": "JUMPDEST"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10796": {
      "op": "DUP6"
    },
    "10797": {
      "op": "DUP2"
    },
    "10798": {
      "op": "MSTORE"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10801": {
      "op": "DUP2"
    },
    "10802": {
      "op": "KECCAK256"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10805": {
      "op": "NOT"
    },
    "10806": {
      "op": "DUP7"
    },
    "10807": {
      "op": "AND"
    },
    "10808": {
      "op": "SWAP2"
    },
    "10809": {
      "op": "JUMPDEST"
    },
    "10810": {
      "op": "DUP3"
    },
    "10811": {
      "op": "DUP2"
    },
    "10812": {
      "op": "LT"
    },
    "10813": {
      "op": "ISZERO"
    },
    "10814": {
      "op": "PUSH2",
      "value": "0x2A58"
    },
    "10817": {
      "op": "JUMPI"
    },
    "10818": {
      "op": "DUP9"
    },
    "10819": {
      "op": "DUP7"
    },
    "10820": {
      "op": "ADD"
    },
    "10821": {
      "op": "MLOAD"
    },
    "10822": {
      "op": "DUP3"
    },
    "10823": {
      "op": "SSTORE"
    },
    "10824": {
      "op": "SWAP5"
    },
    "10825": {
      "op": "DUP5"
    },
    "10826": {
      "op": "ADD"
    },
    "10827": {
      "op": "SWAP5"
    },
    "10828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10830": {
      "op": "SWAP1"
    },
    "10831": {
      "op": "SWAP2"
    },
    "10832": {
      "op": "ADD"
    },
    "10833": {
      "op": "SWAP1"
    },
    "10834": {
      "op": "DUP5"
    },
    "10835": {
      "op": "ADD"
    },
    "10836": {
      "op": "PUSH2",
      "value": "0x2A39"
    },
    "10839": {
      "op": "JUMP"
    },
    "10840": {
      "op": "JUMPDEST"
    },
    "10841": {
      "op": "POP"
    },
    "10842": {
      "op": "DUP6"
    },
    "10843": {
      "op": "DUP3"
    },
    "10844": {
      "op": "LT"
    },
    "10845": {
      "op": "ISZERO"
    },
    "10846": {
      "op": "PUSH2",
      "value": "0x2A76"
    },
    "10849": {
      "op": "JUMPI"
    },
    "10850": {
      "op": "DUP8"
    },
    "10851": {
      "op": "DUP6"
    },
    "10852": {
      "op": "ADD"
    },
    "10853": {
      "op": "MLOAD"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10856": {
      "op": "NOT"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10859": {
      "op": "DUP9"
    },
    "10860": {
      "op": "SWAP1"
    },
    "10861": {
      "op": "SHL"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10864": {
      "op": "AND"
    },
    "10865": {
      "op": "SHR"
    },
    "10866": {
      "op": "NOT"
    },
    "10867": {
      "op": "AND"
    },
    "10868": {
      "op": "DUP2"
    },
    "10869": {
      "op": "SSTORE"
    },
    "10870": {
      "op": "JUMPDEST"
    },
    "10871": {
      "op": "POP"
    },
    "10872": {
      "op": "POP"
    },
    "10873": {
      "op": "POP"
    },
    "10874": {
      "op": "POP"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10878": {
      "op": "SWAP1"
    },
    "10879": {
      "op": "DUP2"
    },
    "10880": {
      "op": "SHL"
    },
    "10881": {
      "op": "ADD"
    },
    "10882": {
      "op": "SWAP1"
    },
    "10883": {
      "op": "SSTORE"
    },
    "10884": {
      "op": "POP"
    },
    "10885": {
      "jump": "o",
      "op": "JUMP"
    },
    "10886": {
      "op": "JUMPDEST"
    },
    "10887": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10894": {
      "op": "SHL"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10897": {
      "op": "MSTORE"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10902": {
      "op": "MSTORE"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10907": {
      "op": "REVERT"
    },
    "10908": {
      "op": "JUMPDEST"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10911": {
      "op": "DUP3"
    },
    "10912": {
      "op": "PUSH2",
      "value": "0x2AB9"
    },
    "10915": {
      "op": "JUMPI"
    },
    "10916": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10923": {
      "op": "SHL"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10926": {
      "op": "MSTORE"
    },
    "10927": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10929": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10931": {
      "op": "MSTORE"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10936": {
      "op": "REVERT"
    },
    "10937": {
      "op": "JUMPDEST"
    },
    "10938": {
      "op": "POP"
    },
    "10939": {
      "op": "MOD"
    },
    "10940": {
      "op": "SWAP1"
    },
    "10941": {
      "jump": "o",
      "op": "JUMP"
    },
    "10942": {
      "op": "JUMPDEST"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10947": {
      "op": "DUP3"
    },
    "10948": {
      "op": "AND"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10951": {
      "op": "DUP2"
    },
    "10952": {
      "op": "SUB"
    },
    "10953": {
      "op": "PUSH2",
      "value": "0x2AD4"
    },
    "10956": {
      "op": "JUMPI"
    },
    "10957": {
      "op": "PUSH2",
      "value": "0x2AD4"
    },
    "10960": {
      "op": "PUSH2",
      "value": "0x2877"
    },
    "10963": {
      "jump": "i",
      "op": "JUMP"
    },
    "10964": {
      "op": "JUMPDEST"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10967": {
      "op": "ADD"
    },
    "10968": {
      "op": "SWAP3"
    },
    "10969": {
      "op": "SWAP2"
    },
    "10970": {
      "op": "POP"
    },
    "10971": {
      "op": "POP"
    },
    "10972": {
      "jump": "o",
      "op": "JUMP"
    },
    "10973": {
      "op": "JUMPDEST"
    },
    "10974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10976": {
      "op": "DUP1"
    },
    "10977": {
      "op": "DUP3"
    },
    "10978": {
      "op": "MSTORE"
    },
    "10979": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10981": {
      "op": "SWAP1"
    },
    "10982": {
      "op": "DUP3"
    },
    "10983": {
      "op": "ADD"
    },
    "10984": {
      "op": "MSTORE"
    },
    "10985": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11020": {
      "op": "DUP3"
    },
    "11021": {
      "op": "ADD"
    },
    "11022": {
      "op": "MSTORE"
    },
    "11023": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11037": {
      "op": "SHL"
    },
    "11038": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11040": {
      "op": "DUP3"
    },
    "11041": {
      "op": "ADD"
    },
    "11042": {
      "op": "MSTORE"
    },
    "11043": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11045": {
      "op": "ADD"
    },
    "11046": {
      "op": "SWAP1"
    },
    "11047": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f755ab97ee98bac2ee5a20b6681b620e5f0520da",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Upgradeable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport {VRFV2PlusClient} from \"@chainlink/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartNodes is ERC20Upgradeable, VRFConsumerBaseV2Upgradeable {\n    // ERC20 token supply metrics\n    uint256 public constant initialSupply = 10_000_000e18;\n    uint256 public constant maxSupply = 21_000_000e18;\n    uint256 public constant emissionRate = 8e18; // amount of tokens to be emitted per state update\n    uint256 public constant lockAmount = 5e18; // minimum validator locked tokens required\n    uint256 public constant halving = 2; //52_560; // number of state updates until next halving\n\n    // Validator multi-sig address\n    address public validatorContract;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userIdCounter;\n    uint256 public jobCounter;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n\n    // Chainlink VRF Parameters\n    uint64 s_subscriptionId;\n    address linkAddress = 0x779877A7B0D9E8603169DdbD7836e478b4624789;\n    bytes32 s_keyHash =\n        0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\n    uint32 callbackGasLimit = 100000;\n    uint16 requestConfirmations = 2;\n    uint32 numWords = 1;\n    address vrfCoordinator;\n    VRFCoordinatorV2Interface COORDINATOR;\n\n    // Events\n    event ValidatorCreated(uint256 indexed id, address validatorAddress);\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event ValidatorActivated(uint256 indexed validatorId);\n    event ValidatorDeactivated(uint256 indexed validatorId);\n    event JobRequested(uint256 indexed jobId);\n    event JobStarted(uint256 indexed jobId);\n    event JobCompleted(uint256 indexed jobId);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        uint256 id;\n        address userAddress;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        uint256 id;\n        address validatorAddress;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n        bool isActive;\n    }\n\n    // Validator data with key information (address, RSA key hash, reputation)\n    struct Worker {\n        uint256 id;\n        address userAddress;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        uint256 id;\n        address owner;\n        uint256 capacity;\n        uint256[] validatorIds;\n    }\n\n    // Main datastructure mappings via id lookup\n    mapping(uint256 => User) public users;\n    mapping(uint256 => Validator) public validators;\n    mapping(uint256 => Worker) public workers;\n    mapping(uint256 => Job) public jobs;\n\n    // Helpful mappings\n    mapping(address => uint256) public userIdByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    mapping(string => uint256) public userIdByHash;\n    mapping(string => uint256) public validatorIdByHash;\n    mapping(string => uint256) public jobIdByHash;\n    mapping(uint256 => uint256) public jobIdByUser;\n    mapping(uint256 => uint256) public jobIdByRequestId;\n\n    mapping(uint256 => string) public validatorKeyById;\n    mapping(uint256 => string) public userKeyById;\n    mapping(uint256 => uint256) public userIdByJob;\n\n    mapping(uint256 => bool) public validatorActivity;\n    mapping(uint256 => bool) public userActivity;\n    mapping(uint256 => bool) public jobActivity;\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContract,\n            \"Caller must be the ValidatorMultiSig contract\"\n        );\n        _;\n    }\n\n    function initialize(\n        address _validatorContract,\n        address _vrfCoordinator,\n        uint64 _subscriptionId\n    ) public initializer {\n        __ERC20_init(\"Smart Nodes\", \"SNO\");\n        __VRFConsumerBaseV2_init(_vrfCoordinator);\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        validatorContract = _validatorContract;\n        validatorIdCounter = 1;\n        vrfCoordinator = _vrfCoordinator;\n        s_subscriptionId = _subscriptionId;\n        userIdCounter = 1;\n        jobCounter = 1;\n        minValidators = 1;\n        maxValidators = 3;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(string memory publicKey) external {\n        // Only one address & public key hash per user.\n        require(userIdByAddress[msg.sender] == 0, \"User already registered.\");\n\n        users[userIdCounter] = User({\n            id: userIdCounter,\n            userAddress: msg.sender,\n            reputation: 0\n        });\n\n        userIdByAddress[msg.sender] = userIdCounter;\n        userIdByHash[publicKey] = userIdCounter;\n        userKeyById[userIdCounter] = publicKey;\n        userIdCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(string memory publicKey) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator with this publicKeyHash already exists\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Lock token in contract\n        bool success = transferFrom(msg.sender, address(this), lockAmount);\n\n        require(success, \"Token transfer failed\");\n\n        validators[validatorIdCounter] = Validator({\n            id: validatorIdCounter,\n            validatorAddress: msg.sender,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 100,\n            isActive: true\n        });\n\n        validatorKeyById[userIdCounter] = publicKey;\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorIdByHash[publicKey] = validatorIdCounter;\n        validatorActivity[validatorIdCounter] = true;\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting\n    function requestJob(uint8 nValidators, uint256 capacity) external {\n        uint256 uid = userIdByAddress[msg.sender];\n        require(uid != 0, \"User not registered.\");\n        require(capacity > 0, \"Capacity must be greater zero.\");\n        require(userActivity[uid] == false, \"User has an active job.\");\n        require(jobIdByUser[uid] <= 0);\n        require(\n            nValidators > 0 && nValidators < maxValidators,\n            \"Invalid validator count.\"\n        );\n\n        // Request random numbers for selecting validators\n        uint256 requestId = COORDINATOR.requestRandomWords(\n            s_keyHash,\n            s_subscriptionId,\n            requestConfirmations,\n            callbackGasLimit,\n            numWords\n        );\n\n        jobIdByUser[uid] = jobCounter;\n        jobIdByRequestId[requestId] = jobCounter;\n        jobActivity[jobCounter] = false;\n        userIdByJob[jobCounter] = uid;\n        // Store the job in the jobs mapping\n        jobs[jobCounter] = Job({\n            id: jobCounter,\n            owner: msg.sender,\n            capacity: capacity,\n            validatorIds: new uint256[](nValidators)\n        });\n\n        emit JobRequested(jobCounter);\n        jobCounter++;\n    }\n\n    // Select random validators for job once a random number is received\n    function fulfillRandomWords(\n        uint256 requestId,\n        uint256[] memory randomWords\n    ) internal override {\n        require(\n            msg.sender == vrfCoordinator,\n            \"Only VRFCoordinator can fulfill\"\n        );\n        require(randomWords.length > 0, \"No random words provided\");\n\n        // Assume only one random word is requested\n        uint256 randomNumber = randomWords[0];\n        uint256 jobId = jobIdByRequestId[requestId];\n        uint256 nValidators = jobs[jobId].validatorIds.length;\n\n        // Use randomNumber to select validators\n        uint256[] memory selectedValidators = new uint256[](nValidators);\n\n        // Logic to select validators based on random numbers\n        for (uint8 i = 0; i < nValidators; i++) {\n            uint256 randomIndex = randomNumber % validatorIdCounter;\n            uint256 validatorId = ((randomIndex + i) % validatorIdCounter) + 1;\n\n            // Skip inactive validators\n            while (!validatorActivity[validatorId]) {\n                validatorId = (validatorId % validatorIdCounter) + 1;\n            }\n\n            selectedValidators[i] = 1;\n        }\n\n        // Update the job with the selected validators\n        jobs[jobId].validatorIds = selectedValidators;\n\n        // Emit an event or update the job struct with the selected validators\n        // emit ValidatorsSelected(jobId, selectedValidators);\n    }\n\n    // function _updateValidatorState(\n    //     uint256 validatorId,\n    //     bool activate\n    // ) internal {\n    //     require(\n    //         validatorId > 0 && validatorId < validatorIdCounter,\n    //         \"Invalid ValidatorId\"\n    //     );\n    //     require(\n    //         validatorStateById[validatorId] > 0,\n    //         \"Validator is not online.\"\n    //     );\n\n    //     if (activate) {\n    //         // Move validator to the active state if not already active\n    //         if (validatorStateById[validatorId] == 1) {\n    //             validatorStateById[validatorId] = 2;\n    //         } else {\n    //             revert(\"Validator being activated is already active!\");\n    //         }\n    //     } else {\n    //         // Move validator to the inactive state if not already inactive\n    //         if (validatorStateById[validatorId] == 2) {\n    //             validatorStateById[validatorId] = 1;\n    //         } else {\n    //             revert(\"Validator is already inactive!\");\n    //         }\n    //     }\n    // }\n\n    // function _activateValidator(uint256 validatorId) internal {\n    //     require(\n    //         0 < validatorId && validatorId < validatorIdCounter,\n    //         \"Validator ID must be valid.\"\n    //     );\n\n    //     Validator storage validator = validators[validatorId];\n    //     require(!validator.isActive, \"Validator already active!\");\n    //     validator.isActive = true;\n    //     validatorStateById[validatorId] = 1;\n    //     emit ValidatorActivated(validatorId);\n    // }\n\n    // function _deactivateValidator(uint256 validatorId) internal {\n    //     require(\n    //         0 < validatorId && validatorId < validatorIdCounter,\n    //         \"Validator ID must be valid.\"\n    //     );\n    //     Validator storage validator = validators[validatorId];\n\n    //     require(validator.isActive, \"Validator not active!\");\n    //     validator.isActive = false;\n\n    //     validatorStateById[validatorId] = 0;\n    //     emit ValidatorActivated(validatorId);\n    // }\n\n    /**\n    TODO\n     * @dev Update the contract state, to be called by the ValidatorMultiSig contract.\n     * Updates job, worker, user, and validator key information, mines and distributes rewards.\n     */\n    function updateValidator(\n        uint256 validatorId,\n        uint8 newReputation\n    ) external onlyValidatorMultiSig {\n        require(validatorId != 0, \"Invalid validator ID\");\n        require(\n            newReputation >= 0 && newReputation <= 100,\n            \"Invalid reputation value\"\n        );\n\n        validators[validatorId].reputation = newReputation;\n    }\n\n    function updateJob(\n        uint256 jobId,\n        bool active\n    ) external onlyValidatorMultiSig {\n        require(jobId != 0, \"Invalid job ID\");\n\n        jobActivity[jobId] = active;\n\n        if (active) {\n            emit JobStarted(jobId);\n        } else {\n            emit JobCompleted(jobId);\n        }\n    }\n\n    function updateWorker(\n        uint256 workerId,\n        uint8 newReputation\n    ) external onlyValidatorMultiSig {\n        require(workerId != 0, \"Invalid worker ID\");\n        require(\n            newReputation >= 0 && newReputation <= 100,\n            \"Invalid reputation value\"\n        );\n\n        workers[workerId].reputation = newReputation;\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint32 amount) external {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n        Validator storage validator = validators[validatorId];\n        require(validator.isActive, \"Validator is not active.\");\n\n        transferFrom(msg.sender, address(this), amount);\n        validator.locked += amount;\n\n        emit TokensLocked(msg.sender, amount);\n    }\n\n    function unlockTokens(uint32 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + 50400; // 14 day unlocking period\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards,\n     TODO change to internal (external for testing)\n     */\n    function mintTokens(uint256 amount) external {\n        require(\n            totalSupply() + emissionRate <= maxSupply,\n            \"Maximum supply reached!\"\n        );\n        // _mint(msg.sender, emissionRate);\n        _mint(msg.sender, amount);\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        uint256 jobId\n    ) external view returns (uint256[] memory) {\n        require(jobId < jobCounter, \"Invalid job ID\");\n        if (jobs[jobId].id == jobId) {\n            uint256[] memory jobValidatorIds = jobs[jobId].validatorIds;\n            return jobValidatorIds;\n        } else {\n            revert(\"Job not found!\");\n        }\n    }\n}\n",
  "sourceMap": "563:14856:9:-:0;;;1427:64;;;-1:-1:-1;;;;;;;;1427:64:9;;;;;1525:66;1497:94;;1597:32;;;-1:-1:-1;;;;;;1672:19:9;;;;;563:14856;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartNodes.sol",
  "type": "contract"
}