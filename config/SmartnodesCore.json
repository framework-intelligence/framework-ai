{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNLOCK_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halveStateTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halvingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_genesisNodes",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobHashToId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "additionalReward",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "capacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        }
      ],
      "name": "requestJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "statesSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tailEmission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContract",
      "outputs": [
        {
          "internalType": "contract ISmartnodesMultiSig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "5": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol",
    "6": "contracts/SmartnodesCore.sol",
    "7": "contracts/interfaces/ISmartnodesMultiSig.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2066
      ],
      "ContextUpgradeable": [
        1823
      ],
      "ERC20Upgradeable": [
        1480
      ],
      "IERC20MetadataUpgradeable": [
        1781
      ],
      "IERC20Upgradeable": [
        1756
      ],
      "ISmartnodesMultiSig": [
        1604
      ],
      "Initializable": [
        1678
      ],
      "SmartnodesCore": [
        867
      ]
    },
    "id": 868,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 868,
        "sourceUnit": 1481,
        "src": "57:78:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 868,
        "sourceUnit": 1605,
        "src": "136:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "211:16:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1480,
              "src": "211:16:6"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "211:16:6"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 867,
        "linearizedBaseContracts": [
          867,
          1480,
          1781,
          1756,
          1823,
          1678
        ],
        "name": "SmartnodesCore",
        "nameLocation": "193:14:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "99439089",
            "id": 8,
            "mutability": "mutable",
            "name": "validatorContract",
            "nameLocation": "261:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "234:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "234:19:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1604,
                "src": "234:19:6"
              },
              "referencedDeclaration": 1604,
              "src": "234:19:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e47158c",
            "id": 10,
            "mutability": "mutable",
            "name": "proxyAdmin",
            "nameLocation": "299:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "284:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95b84bc2",
            "id": 13,
            "mutability": "mutable",
            "name": "tailEmission",
            "nameLocation": "331:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "316:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38653138",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "346:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000000000000000000_by_1",
                "typeString": "int_const 8000000000000000000"
              },
              "value": "8e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "259a28cf",
            "id": 16,
            "mutability": "constant",
            "name": "UNLOCK_PERIOD",
            "nameLocation": "380:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "356:49:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "356:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f3230395f363030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "396:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1209600_by_1",
                "typeString": "int_const 1209600"
              },
              "value": "1_209_600"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 18,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "449:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "434:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 20,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "482:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "467:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "467:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a3e251f",
            "id": 22,
            "mutability": "mutable",
            "name": "halvingPeriod",
            "nameLocation": "513:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "498:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ef046d",
            "id": 24,
            "mutability": "mutable",
            "name": "statesSinceLastHalving",
            "nameLocation": "547:22:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "532:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "532:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "56891412",
            "id": 26,
            "mutability": "mutable",
            "name": "totalLocked",
            "nameLocation": "590:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "575:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "575:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 28,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "622:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "607:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 37,
            "members": [
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "676:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "668:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "668:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "702:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "694:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "694:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "726:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "718:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "754:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "746:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 35,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "746:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "648:9:6",
            "nodeType": "StructDefinition",
            "scope": 867,
            "src": "641:133:6",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "811:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "801:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ArrayTypeName",
                  "src": "801:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "839:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "831:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "831:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "787:3:6",
            "nodeType": "StructDefinition",
            "scope": 867,
            "src": "780:73:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b8d4090d",
            "id": 47,
            "mutability": "mutable",
            "name": "jobHashToId",
            "nameLocation": "894:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "859:46:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 46,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 44,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "867:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "859:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 45,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "878:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 52,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "942:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "911:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$43_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 51,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 48,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "919:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "911:23:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$43_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 50,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 49,
                  "name": "Job",
                  "nameLocations": [
                    "930:3:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "930:3:6"
                },
                "referencedDeclaration": 43,
                "src": "930:3:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$43_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 57,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "989:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "952:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 56,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "960:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "952:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Validator",
                  "nameLocations": [
                    "971:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37,
                  "src": "971:9:6"
                },
                "referencedDeclaration": 37,
                "src": "971:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 61,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "1040:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "1005:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 60,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1013:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1005:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1024:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 63,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "1082:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "1067:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1067:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 65,
            "mutability": "mutable",
            "name": "userCounter",
            "nameLocation": "1113:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "1098:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1098:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab051190",
            "id": 67,
            "mutability": "mutable",
            "name": "validatorCounter",
            "nameLocation": "1145:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "1130:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a21bc3fb",
            "id": 69,
            "mutability": "mutable",
            "name": "availableCapacity",
            "nameLocation": "1182:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 867,
            "src": "1167:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1167:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 75,
            "name": "TokensLocked",
            "nameLocation": "1212:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1233:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1225:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1252:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1244:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1224:35:6"
            },
            "src": "1206:54:6"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 81,
            "name": "UnlockInitiated",
            "nameLocation": "1271:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1303:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1287:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "1322:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1314:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1286:47:6"
            },
            "src": "1265:69:6"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 87,
            "name": "TokensUnlocked",
            "nameLocation": "1345:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1376:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1360:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1395:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1387:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:43:6"
            },
            "src": "1339:64:6"
          },
          {
            "anonymous": false,
            "eventSelector": "1c6531f3b1dc9905436662823df97d3ce0c5b175e8a4c43f5df86f801a75853e",
            "id": 95,
            "name": "JobRequested",
            "nameLocation": "1414:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1435:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1427:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1450:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1442:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "1467:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1459:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:50:6"
            },
            "src": "1408:69:6"
          },
          {
            "anonymous": false,
            "eventSelector": "45c386dc6524a2d9fe630455323c6a39f557c52ab01e886deee20a0b538147ac",
            "id": 101,
            "name": "JobCompleted",
            "nameLocation": "1488:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1517:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1501:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1532:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1524:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1500:40:6"
            },
            "src": "1482:59:6"
          },
          {
            "anonymous": false,
            "eventSelector": "6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7",
            "id": 107,
            "name": "JobDisputed",
            "nameLocation": "1552:11:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1580:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1564:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1595:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1587:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:42:6"
            },
            "src": "1546:60:6"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1645:153:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1676:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1680:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1676:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 114,
                              "name": "validatorContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1698:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            ],
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1690:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 112,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1690:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1690:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1676:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1730:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1655:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:125:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:125:6"
                },
                {
                  "id": 120,
                  "nodeType": "PlaceholderStatement",
                  "src": "1790:1:6"
                }
              ]
            },
            "id": 122,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "1621:21:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:2:6"
            },
            "src": "1612:186:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1830:96:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1848:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1852:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1848:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 127,
                          "name": "proxyAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1862:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1848:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d757374206265207468652070726f78792061646d696e2e",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_449e7d9e0b4d413de840438a0fbffaf01b4884f2ed3bb2f1abf17f311517f6fa",
                          "typeString": "literal_string \"Caller must be the proxy admin.\""
                        },
                        "value": "Caller must be the proxy admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_449e7d9e0b4d413de840438a0fbffaf01b4884f2ed3bb2f1abf17f311517f6fa",
                          "typeString": "literal_string \"Caller must be the proxy admin.\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1840:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:68:6"
                },
                {
                  "id": 132,
                  "nodeType": "PlaceholderStatement",
                  "src": "1918:1:6"
                }
              ]
            },
            "id": 134,
            "name": "onlyProxyAdmin",
            "nameLocation": "1813:14:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:2:6"
            },
            "src": "1804:122:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "2003:470:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 142,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "2013:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:33:6"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 147,
                      "name": "proxyAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2056:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 148,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2069:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2073:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2069:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2056:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:23:6"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2089:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32303438653138",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2104:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2048000000000000000000_by_1",
                        "typeString": "int_const 2048000000000000000000"
                      },
                      "value": "2048e18"
                    },
                    "src": "2089:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:22:6"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 156,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2121:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130305f303030653138",
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2134:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      },
                      "value": "100_000e18"
                    },
                    "src": "2121:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:23:6"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2154:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38373432",
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2170:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8742_by_1",
                        "typeString": "int_const 8742"
                      },
                      "value": "8742"
                    },
                    "src": "2154:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2154:20:6"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2184:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2209:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2184:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:26:6"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2220:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f3230395f363030",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2235:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1209600_by_1",
                        "typeString": "int_const 1209600"
                      },
                      "value": "1_209_600"
                    },
                    "src": "2220:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:24:6"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 172,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2279:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2292:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2279:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:14:6"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "2303:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2322:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2303:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:20:6"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 180,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2333:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2347:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2333:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:15:6"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "2407:60:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 196,
                                "name": "_genesisNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "2427:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 198,
                              "indexExpression": {
                                "id": 197,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "2441:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2427:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 199,
                              "name": "lockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "2445:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 195,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "2421:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "ExpressionStatement",
                        "src": "2421:35:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 188,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "2376:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 189,
                        "name": "_genesisNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2380:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2394:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2380:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2376:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 203,
                  "initializationExpression": {
                    "assignments": [
                      185
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2369:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "2364:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2364:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 187,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2373:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2364:10:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2402:3:6",
                      "subExpression": {
                        "id": 192,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2402:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 194,
                    "nodeType": "ExpressionStatement",
                    "src": "2402:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "2359:108:6"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 139,
                  "name": "initializer",
                  "nameLocations": [
                    "1991:11:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1652,
                  "src": "1991:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1991:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "1941:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_genesisNodes",
                  "nameLocation": "1969:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1952:30:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1952:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 136,
                    "nodeType": "ArrayTypeName",
                    "src": "1952:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1951:32:6"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2003:0:6"
            },
            "scope": 867,
            "src": "1932:541:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "2545:202:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 213,
                              "name": "validatorContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2584:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            ],
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2576:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2576:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2576:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2614:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2606:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 215,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2606:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2606:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2576:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2630:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2555:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2555:117:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:117:6"
                },
                {
                  "expression": {
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 223,
                      "name": "validatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2682:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 225,
                          "name": "_validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "2722:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 224,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "2702:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$1604_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2702:38:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "2682:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:58:6"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "2488:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_validatorAddress",
                  "nameLocation": "2517:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2509:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2508:27:6"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2545:0:6"
            },
            "scope": 867,
            "src": "2479:268:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "2803:377:6",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 235,
                      "name": "tailEmission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "2958:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2974:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2958:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:17:6"
                },
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2985:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3001:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2985:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:17:6"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 243,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3012:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3029:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3012:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:18:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 247,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "3093:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3111:11:6",
                      "memberName": "halvePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1578,
                      "src": "3093:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "3093:31:6"
                }
              ]
            },
            "functionSelector": "eabd4bd7",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 233,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 232,
                  "name": "onlyProxyAdmin",
                  "nameLocations": [
                    "2788:14:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 134,
                  "src": "2788:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2788:14:6"
              }
            ],
            "name": "halveStateTime",
            "nameLocation": "2762:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:2:6"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2803:0:6"
            },
            "scope": 867,
            "src": "2753:427:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "3423:902:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 266,
                            "name": "jobHashToId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "3441:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 268,
                          "indexExpression": {
                            "id": 267,
                            "name": "jobHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "3453:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3441:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3465:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3441:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f6220616c7265616479206372656174656421",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3468:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1066f39f20ff27e344237c4cd676c0f96de26d3030f22cf6065bba550456abed",
                          "typeString": "literal_string \"Job already created!\""
                        },
                        "value": "Job already created!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1066f39f20ff27e344237c4cd676c0f96de26d3030f22cf6065bba550456abed",
                          "typeString": "literal_string \"Job already created!\""
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3433:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3433:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3433:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 275,
                            "name": "capacities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "3509:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3520:6:6",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3509:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3529:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3509:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f62206d757374206861766520612063617061636974792e",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3532:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c73cbffaac7123180e577de160bbfadb82b5fbe382b4e0e012cfe2a67f9c3e95",
                          "typeString": "literal_string \"Job must have a capacity.\""
                        },
                        "value": "Job must have a capacity."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c73cbffaac7123180e577de160bbfadb82b5fbe382b4e0e012cfe2a67f9c3e95",
                          "typeString": "literal_string \"Job must have a capacity.\""
                        }
                      ],
                      "id": 274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3501:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:59:6"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 282,
                        "name": "jobHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "3570:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 284,
                      "indexExpression": {
                        "id": 283,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3582:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3570:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 285,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3593:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3570:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "3570:33:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 289,
                          "name": "paymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "3663:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3679:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3663:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a20c186b43a7b6be19b113b99c92f90c6514e05a746dae3914ca345e27887f0",
                          "typeString": "literal_string \"Payment must be greater than zero.\""
                        },
                        "value": "Payment must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a20c186b43a7b6be19b113b99c92f90c6514e05a746dae3914ca345e27887f0",
                          "typeString": "literal_string \"Payment must be greater than zero.\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3655:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:64:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 297,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3760:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3764:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3760:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 296,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "3750:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3750:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 300,
                          "name": "paymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "3775:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3750:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3729:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3729:112:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3729:112:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 306,
                            "name": "capacities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "3859:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3870:6:6",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3859:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3879:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3859:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3882:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3851:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "3851:34:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3959:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3963:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3959:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3979:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3971:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 316,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3971:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3971:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 320,
                        "name": "paymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "3983:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 313,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1236,
                      "src": "3949:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3949:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3949:48:6"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 323,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4103:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$43_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 325,
                      "indexExpression": {
                        "id": 324,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "4108:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4103:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$43_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 327,
                          "name": "capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "4152:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 328,
                          "name": "paymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "4185:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 326,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "4122:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$43_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4140:10:6",
                        "4176:7:6"
                      ],
                      "names": [
                        "capacities",
                        "payment"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4122:115:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$43_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "4103:134:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$43_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "4103:134:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 333,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "4266:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 334,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "4278:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 335,
                        "name": "userHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "4287:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 332,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "4253:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32,bytes32)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "EmitStatement",
                  "src": "4248:48:6"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4306:12:6",
                    "subExpression": {
                      "id": 338,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4306:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "4306:12:6"
                }
              ]
            },
            "functionSelector": "9b701553",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "3248:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "3276:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3268:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "3302:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3294:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "capacities",
                  "nameLocation": "3338:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3319:29:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 258,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3319:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 259,
                    "nodeType": "ArrayTypeName",
                    "src": "3319:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "paymentAmount",
                  "nameLocation": "3366:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3358:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3258:155:6"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3423:0:6"
            },
            "scope": 867,
            "src": "3239:1086:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "4501:560:6",
              "statements": [
                {
                  "assignments": [
                    352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "jobId",
                      "nameLocation": "4519:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "4511:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4511:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 353,
                      "name": "jobHashToId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4527:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 355,
                    "indexExpression": {
                      "id": 354,
                      "name": "jobHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "4539:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4527:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4511:36:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 357,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "4605:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4614:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4605:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 371,
                  "nodeType": "IfStatement",
                  "src": "4601:172:6",
                  "trueBody": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "4617:156:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4681:12:6",
                          "subExpression": {
                            "id": 360,
                            "name": "jobCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "4681:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 362,
                        "nodeType": "ExpressionStatement",
                        "src": "4681:12:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 364,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "4725:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 365,
                              "name": "jobHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 344,
                              "src": "4732:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 363,
                            "name": "JobCompleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "4712:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4712:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 367,
                        "nodeType": "EmitStatement",
                        "src": "4707:33:6"
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4761:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 350,
                        "id": 369,
                        "nodeType": "Return",
                        "src": "4754:8:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "4838:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "4827:14:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$43_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 373,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 372,
                          "name": "Job",
                          "nameLocations": [
                            "4827:3:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43,
                          "src": "4827:3:6"
                        },
                        "referencedDeclaration": 43,
                        "src": "4827:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$43_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 378,
                  "initialValue": {
                    "baseExpression": {
                      "id": 375,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4844:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$43_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 377,
                    "indexExpression": {
                      "id": 376,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "4849:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4844:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$43_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4827:28:6"
                },
                {
                  "assignments": [
                    380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 380,
                      "mutability": "mutable",
                      "name": "totalReward",
                      "nameLocation": "4873:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "4865:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4865:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "expression": {
                      "id": 381,
                      "name": "job",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "4887:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$43_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4891:7:6",
                    "memberName": "payment",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 42,
                    "src": "4887:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4865:33:6"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4928:18:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 384,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4935:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$43_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 386,
                      "indexExpression": {
                        "id": 385,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "4940:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4935:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$43_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "4928:18:6"
                },
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4956:27:6",
                    "subExpression": {
                      "baseExpression": {
                        "id": 389,
                        "name": "jobHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "4963:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 391,
                      "indexExpression": {
                        "id": 390,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4975:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4963:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4956:27:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 395,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "5011:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 396,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "5018:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 394,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "4998:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4998:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "EmitStatement",
                  "src": "4993:33:6"
                },
                {
                  "expression": {
                    "id": 399,
                    "name": "totalReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 380,
                    "src": "5043:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 350,
                  "id": 400,
                  "nodeType": "Return",
                  "src": "5036:18:6"
                }
              ]
            },
            "functionSelector": "991e0139",
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 347,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 346,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "4461:21:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122,
                  "src": "4461:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4461:21:6"
              }
            ],
            "name": "completeJob",
            "nameLocation": "4409:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "4438:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "4430:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:31:6"
            },
            "returnParameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "4492:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4491:9:6"
            },
            "scope": 867,
            "src": "4400:661:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "5306:1050:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 420,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "5320:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 421,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "5346:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5320:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 433,
                  "nodeType": "IfStatement",
                  "src": "5316:152:6",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "5361:107:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 423,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "5379:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 424,
                            "name": "tailEmission",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "5394:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5379:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 431,
                        "nodeType": "IfStatement",
                        "src": "5375:83:6",
                        "trueBody": {
                          "id": 430,
                          "nodeType": "Block",
                          "src": "5408:50:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 426,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "5426:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5442:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "5426:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 429,
                              "nodeType": "ExpressionStatement",
                              "src": "5426:17:6"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "5486:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "5478:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5478:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 436,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5478:23:6"
                },
                {
                  "assignments": [
                    438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 438,
                      "mutability": "mutable",
                      "name": "workerReward",
                      "nameLocation": "5519:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "5511:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5511:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5511:20:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 440,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "5546:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5555:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5546:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5565:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5546:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "5678:164:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 455,
                            "name": "validatorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "5692:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 456,
                                          "name": "emissionRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18,
                                          "src": "5712:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 457,
                                          "name": "additionalReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 415,
                                          "src": "5727:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5712:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 459,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5711:33:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3235",
                                    "id": 460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5747:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_25_by_1",
                                      "typeString": "int_const 25"
                                    },
                                    "value": "25"
                                  },
                                  "src": "5711:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 462,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5710:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5753:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5710:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5692:64:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "5692:64:6"
                      },
                      {
                        "expression": {
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 467,
                            "name": "workerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "5770:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 470,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 468,
                                          "name": "emissionRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18,
                                          "src": "5787:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 469,
                                          "name": "additionalReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 415,
                                          "src": "5802:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5787:31:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 471,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5786:33:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3735",
                                    "id": 472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5822:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_75_by_1",
                                      "typeString": "int_const 75"
                                    },
                                    "value": "75"
                                  },
                                  "src": "5786:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 474,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5785:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5828:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5785:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5770:61:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "5770:61:6"
                      }
                    ]
                  },
                  "id": 480,
                  "nodeType": "IfStatement",
                  "src": "5542:300:6",
                  "trueBody": {
                    "id": 454,
                    "nodeType": "Block",
                    "src": "5568:104:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 444,
                            "name": "validatorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "5582:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 445,
                              "name": "emissionRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "5600:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 446,
                              "name": "additionalReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5615:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5600:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5582:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "5582:49:6"
                      },
                      {
                        "expression": {
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 450,
                            "name": "workerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "5645:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5660:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5645:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 453,
                        "nodeType": "ExpressionStatement",
                        "src": "5645:16:6"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 502,
                    "nodeType": "Block",
                    "src": "5906:140:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 493,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "5943:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 495,
                              "indexExpression": {
                                "id": 494,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 482,
                                "src": "5960:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5943:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 496,
                                "name": "validatorReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "5980:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 497,
                                  "name": "_validatorsVoted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 413,
                                  "src": "5998:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6015:6:6",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5998:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5980:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 492,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "5920:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5920:115:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 501,
                        "nodeType": "ExpressionStatement",
                        "src": "5920:115:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 485,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "5872:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 486,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5876:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5893:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5876:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5872:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 503,
                  "initializationExpression": {
                    "assignments": [
                      482
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "5865:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 503,
                        "src": "5857:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5857:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 484,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5869:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5857:13:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5901:3:6",
                      "subExpression": {
                        "id": 489,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "5901:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 491,
                    "nodeType": "ExpressionStatement",
                    "src": "5901:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5852:194:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 504,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "6060:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6069:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6060:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6078:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6060:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "IfStatement",
                  "src": "6056:259:6",
                  "trueBody": {
                    "id": 540,
                    "nodeType": "Block",
                    "src": "6081:234:6",
                    "statements": [
                      {
                        "body": {
                          "id": 538,
                          "nodeType": "Block",
                          "src": "6141:164:6",
                          "statements": [
                            {
                              "assignments": [
                                520
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 520,
                                  "mutability": "mutable",
                                  "name": "reward",
                                  "nameLocation": "6167:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 538,
                                  "src": "6159:14:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 519,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6159:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 530,
                              "initialValue": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 525,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "baseExpression": {
                                              "id": 521,
                                              "name": "_capacities",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 408,
                                              "src": "6178:11:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 523,
                                            "indexExpression": {
                                              "id": 522,
                                              "name": "w",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 509,
                                              "src": "6190:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6178:14:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 524,
                                            "name": "workerReward",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 438,
                                            "src": "6195:12:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "6178:29:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 526,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6177:31:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 527,
                                      "name": "_totalCapacity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 410,
                                      "src": "6231:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6177:68:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 529,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6176:70:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6159:87:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 532,
                                      "name": "_workers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 405,
                                      "src": "6270:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 534,
                                    "indexExpression": {
                                      "id": 533,
                                      "name": "w",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 509,
                                      "src": "6279:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6270:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 535,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 520,
                                    "src": "6283:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 531,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1292,
                                  "src": "6264:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6264:26:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 537,
                              "nodeType": "ExpressionStatement",
                              "src": "6264:26:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 512,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "6115:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 513,
                              "name": "_workers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "6119:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6128:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6119:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6115:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 539,
                        "initializationExpression": {
                          "assignments": [
                            509
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 509,
                              "mutability": "mutable",
                              "name": "w",
                              "nameLocation": "6108:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 539,
                              "src": "6100:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6100:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 511,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6112:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6100:13:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6136:3:6",
                            "subExpression": {
                              "id": 516,
                              "name": "w",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 509,
                              "src": "6136:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 518,
                          "nodeType": "ExpressionStatement",
                          "src": "6136:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "6095:210:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6325:24:6",
                    "subExpression": {
                      "id": 542,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "6325:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "6325:24:6"
                }
              ]
            },
            "functionSelector": "6e124888",
            "id": 546,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 417,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "5284:21:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122,
                  "src": "5284:21:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5284:21:6"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "5076:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "5113:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "5096:25:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 403,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5096:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 404,
                    "nodeType": "ArrayTypeName",
                    "src": "5096:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "5148:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "5131:28:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 406,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5131:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 407,
                    "nodeType": "ArrayTypeName",
                    "src": "5131:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "5177:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "5169:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5169:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "5218:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "5201:33:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 411,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5201:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 412,
                    "nodeType": "ArrayTypeName",
                    "src": "5201:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "additionalReward",
                  "nameLocation": "5252:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "5244:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5244:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5086:188:6"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5306:0:6"
            },
            "scope": 867,
            "src": "5067:1289:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "6505:448:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 555,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "6523:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6532:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6523:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6535:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6515:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6515:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "6515:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 563,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "6599:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 562,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "6589:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6589:17:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 565,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "6610:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6589:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6618:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6581:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6581:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "6581:61:6"
                },
                {
                  "assignments": [
                    571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 571,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "6661:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 608,
                      "src": "6653:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 570,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6653:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 575,
                  "initialValue": {
                    "baseExpression": {
                      "id": 572,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6675:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 574,
                    "indexExpression": {
                      "id": 573,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "6696:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6675:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6653:50:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 577,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 571,
                          "src": "6721:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6736:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6721:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6739:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6713:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6713:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "6713:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "6791:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 587,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6807:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$867",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$867",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6799:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6799:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6799:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 589,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "6814:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 583,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "6778:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6778:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6778:43:6"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 592,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6831:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 594,
                        "indexExpression": {
                          "id": 593,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 571,
                          "src": "6842:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6831:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$37_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6855:6:6",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "6831:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 596,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "6865:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6831:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:40:6"
                },
                {
                  "expression": {
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 599,
                      "name": "totalLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "6881:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 600,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
                      "src": "6896:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6881:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "6881:21:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 604,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "6931:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 605,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "6939:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 603,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "6918:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6918:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "EmitStatement",
                  "src": "6913:33:6"
                }
              ]
            },
            "documentation": {
              "id": 547,
              "nodeType": "StructuredDocumentation",
              "src": "6362:76:6",
              "text": " @dev Validator token unlocking, 14 day withdrawal period."
            },
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "6452:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6472:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6464:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6464:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6488:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6480:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6463:32:6"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6505:0:6"
            },
            "scope": 867,
            "src": "6443:510:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "7004:48:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 615,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7026:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7030:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7026:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "7038:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 614,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "7014:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7014:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "7014:31:6"
                }
              ]
            },
            "functionSelector": "6e27d889",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "6968:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6987:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "6979:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6979:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6978:16:6"
            },
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7004:0:6"
            },
            "scope": 867,
            "src": "6959:93:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "7105:1341:6",
              "statements": [
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "7123:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "7115:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7115:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "baseExpression": {
                      "id": 628,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "7137:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 631,
                    "indexExpression": {
                      "expression": {
                        "id": 629,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7158:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7162:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7158:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7137:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7115:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 634,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "7187:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7201:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7187:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7204:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7179:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 639,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:55:6"
                },
                {
                  "assignments": [
                    642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 642,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "7263:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "7245:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 641,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 640,
                          "name": "Validator",
                          "nameLocations": [
                            "7245:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "7245:9:6"
                        },
                        "referencedDeclaration": 37,
                        "src": "7245:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "baseExpression": {
                      "id": 643,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7275:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 645,
                    "indexExpression": {
                      "id": 644,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "7286:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7275:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$37_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7245:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 648,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "7317:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 649,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "7327:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7337:6:6",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "7327:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7317:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7345:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7309:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7309:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "7309:69:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 656,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "7396:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7405:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7396:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7408:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7388:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7388:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "7388:56:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 662,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "7530:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7540:10:6",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "7530:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7554:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7530:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 731,
                    "nodeType": "Block",
                    "src": "7960:480:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 701,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8077:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8083:9:6",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8077:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 703,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 642,
                                  "src": "8096:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 704,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8106:10:6",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "8096:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8077:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8134:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 700,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8052:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 708,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:122:6"
                      },
                      {
                        "expression": {
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 709,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8189:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8199:6:6",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "8189:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 712,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "8209:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8189:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 714,
                        "nodeType": "ExpressionStatement",
                        "src": "8189:26:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 718,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8250:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SmartnodesCore_$867",
                                    "typeString": "contract SmartnodesCore"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SmartnodesCore_$867",
                                    "typeString": "contract SmartnodesCore"
                                  }
                                ],
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8242:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 716,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8242:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8242:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8257:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8261:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8257:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 722,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "8269:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 715,
                            "name": "transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1087,
                            "src": "8229:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8229:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "8229:47:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 726,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8358:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8362:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8358:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 728,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "8370:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 725,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "8343:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8343:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 730,
                        "nodeType": "EmitStatement",
                        "src": "8338:39:6"
                      }
                    ]
                  },
                  "id": 732,
                  "nodeType": "IfStatement",
                  "src": "7526:914:6",
                  "trueBody": {
                    "id": 699,
                    "nodeType": "Block",
                    "src": "7557:397:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 666,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "7575:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7585:6:6",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "7575:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 668,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "7594:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7575:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 678,
                        "nodeType": "IfStatement",
                        "src": "7571:113:6",
                        "trueBody": {
                          "id": 677,
                          "nodeType": "Block",
                          "src": "7606:78:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 673,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7658:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7662:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7658:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 670,
                                    "name": "validatorContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8,
                                    "src": "7624:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                                      "typeString": "contract ISmartnodesMultiSig"
                                    }
                                  },
                                  "id": 672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7642:15:6",
                                  "memberName": "removeValidator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1520,
                                  "src": "7624:33:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7624:45:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 676,
                              "nodeType": "ExpressionStatement",
                              "src": "7624:45:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 679,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "7697:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 681,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7707:10:6",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "7697:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 682,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7720:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7726:9:6",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7720:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 684,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "7738:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7720:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7697:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "7697:53:6"
                      },
                      {
                        "expression": {
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 688,
                            "name": "totalLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "7826:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 689,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "7841:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7826:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "7826:21:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 693,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7883:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7887:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7883:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 695,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 642,
                                "src": "7895:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 696,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7905:10:6",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "7895:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 692,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "7867:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7867:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 698,
                        "nodeType": "EmitStatement",
                        "src": "7862:54:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "7067:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7088:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "7080:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7080:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7079:16:6"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7105:0:6"
            },
            "scope": 867,
            "src": "7058:1388:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "8553:620:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 743,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8594:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8598:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8594:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 742,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "8584:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8584:21:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 746,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "8609:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8584:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 748,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "8624:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 749,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "8639:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8624:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8584:65:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8663:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8563:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:139:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:139:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 756,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "8733:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 759,
                          "indexExpression": {
                            "expression": {
                              "id": 757,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8754:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8758:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8754:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8733:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8769:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8733:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206372656174656420776974682074686973206163636f756e7421",
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8784:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5cb8254c49a9072d26899a72079b0b3633f237aaea03d1c6ff784e26447f64",
                          "typeString": "literal_string \"Validator already created with this account!\""
                        },
                        "value": "Validator already created with this account!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5cb8254c49a9072d26899a72079b0b3633f237aaea03d1c6ff784e26447f64",
                          "typeString": "literal_string \"Validator already created with this account!\""
                        }
                      ],
                      "id": 755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8712:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8712:128:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "8712:128:6"
                },
                {
                  "expression": {
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 765,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "8851:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 767,
                      "indexExpression": {
                        "id": 766,
                        "name": "validatorCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "8862:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8851:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$37_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 769,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8916:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8920:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8916:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8948:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8975:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 773,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "9005:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 768,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "8882:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$37_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8906:8:6",
                        "8940:6:6",
                        "8963:10:6",
                        "8990:13:6"
                      ],
                      "names": [
                        "_address",
                        "locked",
                        "unlockTime",
                        "publicKeyHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8882:148:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$37_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "8851:179:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$37_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "8851:179:6"
                },
                {
                  "expression": {
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 777,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "9041:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 780,
                      "indexExpression": {
                        "expression": {
                          "id": 778,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9062:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9066:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9062:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9041:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 781,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "9076:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9041:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "9041:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 785,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9114:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9118:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9114:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 787,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "9126:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 784,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "9102:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9102:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "9102:35:6"
                },
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "9148:18:6",
                    "subExpression": {
                      "id": 790,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "9148:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "9148:18:6"
                }
              ]
            },
            "functionSelector": "497dfe63",
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "8461:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "8494:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8486:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8486:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "8526:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8518:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8518:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8476:67:6"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8553:0:6"
            },
            "scope": 867,
            "src": "8452:721:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "9252:120:6",
              "statements": [
                {
                  "assignments": [
                    802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 802,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9270:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 814,
                      "src": "9262:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9262:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "baseExpression": {
                      "id": 803,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "9275:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 805,
                    "indexExpression": {
                      "id": 804,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 796,
                      "src": "9296:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9275:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9262:51:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 807,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "9330:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 809,
                        "indexExpression": {
                          "id": 808,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "9341:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9330:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$37_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9345:6:6",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "9330:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 811,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "9355:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9330:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 800,
                  "id": 813,
                  "nodeType": "Return",
                  "src": "9323:42:6"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "9188:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "9205:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "9197:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9197:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9196:26:6"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "9246:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9245:6:6"
            },
            "scope": 867,
            "src": "9179:193:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "9445:60:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 820,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "9462:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9480:16:6",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1550,
                      "src": "9462:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9462:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 819,
                  "id": 823,
                  "nodeType": "Return",
                  "src": "9455:43:6"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "9387:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9410:2:6"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "9436:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9436:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9435:9:6"
            },
            "scope": 867,
            "src": "9378:127:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 865,
              "nodeType": "Block",
              "src": "9620:314:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 837,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 827,
                          "src": "9638:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 838,
                          "name": "validatorCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "9653:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9638:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9671:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9630:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9630:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "9630:55:6"
                },
                {
                  "assignments": [
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "9712:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 865,
                      "src": "9695:27:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$37_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 844,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 843,
                          "name": "Validator",
                          "nameLocations": [
                            "9695:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37,
                          "src": "9695:9:6"
                        },
                        "referencedDeclaration": 37,
                        "src": "9695:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$37_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 849,
                  "initialValue": {
                    "baseExpression": {
                      "id": 846,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "9725:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$37_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 848,
                    "indexExpression": {
                      "id": 847,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "9736:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9725:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$37_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9695:54:6"
                },
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "9764:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 865,
                      "src": "9759:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9759:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 857,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 854,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "9824:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$37_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9835:8:6",
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "9824:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 852,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "9775:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$1604",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9793:17:6",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1585,
                      "src": "9775:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9775:78:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9759:94:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 858,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "9871:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 859,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "9881:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$37_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9892:13:6",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "9881:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 861,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "9907:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$37_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9918:8:6",
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "9907:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 863,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9870:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bool,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 864,
                  "nodeType": "Return",
                  "src": "9863:64:6"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "9520:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "9554:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "9546:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9546:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9536:36:6"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "9596:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9596:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "9602:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9602:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "9611:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9611:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9595:24:6"
            },
            "scope": 867,
            "src": "9511:423:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 868,
        "src": "184:9752:6",
        "usedErrors": [],
        "usedEvents": [
          75,
          81,
          87,
          95,
          101,
          107,
          1746,
          1755
        ]
      }
    ],
    "src": "32:9905:6"
  },
  "bytecode": "6080604052676f05b59d3b200000606755348015601b57600080fd5b506123e98061002b6000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c806370a0823111610146578063a224cee7116100c3578063b8d4090d11610087578063b8d4090d14610588578063cdf64a76146105a8578063d8df5dc1146105bb578063dd62ed3e146105c4578063eabd4bd7146105fd578063f0c37a591461060557600080fd5b8063a224cee71461050d578063a457c2d714610520578063a9059cbb14610533578063ab05119014610546578063b77975371461054f57600080fd5b806396afc4501161010a57806396afc450146104c2578063991e0139146104cb57806399439089146104de5780639b701553146104f1578063a21bc3fb1461050457600080fd5b806370a082311461046c5780637c4053251461049557806388ef046d146104a857806395b84bc2146104b157806395d89b41146104ba57600080fd5b806337deea70116101d457806350355d761161019857806350355d761461042b57806356891412146104345780635a3e251f1461043d5780636e124888146104465780636e27d8891461045957600080fd5b806337deea701461039057806339509351146103985780633e47158c146103ab578063497dfe63146103d65780634a4fbeec146103eb57600080fd5b806323b872dd1161021b57806323b872dd146102db578063259a28cf146102ee57806327764547146102f8578063313ce5671461031857806335aa2e441461032757600080fd5b806306fdde0314610258578063095ea7b314610276578063180aedf31461029957806318160ddd146102ca57806320d3a0b4146102d2575b600080fd5b61026061060e565b60405161026d9190611cc5565b60405180910390f35b610289610284366004611d2b565b6106a0565b604051901515815260200161026d565b6102bc6102a7366004611d55565b606f6020526000908152604090206001015481565b60405190815260200161026d565b6035546102bc565b6102bc606d5481565b6102896102e9366004611d6e565b6106ba565b6102bc6212750081565b6102bc610306366004611daa565b60716020526000908152604090205481565b6040516012815260200161026d565b610366610335366004611d55565b60706020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b039095168552602085019390935291830152606082015260800161026d565b6102bc6106de565b6102896103a6366004611d2b565b610751565b6066546103be906001600160a01b031681565b6040516001600160a01b03909116815260200161026d565b6103e96103e4366004611dcc565b610790565b005b6102896103f9366004611daa565b6001600160a01b0316600090815260716020908152604080832054606954908452607090925290912060010154101590565b6102bc60725481565b6102bc606c5481565b6102bc606a5481565b6103e9610454366004611ecf565b61090f565b6103e9610467366004611d55565b610ab4565b6102bc61047a366004611daa565b6001600160a01b031660009081526033602052604090205490565b6103e96104a3366004611d55565b610ac1565b6102bc606b5481565b6102bc60675481565b610260610d35565b6102bc60685481565b6102bc6104d9366004611d55565b610d44565b6065546103be906001600160a01b031681565b6103e96104ff366004611fbd565b610ed9565b6102bc60755481565b6103e961051b366004612048565b61114b565b61028961052e366004611d2b565b6112d4565b610289610541366004611d2b565b611366565b6102bc60745481565b61056261055d366004611d55565b611374565b60408051931515845260208401929092526001600160a01b03169082015260600161026d565b6102bc610596366004611d55565b606e6020526000908152604090205481565b6103e96105b6366004611daa565b61147c565b6102bc60695481565b6102bc6105d2366004612085565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6103e96114f7565b6102bc60735481565b60606036805461061d906120b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610649906120b8565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b5050505050905090565b6000336106ae8185856115fd565b60019150505b92915050565b6000336106c8858285611721565b6106d38585856117ad565b506001949350505050565b606554604080516348f1712960e11b815290516000926001600160a01b0316916391e2e2529160048083019260209291908290030181865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c91906120f2565b905090565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906106ae908290869061078b908790612121565b6115fd565b3360009081526033602052604090205481111580156107b157506069548110155b6108025760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064015b60405180910390fd5b33600090815260716020526040902054156108745760405162461bcd60e51b815260206004820152602c60248201527f56616c696461746f7220616c726561647920637265617465642077697468207460448201526b686973206163636f756e742160a01b60648201526084016107f9565b6040805160808101825233808252600060208084018281528486018381526060860189815260748054865260708552888620975188546001600160a01b0319166001600160a01b039091161788559251600188015590516002870155516003909501949094559254828252607190935292909220556069546108f6919061197b565b6074805490600061090683612134565b91905055505050565b6065546001600160a01b031633146109395760405162461bcd60e51b81526004016107f99061214d565b606a54606b5410610969576067546068541115610969576002606860008282546109639190612193565b90915550505b600080865160000361098e57826068546109839190612121565b9150600090506109dd565b60648360685461099e9190612121565b6109a99060196121b5565b6109b39190612193565b91506064836068546109c59190612121565b6109d090604b6121b5565b6109da9190612193565b90505b60005b8451811015610a2057610a188582815181106109fe576109fe6121cc565b6020026020010151865185610a139190612193565b611afc565b6001016109e0565b50865115610a965760005b8751811015610a945760008683898481518110610a4a57610a4a6121cc565b6020026020010151610a5c91906121b5565b610a669190612193565b9050610a8b898381518110610a7d57610a7d6121cc565b602002602001015182611afc565b50600101610a2b565b505b606b8054906000610aa683612134565b919050555050505050505050565b610abe338261197b565b50565b3360009081526071602052604090205480610b1e5760405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120726567697374657265642076616c696461746f722e000000000060448201526064016107f9565b60008181526070602052604090206001810154831115610b805760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e000060448201526064016107f9565b60008311610ba05760405162461bcd60e51b81526004016107f9906121e2565b8060020154600003610c845760695481600101541015610c18576065546040516340a141ff60e01b81523360048201526001600160a01b03909116906340a141ff90602401600060405180830381600087803b158015610bff57600080fd5b505af1158015610c13573d6000803e3d6000fd5b505050505b606d54610c259042612121565b816002018190555082606c6000828254610c3f9190612223565b9091555050600281015460405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a2505050565b8060020154421015610cd85760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e000000000000000060448201526064016107f9565b82816001016000828254610cec9190612223565b90915550610cfd90503033856106ba565b5060405183815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e119588890602001610c77565b505050565b60606037805461061d906120b8565b6065546000906001600160a01b03163314610d715760405162461bcd60e51b81526004016107f99061214d565b6000828152606e602052604081205490819003610de05760728054906000610d9883612134565b9190505550807f45c386dc6524a2d9fe630455323c6a39f557c52ab01e886deee20a0b538147ac84604051610dcf91815260200190565b60405180910390a250600092915050565b6000818152606f60209081526040808320815181546060948102820185018452928101838152909391928492849190840182828015610e3e57602002820191906000526020600020905b815481526020019060010190808311610e2a575b505050918352505060019190910154602091820152818101516000858152606f909252604082209293509190610e748282611c47565b60018201600090555050606e600086815260200190815260200160002060009055827f45c386dc6524a2d9fe630455323c6a39f557c52ab01e886deee20a0b538147ac86604051610ec791815260200190565b60405180910390a2925050505b919050565b6000848152606e602052604090205415610f2c5760405162461bcd60e51b81526020600482015260146024820152734a6f6220616c726561647920637265617465642160601b60448201526064016107f9565b81610f795760405162461bcd60e51b815260206004820152601960248201527f4a6f62206d757374206861766520612063617061636974792e0000000000000060448201526064016107f9565b6072546000858152606e602052604090205580610fe35760405162461bcd60e51b815260206004820152602260248201527f5061796d656e74206d7573742062652067726561746572207468616e207a6572604482015261379760f11b60648201526084016107f9565b336000908152603360205260409020548111156110425760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064016107f9565b816110695760405162461bcd60e51b815260206004820152600060248201526044016107f9565b611075336000836117ad565b6040518060400160405280848480806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250505060209182018490526072548152606f8252604090208251805191926110df92849290910190611c65565b50602091820151600190910155607254604080519182529181018690529081018690527f1c6531f3b1dc9905436662823df97d3ce0c5b175e8a4c43f5df86f801a75853e9060600160405180910390a16072805490600061113f83612134565b91905055505050505050565b600054610100900460ff166111665760005460ff161561116a565b303b155b6111cd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107f9565b600054610100900460ff161580156111ef576000805461ffff19166101011790555b6112366040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611bdb565b606680546001600160a01b03191633179055686f05b59d3b2000000060685569152d02c7e14af6800000606955612226606a556000606b81905562127500606d556001607281905560748190556073555b82518110156112bd576112b58382815181106112a5576112a56121cc565b6020026020010151606954611afc565b600101611287565b5080156112d0576000805461ff00191690555b5050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156113595760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107f9565b6106d382868684036115fd565b6000336106ae8185856117ad565b600080600060745484106113b85760405162461bcd60e51b815260206004820152600b60248201526a24b73b30b634b21024a21760a91b60448201526064016107f9565b6000848152607060209081526040808320815160808101835281546001600160a01b0390811680835260018401549583019590955260028301548285015260039092015460608201526065549251631015428760e21b8152600481019490945293929116906340550a1c90602401602060405180830381865afa158015611443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114679190612236565b60608301519251909792965094509092505050565b6065546001600160a01b0316156114d55760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e000060448201526064016107f9565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6066546001600160a01b031633146115515760405162461bcd60e51b815260206004820152601f60248201527f43616c6c6572206d757374206265207468652070726f78792061646d696e2e0060448201526064016107f9565b6002606760008282546115649190612193565b9250508190555060026068600082825461157e9190612193565b925050819055506002606a600082825461159891906121b5565b90915550506065546040805163762193b960e11b815290516001600160a01b039092169163ec4327729160048082019260009290919082900301818387803b1580156115e357600080fd5b505af11580156115f7573d6000803e3d6000fd5b50505050565b6001600160a01b03831661165f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107f9565b6001600160a01b0382166116c05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107f9565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526034602090815260408083209386168352929052205460001981146115f757818110156117a05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107f9565b6115f784848484036115fd565b6001600160a01b0383166118115760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107f9565b6001600160a01b0382166118735760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107f9565b6001600160a01b038316600090815260336020526040902054818110156118eb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107f9565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611922908490612121565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161196e91815260200190565b60405180910390a36115f7565b6000811161199b5760405162461bcd60e51b81526004016107f9906121e2565b806119bb836001600160a01b031660009081526033602052604090205490565b1015611a015760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016107f9565b6001600160a01b03821660009081526071602052604081205490819003611a6a5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220646f6573206e6f742065786973742e0000000000000060448201526064016107f9565b611a758330846106ba565b5060008181526070602052604081206001018054849290611a97908490612121565b9250508190555081606c6000828254611ab09190612121565b9091555050604080516001600160a01b0385168152602081018490527fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c910160405180910390a1505050565b6001600160a01b038216611b525760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107f9565b8060356000828254611b649190612121565b90915550506001600160a01b03821660009081526033602052604081208054839290611b91908490612121565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16611c025760405162461bcd60e51b81526004016107f990612258565b6112d08282600054610100900460ff16611c2e5760405162461bcd60e51b81526004016107f990612258565b6036611c3a83826122f3565b506037610d3082826122f3565b5080546000825590600052602060002090810190610abe9190611cb0565b828054828255906000526020600020908101928215611ca0579160200282015b82811115611ca0578251825591602001919060010190611c85565b50611cac929150611cb0565b5090565b5b80821115611cac5760008155600101611cb1565b60006020808352835180602085015260005b81811015611cf357858101830151858201604001528201611cd7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ed457600080fd5b60008060408385031215611d3e57600080fd5b611d4783611d14565b946020939093013593505050565b600060208284031215611d6757600080fd5b5035919050565b600080600060608486031215611d8357600080fd5b611d8c84611d14565b9250611d9a60208501611d14565b9150604084013590509250925092565b600060208284031215611dbc57600080fd5b611dc582611d14565b9392505050565b60008060408385031215611ddf57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e2d57611e2d611dee565b604052919050565b600067ffffffffffffffff821115611e4f57611e4f611dee565b5060051b60200190565b600082601f830112611e6a57600080fd5b81356020611e7f611e7a83611e35565b611e04565b8083825260208201915060208460051b870101935086841115611ea157600080fd5b602086015b84811015611ec457611eb781611d14565b8352918301918301611ea6565b509695505050505050565b600080600080600060a08688031215611ee757600080fd5b853567ffffffffffffffff80821115611eff57600080fd5b611f0b89838a01611e59565b9650602091508188013581811115611f2257600080fd5b8801601f81018a13611f3357600080fd5b8035611f41611e7a82611e35565b81815260059190911b8201840190848101908c831115611f6057600080fd5b928501925b82841015611f7e57833582529285019290850190611f65565b9850505050604088013594506060880135915080821115611f9e57600080fd5b50611fab88828901611e59565b95989497509295608001359392505050565b600080600080600060808688031215611fd557600080fd5b8535945060208601359350604086013567ffffffffffffffff80821115611ffb57600080fd5b818801915088601f83011261200f57600080fd5b81358181111561201e57600080fd5b8960208260051b850101111561203357600080fd5b96999598505060200195606001359392505050565b60006020828403121561205a57600080fd5b813567ffffffffffffffff81111561207157600080fd5b61207d84828501611e59565b949350505050565b6000806040838503121561209857600080fd5b6120a183611d14565b91506120af60208401611d14565b90509250929050565b600181811c908216806120cc57607f821691505b6020821081036120ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561210457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106b4576106b461210b565b6000600182016121465761214661210b565b5060010190565b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b6000826121b057634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176106b4576106b461210b565b634e487b7160e01b600052603260045260246000fd5b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b818103818111156106b4576106b461210b565b60006020828403121561224857600080fd5b81518015158114611dc557600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610d30576000816000526020600020601f850160051c810160208610156122cc5750805b601f850160051c820191505b818110156122eb578281556001016122d8565b505050505050565b815167ffffffffffffffff81111561230d5761230d611dee565b6123218161231b84546120b8565b846122a3565b602080601f831160018114612356576000841561233e5750858301515b600019600386901b1c1916600185901b1785556122eb565b600085815260208120601f198616915b8281101561238557888601518255948401946001909101908401612366565b50858210156123a35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122063ee5f5fc0cd8021adc1f7471b0c03c4018c3c059f9b72d5d2a3ed569dcb167264736f6c63430008190033",
  "bytecodeSha1": "f5e092c0cf77f75a48cdef8ec8ad9e12dfe0324a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20Upgradeable.__ERC20_init": {
          "146": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "144": [
            2369,
            2382,
            true
          ],
          "145": [
            2369,
            2417,
            true
          ]
        }
      },
      "1": {
        "ERC20Upgradeable._approve": {
          "136": [
            10591,
            10610,
            true
          ],
          "137": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "143": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "138": [
            11303,
            11340,
            false
          ],
          "139": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "140": [
            7951,
            7969,
            true
          ],
          "141": [
            8029,
            8045,
            true
          ],
          "142": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "135": [
            7152,
            7187,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {},
      "6": {
        "SmartnodesCore._lockTokens": {
          "132": [
            6523,
            6533,
            true
          ],
          "133": [
            6589,
            6616,
            true
          ],
          "134": [
            6721,
            6737,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "124": [
            4605,
            4615,
            false
          ]
        },
        "SmartnodesCore.createValidator": {
          "111": [
            8584,
            8620,
            false
          ],
          "112": [
            8624,
            8649,
            true
          ],
          "113": [
            8733,
            8770,
            true
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "130": [
            9638,
            9669,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "114": [
            5320,
            5359,
            false
          ],
          "115": [
            5379,
            5406,
            false
          ],
          "116": [
            5546,
            5566,
            false
          ],
          "117": [
            6060,
            6079,
            false
          ]
        },
        "SmartnodesCore.requestJob": {
          "125": [
            3441,
            3466,
            true
          ],
          "126": [
            3509,
            3530,
            true
          ],
          "127": [
            3663,
            3680,
            true
          ],
          "128": [
            3750,
            3788,
            true
          ],
          "129": [
            3859,
            3880,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "131": [
            2576,
            2616,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "118": [
            7187,
            7202,
            true
          ],
          "119": [
            7317,
            7343,
            true
          ],
          "120": [
            7396,
            7406,
            true
          ],
          "121": [
            7530,
            7555,
            false
          ],
          "122": [
            7575,
            7604,
            false
          ],
          "123": [
            8077,
            8116,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "0": {
        "Initializable._isConstructor": {
          "60": [
            3101,
            3153
          ]
        }
      },
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "108": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "109": [
            2381,
            2394
          ],
          "110": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "84": [
            10583,
            10651
          ],
          "85": [
            10661,
            10729
          ],
          "86": [
            10740,
            10776
          ],
          "87": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "104": [
            8827,
            8892
          ],
          "105": [
            8963,
            8985
          ],
          "106": [
            8995,
            9023
          ],
          "107": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "88": [
            11356,
            11424
          ],
          "89": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "90": [
            7943,
            8011
          ],
          "91": [
            8021,
            8085
          ],
          "92": [
            8192,
            8264
          ],
          "93": [
            8298,
            8336
          ],
          "94": [
            8356,
            8379
          ],
          "95": [
            8390,
            8421
          ],
          "96": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "4": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "7": [
            4907,
            4939
          ],
          "8": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "73": [
            7144,
            7229
          ],
          "74": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "13": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "5": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "42": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "75": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "9": [
            5712,
            5750
          ],
          "10": [
            5760,
            5787
          ],
          "11": [
            5797,
            5808
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {
        "ContextUpgradeable._msgSender": {
          "6": [
            922,
            939
          ]
        }
      },
      "6": {
        "SmartnodesCore._lockTokens": {
          "97": [
            6515,
            6571
          ],
          "98": [
            6581,
            6642
          ],
          "99": [
            6713,
            6767
          ],
          "100": [
            6778,
            6821
          ],
          "101": [
            6831,
            6871
          ],
          "102": [
            6881,
            6902
          ],
          "103": [
            6913,
            6946
          ]
        },
        "SmartnodesCore.completeJob": {
          "43": [
            4681,
            4693
          ],
          "44": [
            4707,
            4740
          ],
          "45": [
            4754,
            4762
          ],
          "46": [
            4928,
            4946
          ],
          "47": [
            4956,
            4983
          ],
          "48": [
            4993,
            5026
          ],
          "49": [
            5036,
            5054
          ]
        },
        "SmartnodesCore.createValidator": {
          "14": [
            8563,
            8702
          ],
          "15": [
            8712,
            8840
          ],
          "16": [
            8851,
            9030
          ],
          "17": [
            9041,
            9092
          ],
          "18": [
            9102,
            9137
          ],
          "19": [
            9148,
            9166
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "12": [
            9455,
            9498
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "76": [
            9630,
            9685
          ],
          "77": [
            9863,
            9927
          ]
        },
        "SmartnodesCore.halveStateTime": {
          "80": [
            2958,
            2975
          ],
          "81": [
            2985,
            3002
          ],
          "82": [
            3012,
            3030
          ],
          "83": [
            3093,
            3124
          ]
        },
        "SmartnodesCore.initialize": {
          "61": [
            2013,
            2046
          ],
          "62": [
            2056,
            2079
          ],
          "63": [
            2089,
            2111
          ],
          "64": [
            2121,
            2144
          ],
          "65": [
            2154,
            2174
          ],
          "66": [
            2184,
            2210
          ],
          "67": [
            2220,
            2244
          ],
          "68": [
            2279,
            2293
          ],
          "69": [
            2303,
            2323
          ],
          "70": [
            2333,
            2348
          ],
          "71": [
            2421,
            2456
          ],
          "72": [
            2402,
            2405
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            9323,
            9365
          ]
        },
        "SmartnodesCore.lockTokens": {
          "30": [
            7014,
            7045
          ]
        },
        "SmartnodesCore.mintTokens": {
          "20": [
            5426,
            5443
          ],
          "21": [
            5582,
            5631
          ],
          "22": [
            5645,
            5661
          ],
          "23": [
            5692,
            5756
          ],
          "24": [
            5770,
            5831
          ],
          "25": [
            5920,
            6035
          ],
          "26": [
            5901,
            5904
          ],
          "27": [
            6264,
            6290
          ],
          "28": [
            6136,
            6139
          ],
          "29": [
            6325,
            6349
          ]
        },
        "SmartnodesCore.requestJob": {
          "50": [
            3433,
            3491
          ],
          "51": [
            3501,
            3560
          ],
          "52": [
            3570,
            3603
          ],
          "53": [
            3655,
            3719
          ],
          "54": [
            3729,
            3841
          ],
          "55": [
            3851,
            3885
          ],
          "56": [
            3949,
            3997
          ],
          "57": [
            4103,
            4237
          ],
          "58": [
            4248,
            4296
          ],
          "59": [
            4306,
            4318
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "78": [
            2555,
            2672
          ],
          "79": [
            2682,
            2740
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "31": [
            7179,
            7234
          ],
          "32": [
            7309,
            7378
          ],
          "33": [
            7388,
            7444
          ],
          "34": [
            7624,
            7669
          ],
          "35": [
            7697,
            7750
          ],
          "36": [
            7826,
            7847
          ],
          "37": [
            7862,
            7916
          ],
          "38": [
            8052,
            8174
          ],
          "39": [
            8189,
            8215
          ],
          "40": [
            8229,
            8276
          ],
          "41": [
            8338,
            8377
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102535760003560e01c806370a0823111610146578063a224cee7116100c3578063b8d4090d11610087578063b8d4090d14610588578063cdf64a76146105a8578063d8df5dc1146105bb578063dd62ed3e146105c4578063eabd4bd7146105fd578063f0c37a591461060557600080fd5b8063a224cee71461050d578063a457c2d714610520578063a9059cbb14610533578063ab05119014610546578063b77975371461054f57600080fd5b806396afc4501161010a57806396afc450146104c2578063991e0139146104cb57806399439089146104de5780639b701553146104f1578063a21bc3fb1461050457600080fd5b806370a082311461046c5780637c4053251461049557806388ef046d146104a857806395b84bc2146104b157806395d89b41146104ba57600080fd5b806337deea70116101d457806350355d761161019857806350355d761461042b57806356891412146104345780635a3e251f1461043d5780636e124888146104465780636e27d8891461045957600080fd5b806337deea701461039057806339509351146103985780633e47158c146103ab578063497dfe63146103d65780634a4fbeec146103eb57600080fd5b806323b872dd1161021b57806323b872dd146102db578063259a28cf146102ee57806327764547146102f8578063313ce5671461031857806335aa2e441461032757600080fd5b806306fdde0314610258578063095ea7b314610276578063180aedf31461029957806318160ddd146102ca57806320d3a0b4146102d2575b600080fd5b61026061060e565b60405161026d9190611cc5565b60405180910390f35b610289610284366004611d2b565b6106a0565b604051901515815260200161026d565b6102bc6102a7366004611d55565b606f6020526000908152604090206001015481565b60405190815260200161026d565b6035546102bc565b6102bc606d5481565b6102896102e9366004611d6e565b6106ba565b6102bc6212750081565b6102bc610306366004611daa565b60716020526000908152604090205481565b6040516012815260200161026d565b610366610335366004611d55565b60706020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b039095168552602085019390935291830152606082015260800161026d565b6102bc6106de565b6102896103a6366004611d2b565b610751565b6066546103be906001600160a01b031681565b6040516001600160a01b03909116815260200161026d565b6103e96103e4366004611dcc565b610790565b005b6102896103f9366004611daa565b6001600160a01b0316600090815260716020908152604080832054606954908452607090925290912060010154101590565b6102bc60725481565b6102bc606c5481565b6102bc606a5481565b6103e9610454366004611ecf565b61090f565b6103e9610467366004611d55565b610ab4565b6102bc61047a366004611daa565b6001600160a01b031660009081526033602052604090205490565b6103e96104a3366004611d55565b610ac1565b6102bc606b5481565b6102bc60675481565b610260610d35565b6102bc60685481565b6102bc6104d9366004611d55565b610d44565b6065546103be906001600160a01b031681565b6103e96104ff366004611fbd565b610ed9565b6102bc60755481565b6103e961051b366004612048565b61114b565b61028961052e366004611d2b565b6112d4565b610289610541366004611d2b565b611366565b6102bc60745481565b61056261055d366004611d55565b611374565b60408051931515845260208401929092526001600160a01b03169082015260600161026d565b6102bc610596366004611d55565b606e6020526000908152604090205481565b6103e96105b6366004611daa565b61147c565b6102bc60695481565b6102bc6105d2366004612085565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6103e96114f7565b6102bc60735481565b60606036805461061d906120b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610649906120b8565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b5050505050905090565b6000336106ae8185856115fd565b60019150505b92915050565b6000336106c8858285611721565b6106d38585856117ad565b506001949350505050565b606554604080516348f1712960e11b815290516000926001600160a01b0316916391e2e2529160048083019260209291908290030181865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c91906120f2565b905090565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906106ae908290869061078b908790612121565b6115fd565b3360009081526033602052604090205481111580156107b157506069548110155b6108025760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064015b60405180910390fd5b33600090815260716020526040902054156108745760405162461bcd60e51b815260206004820152602c60248201527f56616c696461746f7220616c726561647920637265617465642077697468207460448201526b686973206163636f756e742160a01b60648201526084016107f9565b6040805160808101825233808252600060208084018281528486018381526060860189815260748054865260708552888620975188546001600160a01b0319166001600160a01b039091161788559251600188015590516002870155516003909501949094559254828252607190935292909220556069546108f6919061197b565b6074805490600061090683612134565b91905055505050565b6065546001600160a01b031633146109395760405162461bcd60e51b81526004016107f99061214d565b606a54606b5410610969576067546068541115610969576002606860008282546109639190612193565b90915550505b600080865160000361098e57826068546109839190612121565b9150600090506109dd565b60648360685461099e9190612121565b6109a99060196121b5565b6109b39190612193565b91506064836068546109c59190612121565b6109d090604b6121b5565b6109da9190612193565b90505b60005b8451811015610a2057610a188582815181106109fe576109fe6121cc565b6020026020010151865185610a139190612193565b611afc565b6001016109e0565b50865115610a965760005b8751811015610a945760008683898481518110610a4a57610a4a6121cc565b6020026020010151610a5c91906121b5565b610a669190612193565b9050610a8b898381518110610a7d57610a7d6121cc565b602002602001015182611afc565b50600101610a2b565b505b606b8054906000610aa683612134565b919050555050505050505050565b610abe338261197b565b50565b3360009081526071602052604090205480610b1e5760405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120726567697374657265642076616c696461746f722e000000000060448201526064016107f9565b60008181526070602052604090206001810154831115610b805760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e000060448201526064016107f9565b60008311610ba05760405162461bcd60e51b81526004016107f9906121e2565b8060020154600003610c845760695481600101541015610c18576065546040516340a141ff60e01b81523360048201526001600160a01b03909116906340a141ff90602401600060405180830381600087803b158015610bff57600080fd5b505af1158015610c13573d6000803e3d6000fd5b505050505b606d54610c259042612121565b816002018190555082606c6000828254610c3f9190612223565b9091555050600281015460405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a2505050565b8060020154421015610cd85760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e000000000000000060448201526064016107f9565b82816001016000828254610cec9190612223565b90915550610cfd90503033856106ba565b5060405183815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e119588890602001610c77565b505050565b60606037805461061d906120b8565b6065546000906001600160a01b03163314610d715760405162461bcd60e51b81526004016107f99061214d565b6000828152606e602052604081205490819003610de05760728054906000610d9883612134565b9190505550807f45c386dc6524a2d9fe630455323c6a39f557c52ab01e886deee20a0b538147ac84604051610dcf91815260200190565b60405180910390a250600092915050565b6000818152606f60209081526040808320815181546060948102820185018452928101838152909391928492849190840182828015610e3e57602002820191906000526020600020905b815481526020019060010190808311610e2a575b505050918352505060019190910154602091820152818101516000858152606f909252604082209293509190610e748282611c47565b60018201600090555050606e600086815260200190815260200160002060009055827f45c386dc6524a2d9fe630455323c6a39f557c52ab01e886deee20a0b538147ac86604051610ec791815260200190565b60405180910390a2925050505b919050565b6000848152606e602052604090205415610f2c5760405162461bcd60e51b81526020600482015260146024820152734a6f6220616c726561647920637265617465642160601b60448201526064016107f9565b81610f795760405162461bcd60e51b815260206004820152601960248201527f4a6f62206d757374206861766520612063617061636974792e0000000000000060448201526064016107f9565b6072546000858152606e602052604090205580610fe35760405162461bcd60e51b815260206004820152602260248201527f5061796d656e74206d7573742062652067726561746572207468616e207a6572604482015261379760f11b60648201526084016107f9565b336000908152603360205260409020548111156110425760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e000000000060448201526064016107f9565b816110695760405162461bcd60e51b815260206004820152600060248201526044016107f9565b611075336000836117ad565b6040518060400160405280848480806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250505060209182018490526072548152606f8252604090208251805191926110df92849290910190611c65565b50602091820151600190910155607254604080519182529181018690529081018690527f1c6531f3b1dc9905436662823df97d3ce0c5b175e8a4c43f5df86f801a75853e9060600160405180910390a16072805490600061113f83612134565b91905055505050505050565b600054610100900460ff166111665760005460ff161561116a565b303b155b6111cd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107f9565b600054610100900460ff161580156111ef576000805461ffff19166101011790555b6112366040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611bdb565b606680546001600160a01b03191633179055686f05b59d3b2000000060685569152d02c7e14af6800000606955612226606a556000606b81905562127500606d556001607281905560748190556073555b82518110156112bd576112b58382815181106112a5576112a56121cc565b6020026020010151606954611afc565b600101611287565b5080156112d0576000805461ff00191690555b5050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156113595760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107f9565b6106d382868684036115fd565b6000336106ae8185856117ad565b600080600060745484106113b85760405162461bcd60e51b815260206004820152600b60248201526a24b73b30b634b21024a21760a91b60448201526064016107f9565b6000848152607060209081526040808320815160808101835281546001600160a01b0390811680835260018401549583019590955260028301548285015260039092015460608201526065549251631015428760e21b8152600481019490945293929116906340550a1c90602401602060405180830381865afa158015611443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114679190612236565b60608301519251909792965094509092505050565b6065546001600160a01b0316156114d55760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e000060448201526064016107f9565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6066546001600160a01b031633146115515760405162461bcd60e51b815260206004820152601f60248201527f43616c6c6572206d757374206265207468652070726f78792061646d696e2e0060448201526064016107f9565b6002606760008282546115649190612193565b9250508190555060026068600082825461157e9190612193565b925050819055506002606a600082825461159891906121b5565b90915550506065546040805163762193b960e11b815290516001600160a01b039092169163ec4327729160048082019260009290919082900301818387803b1580156115e357600080fd5b505af11580156115f7573d6000803e3d6000fd5b50505050565b6001600160a01b03831661165f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107f9565b6001600160a01b0382166116c05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107f9565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526034602090815260408083209386168352929052205460001981146115f757818110156117a05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107f9565b6115f784848484036115fd565b6001600160a01b0383166118115760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107f9565b6001600160a01b0382166118735760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107f9565b6001600160a01b038316600090815260336020526040902054818110156118eb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107f9565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611922908490612121565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161196e91815260200190565b60405180910390a36115f7565b6000811161199b5760405162461bcd60e51b81526004016107f9906121e2565b806119bb836001600160a01b031660009081526033602052604090205490565b1015611a015760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016107f9565b6001600160a01b03821660009081526071602052604081205490819003611a6a5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220646f6573206e6f742065786973742e0000000000000060448201526064016107f9565b611a758330846106ba565b5060008181526070602052604081206001018054849290611a97908490612121565b9250508190555081606c6000828254611ab09190612121565b9091555050604080516001600160a01b0385168152602081018490527fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c910160405180910390a1505050565b6001600160a01b038216611b525760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107f9565b8060356000828254611b649190612121565b90915550506001600160a01b03821660009081526033602052604081208054839290611b91908490612121565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16611c025760405162461bcd60e51b81526004016107f990612258565b6112d08282600054610100900460ff16611c2e5760405162461bcd60e51b81526004016107f990612258565b6036611c3a83826122f3565b506037610d3082826122f3565b5080546000825590600052602060002090810190610abe9190611cb0565b828054828255906000526020600020908101928215611ca0579160200282015b82811115611ca0578251825591602001919060010190611c85565b50611cac929150611cb0565b5090565b5b80821115611cac5760008155600101611cb1565b60006020808352835180602085015260005b81811015611cf357858101830151858201604001528201611cd7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ed457600080fd5b60008060408385031215611d3e57600080fd5b611d4783611d14565b946020939093013593505050565b600060208284031215611d6757600080fd5b5035919050565b600080600060608486031215611d8357600080fd5b611d8c84611d14565b9250611d9a60208501611d14565b9150604084013590509250925092565b600060208284031215611dbc57600080fd5b611dc582611d14565b9392505050565b60008060408385031215611ddf57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e2d57611e2d611dee565b604052919050565b600067ffffffffffffffff821115611e4f57611e4f611dee565b5060051b60200190565b600082601f830112611e6a57600080fd5b81356020611e7f611e7a83611e35565b611e04565b8083825260208201915060208460051b870101935086841115611ea157600080fd5b602086015b84811015611ec457611eb781611d14565b8352918301918301611ea6565b509695505050505050565b600080600080600060a08688031215611ee757600080fd5b853567ffffffffffffffff80821115611eff57600080fd5b611f0b89838a01611e59565b9650602091508188013581811115611f2257600080fd5b8801601f81018a13611f3357600080fd5b8035611f41611e7a82611e35565b81815260059190911b8201840190848101908c831115611f6057600080fd5b928501925b82841015611f7e57833582529285019290850190611f65565b9850505050604088013594506060880135915080821115611f9e57600080fd5b50611fab88828901611e59565b95989497509295608001359392505050565b600080600080600060808688031215611fd557600080fd5b8535945060208601359350604086013567ffffffffffffffff80821115611ffb57600080fd5b818801915088601f83011261200f57600080fd5b81358181111561201e57600080fd5b8960208260051b850101111561203357600080fd5b96999598505060200195606001359392505050565b60006020828403121561205a57600080fd5b813567ffffffffffffffff81111561207157600080fd5b61207d84828501611e59565b949350505050565b6000806040838503121561209857600080fd5b6120a183611d14565b91506120af60208401611d14565b90509250929050565b600181811c908216806120cc57607f821691505b6020821081036120ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561210457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106b4576106b461210b565b6000600182016121465761214661210b565b5060010190565b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b6000826121b057634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176106b4576106b461210b565b634e487b7160e01b600052603260045260246000fd5b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b818103818111156106b4576106b461210b565b60006020828403121561224857600080fd5b81518015158114611dc557600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610d30576000816000526020600020601f850160051c810160208610156122cc5750805b601f850160051c820191505b818110156122eb578281556001016122d8565b505050505050565b815167ffffffffffffffff81111561230d5761230d611dee565b6123218161231b84546120b8565b846122a3565b602080601f831160018114612356576000841561233e5750858301515b600019600386901b1c1916600185901b1785556122eb565b600085815260208120601f198616915b8281101561238557888601518255948401946001909101908401612366565b50858210156123a35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122063ee5f5fc0cd8021adc1f7471b0c03c4018c3c059f9b72d5d2a3ed569dcb167264736f6c63430008190033",
  "deployedSourceMap": "184:9752:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;4770:197:1;1004:187:8;911:35:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1527:25:8;;;1515:2;1500:18;911:35:6;1381:177:8;3581:106:1;3668:12;;3581:106;;607:27:6;;;;;;5529:286:1;;;;;;:::i;:::-;;:::i;356:49:6:-;;396:9;356:49;;1005:55;;;;;;:::i;:::-;;;;;;;;;;;;;;3430:91:1;;;3512:2;2229:36:8;;2217:2;2202:18;3430:91:1;2087:184:8;952:47:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;952:47:6;;;;;;;;;;;;-1:-1:-1;;;;;2525:32:8;;;2507:51;;2589:2;2574:18;;2567:34;;;;2617:18;;;2610:34;2675:2;2660:18;;2653:34;2494:3;2479:19;952:47:6;2276:417:8;9378:127:6;;;:::i;6210:236:1:-;;;;;;:::i;:::-;;:::i;284:25:6:-;;;;;-1:-1:-1;;;;;284:25:6;;;;;;-1:-1:-1;;;;;2862:32:8;;;2844:51;;2832:2;2817:18;284:25:6;2698:203:8;8452:721:6;;;;;;:::i;:::-;;:::i;:::-;;9179:193;;;;;;:::i;:::-;-1:-1:-1;;;;;9275:38:6;9246:4;9275:38;;;:20;:38;;;;;;;;;9355:10;;9330:14;;;:10;:14;;;;;;:21;;;:35;;;9179:193;1067:25;;;;;;575:26;;;;;;498:28;;;;;;5067:1289;;;;;;:::i;:::-;;:::i;6959:93::-;;;;;;:::i;:::-;;:::i;3745:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:1;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;7058:1388:6;;;;;;:::i;:::-;;:::i;532:37::-;;;;;;316:34;;;;;;2704:102:1;;;:::i;434:27:6:-;;;;;;4400:661;;;;;;:::i;:::-;;:::i;234:44::-;;;;;-1:-1:-1;;;;;234:44:6;;;3239:1086;;;;;;:::i;:::-;;:::i;1167:32::-;;;;;;1932:541;;;;;;:::i;:::-;;:::i;6933:429:1:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1130:31:6:-;;;;;;9511:423;;;;;;:::i;:::-;;:::i;:::-;;;;7765:14:8;;7758:22;7740:41;;7812:2;7797:18;;7790:34;;;;-1:-1:-1;;;;;7860:32:8;7840:18;;;7833:60;7728:2;7713:18;9511:423:6;7544:355:8;859:46:6;;;;;;:::i;:::-;;;;;;;;;;;;;;2479:268;;;;;;:::i;:::-;;:::i;467:25::-;;;;;;4313:149:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:1;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;2753:427:6;;;:::i;1098:26::-;;;;;;2493:98:1;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:5;4907:32:1;929:10:5;4923:7:1;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:5;5712:38:1;5728:4;929:10:5;5743:6:1;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:1;;5529:286;-1:-1:-1;;;;5529:286:1:o;9378:127:6:-;9462:17;;:36;;;-1:-1:-1;;;9462:36:6;;;;9436:7;;-1:-1:-1;;;;;9462:17:6;;:34;;:36;;;;;;;;;;;;;;:17;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9455:43;;9378:127;:::o;6210:236:1:-;929:10:5;6298:4:1;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:1;;;;;;;;;;6298:4;;929:10:5;6352:66:1;;929:10:5;;6377:27:1;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;8452:721:6:-;8594:10;3819:7:1;3845:18;;;:9;:18;;;;;;8609:11:6;-1:-1:-1;8584:36:6;:65;;;;;8639:10;;8624:11;:25;;8584:65;8563:139;;;;-1:-1:-1;;;8563:139:6;;9207:2:8;8563:139:6;;;9189:21:8;9246:2;9226:18;;;9219:30;9285:29;9265:18;;;9258:57;9332:18;;8563:139:6;;;;;;;;;8754:10;8733:32;;;;:20;:32;;;;;;:37;8712:128;;;;-1:-1:-1;;;8712:128:6;;9563:2:8;8712:128:6;;;9545:21:8;9602:2;9582:18;;;9575:30;9641:34;9621:18;;;9614:62;-1:-1:-1;;;9692:18:8;;;9685:42;9744:19;;8712:128:6;9361:408:8;8712:128:6;8882:148;;;;;;;;8916:10;8882:148;;;-1:-1:-1;8882:148:6;;;;;;;;;;;;;;;;;;;8862:16;;;8851:28;;:10;:28;;;;;:179;;;;-1:-1:-1;;;;;;8851:179:6;-1:-1:-1;;;;;8851:179:6;;;;;;;;-1:-1:-1;8851:179:6;;;;;;;;;;;;;;;;;;9076:16;;9041:32;;;:20;:32;;;;;;;:51;9126:10;;9102:35;;8916:10;9102:11;:35::i;:::-;9148:16;:18;;;:16;:18;;;:::i;:::-;;;;;;8452:721;;:::o;5067:1289::-;1698:17;;-1:-1:-1;;;;;1698:17:6;1676:10;:40;1655:125;;;;-1:-1:-1;;;1655:125:6;;;;;;;:::i;:::-;5346:13:::1;;5320:22;;:39;5316:152;;5394:12;;5379;;:27;5375:83;;;5442:1;5426:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5375:83:6::1;5478:23;5511:20:::0;5546:8:::1;:15;5565:1;5546:20:::0;5542:300:::1;;5615:16;5600:12;;:31;;;;:::i;:::-;5582:49;;5660:1;5645:16;;5542:300;;;5753:3;5727:16;5712:12;;:31;;;;:::i;:::-;5711:38;::::0;5747:2:::1;5711:38;:::i;:::-;5710:46;;;;:::i;:::-;5692:64;;5828:3;5802:16;5787:12;;:31;;;;:::i;:::-;5786:38;::::0;5822:2:::1;5786:38;:::i;:::-;5785:46;;;;:::i;:::-;5770:61;;5542:300;5857:9;5852:194;5876:16;:23;5872:1;:27;5852:194;;;5920:115;5943:16;5960:1;5943:19;;;;;;;;:::i;:::-;;;;;;;5998:16;:23;5980:15;:41;;;;:::i;:::-;5920:5;:115::i;:::-;5901:3;;5852:194;;;-1:-1:-1::0;6060:15:6;;:19;6056:259:::1;;6100:9;6095:210;6119:8;:15;6115:1;:19;6095:210;;;6159:14;6231;6195:12;6178:11;6190:1;6178:14;;;;;;;;:::i;:::-;;;;;;;:29;;;;:::i;:::-;6177:68;;;;:::i;:::-;6159:87;;6264:26;6270:8;6279:1;6270:11;;;;;;;;:::i;:::-;;;;;;;6283:6;6264:5;:26::i;:::-;-1:-1:-1::0;6136:3:6::1;;6095:210;;;;6056:259;6325:22;:24:::0;;;:22:::1;:24;::::0;::::1;:::i;:::-;;;;;;5306:1050;;5067:1289:::0;;;;;:::o;6959:93::-;7014:31;7026:10;7038:6;7014:11;:31::i;:::-;6959:93;:::o;7058:1388::-;7158:10;7115:19;7137:32;;;:20;:32;;;;;;7187:15;7179:55;;;;-1:-1:-1;;;7179:55:6;;11050:2:8;7179:55:6;;;11032:21:8;11089:2;11069:18;;;11062:30;11128:29;11108:18;;;11101:57;11175:18;;7179:55:6;10848:351:8;7179:55:6;7245:27;7275:23;;;:10;:23;;;;;7327:16;;;;7317:26;;;7309:69;;;;-1:-1:-1;;;7309:69:6;;11406:2:8;7309:69:6;;;11388:21:8;11445:2;11425:18;;;11418:30;11484:32;11464:18;;;11457:60;11534:18;;7309:69:6;11204:354:8;7309:69:6;7405:1;7396:6;:10;7388:56;;;;-1:-1:-1;;;7388:56:6;;;;;;;:::i;:::-;7530:9;:20;;;7554:1;7530:25;7526:914;;7594:10;;7575:9;:16;;;:29;7571:113;;;7624:17;;:45;;-1:-1:-1;;;7624:45:6;;7658:10;7624:45;;;2844:51:8;-1:-1:-1;;;;;7624:17:6;;;;:33;;2817:18:8;;7624:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7571:113;7738:12;;7720:30;;:15;:30;:::i;:::-;7697:9;:20;;:53;;;;7841:6;7826:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;7895:20:6;;;;7867:49;;1527:25:8;;;7883:10:6;;7867:49;;1515:2:8;1500:18;7867:49:6;;;;;;;;7105:1341;;7058:1388;:::o;7526:914::-;8096:9;:20;;;8077:15;:39;;8052:122;;;;-1:-1:-1;;;8052:122:6;;12300:2:8;8052:122:6;;;12282:21:8;12339:2;12319:18;;;12312:30;12378:26;12358:18;;;12351:54;12422:18;;8052:122:6;12098:348:8;8052:122:6;8209:6;8189:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;8229:47:6;;-1:-1:-1;8250:4:6;8257:10;8269:6;8229:12;:47::i;:::-;-1:-1:-1;8343:34:6;;1527:25:8;;;8358:10:6;;8343:34;;1515:2:8;1500:18;8343:34:6;1381:177:8;7526:914:6;7105:1341;;7058:1388;:::o;2704:102:1:-;2760:13;2792:7;2785:14;;;;;:::i;4400:661:6:-;1698:17;;4492:7;;-1:-1:-1;;;;;1698:17:6;1676:10;:40;1655:125;;;;-1:-1:-1;;;1655:125:6;;;;;;;:::i;:::-;4511:13:::1;4527:20:::0;;;:11:::1;:20;::::0;;;;;;4605:10;;;4601:172:::1;;4681:10;:12:::0;;;:10:::1;:12;::::0;::::1;:::i;:::-;;;;;;4725:5;4712:28;4732:7;4712:28;;;;1527:25:8::0;;1515:2;1500:18;;1381:177;4712:28:6::1;;;;;;;;-1:-1:-1::0;4761:1:6::1;::::0;4400:661;-1:-1:-1;;4400:661:6:o;4601:172::-:1;4827:14;4844:11:::0;;;:4:::1;:11;::::0;;;;;;;4827:28;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;4844:11;;4827:28;;4844:11;;4827:28;;;4844:11;4827:28;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4827:28:6;;;-1:-1:-1;;4827:28:6::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;4887:11;;::::1;::::0;-1:-1:-1;4935:11:6;;;:4:::1;:11:::0;;;;;;4827:28;;-1:-1:-1;4887:11:6;4935;4928:18:::1;4935:11:::0;-1:-1:-1;4928:18:6::1;:::i;:::-;;;;;;;;;4963:11;:20;4975:7;4963:20;;;;;;;;;;;4956:27;;;5011:5;4998:28;5018:7;4998:28;;;;1527:25:8::0;;1515:2;1500:18;;1381:177;4998:28:6::1;;;;;;;;5043:11:::0;-1:-1:-1;;;1790:1:6::1;4400:661:::0;;;:::o;3239:1086::-;3441:20;;;;:11;:20;;;;;;:25;3433:58;;;;-1:-1:-1;;;3433:58:6;;12835:2:8;3433:58:6;;;12817:21:8;12874:2;12854:18;;;12847:30;-1:-1:-1;;;12893:18:8;;;12886:50;12953:18;;3433:58:6;12633:344:8;3433:58:6;3509:21;3501:59;;;;-1:-1:-1;;;3501:59:6;;13184:2:8;3501:59:6;;;13166:21:8;13223:2;13203:18;;;13196:30;13262:27;13242:18;;;13235:55;13307:18;;3501:59:6;12982:349:8;3501:59:6;3593:10;;3570:20;;;;:11;:20;;;;;:33;3663:17;3655:64;;;;-1:-1:-1;;;3655:64:6;;13538:2:8;3655:64:6;;;13520:21:8;13577:2;13557:18;;;13550:30;13616:34;13596:18;;;13589:62;-1:-1:-1;;;13667:18:8;;;13660:32;13709:19;;3655:64:6;13336:398:8;3655:64:6;3760:10;3819:7:1;3845:18;;;:9;:18;;;;;;3775:13:6;-1:-1:-1;3750:38:6;3729:112;;;;-1:-1:-1;;;3729:112:6;;9207:2:8;3729:112:6;;;9189:21:8;9246:2;9226:18;;;9219:30;9285:29;9265:18;;;9258:57;9332:18;;3729:112:6;9005:351:8;3729:112:6;3859:21;3851:34;;;;-1:-1:-1;;;3851:34:6;;13941:2:8;3851:34:6;;;13923:21:8;-1:-1:-1;13960:18:8;;;13953:29;13999:18;;3851:34:6;13739:284:8;3851:34:6;3949:48;3959:10;3979:1;3983:13;3949:9;:48::i;:::-;4122:115;;;;;;;;4152:10;;4122:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4122:115:6;;;-1:-1:-1;;;4122:115:6;;;;;;;4108:10;;4103:16;;:4;:16;;;;;:134;;;;:16;;:134;;:16;;:134;;;;;:::i;:::-;-1:-1:-1;4103:134:6;;;;;;;;;;4266:10;;4253:43;;;14230:25:8;;;14271:18;;;14264:34;;;14314:18;;;14307:34;;;4253:43:6;;14218:2:8;14203:18;4253:43:6;;;;;;;4306:10;:12;;;:10;:12;;;:::i;:::-;;;;;;3239:1086;;;;;:::o;1932:541::-;2369:13:0;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:4;:23;2385:16:0;2361:107;;;;-1:-1:-1;;;2361:107:0;;14554:2:8;2361:107:0;;;14536:21:8;14593:2;14573:18;;;14566:30;14632:34;14612:18;;;14605:62;-1:-1:-1;;;14683:18:8;;;14676:44;14737:19;;2361:107:0;14352:410:8;2361:107:0;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:0;;;;;2525:98;2013:33:6::1;;;;;;;;;;;;;;-1:-1:-1::0;;;2013:33:6::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2013:33:6::1;;::::0;:12:::1;:33::i;:::-;2056:10;:23:::0;;-1:-1:-1;;;;;;2056:23:6::1;2069:10;2056:23;::::0;;2104:7:::1;2089:12;:22:::0;2134:10:::1;2121;:23:::0;2170:4:::1;2154:13;:20:::0;2056:10:::1;2184:22;:26:::0;;;2235:9:::1;2220:12;:24:::0;2056:23;2279:10:::1;:14:::0;;;2303:16:::1;:20:::0;;;2333:11:::1;:15:::0;2359:108:::1;2380:13;:20;2376:1;:24;2359:108;;;2421:35;2427:13;2441:1;2427:16;;;;;;;;:::i;:::-;;;;;;;2445:10;;2421:5;:35::i;:::-;2402:3;;2359:108;;;;2649:14:0::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:0;;;2645:66;2080:637;1932:541:6;:::o;6933:429:1:-;929:10:5;7026:4:1;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:1;;;;;;;;;;7026:4;;929:10:5;7152:35:1;;;;7144:85;;;;-1:-1:-1;;;7144:85:1;;14969:2:8;7144:85:1;;;14951:21:8;15008:2;14988:18;;;14981:30;15047:34;15027:18;;;15020:62;-1:-1:-1;;;15098:18:8;;;15091:35;15143:19;;7144:85:1;14767:401:8;7144:85:1;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:5;4199:28:1;929:10:5;4216:2:1;4220:6;4199:9;:28::i;9511:423:6:-;9596:4;9602:7;9611;9653:16;;9638:12;:31;9630:55;;;;-1:-1:-1;;;9630:55:6;;15375:2:8;9630:55:6;;;15357:21:8;15414:2;15394:18;;;15387:30;-1:-1:-1;;;15433:18:8;;;15426:41;15484:18;;9630:55:6;15173:335:8;9630:55:6;9695:27;9725:24;;;:10;:24;;;;;;;;9695:54;;;;;;;;;-1:-1:-1;;;;;9695:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9775:17;;:78;;-1:-1:-1;;;9775:78:6;;;;;2844:51:8;;;;9695:54:6;:27;9775:17;;;:35;;2817:18:8;;9775:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9881:24;;;;9907:19;;9759:94;;9881:24;;-1:-1:-1;9907:19:6;-1:-1:-1;9511:423:6;;-1:-1:-1;;;9511:423:6:o;2479:268::-;2584:17;;-1:-1:-1;;;;;2584:17:6;2576:40;2555:117;;;;-1:-1:-1;;;2555:117:6;;15997:2:8;2555:117:6;;;15979:21:8;16036:2;16016:18;;;16009:30;16075:32;16055:18;;;16048:60;16125:18;;2555:117:6;15795:354:8;2555:117:6;2682:17;:58;;-1:-1:-1;;;;;;2682:58:6;-1:-1:-1;;;;;2682:58:6;;;;;;;;;;2479:268::o;2753:427::-;1862:10;;-1:-1:-1;;;;;1862:10:6;1848;:24;1840:68;;;;-1:-1:-1;;;1840:68:6;;16356:2:8;1840:68:6;;;16338:21:8;16395:2;16375:18;;;16368:30;16434:33;16414:18;;;16407:61;16485:18;;1840:68:6;16154:355:8;1840:68:6;2974:1:::1;2958:12;;:17;;;;;;;:::i;:::-;;;;;;;;3001:1;2985:12;;:17;;;;;;;:::i;:::-;;;;;;;;3029:1;3012:13;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3093:17:6::1;::::0;:31:::1;::::0;;-1:-1:-1;;;3093:31:6;;;;-1:-1:-1;;;;;3093:17:6;;::::1;::::0;:29:::1;::::0;:31:::1;::::0;;::::1;::::0;:17:::1;::::0;:31;;;;;;;;:17;;:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2753:427::o:0;10460:370:1:-;-1:-1:-1;;;;;10591:19:1;;10583:68;;;;-1:-1:-1;;;10583:68:1;;16716:2:8;10583:68:1;;;16698:21:8;16755:2;16735:18;;;16728:30;16794:34;16774:18;;;16767:62;-1:-1:-1;;;16845:18:8;;;16838:34;16889:19;;10583:68:1;16514:400:8;10583:68:1;-1:-1:-1;;;;;10669:21:1;;10661:68;;;;-1:-1:-1;;;10661:68:1;;17121:2:8;10661:68:1;;;17103:21:8;17160:2;17140:18;;;17133:30;17199:34;17179:18;;;17172:62;-1:-1:-1;;;17250:18:8;;;17243:32;17292:19;;10661:68:1;16919:398:8;10661:68:1;-1:-1:-1;;;;;10740:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1527:25:8;;;10791:32:1;;1500:18:8;10791:32:1;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:1;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:1;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:1;;17524:2:8;11356:68:1;;;17506:21:8;17563:2;17543:18;;;17536:30;17602:31;17582:18;;;17575:59;17651:18;;11356:68:1;17322:353:8;11356:68:1;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;7825:651::-;-1:-1:-1;;;;;7951:18:1;;7943:68;;;;-1:-1:-1;;;7943:68:1;;17882:2:8;7943:68:1;;;17864:21:8;17921:2;17901:18;;;17894:30;17960:34;17940:18;;;17933:62;-1:-1:-1;;;18011:18:8;;;18004:35;18056:19;;7943:68:1;17680:401:8;7943:68:1;-1:-1:-1;;;;;8029:16:1;;8021:64;;;;-1:-1:-1;;;8021:64:1;;18288:2:8;8021:64:1;;;18270:21:8;18327:2;18307:18;;;18300:30;18366:34;18346:18;;;18339:62;-1:-1:-1;;;18417:18:8;;;18410:33;18460:19;;8021:64:1;18086:399:8;8021:64:1;-1:-1:-1;;;;;8167:15:1;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:1;;18692:2:8;8192:72:1;;;18674:21:8;18731:2;18711:18;;;18704:30;18770:34;18750:18;;;18743:62;-1:-1:-1;;;18821:18:8;;;18814:36;18867:19;;8192:72:1;18490:402:8;8192:72:1;-1:-1:-1;;;;;8298:15:1;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:1;8404:4;-1:-1:-1;;;;;8395:26:1;;8414:6;8395:26;;;;1527:25:8;;1515:2;1500:18;;1381:177;8395:26:1;;;;;;;;8432:37;7058:1388:6;6443:510;6532:1;6523:6;:10;6515:56;;;;-1:-1:-1;;;6515:56:6;;;;;;;:::i;:::-;6610:6;6589:17;6599:6;-1:-1:-1;;;;;3845:18:1;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;6589:17:6;:27;;6581:61;;;;-1:-1:-1;;;6581:61:6;;19099:2:8;6581:61:6;;;19081:21:8;19138:2;19118:18;;;19111:30;-1:-1:-1;;;19157:18:8;;;19150:51;19218:18;;6581:61:6;18897:345:8;6581:61:6;-1:-1:-1;;;;;6675:28:6;;6653:19;6675:28;;;:20;:28;;;;;;;6721:16;;;6713:54;;;;-1:-1:-1;;;6713:54:6;;19449:2:8;6713:54:6;;;19431:21:8;19488:2;19468:18;;;19461:30;19527:27;19507:18;;;19500:55;19572:18;;6713:54:6;19247:349:8;6713:54:6;6778:43;6791:6;6807:4;6814:6;6778:12;:43::i;:::-;-1:-1:-1;6831:23:6;;;;:10;:23;;;;;:30;;:40;;6865:6;;6831:23;:40;;6865:6;;6831:40;:::i;:::-;;;;;;;;6896:6;6881:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6918:28:6;;;-1:-1:-1;;;;;19793:32:8;;19775:51;;19857:2;19842:18;;19835:34;;;6918:28:6;;19748:18:8;6918:28:6;;;;;;;6505:448;6443:510;;:::o;8752:389:1:-;-1:-1:-1;;;;;8835:21:1;;8827:65;;;;-1:-1:-1;;;8827:65:1;;20082:2:8;8827:65:1;;;20064:21:8;20121:2;20101:18;;;20094:30;20160:33;20140:18;;;20133:61;20211:18;;8827:65:1;19880:355:8;8827:65:1;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:1;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:1;;1527:25:8;;;-1:-1:-1;;;;;9038:37:1;;;9055:1;;9038:37;;1515:2:8;1500:18;9038:37:1;;;;;;;2080:637:0;1932:541:6;:::o;2116:147:1:-;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2218:38:1::1;2241:5;2248:7;2952:13:0::0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2381:5:1::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:1::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:548:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1196:180::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;-1:-1:-1;1347:23:8;;1196:180;-1:-1:-1;1196:180:8:o;1563:328::-;1640:6;1648;1656;1709:2;1697:9;1688:7;1684:23;1680:32;1677:52;;;1725:1;1722;1715:12;1677:52;1748:29;1767:9;1748:29;:::i;:::-;1738:39;;1796:38;1830:2;1819:9;1815:18;1796:38;:::i;:::-;1786:48;;1881:2;1870:9;1866:18;1853:32;1843:42;;1563:328;;;;;:::o;1896:186::-;1955:6;2008:2;1996:9;1987:7;1983:23;1979:32;1976:52;;;2024:1;2021;2014:12;1976:52;2047:29;2066:9;2047:29;:::i;:::-;2037:39;1896:186;-1:-1:-1;;;1896:186:8:o;2906:248::-;2974:6;2982;3035:2;3023:9;3014:7;3010:23;3006:32;3003:52;;;3051:1;3048;3041:12;3003:52;-1:-1:-1;;3074:23:8;;;3144:2;3129:18;;;3116:32;;-1:-1:-1;2906:248:8:o;3159:127::-;3220:10;3215:3;3211:20;3208:1;3201:31;3251:4;3248:1;3241:15;3275:4;3272:1;3265:15;3291:275;3362:2;3356:9;3427:2;3408:13;;-1:-1:-1;;3404:27:8;3392:40;;3462:18;3447:34;;3483:22;;;3444:62;3441:88;;;3509:18;;:::i;:::-;3545:2;3538:22;3291:275;;-1:-1:-1;3291:275:8:o;3571:183::-;3631:4;3664:18;3656:6;3653:30;3650:56;;;3686:18;;:::i;:::-;-1:-1:-1;3731:1:8;3727:14;3743:4;3723:25;;3571:183::o;3759:674::-;3813:5;3866:3;3859:4;3851:6;3847:17;3843:27;3833:55;;3884:1;3881;3874:12;3833:55;3920:6;3907:20;3946:4;3970:60;3986:43;4026:2;3986:43;:::i;:::-;3970:60;:::i;:::-;4052:3;4076:2;4071:3;4064:15;4104:4;4099:3;4095:14;4088:21;;4161:4;4155:2;4152:1;4148:10;4140:6;4136:23;4132:34;4118:48;;4189:3;4181:6;4178:15;4175:35;;;4206:1;4203;4196:12;4175:35;4242:4;4234:6;4230:17;4256:148;4272:6;4267:3;4264:15;4256:148;;;4338:23;4357:3;4338:23;:::i;:::-;4326:36;;4382:12;;;;4289;;4256:148;;;-1:-1:-1;4422:5:8;3759:674;-1:-1:-1;;;;;;3759:674:8:o;4438:1502::-;4608:6;4616;4624;4632;4640;4693:3;4681:9;4672:7;4668:23;4664:33;4661:53;;;4710:1;4707;4700:12;4661:53;4750:9;4737:23;4779:18;4820:2;4812:6;4809:14;4806:34;;;4836:1;4833;4826:12;4806:34;4859:61;4912:7;4903:6;4892:9;4888:22;4859:61;:::i;:::-;4849:71;;4939:2;4929:12;;4994:2;4983:9;4979:18;4966:32;5023:2;5013:8;5010:16;5007:36;;;5039:1;5036;5029:12;5007:36;5062:24;;5117:4;5109:13;;5105:27;-1:-1:-1;5095:55:8;;5146:1;5143;5136:12;5095:55;5182:2;5169:16;5205:60;5221:43;5261:2;5221:43;:::i;5205:60::-;5299:15;;;5381:1;5377:10;;;;5369:19;;5365:28;;;5330:12;;;;5405:19;;;5402:39;;;5437:1;5434;5427:12;5402:39;5461:11;;;;5481:142;5497:6;5492:3;5489:15;5481:142;;;5563:17;;5551:30;;5514:12;;;;5601;;;;5481:142;;;5642:5;-1:-1:-1;;;;5694:2:8;5679:18;;5666:32;;-1:-1:-1;5751:2:8;5736:18;;5723:32;;-1:-1:-1;5767:16:8;;;5764:36;;;5796:1;5793;5786:12;5764:36;;5819:63;5874:7;5863:8;5852:9;5848:24;5819:63;:::i;:::-;4438:1502;;;;-1:-1:-1;4438:1502:8;;5929:3;5914:19;5901:33;;4438:1502;-1:-1:-1;;;4438:1502:8:o;6366:820::-;6479:6;6487;6495;6503;6511;6564:3;6552:9;6543:7;6539:23;6535:33;6532:53;;;6581:1;6578;6571:12;6532:53;6617:9;6604:23;6594:33;;6674:2;6663:9;6659:18;6646:32;6636:42;;6729:2;6718:9;6714:18;6701:32;6752:18;6793:2;6785:6;6782:14;6779:34;;;6809:1;6806;6799:12;6779:34;6847:6;6836:9;6832:22;6822:32;;6892:7;6885:4;6881:2;6877:13;6873:27;6863:55;;6914:1;6911;6904:12;6863:55;6954:2;6941:16;6980:2;6972:6;6969:14;6966:34;;;6996:1;6993;6986:12;6966:34;7049:7;7044:2;7034:6;7031:1;7027:14;7023:2;7019:23;7015:32;7012:45;7009:65;;;7070:1;7067;7060:12;7009:65;6366:820;;;;-1:-1:-1;;7101:2:8;7093:11;;7176:2;7161:18;7148:32;;6366:820;-1:-1:-1;;;6366:820:8:o;7191:348::-;7275:6;7328:2;7316:9;7307:7;7303:23;7299:32;7296:52;;;7344:1;7341;7334:12;7296:52;7384:9;7371:23;7417:18;7409:6;7406:30;7403:50;;;7449:1;7446;7439:12;7403:50;7472:61;7525:7;7516:6;7505:9;7501:22;7472:61;:::i;:::-;7462:71;7191:348;-1:-1:-1;;;;7191:348:8:o;7904:260::-;7972:6;7980;8033:2;8021:9;8012:7;8008:23;8004:32;8001:52;;;8049:1;8046;8039:12;8001:52;8072:29;8091:9;8072:29;:::i;:::-;8062:39;;8120:38;8154:2;8143:9;8139:18;8120:38;:::i;:::-;8110:48;;7904:260;;;;;:::o;8169:380::-;8248:1;8244:12;;;;8291;;;8312:61;;8366:4;8358:6;8354:17;8344:27;;8312:61;8419:2;8411:6;8408:14;8388:18;8385:38;8382:161;;8465:10;8460:3;8456:20;8453:1;8446:31;8500:4;8497:1;8490:15;8528:4;8525:1;8518:15;8382:161;;8169:380;;;:::o;8554:184::-;8624:6;8677:2;8665:9;8656:7;8652:23;8648:32;8645:52;;;8693:1;8690;8683:12;8645:52;-1:-1:-1;8716:16:8;;8554:184;-1:-1:-1;8554:184:8:o;8743:127::-;8804:10;8799:3;8795:20;8792:1;8785:31;8835:4;8832:1;8825:15;8859:4;8856:1;8849:15;8875:125;8940:9;;;8961:10;;;8958:36;;;8974:18;;:::i;9774:135::-;9813:3;9834:17;;;9831:43;;9854:18;;:::i;:::-;-1:-1:-1;9901:1:8;9890:13;;9774:135::o;9914:402::-;10116:2;10098:21;;;10155:2;10135:18;;;10128:30;10194:34;10189:2;10174:18;;10167:62;-1:-1:-1;;;10260:2:8;10245:18;;10238:36;10306:3;10291:19;;9914:402::o;10321:217::-;10361:1;10387;10377:132;;10431:10;10426:3;10422:20;10419:1;10412:31;10466:4;10463:1;10456:15;10494:4;10491:1;10484:15;10377:132;-1:-1:-1;10523:9:8;;10321:217::o;10543:168::-;10616:9;;;10647;;10664:15;;;10658:22;;10644:37;10634:71;;10685:18;;:::i;10716:127::-;10777:10;10772:3;10768:20;10765:1;10758:31;10808:4;10805:1;10798:15;10832:4;10829:1;10822:15;11563:397;11765:2;11747:21;;;11804:2;11784:18;;;11777:30;11843:34;11838:2;11823:18;;11816:62;-1:-1:-1;;;11909:2:8;11894:18;;11887:31;11950:3;11935:19;;11563:397::o;11965:128::-;12032:9;;;12053:11;;;12050:37;;;12067:18;;:::i;15513:277::-;15580:6;15633:2;15621:9;15612:7;15608:23;15604:32;15601:52;;;15649:1;15646;15639:12;15601:52;15681:9;15675:16;15734:5;15727:13;15720:21;15713:5;15710:32;15700:60;;15756:1;15753;15746:12;20240:407;20442:2;20424:21;;;20481:2;20461:18;;;20454:30;20520:34;20515:2;20500:18;;20493:62;-1:-1:-1;;;20586:2:8;20571:18;;20564:41;20637:3;20622:19;;20240:407::o;20778:543::-;20880:2;20875:3;20872:11;20869:446;;;20916:1;20940:5;20937:1;20930:16;20984:4;20981:1;20971:18;21054:2;21042:10;21038:19;21035:1;21031:27;21025:4;21021:38;21090:4;21078:10;21075:20;21072:47;;;-1:-1:-1;21113:4:8;21072:47;21168:2;21163:3;21159:12;21156:1;21152:20;21146:4;21142:31;21132:41;;21223:82;21241:2;21234:5;21231:13;21223:82;;;21286:17;;;21267:1;21256:13;21223:82;;;21227:3;;;20778:543;;;:::o;21497:1345::-;21623:3;21617:10;21650:18;21642:6;21639:30;21636:56;;;21672:18;;:::i;:::-;21701:97;21791:6;21751:38;21783:4;21777:11;21751:38;:::i;:::-;21745:4;21701:97;:::i;:::-;21853:4;;21910:2;21899:14;;21927:1;21922:663;;;;22629:1;22646:6;22643:89;;;-1:-1:-1;22698:19:8;;;22692:26;22643:89;-1:-1:-1;;21454:1:8;21450:11;;;21446:24;21442:29;21432:40;21478:1;21474:11;;;21429:57;22745:81;;21892:944;;21922:663;20725:1;20718:14;;;20762:4;20749:18;;-1:-1:-1;;21958:20:8;;;22076:236;22090:7;22087:1;22084:14;22076:236;;;22179:19;;;22173:26;22158:42;;22271:27;;;;22239:1;22227:14;;;;22106:19;;22076:236;;;22080:3;22340:6;22331:7;22328:19;22325:201;;;22401:19;;;22395:26;-1:-1:-1;;22484:1:8;22480:14;;;22496:3;22476:24;22472:37;22468:42;22453:58;22438:74;;22325:201;-1:-1:-1;;;;;22572:1:8;22556:14;;;22552:22;22539:36;;-1:-1:-1;21497:1345:8:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    184,
    9936
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA224CEE7 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB8D4090D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xB8D4090D EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0xEABD4BD7 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xAB051190 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96AFC450 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x991E0139 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x9B701553 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xA21BC3FB EQ PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x88EF046D EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x95B84BC2 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37DEEA70 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x50355D76 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x56891412 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x5A3E251F EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x6E124888 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x3E47158C EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x259A28CF EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x2D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x289 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x2BC PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x366 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x289 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x3BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCC JUMP JUMPDEST PUSH2 0x790 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x69 SLOAD SWAP1 DUP5 MSTORE PUSH1 0x70 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECF JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x467 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x3BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1FBD JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x75 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST PUSH2 0x289 PUSH2 0x52E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x289 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x74 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAA JUMP JUMPDEST PUSH2 0x147C JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x5D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x2BC PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x20B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x649 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x696 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x696 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x679 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6AE DUP2 DUP6 DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C8 DUP6 DUP3 DUP6 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x6D3 DUP6 DUP6 DUP6 PUSH2 0x17AD JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x6AE SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x78B SWAP1 DUP8 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x7B1 JUMPI POP PUSH1 0x69 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206372656174656420776974682074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x686973206163636F756E7421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP10 DUP2 MSTORE PUSH1 0x74 DUP1 SLOAD DUP7 MSTORE PUSH1 0x70 DUP6 MSTORE DUP9 DUP7 KECCAK256 SWAP8 MLOAD DUP9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP9 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP3 SLOAD DUP3 DUP3 MSTORE PUSH1 0x71 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SSTORE PUSH1 0x69 SLOAD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x74 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x906 DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x6B SLOAD LT PUSH2 0x969 JUMPI PUSH1 0x67 SLOAD PUSH1 0x68 SLOAD GT ISZERO PUSH2 0x969 JUMPI PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD PUSH1 0x0 SUB PUSH2 0x98E JUMPI DUP3 PUSH1 0x68 SLOAD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x68 SLOAD PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x9A9 SWAP1 PUSH1 0x19 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x9B3 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST SWAP2 POP PUSH1 0x64 DUP4 PUSH1 0x68 SLOAD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x9D0 SWAP1 PUSH1 0x4B PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA18 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 MLOAD DUP6 PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9E0 JUMP JUMPDEST POP DUP7 MLOAD ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP7 DUP4 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA4A JUMPI PUSH2 0xA4A PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST SWAP1 POP PUSH2 0xA8B DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA7D JUMPI PUSH2 0xA7D PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1AFC JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA2B JUMP JUMPDEST POP JUMPDEST PUSH1 0x6B DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xAA6 DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xABE CALLER DUP3 PUSH2 0x197B JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xC84 JUMPI PUSH1 0x69 SLOAD DUP2 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xC18 JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A141FF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40A141FF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x6D SLOAD PUSH2 0xC25 SWAP1 TIMESTAMP PUSH2 0x2121 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6C PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x2223 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x2223 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xCFD SWAP1 POP ADDRESS CALLER DUP6 PUSH2 0x6BA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0xC77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x61D SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDE0 JUMPI PUSH1 0x72 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD98 DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH32 0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC DUP5 PUSH1 0x40 MLOAD PUSH2 0xDCF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE2A JUMPI JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 DUP2 ADD MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6F SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH2 0xE74 DUP3 DUP3 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x6E PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP3 PUSH32 0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC DUP7 PUSH1 0x40 MLOAD PUSH2 0xEC7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4A6F6220616C7265616479206372656174656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST DUP2 PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4A6F62206D757374206861766520612063617061636974792E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206D7573742062652067726561746572207468616E207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3797 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST DUP2 PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1075 CALLER PUSH1 0x0 DUP4 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x20 SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x72 SLOAD DUP2 MSTORE PUSH1 0x6F DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x10DF SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0x72 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x1C6531F3B1DC9905436662823DF97D3CE0C5B175E8A4C43F5DF86F801A75853E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x72 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x113F DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1166 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x116A JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11EF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1236 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH9 0x6F05B59D3B20000000 PUSH1 0x68 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x69 SSTORE PUSH2 0x2226 PUSH1 0x6A SSTORE PUSH1 0x0 PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH3 0x127500 PUSH1 0x6D SSTORE PUSH1 0x1 PUSH1 0x72 DUP2 SWAP1 SSTORE PUSH1 0x74 DUP2 SWAP1 SSTORE PUSH1 0x73 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12B5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12A5 JUMPI PUSH2 0x12A5 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x69 SLOAD PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1287 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x12D0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x6D3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6AE DUP2 DUP6 DUP6 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x74 SLOAD DUP5 LT PUSH2 0x13B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x65 SLOAD SWAP3 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1443 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD SWAP3 MLOAD SWAP1 SWAP8 SWAP3 SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207468652070726F78792061646D696E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x67 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1564 SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1598 SWAP2 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x762193B9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xEC432772 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x15F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x15F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1922 SWAP1 DUP5 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x196E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x199B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST DUP1 PUSH2 0x19BB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x1A01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x1A6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1A75 DUP4 ADDRESS DUP5 PUSH2 0x6BA JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1A97 SWAP1 DUP5 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6C PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AB0 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F9 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B64 SWAP2 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1B91 SWAP1 DUP5 SWAP1 PUSH2 0x2121 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x12D0 DUP3 DUP3 PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x1C3A DUP4 DUP3 PUSH2 0x22F3 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xD30 DUP3 DUP3 PUSH2 0x22F3 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1CA0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CA0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C85 JUMP JUMPDEST POP PUSH2 0x1CAC SWAP3 SWAP2 POP PUSH2 0x1CB0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CF3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1CD7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D47 DUP4 PUSH2 0x1D14 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D8C DUP5 PUSH2 0x1D14 JUMP JUMPDEST SWAP3 POP PUSH2 0x1D9A PUSH1 0x20 DUP6 ADD PUSH2 0x1D14 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC5 DUP3 PUSH2 0x1D14 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1E2D JUMPI PUSH2 0x1E2D PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E4F JUMPI PUSH2 0x1E4F PUSH2 0x1DEE JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1E7F PUSH2 0x1E7A DUP4 PUSH2 0x1E35 JUMP JUMPDEST PUSH2 0x1E04 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1EC4 JUMPI PUSH2 0x1EB7 DUP2 PUSH2 0x1D14 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1EA6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F0B DUP10 DUP4 DUP11 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 SWAP2 POP DUP2 DUP9 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 ADD PUSH1 0x1F DUP2 ADD DUP11 SGT PUSH2 0x1F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1F41 PUSH2 0x1E7A DUP3 PUSH2 0x1E35 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1F7E JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST SWAP9 POP POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FAB DUP9 DUP3 DUP10 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x200F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x201E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2033 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP POP PUSH1 0x20 ADD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207D DUP5 DUP3 DUP6 ADD PUSH2 0x1E59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A1 DUP4 PUSH2 0x1D14 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AF PUSH1 0x20 DUP5 ADD PUSH2 0x1D14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x20CC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x20EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2146 JUMPI PUSH2 0x2146 PUSH2 0x210B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0x210B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x22CC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22EB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230D JUMPI PUSH2 0x230D PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x2321 DUP2 PUSH2 0x231B DUP5 SLOAD PUSH2 0x20B8 JUMP JUMPDEST DUP5 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2356 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x233E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2385 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2366 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x23A3 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xEE5F5FC0 0xCD DUP1 0x21 0xAD 0xC1 0xF7 SELFBALANCE SHL 0xC SUB 0xC4 ADD DUP13 EXTCODECOPY SDIV SWAP16 SWAP12 PUSH19 0xD5D2A3ED569DCB167264736F6C634300081900 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x253"
    },
    "25": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146"
    },
    "42": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA224CEE7"
    },
    "49": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB8D4090D"
    },
    "60": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB8D4090D"
    },
    "71": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x588"
    },
    "75": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCDF64A76"
    },
    "82": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A8"
    },
    "86": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD8DF5DC1"
    },
    "93": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BB"
    },
    "97": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C4"
    },
    "108": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEABD4BD7"
    },
    "115": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FD"
    },
    "119": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF0C37A59"
    },
    "126": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "127": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x605"
    },
    "130": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "131": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA224CEE7"
    },
    "142": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50D"
    },
    "146": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "153": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x520"
    },
    "157": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "164": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x533"
    },
    "168": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAB051190"
    },
    "175": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x546"
    },
    "179": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB7797537"
    },
    "186": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "187": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x54F"
    },
    "190": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "191": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "194": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x96AFC450"
    },
    "202": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A"
    },
    "206": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x96AFC450"
    },
    "213": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C2"
    },
    "217": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x991E0139"
    },
    "224": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CB"
    },
    "228": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x99439089"
    },
    "235": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DE"
    },
    "239": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9B701553"
    },
    "246": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "247": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F1"
    },
    "250": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "251": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA21BC3FB"
    },
    "257": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "258": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x504"
    },
    "261": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "262": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "265": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "266": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "267": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "268": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "273": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46C"
    },
    "277": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7C405325"
    },
    "284": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "285": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x495"
    },
    "288": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x88EF046D"
    },
    "295": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "296": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A8"
    },
    "299": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "300": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95B84BC2"
    },
    "306": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "307": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B1"
    },
    "310": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "311": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "317": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BA"
    },
    "321": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "324": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "325": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "326": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "327": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "328": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x37DEEA70"
    },
    "333": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D4"
    },
    "337": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "338": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "339": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x50355D76"
    },
    "344": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x198"
    },
    "348": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "349": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "350": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x50355D76"
    },
    "355": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "356": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "359": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "360": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x56891412"
    },
    "366": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "367": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x434"
    },
    "370": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "371": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "372": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5A3E251F"
    },
    "377": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "378": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x43D"
    },
    "381": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "382": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "383": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6E124888"
    },
    "388": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "389": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x446"
    },
    "392": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "393": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "394": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6E27D889"
    },
    "399": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "400": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x459"
    },
    "403": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "404": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "406": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "407": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "408": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "409": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "410": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x37DEEA70"
    },
    "415": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "416": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x390"
    },
    "419": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "420": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "421": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "426": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "427": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x398"
    },
    "430": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "431": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "432": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3E47158C"
    },
    "437": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "438": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AB"
    },
    "441": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "442": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "443": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x497DFE63"
    },
    "448": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "449": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D6"
    },
    "452": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "453": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "454": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4A4FBEEC"
    },
    "459": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "460": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EB"
    },
    "463": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "464": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "466": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "467": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "468": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "469": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "470": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "475": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "GT",
      "path": "6"
    },
    "476": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "479": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "480": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "481": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "486": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "487": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DB"
    },
    "490": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "491": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "492": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x259A28CF"
    },
    "497": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "498": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EE"
    },
    "501": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "502": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "503": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x27764547"
    },
    "508": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "509": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F8"
    },
    "512": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "513": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "514": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "519": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "520": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x318"
    },
    "523": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "524": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "525": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x35AA2E44"
    },
    "530": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "531": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x327"
    },
    "534": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "535": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "537": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "538": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "539": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "540": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "541": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "546": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "547": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "550": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "551": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "552": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "557": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "558": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x276"
    },
    "561": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "562": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "563": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x180AEDF3"
    },
    "568": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "569": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x299"
    },
    "572": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "573": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "574": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "579": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "580": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CA"
    },
    "583": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "584": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "585": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x20D3A0B4"
    },
    "590": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "EQ",
      "path": "6"
    },
    "591": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D2"
    },
    "594": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "595": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "596": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "598": {
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "599": {
      "first_revert": true,
      "fn": null,
      "offset": [
        184,
        9936
      ],
      "op": "REVERT",
      "path": "6"
    },
    "600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "604": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x60E"
    },
    "607": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "608": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "609": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "616": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CC5"
    },
    "620": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "621": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "622": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "625": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "626": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "627": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "1"
    },
    "628": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "629": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "1"
    },
    "630": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "631": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "634": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "637": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "638": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "640": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D2B"
    },
    "643": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A0"
    },
    "648": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "650": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "652": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "653": {
      "op": "SWAP1"
    },
    "654": {
      "op": "ISZERO"
    },
    "655": {
      "op": "ISZERO"
    },
    "656": {
      "op": "DUP2"
    },
    "657": {
      "op": "MSTORE"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "660": {
      "op": "ADD"
    },
    "661": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "664": {
      "op": "JUMP"
    },
    "665": {
      "offset": [
        911,
        946
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "666": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "669": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A7"
    },
    "672": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "673": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "675": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "678": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        911,
        946
      ],
      "op": "JUMP",
      "path": "6"
    },
    "679": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "680": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "682": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "684": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "685": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "687": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "688": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "DUP2",
      "path": "6"
    },
    "689": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "690": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "692": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "693": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "694": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "696": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "ADD",
      "path": "6"
    },
    "697": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "698": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "DUP2",
      "path": "6"
    },
    "699": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "JUMP",
      "path": "6"
    },
    "700": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "701": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "703": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        911,
        946
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "704": {
      "op": "SWAP1"
    },
    "705": {
      "op": "DUP2"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "709": {
      "op": "ADD"
    },
    "710": {
      "offset": [
        911,
        946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "713": {
      "op": "JUMP"
    },
    "714": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "715": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x35"
    },
    "717": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "718": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC"
    },
    "721": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "722": {
      "offset": [
        607,
        634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "723": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        607,
        634
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "726": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        607,
        634
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6D"
    },
    "728": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        607,
        634
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "729": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        607,
        634
      ],
      "op": "DUP2",
      "path": "6"
    },
    "730": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        607,
        634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "731": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "732": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "735": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E9"
    },
    "738": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "739": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "741": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6E"
    },
    "744": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "745": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "746": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6BA"
    },
    "749": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "750": {
      "offset": [
        356,
        405
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "751": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        356,
        405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "754": {
      "offset": [
        396,
        405
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x127500"
    },
    "758": {
      "offset": [
        356,
        405
      ],
      "op": "DUP2",
      "path": "6"
    },
    "759": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        356,
        405
      ],
      "op": "JUMP",
      "path": "6"
    },
    "760": {
      "offset": [
        1005,
        1060
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "761": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "764": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x306"
    },
    "767": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "768": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "770": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DAA"
    },
    "773": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1005,
        1060
      ],
      "op": "JUMP",
      "path": "6"
    },
    "774": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "775": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "777": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "779": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "780": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "782": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "783": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "DUP2",
      "path": "6"
    },
    "784": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "785": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "787": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "788": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "789": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "790": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "DUP2",
      "path": "6"
    },
    "791": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1005,
        1060
      ],
      "op": "JUMP",
      "path": "6"
    },
    "792": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "793": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "795": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "796": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "798": {
      "op": "DUP2"
    },
    "799": {
      "op": "MSTORE"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "806": {
      "op": "JUMP"
    },
    "807": {
      "offset": [
        952,
        999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "808": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x366"
    },
    "811": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x335"
    },
    "814": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "815": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "817": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "820": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        952,
        999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "821": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "822": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "824": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "826": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "827": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "829": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "830": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "DUP2",
      "path": "6"
    },
    "831": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "832": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "834": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "835": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "836": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "DUP1",
      "path": "6"
    },
    "837": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "838": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "840": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "DUP3",
      "path": "6"
    },
    "841": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "ADD",
      "path": "6"
    },
    "842": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "843": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "845": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "DUP4",
      "path": "6"
    },
    "846": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "ADD",
      "path": "6"
    },
    "847": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "848": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "850": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "851": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "852": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "ADD",
      "path": "6"
    },
    "853": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "860": {
      "op": "SHL"
    },
    "861": {
      "op": "SUB"
    },
    "862": {
      "offset": [
        952,
        999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "863": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "864": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "AND",
      "path": "6"
    },
    "865": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "866": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "867": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "868": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "DUP5",
      "path": "6"
    },
    "869": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "870": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "871": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "873": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "DUP1",
      "path": "6"
    },
    "874": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        952,
        999
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "881": {
      "op": "SHL"
    },
    "882": {
      "op": "SUB"
    },
    "883": {
      "op": "SWAP1"
    },
    "884": {
      "op": "SWAP6"
    },
    "885": {
      "op": "AND"
    },
    "886": {
      "op": "DUP6"
    },
    "887": {
      "op": "MSTORE"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "890": {
      "op": "DUP6"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "SWAP4"
    },
    "893": {
      "op": "SWAP1"
    },
    "894": {
      "op": "SWAP4"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "SWAP2"
    },
    "897": {
      "op": "DUP4"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "op": "MSTORE"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "902": {
      "op": "DUP3"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "MSTORE"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "offset": [
        952,
        999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "911": {
      "op": "JUMP"
    },
    "912": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9378,
        9505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "913": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9378,
        9505
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "916": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9378,
        9505
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DE"
    },
    "919": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        9378,
        9505
      ],
      "op": "JUMP",
      "path": "6"
    },
    "920": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "921": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "924": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "927": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "928": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "930": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D2B"
    },
    "933": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "934": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "935": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "938": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "939": {
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "940": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "942": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "943": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BE"
    },
    "946": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "op": "SUB"
    },
    "955": {
      "offset": [
        284,
        309
      ],
      "op": "AND",
      "path": "6"
    },
    "956": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "957": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "958": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "959": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "961": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "968": {
      "op": "SHL"
    },
    "969": {
      "op": "SUB"
    },
    "970": {
      "op": "SWAP1"
    },
    "971": {
      "op": "SWAP2"
    },
    "972": {
      "op": "AND"
    },
    "973": {
      "op": "DUP2"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "981": {
      "op": "JUMP"
    },
    "982": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "983": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "986": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E4"
    },
    "989": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "990": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "992": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DCC"
    },
    "995": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMP",
      "path": "6"
    },
    "996": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "997": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x790"
    },
    "1000": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1001": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1002": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "STOP",
      "path": "6"
    },
    "1003": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1004": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x289"
    },
    "1007": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F9"
    },
    "1010": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1011": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1013": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DAA"
    },
    "1016": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        9179,
        9372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1017": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "AND",
      "path": "6"
    },
    "1027": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9246,
        9250
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1029": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1030": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1031": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1032": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9295
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "1034": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1036": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1037": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1038": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1039": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1041": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1042": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1043": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1044": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9275,
        9313
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1045": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9355,
        9365
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x69"
    },
    "1047": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9355,
        9365
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1048": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1049": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1050": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1051": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "1053": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1054": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1055": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1056": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1057": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1058": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9344
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1059": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1061": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9351
      ],
      "op": "ADD",
      "path": "6"
    },
    "1062": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9351
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1063": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9365
      ],
      "op": "LT",
      "path": "6"
    },
    "1064": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9365
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1065": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9330,
        9365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1066": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9179,
        9372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1067": {
      "offset": [
        1067,
        1092
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1068": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1067,
        1092
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1071": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1067,
        1092
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "1073": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1067,
        1092
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1074": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1067,
        1092
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1075": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1067,
        1092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1076": {
      "offset": [
        575,
        601
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1077": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        575,
        601
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1080": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        575,
        601
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "1082": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        575,
        601
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1083": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        575,
        601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1084": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        575,
        601
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1085": {
      "offset": [
        498,
        526
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1086": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        498,
        526
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1089": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        498,
        526
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "1091": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        498,
        526
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1092": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        498,
        526
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1093": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        498,
        526
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1094": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1095": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1098": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x454"
    },
    "1101": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1102": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1104": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ECF"
    },
    "1107": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5067,
        6356
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1108": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1109": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x90F"
    },
    "1112": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5067,
        6356
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1113": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1114": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1117": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x467"
    },
    "1120": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1121": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1123": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "1126": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        6959,
        7052
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1127": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1128": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB4"
    },
    "1131": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        6959,
        7052
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1132": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1133": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC"
    },
    "1136": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47A"
    },
    "1139": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1140": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1142": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DAA"
    },
    "1145": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "op": "SUB"
    },
    "1155": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "1",
      "statement": 3
    },
    "1156": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1158": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1159": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1160": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1161": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "1163": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1165": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1166": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1168": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1169": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1170": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1171": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1172": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1173": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1174": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1177": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A3"
    },
    "1180": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1181": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1183": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "1186": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1187": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1188": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC1"
    },
    "1191": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1192": {
      "offset": [
        532,
        569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1193": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        532,
        569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1196": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        532,
        569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "1198": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        532,
        569
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1199": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        532,
        569
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1200": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        532,
        569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1201": {
      "offset": [
        316,
        350
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1202": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1205": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "1207": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1208": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1209": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1210": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1211": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "1214": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD35"
    },
    "1217": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1218": {
      "offset": [
        434,
        461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1219": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        434,
        461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1222": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        434,
        461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "1224": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        434,
        461
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1225": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        434,
        461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1226": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        434,
        461
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1227": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1228": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1231": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D9"
    },
    "1234": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1235": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1237": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "1240": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1241": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1242": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD44"
    },
    "1245": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1246": {
      "offset": [
        234,
        278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1247": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "1249": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1250": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BE"
    },
    "1253": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "offset": [
        234,
        278
      ],
      "op": "AND",
      "path": "6"
    },
    "1263": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1264": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1265": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1266": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1269": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FF"
    },
    "1272": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1273": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1275": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FBD"
    },
    "1278": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        3239,
        4325
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1279": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1280": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED9"
    },
    "1283": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        3239,
        4325
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1284": {
      "offset": [
        1167,
        1199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1285": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        1167,
        1199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1288": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        1167,
        1199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x75"
    },
    "1290": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        1167,
        1199
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1291": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        1167,
        1199
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1292": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        1167,
        1199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1293": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1294": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1297": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51B"
    },
    "1300": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1301": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1303": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2048"
    },
    "1306": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1307": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1308": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114B"
    },
    "1311": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1312": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1313": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "1316": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52E"
    },
    "1319": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1320": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1322": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D2B"
    },
    "1325": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1326": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1327": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D4"
    },
    "1330": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1331": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1332": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "1335": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x541"
    },
    "1338": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1339": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1341": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D2B"
    },
    "1344": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1345": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1346": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1366"
    },
    "1349": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1350": {
      "offset": [
        1130,
        1161
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1351": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1130,
        1161
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1354": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1130,
        1161
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x74"
    },
    "1356": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1130,
        1161
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1357": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1130,
        1161
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1358": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1130,
        1161
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1359": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1360": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x562"
    },
    "1363": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55D"
    },
    "1366": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1367": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1369": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "1372": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1373": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1374": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1374"
    },
    "1377": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1378": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1379": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1381": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1382": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1383": {
      "op": "SWAP4"
    },
    "1384": {
      "op": "ISZERO"
    },
    "1385": {
      "op": "ISZERO"
    },
    "1386": {
      "op": "DUP5"
    },
    "1387": {
      "op": "MSTORE"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1390": {
      "op": "DUP5"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "SWAP3"
    },
    "1393": {
      "op": "SWAP1"
    },
    "1394": {
      "op": "SWAP3"
    },
    "1395": {
      "op": "MSTORE"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "op": "AND"
    },
    "1405": {
      "op": "SWAP1"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "1415": {
      "op": "JUMP"
    },
    "1416": {
      "offset": [
        859,
        905
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1417": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1420": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "1423": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1424": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1426": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D55"
    },
    "1429": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        859,
        905
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1430": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1431": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "1433": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1435": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1436": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1438": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1439": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1440": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1441": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1443": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1444": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1445": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1446": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1447": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        859,
        905
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1448": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1449": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1452": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B6"
    },
    "1455": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1456": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1458": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DAA"
    },
    "1461": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2479,
        2747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1462": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1463": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x147C"
    },
    "1466": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2479,
        2747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1467": {
      "offset": [
        467,
        492
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1468": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        467,
        492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1471": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        467,
        492
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "1473": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        467,
        492
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1474": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        467,
        492
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1475": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        467,
        492
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1476": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1477": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC"
    },
    "1480": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D2"
    },
    "1483": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1484": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1486": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2085"
    },
    "1489": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1490": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 4
    },
    "1500": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1501": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "1502": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1504": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1505": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1506": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1507": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "1509": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1511": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1512": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1513": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1514": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1516": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1517": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1518": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1519": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1520": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1521": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1522": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "1523": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1524": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1525": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1526": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1527": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1528": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1529": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1530": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1531": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1532": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1533": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2753,
        3180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1534": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2753,
        3180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E9"
    },
    "1537": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2753,
        3180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14F7"
    },
    "1540": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        2753,
        3180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1541": {
      "offset": [
        1098,
        1124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1542": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1098,
        1124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "1545": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1098,
        1124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x73"
    },
    "1547": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1098,
        1124
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1548": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1098,
        1124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1549": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1098,
        1124
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1550": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1551": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1553": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x36"
    },
    "1555": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1556": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1557": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61D"
    },
    "1560": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1561": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B8"
    },
    "1564": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1565": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1566": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1567": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1569": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1570": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1572": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1573": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1574": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "1575": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "1576": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1578": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1579": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1581": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1582": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1583": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1584": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1585": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1587": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1588": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1589": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1590": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1591": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1592": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1593": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1594": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1595": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1597": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1598": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1599": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x649"
    },
    "1604": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1605": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B8"
    },
    "1608": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1609": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1610": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x696"
    },
    "1615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1616": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1619": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "1"
    },
    "1620": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66B"
    },
    "1623": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1624": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1627": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1628": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1629": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1630": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "1631": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "1632": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1633": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1634": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1635": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1638": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1639": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x696"
    },
    "1642": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1643": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1644": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1645": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1646": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1647": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1648": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1651": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1653": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1655": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1656": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1657": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1658": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1659": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1660": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1661": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1662": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1663": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1665": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1666": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1667": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1669": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1670": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1671": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1672": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "1"
    },
    "1673": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x679"
    },
    "1676": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1677": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1678": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1679": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "1"
    },
    "1680": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1682": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "1"
    },
    "1683": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1684": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1685": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1686": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1687": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1688": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1689": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1690": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1691": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1692": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1693": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1694": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1695": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1697": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1699": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 6
    },
    "1700": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x6AE"
    },
    "1703": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1704": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1705": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1706": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15FD"
    },
    "1709": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1710": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1711": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x1"
    },
    "1713": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1714": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "1715": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "1716": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1717": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1718": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1719": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "1720": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "1721": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1722": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1723": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1725": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1726": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0x6C8"
    },
    "1729": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1730": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1731": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1732": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1721"
    },
    "1735": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1736": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1737": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x6D3"
    },
    "1740": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1741": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1742": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1743": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17AD"
    },
    "1746": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1747": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "1751": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1752": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1753": {
      "op": "POP"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "op": "POP"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1758": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9378,
        9505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1759": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9479
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x65"
    },
    "1761": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9479
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1762": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1764": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1765": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1766": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1773": {
      "op": "SHL"
    },
    "1774": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1775": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1776": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1777": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1778": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9436,
        9443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1780": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9436,
        9443
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "SUB"
    },
    "1789": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9479
      ],
      "op": "AND",
      "path": "6"
    },
    "1790": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9479
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1791": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9496
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x91E2E252"
    },
    "1796": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9496
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1797": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1799": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1800": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1801": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ADD",
      "path": "6"
    },
    "1802": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1803": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1805": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1806": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1807": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1808": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1809": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1810": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SUB",
      "path": "6"
    },
    "1811": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ADD",
      "path": "6"
    },
    "1812": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1813": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9479
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1814": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "GAS",
      "path": "6"
    },
    "1815": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1816": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1817": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1818": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1819": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x728"
    },
    "1822": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1823": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1824": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1826": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1827": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1828": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1829": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1831": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1832": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1833": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "POP",
      "path": "6"
    },
    "1834": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "POP",
      "path": "6"
    },
    "1835": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "POP",
      "path": "6"
    },
    "1836": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "POP",
      "path": "6"
    },
    "1837": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1839": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1840": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1841": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1843": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "NOT",
      "path": "6"
    },
    "1844": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1846": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1847": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ADD",
      "path": "6"
    },
    "1848": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "AND",
      "path": "6"
    },
    "1849": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1850": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ADD",
      "path": "6"
    },
    "1851": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1852": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1854": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1855": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "POP",
      "path": "6"
    },
    "1856": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1857": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "ADD",
      "path": "6"
    },
    "1858": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1859": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74C"
    },
    "1862": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1863": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1864": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20F2"
    },
    "1867": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        9462,
        9498
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1868": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9462,
        9498
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1869": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9455,
        9498
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1870": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9455,
        9498
      ],
      "op": "POP",
      "path": "6"
    },
    "1871": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9378,
        9505
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1872": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        9378,
        9505
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1873": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1874": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1875": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1877": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 13
    },
    "1878": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1879": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1880": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "1882": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1884": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1885": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1886": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1887": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1889": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1890": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1891": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1901": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "1"
    },
    "1902": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1903": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1904": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1905": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1906": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1907": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1908": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1909": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1910": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1911": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1912": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1913": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AE"
    },
    "1916": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1917": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1918": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1919": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1920": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1921": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78B"
    },
    "1924": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1925": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1926": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1927": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2121"
    },
    "1930": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1931": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1932": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15FD"
    },
    "1935": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1936": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1937": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8594,
        8604
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 14
    },
    "1938": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1940": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1941": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1942": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1943": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "1945": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1948": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1950": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1951": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1952": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1953": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8609,
        8620
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1954": {
      "op": "GT"
    },
    "1955": {
      "branch": 111,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8620
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1956": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8649
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1957": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8649
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1958": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8649
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B1"
    },
    "1961": {
      "branch": 111,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8649
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1962": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8649
      ],
      "op": "POP",
      "path": "6"
    },
    "1963": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8639,
        8649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "1965": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8639,
        8649
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1966": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8624,
        8635
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1967": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8624,
        8649
      ],
      "op": "LT",
      "path": "6"
    },
    "1968": {
      "branch": 112,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8624,
        8649
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1969": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8584,
        8649
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1970": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x802"
    },
    "1973": {
      "branch": 112,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1974": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1976": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1985": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1988": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1990": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1991": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "ADD",
      "path": "6"
    },
    "1992": {
      "op": "MSTORE"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1997": {
      "op": "DUP3"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2035": {
      "op": "DUP3"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "MSTORE"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2042": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2044": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2045": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2046": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2047": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "SUB",
      "path": "6"
    },
    "2048": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2049": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "2050": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8563,
        8702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2051": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8754,
        8764
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 15
    },
    "2052": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2054": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2055": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2056": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2057": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8753
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "2059": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2061": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2062": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2064": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2065": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2066": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8765
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2067": {
      "branch": 113,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8733,
        8770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2068": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x874"
    },
    "2071": {
      "branch": 113,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2072": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2074": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2083": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2086": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2088": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2089": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "ADD",
      "path": "6"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2095": {
      "op": "DUP3"
    },
    "2096": {
      "op": "ADD"
    },
    "2097": {
      "op": "MSTORE"
    },
    "2098": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206372656174656420776974682074"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2133": {
      "op": "DUP3"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "MSTORE"
    },
    "2136": {
      "op": "PUSH12",
      "value": "0x686973206163636F756E7421"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2151": {
      "op": "SHL"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "2163": {
      "op": "JUMP"
    },
    "2164": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8712,
        8840
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2165": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x40"
    },
    "2167": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2168": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2169": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2171": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2172": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2173": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2174": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2175": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8916,
        8926
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2176": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2177": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2178": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2181": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2183": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2184": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2185": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2186": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2187": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2188": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2189": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2190": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2191": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2192": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2193": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2194": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2195": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2197": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2198": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2199": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2200": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2201": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8882,
        9030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2202": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8862,
        8878
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x74"
    },
    "2204": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8862,
        8878
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2205": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8862,
        8878
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2206": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2207": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2208": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8861
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "2210": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2211": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2212": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2213": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2214": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        8879
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2215": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2216": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2217": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2218": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "op": "NOT"
    },
    "2228": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "AND",
      "path": "6"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "op": "SUB"
    },
    "2237": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2238": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2239": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "AND",
      "path": "6"
    },
    "2240": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "OR",
      "path": "6"
    },
    "2241": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2242": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2243": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2244": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2248": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2249": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2250": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2251": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2252": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2254": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2255": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2256": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2257": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2258": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2260": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2261": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2262": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "ADD",
      "path": "6"
    },
    "2263": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2265": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2266": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8851,
        9030
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2267": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9076,
        9092
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 17
    },
    "2268": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9076,
        9092
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2269": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2270": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2271": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2272": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9061
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "2274": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2275": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2276": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2277": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2278": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2279": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2280": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9073
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2281": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9041,
        9092
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2282": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9126,
        9136
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x69"
    },
    "2284": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9126,
        9136
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2285": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9102,
        9137
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F6"
    },
    "2288": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9102,
        9137
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2289": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8916,
        8926
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2290": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9102,
        9113
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x197B"
    },
    "2293": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        9102,
        9137
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2294": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9102,
        9137
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2295": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9164
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 19,
      "value": "0x74"
    },
    "2297": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2298": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2299": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2300": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2302": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x906"
    },
    "2305": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2306": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2134"
    },
    "2309": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        9148,
        9166
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2310": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2311": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2312": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2313": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "POP",
      "path": "6"
    },
    "2314": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2315": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9148,
        9166
      ],
      "op": "POP",
      "path": "6"
    },
    "2316": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "POP",
      "path": "6"
    },
    "2317": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8452,
        9173
      ],
      "op": "POP",
      "path": "6"
    },
    "2318": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        8452,
        9173
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2319": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2320": {
      "offset": [
        1698,
        1715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "2322": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1698,
        1715
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "SUB"
    },
    "2331": {
      "offset": [
        1698,
        1715
      ],
      "op": "AND",
      "path": "6"
    },
    "2332": {
      "offset": [
        1676,
        1686
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2333": {
      "offset": [
        1676,
        1716
      ],
      "op": "EQ",
      "path": "6"
    },
    "2334": {
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x939"
    },
    "2337": {
      "offset": [
        1655,
        1780
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2338": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2340": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "offset": [
        1655,
        1780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2349": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2350": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2352": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "ADD",
      "path": "6"
    },
    "2353": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "2356": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2357": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x214D"
    },
    "2360": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        1655,
        1780
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2361": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1655,
        1780
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2362": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "2364": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5346,
        5359
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2365": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5320,
        5342
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "2367": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5320,
        5342
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2368": {
      "branch": 114,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5320,
        5359
      ],
      "op": "LT",
      "path": "6"
    },
    "2369": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5316,
        5468
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x969"
    },
    "2372": {
      "branch": 114,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5316,
        5468
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2373": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5394,
        5406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "2375": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5394,
        5406
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2376": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5379,
        5391
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "2378": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5379,
        5391
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2379": {
      "branch": 115,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5379,
        5406
      ],
      "op": "GT",
      "path": "6"
    },
    "2380": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5375,
        5458
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2381": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5375,
        5458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x969"
    },
    "2384": {
      "branch": 115,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5375,
        5458
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2385": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5442,
        5443
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x2"
    },
    "2387": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5438
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "2389": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5438
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2391": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2392": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2393": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2394": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x963"
    },
    "2397": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2398": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2399": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "2402": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5426,
        5443
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2403": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2404": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2405": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2406": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5426,
        5443
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2407": {
      "op": "POP"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5375,
        5458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2410": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5478,
        5501
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2412": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5511,
        5531
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2413": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5546,
        5554
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2414": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5546,
        5561
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2415": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5565,
        5566
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2417": {
      "branch": 116,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5546,
        5566
      ],
      "op": "SUB",
      "path": "6"
    },
    "2418": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5542,
        5842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98E"
    },
    "2421": {
      "branch": 116,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5542,
        5842
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2422": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5615,
        5631
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 21
    },
    "2423": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "2425": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5612
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2426": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5631
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x983"
    },
    "2429": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2430": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2431": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5631
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2121"
    },
    "2434": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5600,
        5631
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2435": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5600,
        5631
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2436": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5582,
        5631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2437": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5582,
        5631
      ],
      "op": "POP",
      "path": "6"
    },
    "2438": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5660,
        5661
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 22,
      "value": "0x0"
    },
    "2440": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5645,
        5661
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2441": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5645,
        5661
      ],
      "op": "POP",
      "path": "6"
    },
    "2442": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5542,
        5842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9DD"
    },
    "2445": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5542,
        5842
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2446": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5542,
        5842
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2447": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5753,
        5756
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x64"
    },
    "2449": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5727,
        5743
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2450": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5724
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "2452": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5724
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2453": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5743
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x99E"
    },
    "2456": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5743
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2457": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5743
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2458": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5743
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2121"
    },
    "2461": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5712,
        5743
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2462": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5712,
        5743
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2463": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5711,
        5749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A9"
    },
    "2466": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5711,
        5749
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2467": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5747,
        5749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x19"
    },
    "2469": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5711,
        5749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B5"
    },
    "2472": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5711,
        5749
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2473": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5711,
        5749
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2474": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5710,
        5756
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B3"
    },
    "2477": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5710,
        5756
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2478": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5710,
        5756
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2479": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5710,
        5756
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "2482": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5710,
        5756
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2483": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5710,
        5756
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2484": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5692,
        5756
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2485": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5692,
        5756
      ],
      "op": "POP",
      "path": "6"
    },
    "2486": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5828,
        5831
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x64"
    },
    "2488": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5802,
        5818
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2489": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5799
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "2491": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5799
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2492": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C5"
    },
    "2495": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5818
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2496": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5818
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2497": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2121"
    },
    "2500": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5787,
        5818
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2501": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5787,
        5818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2502": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5786,
        5824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D0"
    },
    "2505": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5786,
        5824
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2506": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5822,
        5824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4B"
    },
    "2508": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5786,
        5824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B5"
    },
    "2511": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5786,
        5824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2512": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5786,
        5824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2513": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5785,
        5831
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9DA"
    },
    "2516": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5785,
        5831
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2517": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5785,
        5831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2518": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5785,
        5831
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "2521": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5785,
        5831
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2522": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5785,
        5831
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2523": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5770,
        5831
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2524": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5770,
        5831
      ],
      "op": "POP",
      "path": "6"
    },
    "2525": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5542,
        5842
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2526": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5857,
        5866
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2528": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2529": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5876,
        5892
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2530": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5876,
        5899
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2531": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5872,
        5873
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2532": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5872,
        5899
      ],
      "op": "LT",
      "path": "6"
    },
    "2533": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2534": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA20"
    },
    "2537": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2538": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5920,
        6035
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xA18"
    },
    "2541": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5959
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2542": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5960,
        5961
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2543": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2544": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2545": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2546": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "LT",
      "path": "6"
    },
    "2547": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FE"
    },
    "2550": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2551": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FE"
    },
    "2554": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21CC"
    },
    "2557": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5943,
        5962
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2558": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2559": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2561": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "MUL",
      "path": "6"
    },
    "2562": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2564": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "ADD",
      "path": "6"
    },
    "2565": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "ADD",
      "path": "6"
    },
    "2566": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5943,
        5962
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2567": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5998,
        6014
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2568": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5998,
        6021
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2569": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5980,
        5995
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2570": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5980,
        6021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA13"
    },
    "2573": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5980,
        6021
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2574": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5980,
        6021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2575": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5980,
        6021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "2578": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5980,
        6021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2579": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5980,
        6021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2580": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5920,
        5925
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AFC"
    },
    "2583": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5920,
        6035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2584": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5920,
        6035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2585": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5901,
        5904
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x1"
    },
    "2587": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5901,
        5904
      ],
      "op": "ADD",
      "path": "6"
    },
    "2588": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9E0"
    },
    "2591": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2592": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5852,
        6046
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2593": {
      "op": "POP"
    },
    "2594": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6060,
        6075
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2595": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6060,
        6075
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2596": {
      "branch": 117,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6060,
        6079
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2597": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6056,
        6315
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA96"
    },
    "2600": {
      "branch": 117,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6056,
        6315
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2601": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6100,
        6109
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2603": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2604": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6119,
        6127
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2605": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6119,
        6134
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2606": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6115,
        6116
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2607": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6115,
        6134
      ],
      "op": "LT",
      "path": "6"
    },
    "2608": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2609": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA94"
    },
    "2612": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2613": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6159,
        6173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2615": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6231,
        6245
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2616": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6195,
        6207
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2617": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6189
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2618": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6190,
        6191
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2619": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2620": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2621": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2622": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "LT",
      "path": "6"
    },
    "2623": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4A"
    },
    "2626": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2627": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4A"
    },
    "2630": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21CC"
    },
    "2633": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6178,
        6192
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2634": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2635": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2637": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "MUL",
      "path": "6"
    },
    "2638": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2640": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "ADD",
      "path": "6"
    },
    "2641": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "ADD",
      "path": "6"
    },
    "2642": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6192
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2643": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6207
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA5C"
    },
    "2646": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6207
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2647": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6207
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2648": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6207
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B5"
    },
    "2651": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6178,
        6207
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2652": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6178,
        6207
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2653": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6177,
        6245
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA66"
    },
    "2656": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6177,
        6245
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2657": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6177,
        6245
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2658": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6177,
        6245
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "2661": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6177,
        6245
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2662": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6177,
        6245
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2663": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6159,
        6246
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2664": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6159,
        6246
      ],
      "op": "POP",
      "path": "6"
    },
    "2665": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6264,
        6290
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0xA8B"
    },
    "2668": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6278
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2669": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6279,
        6280
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2670": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2671": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2672": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2673": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "LT",
      "path": "6"
    },
    "2674": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA7D"
    },
    "2677": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2678": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA7D"
    },
    "2681": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21CC"
    },
    "2684": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6270,
        6281
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2685": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2686": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2688": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "MUL",
      "path": "6"
    },
    "2689": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2691": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "ADD",
      "path": "6"
    },
    "2692": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "ADD",
      "path": "6"
    },
    "2693": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6281
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2694": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6283,
        6289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2695": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6264,
        6269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AFC"
    },
    "2698": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6264,
        6290
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2699": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6264,
        6290
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6136,
        6139
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 28,
      "value": "0x1"
    },
    "2703": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6136,
        6139
      ],
      "op": "ADD",
      "path": "6"
    },
    "2704": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA2B"
    },
    "2707": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2708": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2709": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6095,
        6305
      ],
      "op": "POP",
      "path": "6"
    },
    "2710": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6056,
        6315
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2711": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6347
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 29,
      "value": "0x6B"
    },
    "2713": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2714": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2715": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2716": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6347
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2718": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA6"
    },
    "2721": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2722": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2134"
    },
    "2725": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6325,
        6349
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2726": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2727": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2728": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2729": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "POP",
      "path": "6"
    },
    "2730": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2731": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6325,
        6349
      ],
      "op": "POP",
      "path": "6"
    },
    "2732": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5306,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2733": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5306,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2734": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2735": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2736": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2737": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2738": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5067,
        6356
      ],
      "op": "POP",
      "path": "6"
    },
    "2739": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        5067,
        6356
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2740": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2741": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7014,
        7045
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 30,
      "value": "0xABE"
    },
    "2744": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7026,
        7036
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2745": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7038,
        7044
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2746": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7014,
        7025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x197B"
    },
    "2749": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7014,
        7045
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2750": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7014,
        7045
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2751": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        6959,
        7052
      ],
      "op": "POP",
      "path": "6"
    },
    "2752": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        6959,
        7052
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2753": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2754": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7158,
        7168
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2755": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7115,
        7134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2757": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2758": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2759": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2760": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "2762": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2764": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2765": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2767": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2768": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2769": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7137,
        7169
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2770": {
      "branch": 118,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7187,
        7202
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 31
    },
    "2771": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB1E"
    },
    "2774": {
      "branch": 118,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2775": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2777": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2786": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2789": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2791": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2792": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "ADD",
      "path": "6"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2798": {
      "op": "DUP3"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "MSTORE"
    },
    "2801": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2836": {
      "op": "DUP3"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "MSTORE"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2841": {
      "op": "ADD"
    },
    "2842": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "2845": {
      "op": "JUMP"
    },
    "2846": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7179,
        7234
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2847": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7245,
        7272
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2849": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2850": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2851": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2852": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "2854": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2856": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2857": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2859": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2860": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7275,
        7298
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2861": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7327,
        7343
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 32,
      "value": "0x1"
    },
    "2863": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7327,
        7343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2864": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7327,
        7343
      ],
      "op": "ADD",
      "path": "6"
    },
    "2865": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7327,
        7343
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2866": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7317,
        7343
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2867": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7317,
        7343
      ],
      "op": "GT",
      "path": "6"
    },
    "2868": {
      "branch": 119,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7317,
        7343
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2869": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB80"
    },
    "2872": {
      "branch": 119,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2873": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2875": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2884": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2887": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2889": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2890": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "ADD",
      "path": "6"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2896": {
      "op": "DUP3"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2934": {
      "op": "DUP3"
    },
    "2935": {
      "op": "ADD"
    },
    "2936": {
      "op": "MSTORE"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2939": {
      "op": "ADD"
    },
    "2940": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "2943": {
      "op": "JUMP"
    },
    "2944": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7309,
        7378
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2945": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7405,
        7406
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0x0"
    },
    "2947": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7396,
        7402
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2948": {
      "branch": 120,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7396,
        7406
      ],
      "op": "GT",
      "path": "6"
    },
    "2949": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA0"
    },
    "2952": {
      "branch": 120,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2953": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2955": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2956": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2962": {
      "op": "SHL"
    },
    "2963": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2964": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2965": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2967": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "ADD",
      "path": "6"
    },
    "2968": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "2971": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2972": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21E2"
    },
    "2975": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7388,
        7444
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2976": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7388,
        7444
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2977": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7530,
        7539
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2978": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7530,
        7550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2980": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7530,
        7550
      ],
      "op": "ADD",
      "path": "6"
    },
    "2981": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7530,
        7550
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2982": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7554,
        7555
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2984": {
      "branch": 121,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7530,
        7555
      ],
      "op": "SUB",
      "path": "6"
    },
    "2985": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7526,
        8440
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC84"
    },
    "2988": {
      "branch": 121,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7526,
        8440
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2989": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7594,
        7604
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "2991": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7594,
        7604
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2992": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7575,
        7584
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2993": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7575,
        7591
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2995": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7575,
        7591
      ],
      "op": "ADD",
      "path": "6"
    },
    "2996": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7575,
        7591
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2997": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7575,
        7604
      ],
      "op": "LT",
      "path": "6"
    },
    "2998": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7571,
        7684
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2999": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7571,
        7684
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC18"
    },
    "3002": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7571,
        7684
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3003": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7641
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 34,
      "value": "0x65"
    },
    "3005": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7641
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3006": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3008": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3009": {
      "op": "PUSH4",
      "value": "0x40A141FF"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3016": {
      "op": "SHL"
    },
    "3017": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3018": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3019": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7658,
        7668
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3020": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3022": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3023": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "ADD",
      "path": "6"
    },
    "3024": {
      "op": "MSTORE"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3031": {
      "op": "SHL"
    },
    "3032": {
      "op": "SUB"
    },
    "3033": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3034": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7641
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3035": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7641
      ],
      "op": "AND",
      "path": "6"
    },
    "3036": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3037": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7657
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40A141FF"
    },
    "3042": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7657
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3048": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3050": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3051": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3052": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3053": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "SUB",
      "path": "6"
    },
    "3054": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3055": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3057": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3058": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3059": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3060": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3061": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3062": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3063": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBFF"
    },
    "3066": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3067": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3069": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3070": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3071": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3072": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "POP",
      "path": "6"
    },
    "3073": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "GAS",
      "path": "6"
    },
    "3074": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "CALL",
      "path": "6"
    },
    "3075": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3076": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3077": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3078": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC13"
    },
    "3081": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3082": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3083": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3085": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3086": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3087": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3088": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3090": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3091": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3092": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "POP",
      "path": "6"
    },
    "3093": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "POP",
      "path": "6"
    },
    "3094": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "POP",
      "path": "6"
    },
    "3095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7624,
        7669
      ],
      "op": "POP",
      "path": "6"
    },
    "3096": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7571,
        7684
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3097": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7738,
        7750
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x6D"
    },
    "3099": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7738,
        7750
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3100": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC25"
    },
    "3103": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7720,
        7750
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3104": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7720,
        7735
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3105": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7720,
        7750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2121"
    },
    "3108": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3109": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7720,
        7750
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3110": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7706
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3111": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7717
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3113": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7717
      ],
      "op": "ADD",
      "path": "6"
    },
    "3114": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7750
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3115": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7750
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3116": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7750
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3117": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7697,
        7750
      ],
      "op": "POP",
      "path": "6"
    },
    "3118": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7841,
        7847
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 36
    },
    "3119": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "3121": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3123": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3124": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3125": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3126": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3F"
    },
    "3129": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3130": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3131": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2223"
    },
    "3134": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7826,
        7847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3135": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3136": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3137": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3138": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7826,
        7847
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "op": "POP"
    },
    "3141": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7895,
        7915
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0x2"
    },
    "3143": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7895,
        7915
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3144": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7895,
        7915
      ],
      "op": "ADD",
      "path": "6"
    },
    "3145": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7895,
        7915
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3146": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3148": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3149": {
      "op": "SWAP1"
    },
    "3150": {
      "op": "DUP2"
    },
    "3151": {
      "op": "MSTORE"
    },
    "3152": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7883,
        7893
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3153": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7883,
        7893
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3154": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "3187": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3192": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3194": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3195": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3196": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3197": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "SUB",
      "path": "6"
    },
    "3198": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3199": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7867,
        7916
      ],
      "op": "LOG2",
      "path": "6"
    },
    "3200": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7105,
        8446
      ],
      "op": "POP",
      "path": "6"
    },
    "3201": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7105,
        8446
      ],
      "op": "POP",
      "path": "6"
    },
    "3202": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "POP",
      "path": "6"
    },
    "3203": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3204": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7526,
        8440
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3205": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8096,
        8105
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 38
    },
    "3206": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8096,
        8116
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3208": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8096,
        8116
      ],
      "op": "ADD",
      "path": "6"
    },
    "3209": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8096,
        8116
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3210": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8077,
        8092
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3211": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8077,
        8116
      ],
      "op": "LT",
      "path": "6"
    },
    "3212": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8077,
        8116
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3213": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCD8"
    },
    "3216": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3217": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3219": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3228": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3231": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3233": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3234": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "ADD",
      "path": "6"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3240": {
      "op": "DUP3"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "MSTORE"
    },
    "3243": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3278": {
      "op": "DUP3"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "MSTORE"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3283": {
      "op": "ADD"
    },
    "3284": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "3287": {
      "op": "JUMP"
    },
    "3288": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8052,
        8174
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3289": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8209,
        8215
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 39
    },
    "3290": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8198
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3291": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3293": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8205
      ],
      "op": "ADD",
      "path": "6"
    },
    "3294": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3296": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3297": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3298": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3299": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCEC"
    },
    "3302": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3303": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3304": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2223"
    },
    "3307": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8189,
        8215
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3308": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3309": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3310": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3311": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8189,
        8215
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3312": {
      "op": "POP"
    },
    "3313": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8229,
        8276
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 40,
      "value": "0xCFD"
    },
    "3316": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8229,
        8276
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8250,
        8254
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "3319": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8257,
        8267
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3320": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8269,
        8275
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3321": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8229,
        8241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BA"
    },
    "3324": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8229,
        8276
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3325": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8229,
        8276
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3326": {
      "op": "POP"
    },
    "3327": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8343,
        8377
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 41,
      "value": "0x40"
    },
    "3329": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8343,
        8377
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3330": {
      "op": "DUP4"
    },
    "3331": {
      "op": "DUP2"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8358,
        8368
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3334": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8358,
        8368
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3335": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8343,
        8377
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "3368": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8343,
        8377
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8343,
        8377
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC77"
    },
    "3375": {
      "op": "JUMP"
    },
    "3376": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7526,
        8440
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3377": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7105,
        8446
      ],
      "op": "POP",
      "path": "6"
    },
    "3378": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7105,
        8446
      ],
      "op": "POP",
      "path": "6"
    },
    "3379": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "POP",
      "path": "6"
    },
    "3380": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3381": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3382": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3384": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 42,
      "value": "0x37"
    },
    "3386": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3387": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3388": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61D"
    },
    "3391": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3392": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B8"
    },
    "3395": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3396": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3397": {
      "offset": [
        1698,
        1715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "3399": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1698,
        1715
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3400": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4492,
        4499
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3402": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4492,
        4499
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "offset": [
        1698,
        1715
      ],
      "op": "AND",
      "path": "6"
    },
    "3412": {
      "offset": [
        1676,
        1686
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3413": {
      "offset": [
        1676,
        1716
      ],
      "op": "EQ",
      "path": "6"
    },
    "3414": {
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD71"
    },
    "3417": {
      "offset": [
        1655,
        1780
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3418": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3420": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "offset": [
        1655,
        1780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3429": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3430": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3432": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "ADD",
      "path": "6"
    },
    "3433": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "3436": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3437": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x214D"
    },
    "3440": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        1655,
        1780
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3441": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1655,
        1780
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3442": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4511,
        4524
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3444": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3445": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3446": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3447": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "3449": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3451": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3452": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3454": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3455": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3456": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3457": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4527,
        4547
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3458": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4605,
        4615
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3459": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4605,
        4615
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3460": {
      "branch": 124,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4605,
        4615
      ],
      "op": "SUB",
      "path": "6"
    },
    "3461": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4601,
        4773
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDE0"
    },
    "3464": {
      "branch": 124,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4601,
        4773
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3465": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4691
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x72"
    },
    "3467": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3468": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3469": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3470": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3472": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD98"
    },
    "3475": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3476": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2134"
    },
    "3479": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4681,
        4693
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3480": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3481": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3482": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3483": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "POP",
      "path": "6"
    },
    "3484": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3485": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4681,
        4693
      ],
      "op": "POP",
      "path": "6"
    },
    "3486": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4725,
        4730
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 44
    },
    "3487": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC"
    },
    "3520": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4732,
        4739
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3521": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3523": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3524": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDCF"
    },
    "3527": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3528": {
      "op": "DUP2"
    },
    "3529": {
      "op": "MSTORE"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "SWAP1"
    },
    "3534": {
      "op": "JUMP"
    },
    "3535": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3536": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3538": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3539": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3540": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3541": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "SUB",
      "path": "6"
    },
    "3542": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3543": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4712,
        4740
      ],
      "op": "LOG2",
      "path": "6"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4761,
        4762
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x0"
    },
    "3547": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4761,
        4762
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3548": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3552": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4601,
        4773
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3553": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3555": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3556": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3557": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3558": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4848
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "3560": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3562": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3563": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3564": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3565": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3567": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3568": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3569": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3570": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3571": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3572": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3573": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3574": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3576": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3577": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3578": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MUL",
      "path": "6"
    },
    "3579": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3580": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3581": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3582": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3583": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3584": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3585": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3586": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3587": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3588": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3589": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3590": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3591": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3592": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3593": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3594": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3595": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3596": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3597": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3598": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3599": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3600": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3601": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3602": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4844,
        4855
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3603": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3604": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3605": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3606": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE3E"
    },
    "3609": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3610": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3612": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MUL",
      "path": "6"
    },
    "3613": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3614": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3615": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3616": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3617": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3619": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3620": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3622": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3624": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3625": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3626": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3627": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3628": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3629": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3630": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3631": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3633": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3634": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3635": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3637": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3638": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3639": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3640": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3641": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "GT",
      "path": "6"
    },
    "3642": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE2A"
    },
    "3645": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3646": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3647": {
      "op": "POP"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3651": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3652": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3657": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3658": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3659": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3660": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3661": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3662": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3664": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3665": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3666": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "ADD",
      "path": "6"
    },
    "3667": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3668": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4887,
        4898
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3669": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4887,
        4898
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3670": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4887,
        4898
      ],
      "op": "ADD",
      "path": "6"
    },
    "3671": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4887,
        4898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 46
    },
    "3675": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3676": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3677": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "3679": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3680": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3681": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3682": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3684": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3685": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3686": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3687": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4827,
        4855
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4887,
        4898
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3690": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3691": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE74"
    },
    "3694": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4935,
        4946
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3695": {
      "op": "DUP3"
    },
    "3696": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C47"
    },
    "3699": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4928,
        4946
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3700": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3701": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3703": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3704": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "ADD",
      "path": "6"
    },
    "3705": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3707": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3708": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3709": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "POP",
      "path": "6"
    },
    "3710": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4928,
        4946
      ],
      "op": "POP",
      "path": "6"
    },
    "3711": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4974
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 47,
      "value": "0x6E"
    },
    "3713": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3715": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4975,
        4982
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3716": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3717": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3718": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3720": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "ADD",
      "path": "6"
    },
    "3721": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3722": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3723": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3724": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3726": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "ADD",
      "path": "6"
    },
    "3727": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3729": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4963,
        4983
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3730": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4956,
        4983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3732": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4956,
        4983
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3733": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4956,
        4983
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3734": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5011,
        5016
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 48
    },
    "3735": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC"
    },
    "3768": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5018,
        5025
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3769": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3771": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3772": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC7"
    },
    "3775": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3776": {
      "op": "DUP2"
    },
    "3777": {
      "op": "MSTORE"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "SWAP1"
    },
    "3782": {
      "op": "JUMP"
    },
    "3783": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3784": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3786": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3787": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3788": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3789": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "SUB",
      "path": "6"
    },
    "3790": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3791": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4998,
        5026
      ],
      "op": "LOG2",
      "path": "6"
    },
    "3792": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5043,
        5054
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 49
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "offset": [
        1790,
        1791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3797": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3798": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3799": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4400,
        5061
      ],
      "op": "POP",
      "path": "6"
    },
    "3800": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        4400,
        5061
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3801": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3802": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 50,
      "value": "0x0"
    },
    "3804": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3805": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3807": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "3809": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3814": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3815": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3816": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3461
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3817": {
      "branch": 125,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3441,
        3466
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3818": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF2C"
    },
    "3821": {
      "branch": 125,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3822": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3824": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3833": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3838": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3839": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "ADD",
      "path": "6"
    },
    "3840": {
      "op": "MSTORE"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3845": {
      "op": "DUP3"
    },
    "3846": {
      "op": "ADD"
    },
    "3847": {
      "op": "MSTORE"
    },
    "3848": {
      "op": "PUSH20",
      "value": "0x4A6F6220616C7265616479206372656174656421"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3871": {
      "op": "SHL"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3874": {
      "op": "DUP3"
    },
    "3875": {
      "op": "ADD"
    },
    "3876": {
      "op": "MSTORE"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "3883": {
      "op": "JUMP"
    },
    "3884": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3433,
        3491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3885": {
      "branch": 126,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3509,
        3530
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 51
    },
    "3886": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF79"
    },
    "3889": {
      "branch": 126,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3890": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3892": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3899": {
      "op": "SHL"
    },
    "3900": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3901": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3904": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3906": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3907": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "ADD",
      "path": "6"
    },
    "3908": {
      "op": "MSTORE"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3913": {
      "op": "DUP3"
    },
    "3914": {
      "op": "ADD"
    },
    "3915": {
      "op": "MSTORE"
    },
    "3916": {
      "op": "PUSH32",
      "value": "0x4A6F62206D757374206861766520612063617061636974792E00000000000000"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3956": {
      "op": "ADD"
    },
    "3957": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "3960": {
      "op": "JUMP"
    },
    "3961": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3501,
        3560
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3962": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3593,
        3603
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 52,
      "value": "0x72"
    },
    "3964": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3593,
        3603
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3965": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3967": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3969": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3970": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "3972": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3974": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3975": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3977": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3978": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3590
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3979": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3570,
        3603
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3980": {
      "branch": 127,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3663,
        3680
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 53
    },
    "3981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFE3"
    },
    "3984": {
      "branch": 127,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3994": {
      "op": "SHL"
    },
    "3995": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3996": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4001": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4002": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "ADD",
      "path": "6"
    },
    "4003": {
      "op": "MSTORE"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4008": {
      "op": "DUP3"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "op": "MSTORE"
    },
    "4011": {
      "op": "PUSH32",
      "value": "0x5061796D656E74206D7573742062652067726561746572207468616E207A6572"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4046": {
      "op": "DUP3"
    },
    "4047": {
      "op": "ADD"
    },
    "4048": {
      "op": "MSTORE"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0x3797"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4054": {
      "op": "SHL"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4057": {
      "op": "DUP3"
    },
    "4058": {
      "op": "ADD"
    },
    "4059": {
      "op": "MSTORE"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "4066": {
      "op": "JUMP"
    },
    "4067": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3655,
        3719
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4068": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3760,
        3770
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 54
    },
    "4069": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4071": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4072": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4073": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4074": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "4076": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4078": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4079": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4081": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4082": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4083": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4084": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3775,
        3788
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4085": {
      "op": "GT"
    },
    "4086": {
      "branch": 128,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3750,
        3788
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4087": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1042"
    },
    "4090": {
      "branch": 128,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4091": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4093": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4100": {
      "op": "SHL"
    },
    "4101": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4102": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4105": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4107": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4108": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "ADD",
      "path": "6"
    },
    "4109": {
      "op": "MSTORE"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4114": {
      "op": "DUP3"
    },
    "4115": {
      "op": "ADD"
    },
    "4116": {
      "op": "MSTORE"
    },
    "4117": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4152": {
      "op": "DUP3"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "op": "MSTORE"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4157": {
      "op": "ADD"
    },
    "4158": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "4161": {
      "op": "JUMP"
    },
    "4162": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3729,
        3841
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4163": {
      "branch": 129,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3859,
        3880
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 55
    },
    "4164": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1069"
    },
    "4167": {
      "branch": 129,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4168": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4170": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4177": {
      "op": "SHL"
    },
    "4178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4179": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4182": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4184": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4185": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "ADD",
      "path": "6"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "4200": {
      "op": "JUMP"
    },
    "4201": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3851,
        3885
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4202": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3949,
        3997
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 56,
      "value": "0x1075"
    },
    "4205": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3959,
        3969
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3979,
        3980
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4208": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3983,
        3996
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4209": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3949,
        3958
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17AD"
    },
    "4212": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        3949,
        3997
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4213": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3949,
        3997
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4214": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 57,
      "value": "0x40"
    },
    "4216": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4217": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4218": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4220": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4221": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4223": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4224": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4225": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4152,
        4162
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4226": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4152,
        4162
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4227": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4228": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4229": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4231": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MUL",
      "path": "6"
    },
    "4232": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4234": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4235": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4237": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4238": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4239": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4240": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4241": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4243": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4244": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4245": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4246": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4247": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4248": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4249": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4250": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4251": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4252": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4254": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4255": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4256": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4257": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4259": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MUL",
      "path": "6"
    },
    "4260": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4261": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4262": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4263": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "4264": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4266": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4267": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4268": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4269": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4270": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4273": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4274": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4280": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4281": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4282": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4283": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4284": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4285": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4122,
        4237
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4286": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4108,
        4118
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "4288": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4108,
        4118
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4289": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4290": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4291": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4107
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "4293": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4294": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4295": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4297": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4298": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4299": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4300": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4301": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4302": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4303": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4304": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4305": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10DF"
    },
    "4308": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4309": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4310": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4119
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4311": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4312": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4313": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4314": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4315": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C65"
    },
    "4318": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        4103,
        4237
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4319": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4323": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4324": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4325": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4326": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4327": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4329": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4330": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4331": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "ADD",
      "path": "6"
    },
    "4332": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4103,
        4237
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4333": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4266,
        4276
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 58,
      "value": "0x72"
    },
    "4335": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4266,
        4276
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4336": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4338": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4339": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4340": {
      "op": "SWAP2"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "SWAP2"
    },
    "4344": {
      "op": "DUP2"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "DUP7"
    },
    "4347": {
      "op": "SWAP1"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "op": "SWAP1"
    },
    "4350": {
      "op": "DUP2"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "DUP7"
    },
    "4353": {
      "op": "SWAP1"
    },
    "4354": {
      "op": "MSTORE"
    },
    "4355": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x1C6531F3B1DC9905436662823DF97D3CE0C5B175E8A4C43F5DF86F801A75853E"
    },
    "4388": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4394": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4395": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4396": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4397": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "SUB",
      "path": "6"
    },
    "4398": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4399": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4253,
        4296
      ],
      "op": "LOG1",
      "path": "6"
    },
    "4400": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4316
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 59,
      "value": "0x72"
    },
    "4402": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4403": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4404": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4405": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4316
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4407": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x113F"
    },
    "4410": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4411": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2134"
    },
    "4414": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        4306,
        4318
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4415": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4416": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4417": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4418": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "POP",
      "path": "6"
    },
    "4419": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4420": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        4306,
        4318
      ],
      "op": "POP",
      "path": "6"
    },
    "4421": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "POP",
      "path": "6"
    },
    "4422": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "POP",
      "path": "6"
    },
    "4423": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "POP",
      "path": "6"
    },
    "4424": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "POP",
      "path": "6"
    },
    "4425": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        3239,
        4325
      ],
      "op": "POP",
      "path": "6"
    },
    "4426": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        3239,
        4325
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4427": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4428": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4430": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4431": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4434": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4435": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "0"
    },
    "4436": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4438": {
      "branch": 144,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "0"
    },
    "4439": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1166"
    },
    "4442": {
      "branch": 144,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4443": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4445": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4446": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4448": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "0"
    },
    "4449": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4450": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116A"
    },
    "4453": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4454": {
      "branch": 145,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4455": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 60
    },
    "4456": {
      "op": "EXTCODESIZE"
    },
    "4457": {
      "op": "ISZERO"
    },
    "4458": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4459": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11CD"
    },
    "4462": {
      "branch": 145,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4463": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4465": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4472": {
      "op": "SHL"
    },
    "4473": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4474": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4477": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4479": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4480": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "0"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4486": {
      "op": "DUP3"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "op": "MSTORE"
    },
    "4489": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4524": {
      "op": "DUP3"
    },
    "4525": {
      "op": "ADD"
    },
    "4526": {
      "op": "MSTORE"
    },
    "4527": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4544": {
      "op": "SHL"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4547": {
      "op": "DUP3"
    },
    "4548": {
      "op": "ADD"
    },
    "4549": {
      "op": "MSTORE"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "4556": {
      "op": "JUMP"
    },
    "4557": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4558": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4560": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4561": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4564": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4565": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "0"
    },
    "4566": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4568": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "0"
    },
    "4569": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4570": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4571": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4572": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11EF"
    },
    "4575": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4576": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4578": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4579": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4580": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4583": {
      "op": "NOT"
    },
    "4584": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "0"
    },
    "4585": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "4588": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "0"
    },
    "4589": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4590": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4591": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4592": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 61,
      "value": "0x1236"
    },
    "4595": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4597": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4598": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4599": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4601": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "ADD",
      "path": "6"
    },
    "4602": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4604": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4605": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4606": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4608": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4609": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4610": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4612": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "ADD",
      "path": "6"
    },
    "4613": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4628": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4629": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "POP",
      "path": "6"
    },
    "4630": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4632": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4633": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4634": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4636": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "ADD",
      "path": "6"
    },
    "4637": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4639": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4640": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4641": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4643": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4644": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4645": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4647": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "ADD",
      "path": "6"
    },
    "4648": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4654": {
      "op": "SHL"
    },
    "4655": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4656": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4657": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "POP",
      "path": "6"
    },
    "4658": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BDB"
    },
    "4661": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2013,
        2046
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4662": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2013,
        2046
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4663": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2066
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 62,
      "value": "0x66"
    },
    "4665": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4666": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "op": "SUB"
    },
    "4675": {
      "op": "NOT"
    },
    "4676": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "AND",
      "path": "6"
    },
    "4677": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2069,
        2079
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4678": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "OR",
      "path": "6"
    },
    "4679": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4680": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4681": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2104,
        2111
      ],
      "op": "PUSH9",
      "path": "6",
      "statement": 63,
      "value": "0x6F05B59D3B20000000"
    },
    "4691": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2089,
        2101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "4693": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2089,
        2111
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4694": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2134,
        2144
      ],
      "op": "PUSH10",
      "path": "6",
      "statement": 64,
      "value": "0x152D02C7E14AF6800000"
    },
    "4705": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2121,
        2131
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "4707": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2121,
        2144
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4708": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2170,
        2174
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 65,
      "value": "0x2226"
    },
    "4711": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2154,
        2167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "4713": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2154,
        2174
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4714": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2066
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4716": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2184,
        2206
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 66,
      "value": "0x6B"
    },
    "4718": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2184,
        2210
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4719": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2184,
        2210
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4720": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2184,
        2210
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4721": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2235,
        2244
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 67,
      "value": "0x127500"
    },
    "4725": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6D"
    },
    "4727": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2220,
        2244
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4728": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2056,
        2079
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4730": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2279,
        2289
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 68,
      "value": "0x72"
    },
    "4732": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2279,
        2293
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4733": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2279,
        2293
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4734": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2279,
        2293
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4735": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2303,
        2319
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x74"
    },
    "4737": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2303,
        2323
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4738": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2303,
        2323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4739": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2303,
        2323
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4740": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2333,
        2344
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 70,
      "value": "0x73"
    },
    "4742": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2333,
        2348
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4743": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4744": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2380,
        2393
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4745": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2380,
        2400
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4746": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2376,
        2377
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4747": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2376,
        2400
      ],
      "op": "LT",
      "path": "6"
    },
    "4748": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4749": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12BD"
    },
    "4752": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4753": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2421,
        2456
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x12B5"
    },
    "4756": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2440
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4757": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2441,
        2442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4758": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4759": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4760": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4761": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "LT",
      "path": "6"
    },
    "4762": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A5"
    },
    "4765": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4766": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A5"
    },
    "4769": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21CC"
    },
    "4772": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2427,
        2443
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4773": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4774": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4776": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "MUL",
      "path": "6"
    },
    "4777": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4779": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "ADD",
      "path": "6"
    },
    "4780": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "ADD",
      "path": "6"
    },
    "4781": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2427,
        2443
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4782": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2445,
        2455
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "4784": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2445,
        2455
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4785": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2421,
        2426
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AFC"
    },
    "4788": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2421,
        2456
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4789": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2421,
        2456
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4790": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2402,
        2405
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 72,
      "value": "0x1"
    },
    "4792": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2402,
        2405
      ],
      "op": "ADD",
      "path": "6"
    },
    "4793": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1287"
    },
    "4796": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4797": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4798": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2359,
        2467
      ],
      "op": "POP",
      "path": "6"
    },
    "4799": {
      "offset": [
        2649,
        2663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4800": {
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4801": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D0"
    },
    "4804": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4805": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4807": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4808": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4809": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4812": {
      "op": "NOT"
    },
    "4813": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "4814": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4815": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4816": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4817": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "0"
    },
    "4818": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "POP",
      "path": "6"
    },
    "4819": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4820": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4821": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4822": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4824": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4825": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4826": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4827": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "4829": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4831": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4832": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4833": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4834": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4836": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4837": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4838": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4845": {
      "op": "SHL"
    },
    "4846": {
      "op": "SUB"
    },
    "4847": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4848": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "1"
    },
    "4849": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4850": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4851": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4852": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4853": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4854": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4855": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4856": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4857": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4858": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4859": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4860": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 73
    },
    "4861": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4862": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "1"
    },
    "4863": {
      "branch": 135,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4864": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1359"
    },
    "4867": {
      "branch": 135,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4868": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4870": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4879": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4882": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4884": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4885": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "1"
    },
    "4886": {
      "op": "MSTORE"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4891": {
      "op": "DUP3"
    },
    "4892": {
      "op": "ADD"
    },
    "4893": {
      "op": "MSTORE"
    },
    "4894": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4929": {
      "op": "DUP3"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "MSTORE"
    },
    "4932": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4940": {
      "op": "SHL"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4943": {
      "op": "DUP3"
    },
    "4944": {
      "op": "ADD"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "4952": {
      "op": "JUMP"
    },
    "4953": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4954": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 74,
      "value": "0x6D3"
    },
    "4957": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4958": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4959": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4960": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4961": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "1"
    },
    "4962": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15FD"
    },
    "4965": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4966": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4967": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4969": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4970": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 75,
      "value": "0x6AE"
    },
    "4973": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4974": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4975": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4976": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17AD"
    },
    "4979": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4980": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4981": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9596,
        9600
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4983": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9602,
        9609
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4984": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9611,
        9618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4986": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9653,
        9669
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 76,
      "value": "0x74"
    },
    "4988": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9653,
        9669
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4989": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9638,
        9650
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4990": {
      "branch": 130,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9638,
        9669
      ],
      "op": "LT",
      "path": "6"
    },
    "4991": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13B8"
    },
    "4994": {
      "branch": 130,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4995": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4997": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5004": {
      "op": "SHL"
    },
    "5005": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5006": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5009": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5011": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5012": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "ADD",
      "path": "6"
    },
    "5013": {
      "op": "MSTORE"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5018": {
      "op": "DUP3"
    },
    "5019": {
      "op": "ADD"
    },
    "5020": {
      "op": "MSTORE"
    },
    "5021": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5035": {
      "op": "SHL"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5038": {
      "op": "DUP3"
    },
    "5039": {
      "op": "ADD"
    },
    "5040": {
      "op": "MSTORE"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5043": {
      "op": "ADD"
    },
    "5044": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "5047": {
      "op": "JUMP"
    },
    "5048": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9630,
        9685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5049": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5051": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5052": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5053": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5054": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9735
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "5056": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5058": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5059": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5060": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5061": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5063": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5064": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5065": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9749
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5066": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5067": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5068": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "5070": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5071": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5072": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5073": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5074": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5075": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5082": {
      "op": "SHL"
    },
    "5083": {
      "op": "SUB"
    },
    "5084": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5085": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5086": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "AND",
      "path": "6"
    },
    "5087": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5088": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5089": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5090": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5092": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5093": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5094": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5095": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5096": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5097": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5098": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5099": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5100": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "5101": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5102": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5104": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5105": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5106": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5107": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5108": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5109": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5110": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5111": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5113": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5114": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5115": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5116": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5117": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5119": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5120": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "ADD",
      "path": "6"
    },
    "5121": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5122": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "5124": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9792
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5125": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5126": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5127": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5134": {
      "op": "SHL"
    },
    "5135": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5136": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5137": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5139": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5140": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "ADD",
      "path": "6"
    },
    "5141": {
      "op": "SWAP5"
    },
    "5142": {
      "op": "SWAP1"
    },
    "5143": {
      "op": "SWAP5"
    },
    "5144": {
      "op": "MSTORE"
    },
    "5145": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9749
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5146": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9695,
        9722
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5147": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9792
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5148": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9792
      ],
      "op": "AND",
      "path": "6"
    },
    "5149": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9792
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5150": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9810
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40550A1C"
    },
    "5155": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9810
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5161": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5163": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5164": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5165": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5166": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "SUB",
      "path": "6"
    },
    "5167": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5168": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5169": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "GAS",
      "path": "6"
    },
    "5170": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "5171": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5172": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5173": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5174": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1443"
    },
    "5177": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5178": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5179": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5181": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5182": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "5183": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5184": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5186": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5187": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5188": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "POP",
      "path": "6"
    },
    "5189": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "POP",
      "path": "6"
    },
    "5190": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "POP",
      "path": "6"
    },
    "5191": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "POP",
      "path": "6"
    },
    "5192": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5194": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5195": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5196": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "5198": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "NOT",
      "path": "6"
    },
    "5199": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "5201": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5202": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "ADD",
      "path": "6"
    },
    "5203": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "AND",
      "path": "6"
    },
    "5204": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5205": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "ADD",
      "path": "6"
    },
    "5206": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5207": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5209": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5210": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "POP",
      "path": "6"
    },
    "5211": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5212": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "ADD",
      "path": "6"
    },
    "5213": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5214": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1467"
    },
    "5217": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5218": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5219": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2236"
    },
    "5222": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9775,
        9853
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5223": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9775,
        9853
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5224": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9881,
        9905
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 77,
      "value": "0x60"
    },
    "5226": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9881,
        9905
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5227": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9881,
        9905
      ],
      "op": "ADD",
      "path": "6"
    },
    "5228": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9881,
        9905
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5229": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9907,
        9926
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5230": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9907,
        9926
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5231": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9759,
        9853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5232": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9759,
        9853
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "5233": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9881,
        9905
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5234": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9881,
        9905
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "5235": {
      "op": "POP"
    },
    "5236": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9907,
        9926
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5239": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9511,
        9934
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        9511,
        9934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5244": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2479,
        2747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5245": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2584,
        2601
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 78,
      "value": "0x65"
    },
    "5247": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2584,
        2601
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5254": {
      "op": "SHL"
    },
    "5255": {
      "op": "SUB"
    },
    "5256": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2584,
        2601
      ],
      "op": "AND",
      "path": "6"
    },
    "5257": {
      "branch": 131,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2576,
        2616
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5258": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D5"
    },
    "5261": {
      "branch": 131,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5262": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5264": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5271": {
      "op": "SHL"
    },
    "5272": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5273": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5276": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5278": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5279": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "ADD",
      "path": "6"
    },
    "5280": {
      "op": "MSTORE"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5285": {
      "op": "DUP3"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "MSTORE"
    },
    "5288": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "5332": {
      "op": "JUMP"
    },
    "5333": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2555,
        2672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5334": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2699
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 79,
      "value": "0x65"
    },
    "5336": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5337": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5344": {
      "op": "SHL"
    },
    "5345": {
      "op": "SUB"
    },
    "5346": {
      "op": "NOT"
    },
    "5347": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "AND",
      "path": "6"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5354": {
      "op": "SHL"
    },
    "5355": {
      "op": "SUB"
    },
    "5356": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5357": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5358": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5359": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "AND",
      "path": "6"
    },
    "5360": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5361": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5362": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5363": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "OR",
      "path": "6"
    },
    "5364": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5365": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2682,
        2740
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5366": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        2479,
        2747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5367": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2753,
        3180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5368": {
      "offset": [
        1862,
        1872
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "5370": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1862,
        1872
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5377": {
      "op": "SHL"
    },
    "5378": {
      "op": "SUB"
    },
    "5379": {
      "offset": [
        1862,
        1872
      ],
      "op": "AND",
      "path": "6"
    },
    "5380": {
      "offset": [
        1848,
        1858
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5381": {
      "offset": [
        1848,
        1872
      ],
      "op": "EQ",
      "path": "6"
    },
    "5382": {
      "offset": [
        1840,
        1908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1551"
    },
    "5385": {
      "offset": [
        1840,
        1908
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5386": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1840,
        1908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5388": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1840,
        1908
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5395": {
      "op": "SHL"
    },
    "5396": {
      "offset": [
        1840,
        1908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5397": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1840,
        1908
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5400": {
      "offset": [
        1840,
        1908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5402": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1840,
        1908
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5403": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1840,
        1908
      ],
      "op": "ADD",
      "path": "6"
    },
    "5404": {
      "op": "MSTORE"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5409": {
      "op": "DUP3"
    },
    "5410": {
      "op": "ADD"
    },
    "5411": {
      "op": "MSTORE"
    },
    "5412": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265207468652070726F78792061646D696E2E00"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5447": {
      "op": "DUP3"
    },
    "5448": {
      "op": "ADD"
    },
    "5449": {
      "op": "MSTORE"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "offset": [
        1840,
        1908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "5456": {
      "op": "JUMP"
    },
    "5457": {
      "offset": [
        1840,
        1908
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5458": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2974,
        2975
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 80,
      "value": "0x2"
    },
    "5460": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "5462": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5464": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5465": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5466": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5467": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1564"
    },
    "5470": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5471": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5472": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "5475": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        2958,
        2975
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5476": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5477": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5478": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "POP",
      "path": "6"
    },
    "5479": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "POP",
      "path": "6"
    },
    "5480": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5481": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5482": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5483": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2958,
        2975
      ],
      "op": "POP",
      "path": "6"
    },
    "5484": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3001,
        3002
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 81,
      "value": "0x2"
    },
    "5486": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        2997
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "5488": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        2997
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5490": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5491": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5492": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5493": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157E"
    },
    "5496": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5497": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5498": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2193"
    },
    "5501": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        2985,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5502": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5503": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5504": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "POP",
      "path": "6"
    },
    "5505": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "POP",
      "path": "6"
    },
    "5506": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5507": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5508": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5509": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2985,
        3002
      ],
      "op": "POP",
      "path": "6"
    },
    "5510": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3029,
        3030
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 82,
      "value": "0x2"
    },
    "5512": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "5514": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5516": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5517": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5518": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5519": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1598"
    },
    "5522": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5523": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5524": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B5"
    },
    "5527": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        3012,
        3030
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5528": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5529": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5530": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5531": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3012,
        3030
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 83,
      "value": "0x65"
    },
    "5536": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5537": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5539": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5540": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5541": {
      "op": "PUSH4",
      "value": "0x762193B9"
    },
    "5546": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5548": {
      "op": "SHL"
    },
    "5549": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5550": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5551": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5552": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5562": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5563": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "AND",
      "path": "6"
    },
    "5564": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5565": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3122
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEC432772"
    },
    "5570": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3122
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5571": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5573": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5574": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5575": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "ADD",
      "path": "6"
    },
    "5576": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5577": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5579": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5580": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5581": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5582": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5583": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5584": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5585": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "SUB",
      "path": "6"
    },
    "5586": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "ADD",
      "path": "6"
    },
    "5587": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5588": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5589": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3110
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5590": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5591": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "5592": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5593": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5594": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5595": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E3"
    },
    "5598": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5599": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5601": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5602": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5603": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5604": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "POP",
      "path": "6"
    },
    "5605": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "GAS",
      "path": "6"
    },
    "5606": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "CALL",
      "path": "6"
    },
    "5607": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5608": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5609": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5610": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F7"
    },
    "5613": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5614": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5615": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5617": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5618": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "5619": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5620": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5622": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5623": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5624": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "POP",
      "path": "6"
    },
    "5625": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "POP",
      "path": "6"
    },
    "5626": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "POP",
      "path": "6"
    },
    "5627": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3093,
        3124
      ],
      "op": "POP",
      "path": "6"
    },
    "5628": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "o",
      "offset": [
        2753,
        3180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5629": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5636": {
      "op": "SHL"
    },
    "5637": {
      "op": "SUB"
    },
    "5638": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 84
    },
    "5639": {
      "branch": 136,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "1"
    },
    "5640": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x165F"
    },
    "5643": {
      "branch": 136,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5644": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5646": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5653": {
      "op": "SHL"
    },
    "5654": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5655": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5658": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5660": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5661": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "1"
    },
    "5662": {
      "op": "MSTORE"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5665": {
      "op": "DUP1"
    },
    "5666": {
      "op": "DUP3"
    },
    "5667": {
      "op": "ADD"
    },
    "5668": {
      "op": "MSTORE"
    },
    "5669": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5704": {
      "op": "DUP3"
    },
    "5705": {
      "op": "ADD"
    },
    "5706": {
      "op": "MSTORE"
    },
    "5707": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5714": {
      "op": "SHL"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5717": {
      "op": "DUP3"
    },
    "5718": {
      "op": "ADD"
    },
    "5719": {
      "op": "MSTORE"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5722": {
      "op": "ADD"
    },
    "5723": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "5726": {
      "op": "JUMP"
    },
    "5727": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5734": {
      "op": "SHL"
    },
    "5735": {
      "op": "SUB"
    },
    "5736": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 85
    },
    "5737": {
      "branch": 137,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "1"
    },
    "5738": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C0"
    },
    "5741": {
      "branch": 137,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5742": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5744": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5751": {
      "op": "SHL"
    },
    "5752": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5753": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5756": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5758": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5759": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "1"
    },
    "5760": {
      "op": "MSTORE"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5765": {
      "op": "DUP3"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "MSTORE"
    },
    "5768": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5803": {
      "op": "DUP3"
    },
    "5804": {
      "op": "ADD"
    },
    "5805": {
      "op": "MSTORE"
    },
    "5806": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5811": {
      "op": "SHL"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5814": {
      "op": "DUP3"
    },
    "5815": {
      "op": "ADD"
    },
    "5816": {
      "op": "MSTORE"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5819": {
      "op": "ADD"
    },
    "5820": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "5823": {
      "op": "JUMP"
    },
    "5824": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5831": {
      "op": "SHL"
    },
    "5832": {
      "op": "SUB"
    },
    "5833": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 86
    },
    "5834": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5835": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "1"
    },
    "5836": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5838": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5839": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5840": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5841": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "5843": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5845": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5846": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5847": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5848": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5850": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5851": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5852": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5853": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "5854": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5855": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "1"
    },
    "5856": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5857": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5858": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5859": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "5860": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5861": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5862": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5863": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5864": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5865": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5866": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5867": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5868": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5869": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 87
    },
    "5870": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5871": {
      "op": "DUP5"
    },
    "5872": {
      "op": "DUP2"
    },
    "5873": {
      "op": "MSTORE"
    },
    "5874": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5907": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5911": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5912": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5913": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5914": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "1"
    },
    "5915": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5916": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "1"
    },
    "5917": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "5918": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "5919": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "5920": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5921": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5928": {
      "op": "SHL"
    },
    "5929": {
      "op": "SUB"
    },
    "5930": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5931": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5932": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "5933": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5935": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5936": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5937": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5938": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "5940": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5942": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5943": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5944": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5945": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5947": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5948": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5949": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5950": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5951": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5952": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "5953": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5954": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5955": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5956": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5957": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5958": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5959": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5962": {
      "op": "NOT"
    },
    "5963": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5964": {
      "branch": 138,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "1"
    },
    "5965": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F7"
    },
    "5968": {
      "branch": 138,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5969": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 88
    },
    "5970": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5971": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "1"
    },
    "5972": {
      "branch": 139,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5973": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17A0"
    },
    "5976": {
      "branch": 139,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5977": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5979": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5986": {
      "op": "SHL"
    },
    "5987": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5988": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5991": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5993": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5994": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "1"
    },
    "5995": {
      "op": "MSTORE"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6000": {
      "op": "DUP3"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "MSTORE"
    },
    "6003": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6038": {
      "op": "DUP3"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "MSTORE"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6043": {
      "op": "ADD"
    },
    "6044": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "6047": {
      "op": "JUMP"
    },
    "6048": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6049": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 89,
      "value": "0x15F7"
    },
    "6052": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6053": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6054": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6055": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6056": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "1"
    },
    "6057": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15FD"
    },
    "6060": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6061": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6068": {
      "op": "SHL"
    },
    "6069": {
      "op": "SUB"
    },
    "6070": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 90
    },
    "6071": {
      "branch": 140,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "1"
    },
    "6072": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1811"
    },
    "6075": {
      "branch": 140,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6076": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6078": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6087": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6090": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6092": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6093": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "1"
    },
    "6094": {
      "op": "MSTORE"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6099": {
      "op": "DUP3"
    },
    "6100": {
      "op": "ADD"
    },
    "6101": {
      "op": "MSTORE"
    },
    "6102": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6137": {
      "op": "DUP3"
    },
    "6138": {
      "op": "ADD"
    },
    "6139": {
      "op": "MSTORE"
    },
    "6140": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6148": {
      "op": "SHL"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6151": {
      "op": "DUP3"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "MSTORE"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6156": {
      "op": "ADD"
    },
    "6157": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "6160": {
      "op": "JUMP"
    },
    "6161": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6168": {
      "op": "SHL"
    },
    "6169": {
      "op": "SUB"
    },
    "6170": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 91
    },
    "6171": {
      "branch": 141,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "1"
    },
    "6172": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1873"
    },
    "6175": {
      "branch": 141,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6176": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6178": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6185": {
      "op": "SHL"
    },
    "6186": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6187": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6190": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6192": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6193": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "1"
    },
    "6194": {
      "op": "MSTORE"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6199": {
      "op": "DUP3"
    },
    "6200": {
      "op": "ADD"
    },
    "6201": {
      "op": "MSTORE"
    },
    "6202": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6237": {
      "op": "DUP3"
    },
    "6238": {
      "op": "ADD"
    },
    "6239": {
      "op": "MSTORE"
    },
    "6240": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6246": {
      "op": "SHL"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6249": {
      "op": "DUP3"
    },
    "6250": {
      "op": "ADD"
    },
    "6251": {
      "op": "MSTORE"
    },
    "6252": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6254": {
      "op": "ADD"
    },
    "6255": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "6258": {
      "op": "JUMP"
    },
    "6259": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6266": {
      "op": "SHL"
    },
    "6267": {
      "op": "SUB"
    },
    "6268": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6269": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "1"
    },
    "6270": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6272": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6273": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6274": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6275": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "6277": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6279": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6280": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6282": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6283": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6284": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6285": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 92
    },
    "6286": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6287": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "1"
    },
    "6288": {
      "branch": 142,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6289": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18EB"
    },
    "6292": {
      "branch": 142,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6293": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6295": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6302": {
      "op": "SHL"
    },
    "6303": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6304": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6307": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6309": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6310": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "1"
    },
    "6311": {
      "op": "MSTORE"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6316": {
      "op": "DUP3"
    },
    "6317": {
      "op": "ADD"
    },
    "6318": {
      "op": "MSTORE"
    },
    "6319": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6354": {
      "op": "DUP3"
    },
    "6355": {
      "op": "ADD"
    },
    "6356": {
      "op": "MSTORE"
    },
    "6357": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6366": {
      "op": "SHL"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6369": {
      "op": "DUP3"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "MSTORE"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6374": {
      "op": "ADD"
    },
    "6375": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "6378": {
      "op": "JUMP"
    },
    "6379": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6386": {
      "op": "SHL"
    },
    "6387": {
      "op": "SUB"
    },
    "6388": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 93
    },
    "6389": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6390": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "1"
    },
    "6391": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6393": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6394": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6395": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6396": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "6398": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6400": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6401": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6403": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6404": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6405": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6406": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6407": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6408": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "1"
    },
    "6409": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6410": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6411": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 94
    },
    "6412": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6413": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "1"
    },
    "6414": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6415": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6416": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6417": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6418": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6419": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6420": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6421": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6422": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6423": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6424": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1922"
    },
    "6427": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6428": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6429": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6430": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2121"
    },
    "6433": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6434": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6435": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6436": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "6437": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "6438": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6439": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6440": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6441": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "6442": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 95
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6449": {
      "op": "SHL"
    },
    "6450": {
      "op": "SUB"
    },
    "6451": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "6452": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6459": {
      "op": "SHL"
    },
    "6460": {
      "op": "SUB"
    },
    "6461": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "6462": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6495": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6496": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6498": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6499": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196E"
    },
    "6502": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6503": {
      "op": "DUP2"
    },
    "6504": {
      "op": "MSTORE"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6507": {
      "op": "ADD"
    },
    "6508": {
      "op": "SWAP1"
    },
    "6509": {
      "op": "JUMP"
    },
    "6510": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6511": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6513": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6514": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6515": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6516": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "1"
    },
    "6517": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6518": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "1"
    },
    "6519": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 96,
      "value": "0x15F7"
    },
    "6522": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7058,
        8446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6523": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6443,
        6953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6524": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6532,
        6533
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 97,
      "value": "0x0"
    },
    "6526": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6523,
        6529
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6527": {
      "branch": 132,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6523,
        6533
      ],
      "op": "GT",
      "path": "6"
    },
    "6528": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199B"
    },
    "6531": {
      "branch": 132,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6532": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6534": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6535": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6541": {
      "op": "SHL"
    },
    "6542": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6543": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6544": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6546": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "ADD",
      "path": "6"
    },
    "6547": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "6550": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6551": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21E2"
    },
    "6554": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6515,
        6571
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6555": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6515,
        6571
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6556": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6610,
        6616
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 98
    },
    "6557": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6589,
        6606
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19BB"
    },
    "6560": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6599,
        6605
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6567": {
      "op": "SHL"
    },
    "6568": {
      "op": "SUB"
    },
    "6569": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "1"
    },
    "6570": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6572": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6573": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6574": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6575": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "6577": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6579": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6580": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6582": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6583": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6584": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6585": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6586": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6587": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6589,
        6606
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6588": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6589,
        6616
      ],
      "op": "LT",
      "path": "6"
    },
    "6589": {
      "branch": 133,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6589,
        6616
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6590": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A01"
    },
    "6593": {
      "branch": 133,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6594": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6596": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6603": {
      "op": "SHL"
    },
    "6604": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6605": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6608": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6610": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6611": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "ADD",
      "path": "6"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6617": {
      "op": "DUP3"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "op": "MSTORE"
    },
    "6620": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "6644": {
      "op": "SHL"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6647": {
      "op": "DUP3"
    },
    "6648": {
      "op": "ADD"
    },
    "6649": {
      "op": "MSTORE"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6652": {
      "op": "ADD"
    },
    "6653": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "6656": {
      "op": "JUMP"
    },
    "6657": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6581,
        6642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6664": {
      "op": "SHL"
    },
    "6665": {
      "op": "SUB"
    },
    "6666": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6667": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "AND",
      "path": "6"
    },
    "6668": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6653,
        6672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6670": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6671": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6672": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6673": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "6675": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6677": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6678": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6680": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6681": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6682": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6683": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6675,
        6703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6684": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6721,
        6737
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 99
    },
    "6685": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6721,
        6737
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6686": {
      "branch": 134,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6721,
        6737
      ],
      "op": "SUB",
      "path": "6"
    },
    "6687": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A6A"
    },
    "6690": {
      "branch": 134,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6691": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6693": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6700": {
      "op": "SHL"
    },
    "6701": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6702": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6705": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6707": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6708": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "ADD",
      "path": "6"
    },
    "6709": {
      "op": "MSTORE"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6714": {
      "op": "DUP3"
    },
    "6715": {
      "op": "ADD"
    },
    "6716": {
      "op": "MSTORE"
    },
    "6717": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6752": {
      "op": "DUP3"
    },
    "6753": {
      "op": "ADD"
    },
    "6754": {
      "op": "MSTORE"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6757": {
      "op": "ADD"
    },
    "6758": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F9"
    },
    "6761": {
      "op": "JUMP"
    },
    "6762": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6713,
        6767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6763": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6778,
        6821
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 100,
      "value": "0x1A75"
    },
    "6766": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6791,
        6797
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6767": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6807,
        6811
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "6768": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6814,
        6820
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6769": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6778,
        6790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BA"
    },
    "6772": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6778,
        6821
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6773": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6778,
        6821
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 101,
      "value": "0x0"
    },
    "6777": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6778": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6779": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6780": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "6782": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6784": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6785": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6787": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6788": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6789": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6861
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6791": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6861
      ],
      "op": "ADD",
      "path": "6"
    },
    "6792": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6793": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6794": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6865,
        6871
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6795": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6865,
        6871
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6796": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6854
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6797": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A97"
    },
    "6800": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6801": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6865,
        6871
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6802": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6865,
        6871
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6803": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2121"
    },
    "6806": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6831,
        6871
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6807": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6808": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6809": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "POP",
      "path": "6"
    },
    "6810": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "POP",
      "path": "6"
    },
    "6811": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6812": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6813": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6814": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6831,
        6871
      ],
      "op": "POP",
      "path": "6"
    },
    "6815": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6896,
        6902
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 102
    },
    "6816": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6892
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "6818": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6892
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6820": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6821": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6822": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6823": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AB0"
    },
    "6826": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6827": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6828": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2121"
    },
    "6831": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6881,
        6902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6832": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6833": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6834": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6835": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6902
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6836": {
      "op": "POP"
    },
    "6837": {
      "op": "POP"
    },
    "6838": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 103,
      "value": "0x40"
    },
    "6840": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6841": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6848": {
      "op": "SHL"
    },
    "6849": {
      "op": "SUB"
    },
    "6850": {
      "op": "DUP6"
    },
    "6851": {
      "op": "AND"
    },
    "6852": {
      "op": "DUP2"
    },
    "6853": {
      "op": "MSTORE"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6856": {
      "op": "DUP2"
    },
    "6857": {
      "op": "ADD"
    },
    "6858": {
      "op": "DUP5"
    },
    "6859": {
      "op": "SWAP1"
    },
    "6860": {
      "op": "MSTORE"
    },
    "6861": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "6894": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6895": {
      "op": "ADD"
    },
    "6896": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6898": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6899": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6900": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6901": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "SUB",
      "path": "6"
    },
    "6902": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6903": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6918,
        6946
      ],
      "op": "LOG1",
      "path": "6"
    },
    "6904": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6505,
        6953
      ],
      "op": "POP",
      "path": "6"
    },
    "6905": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6443,
        6953
      ],
      "op": "POP",
      "path": "6"
    },
    "6906": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6443,
        6953
      ],
      "op": "POP",
      "path": "6"
    },
    "6907": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "o",
      "offset": [
        6443,
        6953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6908": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6915": {
      "op": "SHL"
    },
    "6916": {
      "op": "SUB"
    },
    "6917": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 104
    },
    "6918": {
      "branch": 143,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "1"
    },
    "6919": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B52"
    },
    "6922": {
      "branch": 143,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6923": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6925": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6932": {
      "op": "SHL"
    },
    "6933": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6934": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6937": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6939": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6940": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "1"
    },
    "6941": {
      "op": "MSTORE"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6946": {
      "op": "DUP3"
    },
    "6947": {
      "op": "ADD"
    },
    "6948": {
      "op": "MSTORE"
    },
    "6949": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6984": {
      "op": "DUP3"
    },
    "6985": {
      "op": "ADD"
    },
    "6986": {
      "op": "MSTORE"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6989": {
      "op": "ADD"
    },
    "6990": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F9"
    },
    "6993": {
      "op": "JUMP"
    },
    "6994": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6995": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 105
    },
    "6996": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "6998": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7000": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7001": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7002": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7003": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B64"
    },
    "7006": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7007": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7008": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2121"
    },
    "7011": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7012": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7013": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7014": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7015": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7016": {
      "op": "POP"
    },
    "7017": {
      "op": "POP"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7024": {
      "op": "SHL"
    },
    "7025": {
      "op": "SUB"
    },
    "7026": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 106
    },
    "7027": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "1"
    },
    "7028": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7030": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7031": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7032": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7033": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "7035": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7037": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7038": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7040": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7041": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7042": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7043": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7044": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7045": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7046": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7047": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B91"
    },
    "7050": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7051": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7052": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7053": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2121"
    },
    "7056": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7057": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7058": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7059": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7060": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7061": {
      "op": "POP"
    },
    "7062": {
      "op": "POP"
    },
    "7063": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 107,
      "value": "0x40"
    },
    "7065": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7066": {
      "op": "DUP2"
    },
    "7067": {
      "op": "DUP2"
    },
    "7068": {
      "op": "MSTORE"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7075": {
      "op": "SHL"
    },
    "7076": {
      "op": "SUB"
    },
    "7077": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7078": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "1"
    },
    "7079": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7080": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7082": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7083": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7116": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7119": {
      "op": "ADD"
    },
    "7120": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7122": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7123": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7124": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7125": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "1"
    },
    "7126": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7127": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "1"
    },
    "7128": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "0"
    },
    "7129": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1932,
        2473
      ],
      "op": "POP",
      "path": "6"
    },
    "7130": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        1932,
        2473
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7131": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7132": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7134": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7135": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7138": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7139": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "7140": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7142": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "7143": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C02"
    },
    "7146": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7147": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7149": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7150": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7156": {
      "op": "SHL"
    },
    "7157": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7158": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7159": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7161": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "7162": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "7165": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7166": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2258"
    },
    "7169": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7170": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7171": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 108,
      "value": "0x12D0"
    },
    "7174": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7175": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7176": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7178": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7179": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7182": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7183": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "7184": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7186": {
      "branch": 146,
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "7187": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2E"
    },
    "7190": {
      "branch": 146,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7191": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7193": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7200": {
      "op": "SHL"
    },
    "7201": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7202": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7203": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7205": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "7206": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "7209": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7210": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2258"
    },
    "7213": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7214": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7215": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 109,
      "value": "0x36"
    },
    "7217": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C3A"
    },
    "7220": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7221": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7222": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22F3"
    },
    "7225": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7226": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7227": {
      "op": "POP"
    },
    "7228": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 110,
      "value": "0x37"
    },
    "7230": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD30"
    },
    "7233": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7234": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7235": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22F3"
    },
    "7238": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7239": {
      "op": "JUMPDEST"
    },
    "7240": {
      "op": "POP"
    },
    "7241": {
      "op": "DUP1"
    },
    "7242": {
      "op": "SLOAD"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7245": {
      "op": "DUP3"
    },
    "7246": {
      "op": "SSTORE"
    },
    "7247": {
      "op": "SWAP1"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7250": {
      "op": "MSTORE"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7255": {
      "op": "KECCAK256"
    },
    "7256": {
      "op": "SWAP1"
    },
    "7257": {
      "op": "DUP2"
    },
    "7258": {
      "op": "ADD"
    },
    "7259": {
      "op": "SWAP1"
    },
    "7260": {
      "op": "PUSH2",
      "value": "0xABE"
    },
    "7263": {
      "op": "SWAP2"
    },
    "7264": {
      "op": "SWAP1"
    },
    "7265": {
      "op": "PUSH2",
      "value": "0x1CB0"
    },
    "7268": {
      "jump": "i",
      "op": "JUMP"
    },
    "7269": {
      "op": "JUMPDEST"
    },
    "7270": {
      "op": "DUP3"
    },
    "7271": {
      "op": "DUP1"
    },
    "7272": {
      "op": "SLOAD"
    },
    "7273": {
      "op": "DUP3"
    },
    "7274": {
      "op": "DUP3"
    },
    "7275": {
      "op": "SSTORE"
    },
    "7276": {
      "op": "SWAP1"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7279": {
      "op": "MSTORE"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7284": {
      "op": "KECCAK256"
    },
    "7285": {
      "op": "SWAP1"
    },
    "7286": {
      "op": "DUP2"
    },
    "7287": {
      "op": "ADD"
    },
    "7288": {
      "op": "SWAP3"
    },
    "7289": {
      "op": "DUP3"
    },
    "7290": {
      "op": "ISZERO"
    },
    "7291": {
      "op": "PUSH2",
      "value": "0x1CA0"
    },
    "7294": {
      "op": "JUMPI"
    },
    "7295": {
      "op": "SWAP2"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7298": {
      "op": "MUL"
    },
    "7299": {
      "op": "DUP3"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "JUMPDEST"
    },
    "7302": {
      "op": "DUP3"
    },
    "7303": {
      "op": "DUP2"
    },
    "7304": {
      "op": "GT"
    },
    "7305": {
      "op": "ISZERO"
    },
    "7306": {
      "op": "PUSH2",
      "value": "0x1CA0"
    },
    "7309": {
      "op": "JUMPI"
    },
    "7310": {
      "op": "DUP3"
    },
    "7311": {
      "op": "MLOAD"
    },
    "7312": {
      "op": "DUP3"
    },
    "7313": {
      "op": "SSTORE"
    },
    "7314": {
      "op": "SWAP2"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7317": {
      "op": "ADD"
    },
    "7318": {
      "op": "SWAP2"
    },
    "7319": {
      "op": "SWAP1"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7322": {
      "op": "ADD"
    },
    "7323": {
      "op": "SWAP1"
    },
    "7324": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7327": {
      "op": "JUMP"
    },
    "7328": {
      "op": "JUMPDEST"
    },
    "7329": {
      "op": "POP"
    },
    "7330": {
      "op": "PUSH2",
      "value": "0x1CAC"
    },
    "7333": {
      "op": "SWAP3"
    },
    "7334": {
      "op": "SWAP2"
    },
    "7335": {
      "op": "POP"
    },
    "7336": {
      "op": "PUSH2",
      "value": "0x1CB0"
    },
    "7339": {
      "jump": "i",
      "op": "JUMP"
    },
    "7340": {
      "op": "JUMPDEST"
    },
    "7341": {
      "op": "POP"
    },
    "7342": {
      "op": "SWAP1"
    },
    "7343": {
      "jump": "o",
      "op": "JUMP"
    },
    "7344": {
      "op": "JUMPDEST"
    },
    "7345": {
      "op": "JUMPDEST"
    },
    "7346": {
      "op": "DUP1"
    },
    "7347": {
      "op": "DUP3"
    },
    "7348": {
      "op": "GT"
    },
    "7349": {
      "op": "ISZERO"
    },
    "7350": {
      "op": "PUSH2",
      "value": "0x1CAC"
    },
    "7353": {
      "op": "JUMPI"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7356": {
      "op": "DUP2"
    },
    "7357": {
      "op": "SSTORE"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7360": {
      "op": "ADD"
    },
    "7361": {
      "op": "PUSH2",
      "value": "0x1CB1"
    },
    "7364": {
      "op": "JUMP"
    },
    "7365": {
      "op": "JUMPDEST"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7370": {
      "op": "DUP1"
    },
    "7371": {
      "op": "DUP4"
    },
    "7372": {
      "op": "MSTORE"
    },
    "7373": {
      "op": "DUP4"
    },
    "7374": {
      "op": "MLOAD"
    },
    "7375": {
      "op": "DUP1"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7378": {
      "op": "DUP6"
    },
    "7379": {
      "op": "ADD"
    },
    "7380": {
      "op": "MSTORE"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7383": {
      "op": "JUMPDEST"
    },
    "7384": {
      "op": "DUP2"
    },
    "7385": {
      "op": "DUP2"
    },
    "7386": {
      "op": "LT"
    },
    "7387": {
      "op": "ISZERO"
    },
    "7388": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7391": {
      "op": "JUMPI"
    },
    "7392": {
      "op": "DUP6"
    },
    "7393": {
      "op": "DUP2"
    },
    "7394": {
      "op": "ADD"
    },
    "7395": {
      "op": "DUP4"
    },
    "7396": {
      "op": "ADD"
    },
    "7397": {
      "op": "MLOAD"
    },
    "7398": {
      "op": "DUP6"
    },
    "7399": {
      "op": "DUP3"
    },
    "7400": {
      "op": "ADD"
    },
    "7401": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7403": {
      "op": "ADD"
    },
    "7404": {
      "op": "MSTORE"
    },
    "7405": {
      "op": "DUP3"
    },
    "7406": {
      "op": "ADD"
    },
    "7407": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "7410": {
      "op": "JUMP"
    },
    "7411": {
      "op": "JUMPDEST"
    },
    "7412": {
      "op": "POP"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7417": {
      "op": "DUP3"
    },
    "7418": {
      "op": "DUP7"
    },
    "7419": {
      "op": "ADD"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "MSTORE"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7426": {
      "op": "NOT"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7429": {
      "op": "DUP4"
    },
    "7430": {
      "op": "ADD"
    },
    "7431": {
      "op": "AND"
    },
    "7432": {
      "op": "DUP6"
    },
    "7433": {
      "op": "ADD"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "op": "SWAP3"
    },
    "7436": {
      "op": "POP"
    },
    "7437": {
      "op": "POP"
    },
    "7438": {
      "op": "POP"
    },
    "7439": {
      "op": "SWAP3"
    },
    "7440": {
      "op": "SWAP2"
    },
    "7441": {
      "op": "POP"
    },
    "7442": {
      "op": "POP"
    },
    "7443": {
      "jump": "o",
      "op": "JUMP"
    },
    "7444": {
      "op": "JUMPDEST"
    },
    "7445": {
      "op": "DUP1"
    },
    "7446": {
      "op": "CALLDATALOAD"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7453": {
      "op": "SHL"
    },
    "7454": {
      "op": "SUB"
    },
    "7455": {
      "op": "DUP2"
    },
    "7456": {
      "op": "AND"
    },
    "7457": {
      "op": "DUP2"
    },
    "7458": {
      "op": "EQ"
    },
    "7459": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "7462": {
      "op": "JUMPI"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7465": {
      "op": "DUP1"
    },
    "7466": {
      "op": "REVERT"
    },
    "7467": {
      "op": "JUMPDEST"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7470": {
      "op": "DUP1"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7473": {
      "op": "DUP4"
    },
    "7474": {
      "op": "DUP6"
    },
    "7475": {
      "op": "SUB"
    },
    "7476": {
      "op": "SLT"
    },
    "7477": {
      "op": "ISZERO"
    },
    "7478": {
      "op": "PUSH2",
      "value": "0x1D3E"
    },
    "7481": {
      "op": "JUMPI"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7484": {
      "op": "DUP1"
    },
    "7485": {
      "op": "REVERT"
    },
    "7486": {
      "op": "JUMPDEST"
    },
    "7487": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7490": {
      "op": "DUP4"
    },
    "7491": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "7494": {
      "jump": "i",
      "op": "JUMP"
    },
    "7495": {
      "op": "JUMPDEST"
    },
    "7496": {
      "op": "SWAP5"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7499": {
      "op": "SWAP4"
    },
    "7500": {
      "op": "SWAP1"
    },
    "7501": {
      "op": "SWAP4"
    },
    "7502": {
      "op": "ADD"
    },
    "7503": {
      "op": "CALLDATALOAD"
    },
    "7504": {
      "op": "SWAP4"
    },
    "7505": {
      "op": "POP"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "op": "POP"
    },
    "7508": {
      "jump": "o",
      "op": "JUMP"
    },
    "7509": {
      "op": "JUMPDEST"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7514": {
      "op": "DUP3"
    },
    "7515": {
      "op": "DUP5"
    },
    "7516": {
      "op": "SUB"
    },
    "7517": {
      "op": "SLT"
    },
    "7518": {
      "op": "ISZERO"
    },
    "7519": {
      "op": "PUSH2",
      "value": "0x1D67"
    },
    "7522": {
      "op": "JUMPI"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7525": {
      "op": "DUP1"
    },
    "7526": {
      "op": "REVERT"
    },
    "7527": {
      "op": "JUMPDEST"
    },
    "7528": {
      "op": "POP"
    },
    "7529": {
      "op": "CALLDATALOAD"
    },
    "7530": {
      "op": "SWAP2"
    },
    "7531": {
      "op": "SWAP1"
    },
    "7532": {
      "op": "POP"
    },
    "7533": {
      "jump": "o",
      "op": "JUMP"
    },
    "7534": {
      "op": "JUMPDEST"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7537": {
      "op": "DUP1"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7542": {
      "op": "DUP5"
    },
    "7543": {
      "op": "DUP7"
    },
    "7544": {
      "op": "SUB"
    },
    "7545": {
      "op": "SLT"
    },
    "7546": {
      "op": "ISZERO"
    },
    "7547": {
      "op": "PUSH2",
      "value": "0x1D83"
    },
    "7550": {
      "op": "JUMPI"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7553": {
      "op": "DUP1"
    },
    "7554": {
      "op": "REVERT"
    },
    "7555": {
      "op": "JUMPDEST"
    },
    "7556": {
      "op": "PUSH2",
      "value": "0x1D8C"
    },
    "7559": {
      "op": "DUP5"
    },
    "7560": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "7563": {
      "jump": "i",
      "op": "JUMP"
    },
    "7564": {
      "op": "JUMPDEST"
    },
    "7565": {
      "op": "SWAP3"
    },
    "7566": {
      "op": "POP"
    },
    "7567": {
      "op": "PUSH2",
      "value": "0x1D9A"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7572": {
      "op": "DUP6"
    },
    "7573": {
      "op": "ADD"
    },
    "7574": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "7577": {
      "jump": "i",
      "op": "JUMP"
    },
    "7578": {
      "op": "JUMPDEST"
    },
    "7579": {
      "op": "SWAP2"
    },
    "7580": {
      "op": "POP"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7583": {
      "op": "DUP5"
    },
    "7584": {
      "op": "ADD"
    },
    "7585": {
      "op": "CALLDATALOAD"
    },
    "7586": {
      "op": "SWAP1"
    },
    "7587": {
      "op": "POP"
    },
    "7588": {
      "op": "SWAP3"
    },
    "7589": {
      "op": "POP"
    },
    "7590": {
      "op": "SWAP3"
    },
    "7591": {
      "op": "POP"
    },
    "7592": {
      "op": "SWAP3"
    },
    "7593": {
      "jump": "o",
      "op": "JUMP"
    },
    "7594": {
      "op": "JUMPDEST"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7599": {
      "op": "DUP3"
    },
    "7600": {
      "op": "DUP5"
    },
    "7601": {
      "op": "SUB"
    },
    "7602": {
      "op": "SLT"
    },
    "7603": {
      "op": "ISZERO"
    },
    "7604": {
      "op": "PUSH2",
      "value": "0x1DBC"
    },
    "7607": {
      "op": "JUMPI"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7610": {
      "op": "DUP1"
    },
    "7611": {
      "op": "REVERT"
    },
    "7612": {
      "op": "JUMPDEST"
    },
    "7613": {
      "op": "PUSH2",
      "value": "0x1DC5"
    },
    "7616": {
      "op": "DUP3"
    },
    "7617": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "7620": {
      "jump": "i",
      "op": "JUMP"
    },
    "7621": {
      "op": "JUMPDEST"
    },
    "7622": {
      "op": "SWAP4"
    },
    "7623": {
      "op": "SWAP3"
    },
    "7624": {
      "op": "POP"
    },
    "7625": {
      "op": "POP"
    },
    "7626": {
      "op": "POP"
    },
    "7627": {
      "jump": "o",
      "op": "JUMP"
    },
    "7628": {
      "op": "JUMPDEST"
    },
    "7629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7631": {
      "op": "DUP1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7634": {
      "op": "DUP4"
    },
    "7635": {
      "op": "DUP6"
    },
    "7636": {
      "op": "SUB"
    },
    "7637": {
      "op": "SLT"
    },
    "7638": {
      "op": "ISZERO"
    },
    "7639": {
      "op": "PUSH2",
      "value": "0x1DDF"
    },
    "7642": {
      "op": "JUMPI"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7645": {
      "op": "DUP1"
    },
    "7646": {
      "op": "REVERT"
    },
    "7647": {
      "op": "JUMPDEST"
    },
    "7648": {
      "op": "POP"
    },
    "7649": {
      "op": "POP"
    },
    "7650": {
      "op": "DUP1"
    },
    "7651": {
      "op": "CALLDATALOAD"
    },
    "7652": {
      "op": "SWAP3"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7655": {
      "op": "SWAP1"
    },
    "7656": {
      "op": "SWAP2"
    },
    "7657": {
      "op": "ADD"
    },
    "7658": {
      "op": "CALLDATALOAD"
    },
    "7659": {
      "op": "SWAP2"
    },
    "7660": {
      "op": "POP"
    },
    "7661": {
      "jump": "o",
      "op": "JUMP"
    },
    "7662": {
      "op": "JUMPDEST"
    },
    "7663": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7670": {
      "op": "SHL"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7673": {
      "op": "MSTORE"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7683": {
      "op": "REVERT"
    },
    "7684": {
      "op": "JUMPDEST"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7687": {
      "op": "MLOAD"
    },
    "7688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7690": {
      "op": "DUP3"
    },
    "7691": {
      "op": "ADD"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7694": {
      "op": "NOT"
    },
    "7695": {
      "op": "AND"
    },
    "7696": {
      "op": "DUP2"
    },
    "7697": {
      "op": "ADD"
    },
    "7698": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7707": {
      "op": "DUP2"
    },
    "7708": {
      "op": "GT"
    },
    "7709": {
      "op": "DUP3"
    },
    "7710": {
      "op": "DUP3"
    },
    "7711": {
      "op": "LT"
    },
    "7712": {
      "op": "OR"
    },
    "7713": {
      "op": "ISZERO"
    },
    "7714": {
      "op": "PUSH2",
      "value": "0x1E2D"
    },
    "7717": {
      "op": "JUMPI"
    },
    "7718": {
      "op": "PUSH2",
      "value": "0x1E2D"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1DEE"
    },
    "7724": {
      "jump": "i",
      "op": "JUMP"
    },
    "7725": {
      "op": "JUMPDEST"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7728": {
      "op": "MSTORE"
    },
    "7729": {
      "op": "SWAP2"
    },
    "7730": {
      "op": "SWAP1"
    },
    "7731": {
      "op": "POP"
    },
    "7732": {
      "jump": "o",
      "op": "JUMP"
    },
    "7733": {
      "op": "JUMPDEST"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7736": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7745": {
      "op": "DUP3"
    },
    "7746": {
      "op": "GT"
    },
    "7747": {
      "op": "ISZERO"
    },
    "7748": {
      "op": "PUSH2",
      "value": "0x1E4F"
    },
    "7751": {
      "op": "JUMPI"
    },
    "7752": {
      "op": "PUSH2",
      "value": "0x1E4F"
    },
    "7755": {
      "op": "PUSH2",
      "value": "0x1DEE"
    },
    "7758": {
      "jump": "i",
      "op": "JUMP"
    },
    "7759": {
      "op": "JUMPDEST"
    },
    "7760": {
      "op": "POP"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7763": {
      "op": "SHL"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "SWAP1"
    },
    "7768": {
      "jump": "o",
      "op": "JUMP"
    },
    "7769": {
      "op": "JUMPDEST"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7772": {
      "op": "DUP3"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7775": {
      "op": "DUP4"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "op": "SLT"
    },
    "7778": {
      "op": "PUSH2",
      "value": "0x1E6A"
    },
    "7781": {
      "op": "JUMPI"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7784": {
      "op": "DUP1"
    },
    "7785": {
      "op": "REVERT"
    },
    "7786": {
      "op": "JUMPDEST"
    },
    "7787": {
      "op": "DUP2"
    },
    "7788": {
      "op": "CALLDATALOAD"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7791": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7794": {
      "op": "PUSH2",
      "value": "0x1E7A"
    },
    "7797": {
      "op": "DUP4"
    },
    "7798": {
      "op": "PUSH2",
      "value": "0x1E35"
    },
    "7801": {
      "jump": "i",
      "op": "JUMP"
    },
    "7802": {
      "op": "JUMPDEST"
    },
    "7803": {
      "op": "PUSH2",
      "value": "0x1E04"
    },
    "7806": {
      "jump": "i",
      "op": "JUMP"
    },
    "7807": {
      "op": "JUMPDEST"
    },
    "7808": {
      "op": "DUP1"
    },
    "7809": {
      "op": "DUP4"
    },
    "7810": {
      "op": "DUP3"
    },
    "7811": {
      "op": "MSTORE"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7814": {
      "op": "DUP3"
    },
    "7815": {
      "op": "ADD"
    },
    "7816": {
      "op": "SWAP2"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7820": {
      "op": "DUP5"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7823": {
      "op": "SHL"
    },
    "7824": {
      "op": "DUP8"
    },
    "7825": {
      "op": "ADD"
    },
    "7826": {
      "op": "ADD"
    },
    "7827": {
      "op": "SWAP4"
    },
    "7828": {
      "op": "POP"
    },
    "7829": {
      "op": "DUP7"
    },
    "7830": {
      "op": "DUP5"
    },
    "7831": {
      "op": "GT"
    },
    "7832": {
      "op": "ISZERO"
    },
    "7833": {
      "op": "PUSH2",
      "value": "0x1EA1"
    },
    "7836": {
      "op": "JUMPI"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7839": {
      "op": "DUP1"
    },
    "7840": {
      "op": "REVERT"
    },
    "7841": {
      "op": "JUMPDEST"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7844": {
      "op": "DUP7"
    },
    "7845": {
      "op": "ADD"
    },
    "7846": {
      "op": "JUMPDEST"
    },
    "7847": {
      "op": "DUP5"
    },
    "7848": {
      "op": "DUP2"
    },
    "7849": {
      "op": "LT"
    },
    "7850": {
      "op": "ISZERO"
    },
    "7851": {
      "op": "PUSH2",
      "value": "0x1EC4"
    },
    "7854": {
      "op": "JUMPI"
    },
    "7855": {
      "op": "PUSH2",
      "value": "0x1EB7"
    },
    "7858": {
      "op": "DUP2"
    },
    "7859": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "7862": {
      "jump": "i",
      "op": "JUMP"
    },
    "7863": {
      "op": "JUMPDEST"
    },
    "7864": {
      "op": "DUP4"
    },
    "7865": {
      "op": "MSTORE"
    },
    "7866": {
      "op": "SWAP2"
    },
    "7867": {
      "op": "DUP4"
    },
    "7868": {
      "op": "ADD"
    },
    "7869": {
      "op": "SWAP2"
    },
    "7870": {
      "op": "DUP4"
    },
    "7871": {
      "op": "ADD"
    },
    "7872": {
      "op": "PUSH2",
      "value": "0x1EA6"
    },
    "7875": {
      "op": "JUMP"
    },
    "7876": {
      "op": "JUMPDEST"
    },
    "7877": {
      "op": "POP"
    },
    "7878": {
      "op": "SWAP7"
    },
    "7879": {
      "op": "SWAP6"
    },
    "7880": {
      "op": "POP"
    },
    "7881": {
      "op": "POP"
    },
    "7882": {
      "op": "POP"
    },
    "7883": {
      "op": "POP"
    },
    "7884": {
      "op": "POP"
    },
    "7885": {
      "op": "POP"
    },
    "7886": {
      "jump": "o",
      "op": "JUMP"
    },
    "7887": {
      "op": "JUMPDEST"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7890": {
      "op": "DUP1"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7893": {
      "op": "DUP1"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7898": {
      "op": "DUP7"
    },
    "7899": {
      "op": "DUP9"
    },
    "7900": {
      "op": "SUB"
    },
    "7901": {
      "op": "SLT"
    },
    "7902": {
      "op": "ISZERO"
    },
    "7903": {
      "op": "PUSH2",
      "value": "0x1EE7"
    },
    "7906": {
      "op": "JUMPI"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7909": {
      "op": "DUP1"
    },
    "7910": {
      "op": "REVERT"
    },
    "7911": {
      "op": "JUMPDEST"
    },
    "7912": {
      "op": "DUP6"
    },
    "7913": {
      "op": "CALLDATALOAD"
    },
    "7914": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7923": {
      "op": "DUP1"
    },
    "7924": {
      "op": "DUP3"
    },
    "7925": {
      "op": "GT"
    },
    "7926": {
      "op": "ISZERO"
    },
    "7927": {
      "op": "PUSH2",
      "value": "0x1EFF"
    },
    "7930": {
      "op": "JUMPI"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7933": {
      "op": "DUP1"
    },
    "7934": {
      "op": "REVERT"
    },
    "7935": {
      "op": "JUMPDEST"
    },
    "7936": {
      "op": "PUSH2",
      "value": "0x1F0B"
    },
    "7939": {
      "op": "DUP10"
    },
    "7940": {
      "op": "DUP4"
    },
    "7941": {
      "op": "DUP11"
    },
    "7942": {
      "op": "ADD"
    },
    "7943": {
      "op": "PUSH2",
      "value": "0x1E59"
    },
    "7946": {
      "jump": "i",
      "op": "JUMP"
    },
    "7947": {
      "op": "JUMPDEST"
    },
    "7948": {
      "op": "SWAP7"
    },
    "7949": {
      "op": "POP"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7952": {
      "op": "SWAP2"
    },
    "7953": {
      "op": "POP"
    },
    "7954": {
      "op": "DUP2"
    },
    "7955": {
      "op": "DUP9"
    },
    "7956": {
      "op": "ADD"
    },
    "7957": {
      "op": "CALLDATALOAD"
    },
    "7958": {
      "op": "DUP2"
    },
    "7959": {
      "op": "DUP2"
    },
    "7960": {
      "op": "GT"
    },
    "7961": {
      "op": "ISZERO"
    },
    "7962": {
      "op": "PUSH2",
      "value": "0x1F22"
    },
    "7965": {
      "op": "JUMPI"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7968": {
      "op": "DUP1"
    },
    "7969": {
      "op": "REVERT"
    },
    "7970": {
      "op": "JUMPDEST"
    },
    "7971": {
      "op": "DUP9"
    },
    "7972": {
      "op": "ADD"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7975": {
      "op": "DUP2"
    },
    "7976": {
      "op": "ADD"
    },
    "7977": {
      "op": "DUP11"
    },
    "7978": {
      "op": "SGT"
    },
    "7979": {
      "op": "PUSH2",
      "value": "0x1F33"
    },
    "7982": {
      "op": "JUMPI"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7985": {
      "op": "DUP1"
    },
    "7986": {
      "op": "REVERT"
    },
    "7987": {
      "op": "JUMPDEST"
    },
    "7988": {
      "op": "DUP1"
    },
    "7989": {
      "op": "CALLDATALOAD"
    },
    "7990": {
      "op": "PUSH2",
      "value": "0x1F41"
    },
    "7993": {
      "op": "PUSH2",
      "value": "0x1E7A"
    },
    "7996": {
      "op": "DUP3"
    },
    "7997": {
      "op": "PUSH2",
      "value": "0x1E35"
    },
    "8000": {
      "jump": "i",
      "op": "JUMP"
    },
    "8001": {
      "op": "JUMPDEST"
    },
    "8002": {
      "op": "DUP2"
    },
    "8003": {
      "op": "DUP2"
    },
    "8004": {
      "op": "MSTORE"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8007": {
      "op": "SWAP2"
    },
    "8008": {
      "op": "SWAP1"
    },
    "8009": {
      "op": "SWAP2"
    },
    "8010": {
      "op": "SHL"
    },
    "8011": {
      "op": "DUP3"
    },
    "8012": {
      "op": "ADD"
    },
    "8013": {
      "op": "DUP5"
    },
    "8014": {
      "op": "ADD"
    },
    "8015": {
      "op": "SWAP1"
    },
    "8016": {
      "op": "DUP5"
    },
    "8017": {
      "op": "DUP2"
    },
    "8018": {
      "op": "ADD"
    },
    "8019": {
      "op": "SWAP1"
    },
    "8020": {
      "op": "DUP13"
    },
    "8021": {
      "op": "DUP4"
    },
    "8022": {
      "op": "GT"
    },
    "8023": {
      "op": "ISZERO"
    },
    "8024": {
      "op": "PUSH2",
      "value": "0x1F60"
    },
    "8027": {
      "op": "JUMPI"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8030": {
      "op": "DUP1"
    },
    "8031": {
      "op": "REVERT"
    },
    "8032": {
      "op": "JUMPDEST"
    },
    "8033": {
      "op": "SWAP3"
    },
    "8034": {
      "op": "DUP6"
    },
    "8035": {
      "op": "ADD"
    },
    "8036": {
      "op": "SWAP3"
    },
    "8037": {
      "op": "JUMPDEST"
    },
    "8038": {
      "op": "DUP3"
    },
    "8039": {
      "op": "DUP5"
    },
    "8040": {
      "op": "LT"
    },
    "8041": {
      "op": "ISZERO"
    },
    "8042": {
      "op": "PUSH2",
      "value": "0x1F7E"
    },
    "8045": {
      "op": "JUMPI"
    },
    "8046": {
      "op": "DUP4"
    },
    "8047": {
      "op": "CALLDATALOAD"
    },
    "8048": {
      "op": "DUP3"
    },
    "8049": {
      "op": "MSTORE"
    },
    "8050": {
      "op": "SWAP3"
    },
    "8051": {
      "op": "DUP6"
    },
    "8052": {
      "op": "ADD"
    },
    "8053": {
      "op": "SWAP3"
    },
    "8054": {
      "op": "SWAP1"
    },
    "8055": {
      "op": "DUP6"
    },
    "8056": {
      "op": "ADD"
    },
    "8057": {
      "op": "SWAP1"
    },
    "8058": {
      "op": "PUSH2",
      "value": "0x1F65"
    },
    "8061": {
      "op": "JUMP"
    },
    "8062": {
      "op": "JUMPDEST"
    },
    "8063": {
      "op": "SWAP9"
    },
    "8064": {
      "op": "POP"
    },
    "8065": {
      "op": "POP"
    },
    "8066": {
      "op": "POP"
    },
    "8067": {
      "op": "POP"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8070": {
      "op": "DUP9"
    },
    "8071": {
      "op": "ADD"
    },
    "8072": {
      "op": "CALLDATALOAD"
    },
    "8073": {
      "op": "SWAP5"
    },
    "8074": {
      "op": "POP"
    },
    "8075": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8077": {
      "op": "DUP9"
    },
    "8078": {
      "op": "ADD"
    },
    "8079": {
      "op": "CALLDATALOAD"
    },
    "8080": {
      "op": "SWAP2"
    },
    "8081": {
      "op": "POP"
    },
    "8082": {
      "op": "DUP1"
    },
    "8083": {
      "op": "DUP3"
    },
    "8084": {
      "op": "GT"
    },
    "8085": {
      "op": "ISZERO"
    },
    "8086": {
      "op": "PUSH2",
      "value": "0x1F9E"
    },
    "8089": {
      "op": "JUMPI"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8092": {
      "op": "DUP1"
    },
    "8093": {
      "op": "REVERT"
    },
    "8094": {
      "op": "JUMPDEST"
    },
    "8095": {
      "op": "POP"
    },
    "8096": {
      "op": "PUSH2",
      "value": "0x1FAB"
    },
    "8099": {
      "op": "DUP9"
    },
    "8100": {
      "op": "DUP3"
    },
    "8101": {
      "op": "DUP10"
    },
    "8102": {
      "op": "ADD"
    },
    "8103": {
      "op": "PUSH2",
      "value": "0x1E59"
    },
    "8106": {
      "jump": "i",
      "op": "JUMP"
    },
    "8107": {
      "op": "JUMPDEST"
    },
    "8108": {
      "op": "SWAP6"
    },
    "8109": {
      "op": "SWAP9"
    },
    "8110": {
      "op": "SWAP5"
    },
    "8111": {
      "op": "SWAP8"
    },
    "8112": {
      "op": "POP"
    },
    "8113": {
      "op": "SWAP3"
    },
    "8114": {
      "op": "SWAP6"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8117": {
      "op": "ADD"
    },
    "8118": {
      "op": "CALLDATALOAD"
    },
    "8119": {
      "op": "SWAP4"
    },
    "8120": {
      "op": "SWAP3"
    },
    "8121": {
      "op": "POP"
    },
    "8122": {
      "op": "POP"
    },
    "8123": {
      "op": "POP"
    },
    "8124": {
      "jump": "o",
      "op": "JUMP"
    },
    "8125": {
      "op": "JUMPDEST"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8128": {
      "op": "DUP1"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8131": {
      "op": "DUP1"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8136": {
      "op": "DUP7"
    },
    "8137": {
      "op": "DUP9"
    },
    "8138": {
      "op": "SUB"
    },
    "8139": {
      "op": "SLT"
    },
    "8140": {
      "op": "ISZERO"
    },
    "8141": {
      "op": "PUSH2",
      "value": "0x1FD5"
    },
    "8144": {
      "op": "JUMPI"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8147": {
      "op": "DUP1"
    },
    "8148": {
      "op": "REVERT"
    },
    "8149": {
      "op": "JUMPDEST"
    },
    "8150": {
      "op": "DUP6"
    },
    "8151": {
      "op": "CALLDATALOAD"
    },
    "8152": {
      "op": "SWAP5"
    },
    "8153": {
      "op": "POP"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8156": {
      "op": "DUP7"
    },
    "8157": {
      "op": "ADD"
    },
    "8158": {
      "op": "CALLDATALOAD"
    },
    "8159": {
      "op": "SWAP4"
    },
    "8160": {
      "op": "POP"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8163": {
      "op": "DUP7"
    },
    "8164": {
      "op": "ADD"
    },
    "8165": {
      "op": "CALLDATALOAD"
    },
    "8166": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8175": {
      "op": "DUP1"
    },
    "8176": {
      "op": "DUP3"
    },
    "8177": {
      "op": "GT"
    },
    "8178": {
      "op": "ISZERO"
    },
    "8179": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8182": {
      "op": "JUMPI"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8185": {
      "op": "DUP1"
    },
    "8186": {
      "op": "REVERT"
    },
    "8187": {
      "op": "JUMPDEST"
    },
    "8188": {
      "op": "DUP2"
    },
    "8189": {
      "op": "DUP9"
    },
    "8190": {
      "op": "ADD"
    },
    "8191": {
      "op": "SWAP2"
    },
    "8192": {
      "op": "POP"
    },
    "8193": {
      "op": "DUP9"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8196": {
      "op": "DUP4"
    },
    "8197": {
      "op": "ADD"
    },
    "8198": {
      "op": "SLT"
    },
    "8199": {
      "op": "PUSH2",
      "value": "0x200F"
    },
    "8202": {
      "op": "JUMPI"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8205": {
      "op": "DUP1"
    },
    "8206": {
      "op": "REVERT"
    },
    "8207": {
      "op": "JUMPDEST"
    },
    "8208": {
      "op": "DUP2"
    },
    "8209": {
      "op": "CALLDATALOAD"
    },
    "8210": {
      "op": "DUP2"
    },
    "8211": {
      "op": "DUP2"
    },
    "8212": {
      "op": "GT"
    },
    "8213": {
      "op": "ISZERO"
    },
    "8214": {
      "op": "PUSH2",
      "value": "0x201E"
    },
    "8217": {
      "op": "JUMPI"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8220": {
      "op": "DUP1"
    },
    "8221": {
      "op": "REVERT"
    },
    "8222": {
      "op": "JUMPDEST"
    },
    "8223": {
      "op": "DUP10"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8226": {
      "op": "DUP3"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8229": {
      "op": "SHL"
    },
    "8230": {
      "op": "DUP6"
    },
    "8231": {
      "op": "ADD"
    },
    "8232": {
      "op": "ADD"
    },
    "8233": {
      "op": "GT"
    },
    "8234": {
      "op": "ISZERO"
    },
    "8235": {
      "op": "PUSH2",
      "value": "0x2033"
    },
    "8238": {
      "op": "JUMPI"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8241": {
      "op": "DUP1"
    },
    "8242": {
      "op": "REVERT"
    },
    "8243": {
      "op": "JUMPDEST"
    },
    "8244": {
      "op": "SWAP7"
    },
    "8245": {
      "op": "SWAP10"
    },
    "8246": {
      "op": "SWAP6"
    },
    "8247": {
      "op": "SWAP9"
    },
    "8248": {
      "op": "POP"
    },
    "8249": {
      "op": "POP"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8252": {
      "op": "ADD"
    },
    "8253": {
      "op": "SWAP6"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8256": {
      "op": "ADD"
    },
    "8257": {
      "op": "CALLDATALOAD"
    },
    "8258": {
      "op": "SWAP4"
    },
    "8259": {
      "op": "SWAP3"
    },
    "8260": {
      "op": "POP"
    },
    "8261": {
      "op": "POP"
    },
    "8262": {
      "op": "POP"
    },
    "8263": {
      "jump": "o",
      "op": "JUMP"
    },
    "8264": {
      "op": "JUMPDEST"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8269": {
      "op": "DUP3"
    },
    "8270": {
      "op": "DUP5"
    },
    "8271": {
      "op": "SUB"
    },
    "8272": {
      "op": "SLT"
    },
    "8273": {
      "op": "ISZERO"
    },
    "8274": {
      "op": "PUSH2",
      "value": "0x205A"
    },
    "8277": {
      "op": "JUMPI"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8280": {
      "op": "DUP1"
    },
    "8281": {
      "op": "REVERT"
    },
    "8282": {
      "op": "JUMPDEST"
    },
    "8283": {
      "op": "DUP2"
    },
    "8284": {
      "op": "CALLDATALOAD"
    },
    "8285": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8294": {
      "op": "DUP2"
    },
    "8295": {
      "op": "GT"
    },
    "8296": {
      "op": "ISZERO"
    },
    "8297": {
      "op": "PUSH2",
      "value": "0x2071"
    },
    "8300": {
      "op": "JUMPI"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8303": {
      "op": "DUP1"
    },
    "8304": {
      "op": "REVERT"
    },
    "8305": {
      "op": "JUMPDEST"
    },
    "8306": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "8309": {
      "op": "DUP5"
    },
    "8310": {
      "op": "DUP3"
    },
    "8311": {
      "op": "DUP6"
    },
    "8312": {
      "op": "ADD"
    },
    "8313": {
      "op": "PUSH2",
      "value": "0x1E59"
    },
    "8316": {
      "jump": "i",
      "op": "JUMP"
    },
    "8317": {
      "op": "JUMPDEST"
    },
    "8318": {
      "op": "SWAP5"
    },
    "8319": {
      "op": "SWAP4"
    },
    "8320": {
      "op": "POP"
    },
    "8321": {
      "op": "POP"
    },
    "8322": {
      "op": "POP"
    },
    "8323": {
      "op": "POP"
    },
    "8324": {
      "jump": "o",
      "op": "JUMP"
    },
    "8325": {
      "op": "JUMPDEST"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8328": {
      "op": "DUP1"
    },
    "8329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8331": {
      "op": "DUP4"
    },
    "8332": {
      "op": "DUP6"
    },
    "8333": {
      "op": "SUB"
    },
    "8334": {
      "op": "SLT"
    },
    "8335": {
      "op": "ISZERO"
    },
    "8336": {
      "op": "PUSH2",
      "value": "0x2098"
    },
    "8339": {
      "op": "JUMPI"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8342": {
      "op": "DUP1"
    },
    "8343": {
      "op": "REVERT"
    },
    "8344": {
      "op": "JUMPDEST"
    },
    "8345": {
      "op": "PUSH2",
      "value": "0x20A1"
    },
    "8348": {
      "op": "DUP4"
    },
    "8349": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "8352": {
      "jump": "i",
      "op": "JUMP"
    },
    "8353": {
      "op": "JUMPDEST"
    },
    "8354": {
      "op": "SWAP2"
    },
    "8355": {
      "op": "POP"
    },
    "8356": {
      "op": "PUSH2",
      "value": "0x20AF"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8361": {
      "op": "DUP5"
    },
    "8362": {
      "op": "ADD"
    },
    "8363": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "8366": {
      "jump": "i",
      "op": "JUMP"
    },
    "8367": {
      "op": "JUMPDEST"
    },
    "8368": {
      "op": "SWAP1"
    },
    "8369": {
      "op": "POP"
    },
    "8370": {
      "op": "SWAP3"
    },
    "8371": {
      "op": "POP"
    },
    "8372": {
      "op": "SWAP3"
    },
    "8373": {
      "op": "SWAP1"
    },
    "8374": {
      "op": "POP"
    },
    "8375": {
      "jump": "o",
      "op": "JUMP"
    },
    "8376": {
      "op": "JUMPDEST"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8379": {
      "op": "DUP2"
    },
    "8380": {
      "op": "DUP2"
    },
    "8381": {
      "op": "SHR"
    },
    "8382": {
      "op": "SWAP1"
    },
    "8383": {
      "op": "DUP3"
    },
    "8384": {
      "op": "AND"
    },
    "8385": {
      "op": "DUP1"
    },
    "8386": {
      "op": "PUSH2",
      "value": "0x20CC"
    },
    "8389": {
      "op": "JUMPI"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "AND"
    },
    "8394": {
      "op": "SWAP2"
    },
    "8395": {
      "op": "POP"
    },
    "8396": {
      "op": "JUMPDEST"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8399": {
      "op": "DUP3"
    },
    "8400": {
      "op": "LT"
    },
    "8401": {
      "op": "DUP2"
    },
    "8402": {
      "op": "SUB"
    },
    "8403": {
      "op": "PUSH2",
      "value": "0x20EC"
    },
    "8406": {
      "op": "JUMPI"
    },
    "8407": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8414": {
      "op": "SHL"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8417": {
      "op": "MSTORE"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8422": {
      "op": "MSTORE"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8427": {
      "op": "REVERT"
    },
    "8428": {
      "op": "JUMPDEST"
    },
    "8429": {
      "op": "POP"
    },
    "8430": {
      "op": "SWAP2"
    },
    "8431": {
      "op": "SWAP1"
    },
    "8432": {
      "op": "POP"
    },
    "8433": {
      "jump": "o",
      "op": "JUMP"
    },
    "8434": {
      "op": "JUMPDEST"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8439": {
      "op": "DUP3"
    },
    "8440": {
      "op": "DUP5"
    },
    "8441": {
      "op": "SUB"
    },
    "8442": {
      "op": "SLT"
    },
    "8443": {
      "op": "ISZERO"
    },
    "8444": {
      "op": "PUSH2",
      "value": "0x2104"
    },
    "8447": {
      "op": "JUMPI"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8450": {
      "op": "DUP1"
    },
    "8451": {
      "op": "REVERT"
    },
    "8452": {
      "op": "JUMPDEST"
    },
    "8453": {
      "op": "POP"
    },
    "8454": {
      "op": "MLOAD"
    },
    "8455": {
      "op": "SWAP2"
    },
    "8456": {
      "op": "SWAP1"
    },
    "8457": {
      "op": "POP"
    },
    "8458": {
      "jump": "o",
      "op": "JUMP"
    },
    "8459": {
      "op": "JUMPDEST"
    },
    "8460": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8467": {
      "op": "SHL"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8470": {
      "op": "MSTORE"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8475": {
      "op": "MSTORE"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8480": {
      "op": "REVERT"
    },
    "8481": {
      "op": "JUMPDEST"
    },
    "8482": {
      "op": "DUP1"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "DUP1"
    },
    "8486": {
      "op": "DUP3"
    },
    "8487": {
      "op": "GT"
    },
    "8488": {
      "op": "ISZERO"
    },
    "8489": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "8492": {
      "op": "JUMPI"
    },
    "8493": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "8496": {
      "op": "PUSH2",
      "value": "0x210B"
    },
    "8499": {
      "jump": "i",
      "op": "JUMP"
    },
    "8500": {
      "op": "JUMPDEST"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8505": {
      "op": "DUP3"
    },
    "8506": {
      "op": "ADD"
    },
    "8507": {
      "op": "PUSH2",
      "value": "0x2146"
    },
    "8510": {
      "op": "JUMPI"
    },
    "8511": {
      "op": "PUSH2",
      "value": "0x2146"
    },
    "8514": {
      "op": "PUSH2",
      "value": "0x210B"
    },
    "8517": {
      "jump": "i",
      "op": "JUMP"
    },
    "8518": {
      "op": "JUMPDEST"
    },
    "8519": {
      "op": "POP"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8522": {
      "op": "ADD"
    },
    "8523": {
      "op": "SWAP1"
    },
    "8524": {
      "jump": "o",
      "op": "JUMP"
    },
    "8525": {
      "op": "JUMPDEST"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8528": {
      "op": "DUP1"
    },
    "8529": {
      "op": "DUP3"
    },
    "8530": {
      "op": "MSTORE"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8533": {
      "op": "SWAP1"
    },
    "8534": {
      "op": "DUP3"
    },
    "8535": {
      "op": "ADD"
    },
    "8536": {
      "op": "MSTORE"
    },
    "8537": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8572": {
      "op": "DUP3"
    },
    "8573": {
      "op": "ADD"
    },
    "8574": {
      "op": "MSTORE"
    },
    "8575": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "8584": {
      "op": "SHL"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8587": {
      "op": "DUP3"
    },
    "8588": {
      "op": "ADD"
    },
    "8589": {
      "op": "MSTORE"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8592": {
      "op": "ADD"
    },
    "8593": {
      "op": "SWAP1"
    },
    "8594": {
      "jump": "o",
      "op": "JUMP"
    },
    "8595": {
      "op": "JUMPDEST"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8598": {
      "op": "DUP3"
    },
    "8599": {
      "op": "PUSH2",
      "value": "0x21B0"
    },
    "8602": {
      "op": "JUMPI"
    },
    "8603": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8610": {
      "op": "SHL"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8613": {
      "op": "MSTORE"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8618": {
      "op": "MSTORE"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8623": {
      "op": "REVERT"
    },
    "8624": {
      "op": "JUMPDEST"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "op": "DIV"
    },
    "8627": {
      "op": "SWAP1"
    },
    "8628": {
      "jump": "o",
      "op": "JUMP"
    },
    "8629": {
      "op": "JUMPDEST"
    },
    "8630": {
      "op": "DUP1"
    },
    "8631": {
      "op": "DUP3"
    },
    "8632": {
      "op": "MUL"
    },
    "8633": {
      "op": "DUP2"
    },
    "8634": {
      "op": "ISZERO"
    },
    "8635": {
      "op": "DUP3"
    },
    "8636": {
      "op": "DUP3"
    },
    "8637": {
      "op": "DIV"
    },
    "8638": {
      "op": "DUP5"
    },
    "8639": {
      "op": "EQ"
    },
    "8640": {
      "op": "OR"
    },
    "8641": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "8644": {
      "op": "JUMPI"
    },
    "8645": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "8648": {
      "op": "PUSH2",
      "value": "0x210B"
    },
    "8651": {
      "jump": "i",
      "op": "JUMP"
    },
    "8652": {
      "op": "JUMPDEST"
    },
    "8653": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8660": {
      "op": "SHL"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8663": {
      "op": "MSTORE"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8668": {
      "op": "MSTORE"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8673": {
      "op": "REVERT"
    },
    "8674": {
      "op": "JUMPDEST"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8677": {
      "op": "DUP1"
    },
    "8678": {
      "op": "DUP3"
    },
    "8679": {
      "op": "MSTORE"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8682": {
      "op": "SWAP1"
    },
    "8683": {
      "op": "DUP3"
    },
    "8684": {
      "op": "ADD"
    },
    "8685": {
      "op": "MSTORE"
    },
    "8686": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "8719": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8721": {
      "op": "DUP3"
    },
    "8722": {
      "op": "ADD"
    },
    "8723": {
      "op": "MSTORE"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8728": {
      "op": "SHL"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8731": {
      "op": "DUP3"
    },
    "8732": {
      "op": "ADD"
    },
    "8733": {
      "op": "MSTORE"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8736": {
      "op": "ADD"
    },
    "8737": {
      "op": "SWAP1"
    },
    "8738": {
      "jump": "o",
      "op": "JUMP"
    },
    "8739": {
      "op": "JUMPDEST"
    },
    "8740": {
      "op": "DUP2"
    },
    "8741": {
      "op": "DUP2"
    },
    "8742": {
      "op": "SUB"
    },
    "8743": {
      "op": "DUP2"
    },
    "8744": {
      "op": "DUP2"
    },
    "8745": {
      "op": "GT"
    },
    "8746": {
      "op": "ISZERO"
    },
    "8747": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "8750": {
      "op": "JUMPI"
    },
    "8751": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "8754": {
      "op": "PUSH2",
      "value": "0x210B"
    },
    "8757": {
      "jump": "i",
      "op": "JUMP"
    },
    "8758": {
      "op": "JUMPDEST"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8763": {
      "op": "DUP3"
    },
    "8764": {
      "op": "DUP5"
    },
    "8765": {
      "op": "SUB"
    },
    "8766": {
      "op": "SLT"
    },
    "8767": {
      "op": "ISZERO"
    },
    "8768": {
      "op": "PUSH2",
      "value": "0x2248"
    },
    "8771": {
      "op": "JUMPI"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8774": {
      "op": "DUP1"
    },
    "8775": {
      "op": "REVERT"
    },
    "8776": {
      "op": "JUMPDEST"
    },
    "8777": {
      "op": "DUP2"
    },
    "8778": {
      "op": "MLOAD"
    },
    "8779": {
      "op": "DUP1"
    },
    "8780": {
      "op": "ISZERO"
    },
    "8781": {
      "op": "ISZERO"
    },
    "8782": {
      "op": "DUP2"
    },
    "8783": {
      "op": "EQ"
    },
    "8784": {
      "op": "PUSH2",
      "value": "0x1DC5"
    },
    "8787": {
      "op": "JUMPI"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8790": {
      "op": "DUP1"
    },
    "8791": {
      "op": "REVERT"
    },
    "8792": {
      "op": "JUMPDEST"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8795": {
      "op": "DUP1"
    },
    "8796": {
      "op": "DUP3"
    },
    "8797": {
      "op": "MSTORE"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "8800": {
      "op": "SWAP1"
    },
    "8801": {
      "op": "DUP3"
    },
    "8802": {
      "op": "ADD"
    },
    "8803": {
      "op": "MSTORE"
    },
    "8804": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8839": {
      "op": "DUP3"
    },
    "8840": {
      "op": "ADD"
    },
    "8841": {
      "op": "MSTORE"
    },
    "8842": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8859": {
      "op": "DUP3"
    },
    "8860": {
      "op": "ADD"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8864": {
      "op": "ADD"
    },
    "8865": {
      "op": "SWAP1"
    },
    "8866": {
      "jump": "o",
      "op": "JUMP"
    },
    "8867": {
      "op": "JUMPDEST"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8870": {
      "op": "DUP3"
    },
    "8871": {
      "op": "GT"
    },
    "8872": {
      "op": "ISZERO"
    },
    "8873": {
      "op": "PUSH2",
      "value": "0xD30"
    },
    "8876": {
      "op": "JUMPI"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8879": {
      "op": "DUP2"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8882": {
      "op": "MSTORE"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8887": {
      "op": "KECCAK256"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8890": {
      "op": "DUP6"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8894": {
      "op": "SHR"
    },
    "8895": {
      "op": "DUP2"
    },
    "8896": {
      "op": "ADD"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8899": {
      "op": "DUP7"
    },
    "8900": {
      "op": "LT"
    },
    "8901": {
      "op": "ISZERO"
    },
    "8902": {
      "op": "PUSH2",
      "value": "0x22CC"
    },
    "8905": {
      "op": "JUMPI"
    },
    "8906": {
      "op": "POP"
    },
    "8907": {
      "op": "DUP1"
    },
    "8908": {
      "op": "JUMPDEST"
    },
    "8909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8911": {
      "op": "DUP6"
    },
    "8912": {
      "op": "ADD"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8915": {
      "op": "SHR"
    },
    "8916": {
      "op": "DUP3"
    },
    "8917": {
      "op": "ADD"
    },
    "8918": {
      "op": "SWAP2"
    },
    "8919": {
      "op": "POP"
    },
    "8920": {
      "op": "JUMPDEST"
    },
    "8921": {
      "op": "DUP2"
    },
    "8922": {
      "op": "DUP2"
    },
    "8923": {
      "op": "LT"
    },
    "8924": {
      "op": "ISZERO"
    },
    "8925": {
      "op": "PUSH2",
      "value": "0x22EB"
    },
    "8928": {
      "op": "JUMPI"
    },
    "8929": {
      "op": "DUP3"
    },
    "8930": {
      "op": "DUP2"
    },
    "8931": {
      "op": "SSTORE"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8934": {
      "op": "ADD"
    },
    "8935": {
      "op": "PUSH2",
      "value": "0x22D8"
    },
    "8938": {
      "op": "JUMP"
    },
    "8939": {
      "op": "JUMPDEST"
    },
    "8940": {
      "op": "POP"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "op": "POP"
    },
    "8943": {
      "op": "POP"
    },
    "8944": {
      "op": "POP"
    },
    "8945": {
      "op": "POP"
    },
    "8946": {
      "jump": "o",
      "op": "JUMP"
    },
    "8947": {
      "op": "JUMPDEST"
    },
    "8948": {
      "op": "DUP2"
    },
    "8949": {
      "op": "MLOAD"
    },
    "8950": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8959": {
      "op": "DUP2"
    },
    "8960": {
      "op": "GT"
    },
    "8961": {
      "op": "ISZERO"
    },
    "8962": {
      "op": "PUSH2",
      "value": "0x230D"
    },
    "8965": {
      "op": "JUMPI"
    },
    "8966": {
      "op": "PUSH2",
      "value": "0x230D"
    },
    "8969": {
      "op": "PUSH2",
      "value": "0x1DEE"
    },
    "8972": {
      "jump": "i",
      "op": "JUMP"
    },
    "8973": {
      "op": "JUMPDEST"
    },
    "8974": {
      "op": "PUSH2",
      "value": "0x2321"
    },
    "8977": {
      "op": "DUP2"
    },
    "8978": {
      "op": "PUSH2",
      "value": "0x231B"
    },
    "8981": {
      "op": "DUP5"
    },
    "8982": {
      "op": "SLOAD"
    },
    "8983": {
      "op": "PUSH2",
      "value": "0x20B8"
    },
    "8986": {
      "jump": "i",
      "op": "JUMP"
    },
    "8987": {
      "op": "JUMPDEST"
    },
    "8988": {
      "op": "DUP5"
    },
    "8989": {
      "op": "PUSH2",
      "value": "0x22A3"
    },
    "8992": {
      "jump": "i",
      "op": "JUMP"
    },
    "8993": {
      "op": "JUMPDEST"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8996": {
      "op": "DUP1"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8999": {
      "op": "DUP4"
    },
    "9000": {
      "op": "GT"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9003": {
      "op": "DUP2"
    },
    "9004": {
      "op": "EQ"
    },
    "9005": {
      "op": "PUSH2",
      "value": "0x2356"
    },
    "9008": {
      "op": "JUMPI"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9011": {
      "op": "DUP5"
    },
    "9012": {
      "op": "ISZERO"
    },
    "9013": {
      "op": "PUSH2",
      "value": "0x233E"
    },
    "9016": {
      "op": "JUMPI"
    },
    "9017": {
      "op": "POP"
    },
    "9018": {
      "op": "DUP6"
    },
    "9019": {
      "op": "DUP4"
    },
    "9020": {
      "op": "ADD"
    },
    "9021": {
      "op": "MLOAD"
    },
    "9022": {
      "op": "JUMPDEST"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9025": {
      "op": "NOT"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9028": {
      "op": "DUP7"
    },
    "9029": {
      "op": "SWAP1"
    },
    "9030": {
      "op": "SHL"
    },
    "9031": {
      "op": "SHR"
    },
    "9032": {
      "op": "NOT"
    },
    "9033": {
      "op": "AND"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9036": {
      "op": "DUP6"
    },
    "9037": {
      "op": "SWAP1"
    },
    "9038": {
      "op": "SHL"
    },
    "9039": {
      "op": "OR"
    },
    "9040": {
      "op": "DUP6"
    },
    "9041": {
      "op": "SSTORE"
    },
    "9042": {
      "op": "PUSH2",
      "value": "0x22EB"
    },
    "9045": {
      "op": "JUMP"
    },
    "9046": {
      "op": "JUMPDEST"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9049": {
      "op": "DUP6"
    },
    "9050": {
      "op": "DUP2"
    },
    "9051": {
      "op": "MSTORE"
    },
    "9052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9054": {
      "op": "DUP2"
    },
    "9055": {
      "op": "KECCAK256"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9058": {
      "op": "NOT"
    },
    "9059": {
      "op": "DUP7"
    },
    "9060": {
      "op": "AND"
    },
    "9061": {
      "op": "SWAP2"
    },
    "9062": {
      "op": "JUMPDEST"
    },
    "9063": {
      "op": "DUP3"
    },
    "9064": {
      "op": "DUP2"
    },
    "9065": {
      "op": "LT"
    },
    "9066": {
      "op": "ISZERO"
    },
    "9067": {
      "op": "PUSH2",
      "value": "0x2385"
    },
    "9070": {
      "op": "JUMPI"
    },
    "9071": {
      "op": "DUP9"
    },
    "9072": {
      "op": "DUP7"
    },
    "9073": {
      "op": "ADD"
    },
    "9074": {
      "op": "MLOAD"
    },
    "9075": {
      "op": "DUP3"
    },
    "9076": {
      "op": "SSTORE"
    },
    "9077": {
      "op": "SWAP5"
    },
    "9078": {
      "op": "DUP5"
    },
    "9079": {
      "op": "ADD"
    },
    "9080": {
      "op": "SWAP5"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9083": {
      "op": "SWAP1"
    },
    "9084": {
      "op": "SWAP2"
    },
    "9085": {
      "op": "ADD"
    },
    "9086": {
      "op": "SWAP1"
    },
    "9087": {
      "op": "DUP5"
    },
    "9088": {
      "op": "ADD"
    },
    "9089": {
      "op": "PUSH2",
      "value": "0x2366"
    },
    "9092": {
      "op": "JUMP"
    },
    "9093": {
      "op": "JUMPDEST"
    },
    "9094": {
      "op": "POP"
    },
    "9095": {
      "op": "DUP6"
    },
    "9096": {
      "op": "DUP3"
    },
    "9097": {
      "op": "LT"
    },
    "9098": {
      "op": "ISZERO"
    },
    "9099": {
      "op": "PUSH2",
      "value": "0x23A3"
    },
    "9102": {
      "op": "JUMPI"
    },
    "9103": {
      "op": "DUP8"
    },
    "9104": {
      "op": "DUP6"
    },
    "9105": {
      "op": "ADD"
    },
    "9106": {
      "op": "MLOAD"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9109": {
      "op": "NOT"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9112": {
      "op": "DUP9"
    },
    "9113": {
      "op": "SWAP1"
    },
    "9114": {
      "op": "SHL"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9117": {
      "op": "AND"
    },
    "9118": {
      "op": "SHR"
    },
    "9119": {
      "op": "NOT"
    },
    "9120": {
      "op": "AND"
    },
    "9121": {
      "op": "DUP2"
    },
    "9122": {
      "op": "SSTORE"
    },
    "9123": {
      "op": "JUMPDEST"
    },
    "9124": {
      "op": "POP"
    },
    "9125": {
      "op": "POP"
    },
    "9126": {
      "op": "POP"
    },
    "9127": {
      "op": "POP"
    },
    "9128": {
      "op": "POP"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9131": {
      "op": "SWAP1"
    },
    "9132": {
      "op": "DUP2"
    },
    "9133": {
      "op": "SHL"
    },
    "9134": {
      "op": "ADD"
    },
    "9135": {
      "op": "SWAP1"
    },
    "9136": {
      "op": "SSTORE"
    },
    "9137": {
      "op": "POP"
    },
    "9138": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0d94bdb67d94e3a057ec3a6b4f9cb62a47a01610",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\ncontract SmartnodesCore is ERC20Upgradeable {\n    ISmartnodesMultiSig public validatorContract;\n    address public proxyAdmin;\n\n    uint256 public tailEmission = 8e18;\n    uint256 public constant UNLOCK_PERIOD = 1_209_600; // 14 days in seconds\n\n    uint256 public emissionRate;\n    uint256 public lockAmount;\n    uint256 public halvingPeriod;\n    uint256 public statesSinceLastHalving;\n    uint256 public totalLocked;\n    uint256 public unlockPeriod;\n\n    struct Validator {\n        address _address;\n        uint256 locked;\n        uint256 unlockTime;\n        bytes32 publicKeyHash;\n    }\n\n    struct Job {\n        uint256[] capacities;\n        uint256 payment;\n    }\n\n    mapping(bytes32 => uint256) public jobHashToId;\n    mapping(uint256 => Job) public jobs;\n    mapping(uint256 => Validator) public validators;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    uint256 public jobCounter;\n    uint256 public userCounter;\n    uint256 public validatorCounter;\n    uint256 public availableCapacity;\n\n    event TokensLocked(address validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(uint256 jobId, bytes32 jobHash, bytes32 userHash);\n    event JobCompleted(uint256 indexed jobId, bytes32 jobHash);\n    event JobDisputed(bytes32 indexed jobId, uint256 timestamp);\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == address(validatorContract),\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    modifier onlyProxyAdmin() {\n        require(msg.sender == proxyAdmin, \"Caller must be the proxy admin.\");\n        _;\n    }\n\n    function initialize(address[] memory _genesisNodes) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n        proxyAdmin = msg.sender;\n        emissionRate = 2048e18;\n        lockAmount = 100_000e18;\n        halvingPeriod = 8742;\n        statesSinceLastHalving = 0;\n        unlockPeriod = 1_209_600; // (14 days in seconds)\n\n        jobCounter = 1;\n        validatorCounter = 1;\n        userCounter = 1;\n\n        for (uint i = 0; i < _genesisNodes.length; i++) {\n            _mint(_genesisNodes[i], lockAmount);\n        }\n    }\n\n    function setValidatorContract(address _validatorAddress) external {\n        require(\n            address(validatorContract) == address(0),\n            \"Validator address already set.\"\n        );\n        validatorContract = ISmartnodesMultiSig(_validatorAddress);\n    }\n\n    function halveStateTime() external onlyProxyAdmin {\n        // By reducing the state time in half, we must reduce emissions (ie. state reward)\n        // by half, including the tail emission value\n        tailEmission /= 2;\n        emissionRate /= 2;\n        halvingPeriod *= 2; // Double the state updates requied between halvings\n        validatorContract.halvePeriod(); // Halve the time required between state updates\n    }\n\n    // Request a job and associate a payment with it\n    function requestJob(\n        bytes32 userHash,\n        bytes32 jobHash,\n        uint256[] calldata capacities,\n        uint256 paymentAmount // Accept payment in tokens\n    ) external {\n        require(jobHashToId[jobHash] == 0, \"Job already created!\");\n        require(capacities.length > 0, \"Job must have a capacity.\");\n        jobHashToId[jobHash] = jobCounter;\n\n        // Require a payment for the job\n        require(paymentAmount > 0, \"Payment must be greater than zero.\");\n        require(\n            balanceOf(msg.sender) >= paymentAmount,\n            \"Insufficient token balance.\"\n        );\n        require(capacities.length > 0, \"\");\n\n        // Transfer the payment tokens and burn them\n        _transfer(msg.sender, address(0), paymentAmount); // Burn the tokens by sending to zero address\n\n        // Store the job with associated payment\n        jobs[jobCounter] = Job({\n            capacities: capacities,\n            payment: paymentAmount // Store the payment amount\n        });\n\n        emit JobRequested(jobCounter, jobHash, userHash);\n        jobCounter++;\n    }\n\n    // Complete the job and distribute payment to validators/workers\n    function completeJob(\n        bytes32 jobHash\n    ) external onlyValidatorMultiSig returns (uint256) {\n        uint256 jobId = jobHashToId[jobHash];\n\n        // If we have a user-requested job\n        if (jobId == 0) {\n            // If not, we can log the job counter\n            jobCounter++;\n            emit JobCompleted(jobId, jobHash);\n            return 0;\n        }\n\n        // Get the job and calculate reward\n        Job memory job = jobs[jobId];\n        uint256 totalReward = job.payment;\n\n        // Cleanup\n        delete jobs[jobId];\n        delete jobHashToId[jobHash];\n        emit JobCompleted(jobId, jobHash);\n        return totalReward;\n    }\n\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _capacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted,\n        uint256 additionalReward\n    ) external onlyValidatorMultiSig {\n        if (statesSinceLastHalving >= halvingPeriod) {\n            if (emissionRate > tailEmission) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorReward;\n        uint256 workerReward;\n\n        if (_workers.length == 0) {\n            validatorReward = emissionRate + additionalReward;\n            workerReward = 0;\n        } else {\n            validatorReward = ((emissionRate + additionalReward) * 25) / 100;\n            workerReward = ((emissionRate + additionalReward) * 75) / 100;\n        }\n\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(\n                _validatorsVoted[v],\n                validatorReward / _validatorsVoted.length\n            );\n        }\n\n        if (_workers.length > 0) {\n            for (uint256 w = 0; w < _workers.length; w++) {\n                uint256 reward = ((_capacities[w] * workerReward) /\n                    _totalCapacity);\n                _mint(_workers[w], reward);\n            }\n        }\n\n        statesSinceLastHalving++;\n    }\n\n    /**\n     * @dev Validator token unlocking, 14 day withdrawal period.\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        totalLocked += amount;\n\n        emit TokensLocked(sender, amount);\n    }\n\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            if (validator.locked < lockAmount) {\n                validatorContract.removeValidator(msg.sender);\n            }\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            totalLocked -= amount;\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            transferFrom(address(this), msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already created with this account!\"\n        );\n\n        validators[validatorCounter] = Validator({\n            _address: msg.sender,\n            locked: 0,\n            unlockTime: 0,\n            publicKeyHash: _publicKeyHash\n        });\n\n        validatorIdByAddress[msg.sender] = validatorCounter;\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorCounter++;\n    }\n\n    function isLocked(address validatorAddress) external view returns (bool) {\n        uint256 id = validatorIdByAddress[validatorAddress];\n        return validators[id].locked >= lockAmount;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return validatorContract.getNumValidators();\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32, address) {\n        require(_validatorId < validatorCounter, \"Invalid ID.\");\n        Validator memory _validator = validators[_validatorId];\n        bool isActive = validatorContract.isActiveValidator(\n            _validator._address\n        );\n        return (isActive, _validator.publicKeyHash, _validator._address);\n    }\n}\n",
  "sourceMap": "184:9752:6:-:0;;;346:4;316:34;;184:9752;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}