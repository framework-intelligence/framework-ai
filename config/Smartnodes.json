{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "seedValidators",
          "type": "address[]"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "disputeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_leadDevelopers",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_communityWallet",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddr",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobIdByUserIdHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_workerCapacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "validatorIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "24": "contracts/SmartnodesCore.sol",
    "28": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        4718
      ],
      "ContextUpgradeable": [
        4475
      ],
      "ERC20Upgradeable": [
        3264
      ],
      "IERC20MetadataUpgradeable": [
        4433
      ],
      "IERC20Upgradeable": [
        4408
      ],
      "ISmartnodesMultiSig": [
        2520
      ],
      "Initializable": [
        3341
      ],
      "SmartnodesCore": [
        1198
      ]
    },
    "id": 1199,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:24"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1199,
        "sourceUnit": 3265,
        "src": "57:78:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1199,
        "sourceUnit": 2521,
        "src": "136:46:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 141,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "298:16:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3264,
              "src": "298:16:24"
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:24"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "184:86:24",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 1198,
        "linearizedBaseContracts": [
          1198,
          3264,
          4433,
          4408,
          4475,
          3341
        ],
        "name": "SmartnodesCore",
        "nameLocation": "280:14:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 145,
            "mutability": "mutable",
            "name": "_validatorContractInstance",
            "nameLocation": "384:26:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "356:54:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 144,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 143,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "356:19:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2520,
                "src": "356:19:24"
              },
              "referencedDeclaration": 2520,
              "src": "356:19:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f79621bd",
            "id": 147,
            "mutability": "mutable",
            "name": "validatorContractAddress",
            "nameLocation": "431:24:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "416:39:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 146,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 149,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "520:18:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "505:33:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 148,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2faba6ae",
            "id": 151,
            "mutability": "mutable",
            "name": "userIdCounter",
            "nameLocation": "559:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "544:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 153,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "593:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "578:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2d49c4b",
            "id": 155,
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "624:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "609:31:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 157,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "661:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "646:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 159,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "695:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "680:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 165,
            "name": "TokensLocked",
            "nameLocation": "735:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "764:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "748:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "783:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "775:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:43:24"
            },
            "src": "729:62:24"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 171,
            "name": "UnlockInitiated",
            "nameLocation": "802:15:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "834:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "818:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "853:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "845:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "817:47:24"
            },
            "src": "796:69:24"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 177,
            "name": "TokensUnlocked",
            "nameLocation": "876:14:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "907:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "891:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "926:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "918:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:43:24"
            },
            "src": "870:64:24"
          },
          {
            "anonymous": false,
            "eventSelector": "1b59636c5deb9b679668ad7d3a3b892e3fc3b4a8ea6e10f8d31ce69c4278e8fc",
            "id": 186,
            "name": "JobRequested",
            "nameLocation": "945:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "983:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "967:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1006:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "998:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seedValidators",
                  "nameLocation": "1035:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1025:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 182,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1025:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 183,
                    "nodeType": "ArrayTypeName",
                    "src": "1025:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:98:24"
            },
            "src": "939:117:24"
          },
          {
            "anonymous": false,
            "eventSelector": "152d31e943f2d79d470375c901f5a6cfb7d465ee4969db651885948d3b6015b8",
            "id": 192,
            "name": "JobCompleted",
            "nameLocation": "1067:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1096:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1080:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1111:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1103:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1079:42:24"
            },
            "src": "1061:61:24"
          },
          {
            "anonymous": false,
            "eventSelector": "2f86696b420aa8d6e35f66f693ea69962e1a320f7f56220e777ec1db40903130",
            "id": 198,
            "name": "JobDisputed",
            "nameLocation": "1133:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1161:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1145:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1176:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1168:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:42:24"
            },
            "src": "1127:60:24"
          },
          {
            "canonicalName": "SmartnodesCore.User",
            "id": 207,
            "members": [
              {
                "constant": false,
                "id": 200,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1297:2:24",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1289:10:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 199,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1289:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 202,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "1317:11:24",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1309:19:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 201,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1309:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 204,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1346:13:24",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1338:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 203,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1338:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 206,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1375:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 207,
                "src": "1369:16:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 205,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1369:5:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1274:4:24",
            "nodeType": "StructDefinition",
            "scope": 1198,
            "src": "1267:125:24",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 220,
            "members": [
              {
                "constant": false,
                "id": 209,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1536:2:24",
                "nodeType": "VariableDeclaration",
                "scope": 220,
                "src": "1528:10:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 208,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1528:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 211,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "1556:16:24",
                "nodeType": "VariableDeclaration",
                "scope": 220,
                "src": "1548:24:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 210,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1548:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 213,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1590:13:24",
                "nodeType": "VariableDeclaration",
                "scope": 220,
                "src": "1582:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 212,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1582:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 215,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "1621:6:24",
                "nodeType": "VariableDeclaration",
                "scope": 220,
                "src": "1613:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 214,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1613:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 217,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "1645:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 220,
                "src": "1637:18:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 216,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1637:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 219,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1671:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 220,
                "src": "1665:16:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 218,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1665:5:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "1508:9:24",
            "nodeType": "StructDefinition",
            "scope": 1198,
            "src": "1501:187:24",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 236,
            "members": [
              {
                "constant": false,
                "id": 222,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1852:2:24",
                "nodeType": "VariableDeclaration",
                "scope": 236,
                "src": "1844:10:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 221,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1844:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 224,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "1872:6:24",
                "nodeType": "VariableDeclaration",
                "scope": 236,
                "src": "1864:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 223,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1864:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 227,
                "mutability": "mutable",
                "name": "seedValidators",
                "nameLocation": "1898:14:24",
                "nodeType": "VariableDeclaration",
                "scope": 236,
                "src": "1888:24:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 226,
                  "nodeType": "ArrayTypeName",
                  "src": "1888:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 230,
                "mutability": "mutable",
                "name": "workers",
                "nameLocation": "1932:7:24",
                "nodeType": "VariableDeclaration",
                "scope": 236,
                "src": "1922:17:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 229,
                  "nodeType": "ArrayTypeName",
                  "src": "1922:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 233,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "1959:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 236,
                "src": "1949:20:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ArrayTypeName",
                  "src": "1949:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 235,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "1984:8:24",
                "nodeType": "VariableDeclaration",
                "scope": 236,
                "src": "1979:13:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 234,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1979:4:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "1830:3:24",
            "nodeType": "StructDefinition",
            "scope": 1198,
            "src": "1823:176:24",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 239,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "2063:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2039:50:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 237,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2039:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32315f3030305f303030653138",
              "id": 238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2076:13:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 242,
            "mutability": "constant",
            "name": "tailEmission",
            "nameLocation": "2112:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2095:36:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 240,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2095:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 241,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2127:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c8df245a",
            "id": 245,
            "mutability": "mutable",
            "name": "halving",
            "nameLocation": "2153:7:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2138:29:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 243,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2138:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32313630",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2163:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2160_by_1",
                "typeString": "int_const 2160"
              },
              "value": "2160"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 248,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "2246:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2231:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 246,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2231:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303438653138",
              "id": 247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2261:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2048000000000000000000_by_1",
                "typeString": "int_const 2048000000000000000000"
              },
              "value": "2048e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 251,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "2340:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2325:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 249,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2325:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35305f303030653138",
              "id": 250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2353:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000000"
              },
              "value": "50_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 254,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "2427:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2412:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 252,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2412:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530343030",
              "id": 253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2442:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50400_by_1",
                "typeString": "int_const 50400"
              },
              "value": "50400"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b115f50d",
            "id": 256,
            "mutability": "mutable",
            "name": "timeSinceLastHalving",
            "nameLocation": "2468:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2453:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2453:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 261,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "2576:5:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2544:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$207_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.User)"
            },
            "typeName": {
              "id": 260,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 257,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2552:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2544:24:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$207_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 259,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 258,
                  "name": "User",
                  "nameLocations": [
                    "2563:4:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 207,
                  "src": "2563:4:24"
                },
                "referencedDeclaration": 207,
                "src": "2563:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$207_storage_ptr",
                  "typeString": "struct SmartnodesCore.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 266,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "2624:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2587:47:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 265,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 262,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2595:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2587:29:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 264,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 263,
                  "name": "Validator",
                  "nameLocations": [
                    "2606:9:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "2606:9:24"
                },
                "referencedDeclaration": 220,
                "src": "2606:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 271,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "2671:4:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2640:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 270,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 267,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2648:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2640:23:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 269,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 268,
                  "name": "Job",
                  "nameLocations": [
                    "2659:3:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 236,
                  "src": "2659:3:24"
                },
                "referencedDeclaration": 236,
                "src": "2659:3:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$236_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b759088",
            "id": 275,
            "mutability": "mutable",
            "name": "userIdByAddress",
            "nameLocation": "2741:15:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2706:50:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 274,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 272,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2714:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2706:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 273,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2725:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 279,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "2797:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2762:55:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 278,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 276,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2770:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2762:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 277,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2781:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc60bd48",
            "id": 283,
            "mutability": "mutable",
            "name": "jobIdByUserIdHash",
            "nameLocation": "2858:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 1198,
            "src": "2823:52:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 282,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 280,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2831:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2823:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 281,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2842:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2956:151:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 286,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2987:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2991:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2987:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 288,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "3001:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2987:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3039:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2966:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2966:123:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:123:24"
                },
                {
                  "id": 293,
                  "nodeType": "PlaceholderStatement",
                  "src": "3099:1:24"
                }
              ]
            },
            "id": 295,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "2932:21:24",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2953:2:24"
            },
            "src": "2923:184:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "3234:1056:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3257:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3271:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 305,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2698,
                      "src": "3244:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3244:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3244:33:24"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 310,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3361:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3377:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3361:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3361:17:24"
                },
                {
                  "expression": {
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "3388:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3401:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3388:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:14:24"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 318,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "3412:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3433:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3412:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3412:22:24"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 322,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3483:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32303438653138",
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3498:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2048000000000000000000_by_1",
                        "typeString": "int_const 2048000000000000000000"
                      },
                      "value": "2048e18"
                    },
                    "src": "3483:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:22:24"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 326,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3566:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35305f303030653138",
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3579:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000000"
                      },
                      "value": "50_000e18"
                    },
                    "src": "3566:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "3566:22:24"
                },
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 330,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3642:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32313630",
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3652:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2160_by_1",
                        "typeString": "int_const 2160"
                      },
                      "value": "2160"
                    },
                    "src": "3642:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:14:24"
                },
                {
                  "expression": {
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 334,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "3666:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530343030",
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3681:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50400_by_1",
                        "typeString": "int_const 50400"
                      },
                      "value": "50400"
                    },
                    "src": "3666:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:20:24"
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 338,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "3709:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3732:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3709:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:24:24"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "devWallets",
                      "nameLocation": "3752:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "3744:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3744:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "hexValue": "325f3334315f323830653138",
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3765:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2341280000000000000000000_by_1",
                      "typeString": "int_const 2341280000000000000000000"
                    },
                    "value": "2_341_280e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3744:33:24"
                },
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "communityFunding",
                      "nameLocation": "3795:16:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "3787:24:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3787:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 349,
                  "initialValue": {
                    "hexValue": "325f3030305f303030653138",
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3814:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000000000"
                    },
                    "value": "2_000_000e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3787:39:24"
                },
                {
                  "assignments": [
                    351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 351,
                      "mutability": "mutable",
                      "name": "idoAmount",
                      "nameLocation": "3844:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "3836:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3836:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 353,
                  "initialValue": {
                    "hexValue": "335f3530305f303030653138",
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3856:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3500000000000000000000000_by_1",
                      "typeString": "int_const 3500000000000000000000000"
                    },
                    "value": "3_500_000e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3836:32:24"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 354,
                      "name": "communityFunding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "3878:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 355,
                      "name": "idoAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "3898:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3878:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "3878:29:24"
                },
                {
                  "body": {
                    "id": 379,
                    "nodeType": "Block",
                    "src": "4062:87:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 370,
                                "name": "_leadDevelopers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 298,
                                "src": "4082:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 372,
                              "indexExpression": {
                                "id": 371,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4098:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4082:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 373,
                                "name": "devWallets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 343,
                                "src": "4102:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 374,
                                  "name": "_leadDevelopers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "4115:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4131:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4115:22:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4102:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 369,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3076,
                            "src": "4076:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4076:62:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 378,
                        "nodeType": "ExpressionStatement",
                        "src": "4076:62:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 362,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "4029:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 363,
                        "name": "_leadDevelopers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "4033:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4049:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4033:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4029:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 380,
                  "initializationExpression": {
                    "assignments": [
                      359
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4022:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "4017:6:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4017:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 361,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4026:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4017:10:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4057:3:24",
                      "subExpression": {
                        "id": 366,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4057:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 368,
                    "nodeType": "ExpressionStatement",
                    "src": "4057:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "4012:137:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "_communityWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "4165:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 383,
                        "name": "communityFunding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "4183:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3076,
                      "src": "4159:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:41:24"
                },
                {
                  "expression": {
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 386,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "4239:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4255:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4239:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "4239:17:24"
                },
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 390,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "4266:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4282:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "4266:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "4266:17:24"
                }
              ]
            },
            "functionSelector": "462d0b2e",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 303,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 302,
                  "name": "initializer",
                  "nameLocations": [
                    "3222:11:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3315,
                  "src": "3222:11:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3222:11:24"
              }
            ],
            "name": "initialize",
            "nameLocation": "3122:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "_leadDevelopers",
                  "nameLocation": "3159:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3142:32:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 296,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3142:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 297,
                    "nodeType": "ArrayTypeName",
                    "src": "3142:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_communityWallet",
                  "nameLocation": "3192:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3184:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3132:82:24"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3234:0:24"
            },
            "scope": 1198,
            "src": "3113:1177:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "4361:261:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 401,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "4392:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4428:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4420:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 402,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4420:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4420:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4392:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4444:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4371:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4371:115:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4371:115:24"
                },
                {
                  "expression": {
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 410,
                      "name": "_validatorContractInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4496:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 412,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "4545:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 411,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "4525:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$2520_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4525:37:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "4496:66:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:66:24"
                },
                {
                  "expression": {
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 416,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "4572:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 417,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "4599:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4572:43:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:43:24"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "4305:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "4334:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4326:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4325:26:24"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4361:0:24"
            },
            "scope": 1198,
            "src": "4296:326:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "4770:410:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 428,
                            "name": "userIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "4844:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 431,
                          "indexExpression": {
                            "expression": {
                              "id": 429,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4860:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4864:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4860:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4844:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4875:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4844:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4878:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4836:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:69:24"
                },
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 437,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "4916:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$207_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.User storage ref)"
                        }
                      },
                      "id": 439,
                      "indexExpression": {
                        "id": 438,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "4922:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4916:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$207_storage",
                        "typeString": "struct SmartnodesCore.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 441,
                          "name": "userIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "4962:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5002:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5006:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5002:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 444,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "5041:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3530",
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5081:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 440,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "4939:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$207_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.User storage pointer)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4958:2:24",
                        "4989:11:24",
                        "5026:13:24",
                        "5069:10:24"
                      ],
                      "names": [
                        "id",
                        "userAddress",
                        "publicKeyHash",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4939:155:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$207_memory_ptr",
                        "typeString": "struct SmartnodesCore.User memory"
                      }
                    },
                    "src": "4916:178:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$207_storage",
                      "typeString": "struct SmartnodesCore.User storage ref"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "4916:178:24"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 449,
                        "name": "userIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5105:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 452,
                      "indexExpression": {
                        "expression": {
                          "id": 450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5121:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5125:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5121:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5105:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 453,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "5135:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5105:43:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:43:24"
                },
                {
                  "expression": {
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5158:15:24",
                    "subExpression": {
                      "id": 456,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "5158:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:15:24"
                }
              ]
            },
            "documentation": {
              "id": 422,
              "nodeType": "StructuredDocumentation",
              "src": "4628:84:24",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "abf7bfd8",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "4726:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4745:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "4737:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4736:24:24"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4770:0:24"
            },
            "scope": 1198,
            "src": "4717:463:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "5406:770:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 469,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5437:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 472,
                          "indexExpression": {
                            "expression": {
                              "id": 470,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5458:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5462:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5458:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5437:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5473:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5437:37:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206578697374732e",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5488:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        },
                        "value": "Validator already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5416:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5416:109:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5416:109:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 480,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5567:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5571:6:24",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5567:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 479,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2770,
                              "src": "5557:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5557:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 483,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "5582:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5557:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 485,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "5597:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 486,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "5612:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5597:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5557:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5636:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5536:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5536:139:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "5536:139:24"
                },
                {
                  "expression": {
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 492,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "5732:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 494,
                      "indexExpression": {
                        "id": 493,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "5743:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5732:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$220_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 496,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "5793:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 497,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5843:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5847:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5843:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 499,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 463,
                          "src": "5882:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 500,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "5918:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5954:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5981:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 495,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "5765:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$220_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5789:2:24",
                        "5825:16:24",
                        "5867:13:24",
                        "5910:6:24",
                        "5942:10:24",
                        "5969:10:24"
                      ],
                      "names": [
                        "id",
                        "validatorAddress",
                        "publicKeyHash",
                        "locked",
                        "unlockTime",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5765:229:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$220_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "5732:262:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$220_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "5732:262:24"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 506,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "6005:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "expression": {
                          "id": 507,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6026:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6030:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6026:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6005:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 510,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "6040:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6005:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:53:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6115:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6119:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6115:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 516,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "6127:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 513,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "6103:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6103:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "6103:35:24"
                },
                {
                  "expression": {
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6149:20:24",
                    "subExpression": {
                      "id": 519,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "6149:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "6149:20:24"
                }
              ]
            },
            "documentation": {
              "id": 461,
              "nodeType": "StructuredDocumentation",
              "src": "5186:114:24",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "497dfe63",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "5314:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "5347:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "5339:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5339:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "5379:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "5371:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5329:67:24"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5406:0:24"
            },
            "scope": 1198,
            "src": "5305:871:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 640,
              "nodeType": "Block",
              "src": "6347:1088:24",
              "statements": [
                {
                  "assignments": [
                    533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "6365:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 640,
                      "src": "6357:11:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6357:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 538,
                  "initialValue": {
                    "baseExpression": {
                      "id": 534,
                      "name": "userIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "6371:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 537,
                    "indexExpression": {
                      "expression": {
                        "id": 535,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6387:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6391:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6387:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6371:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6357:41:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 540,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "6417:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6424:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6417:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420726567697374657265642e",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6427:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        },
                        "value": "User not registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6409:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6409:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "6409:41:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 547,
                            "name": "_capacities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "6468:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 549,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6480:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6468:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6485:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6468:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4361706163697479206d7573742062652067726561746572207a65726f2e",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6488:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        },
                        "value": "Capacity must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6460:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6460:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "6460:61:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 556,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "6552:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6588:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6580:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 557,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6580:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6580:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6552:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220636f6e7472616374206e6f742073657421",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6604:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_501982c48cf19430e36447dcbb97fc13e5b3212241b7ccf0ccdb50a6bb5578f1",
                          "typeString": "literal_string \"Validator contract not set!\""
                        },
                        "value": "Validator contract not set!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_501982c48cf19430e36447dcbb97fc13e5b3212241b7ccf0ccdb50a6bb5578f1",
                          "typeString": "literal_string \"Validator contract not set!\""
                        }
                      ],
                      "id": 555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6531:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6531:112:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "6531:112:24"
                },
                {
                  "assignments": [
                    569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 569,
                      "mutability": "mutable",
                      "name": "_seedValidators",
                      "nameLocation": "6671:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 640,
                      "src": "6654:32:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6654:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 568,
                        "nodeType": "ArrayTypeName",
                        "src": "6654:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 573,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 570,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "6689:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6729:27:24",
                      "memberName": "generateValidatorCandidates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2466,
                      "src": "6689:67:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6654:104:24"
                },
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "_validatorIds",
                      "nameLocation": "6785:13:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 640,
                      "src": "6768:30:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6768:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 577,
                        "nodeType": "ArrayTypeName",
                        "src": "6768:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 585,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 582,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 569,
                          "src": "6815:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6831:6:24",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6815:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6801:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 579,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6805:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 580,
                        "nodeType": "ArrayTypeName",
                        "src": "6805:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6801:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6768:70:24"
                },
                {
                  "body": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "6902:84:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 597,
                              "name": "_validatorIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "6916:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 599,
                            "indexExpression": {
                              "id": 598,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "6930:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6916:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 600,
                              "name": "validatorIdByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "6935:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 604,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 601,
                                "name": "_seedValidators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "6956:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 603,
                              "indexExpression": {
                                "id": 602,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "6972:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6956:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6935:40:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6916:59:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "6916:59:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 590,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "6869:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 591,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "6873:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6889:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6873:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6869:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 608,
                  "initializationExpression": {
                    "assignments": [
                      587
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6862:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "6854:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6854:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 589,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6866:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6854:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6897:3:24",
                      "subExpression": {
                        "id": 594,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "6897:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 596,
                    "nodeType": "ExpressionStatement",
                    "src": "6897:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "6849:137:24"
                },
                {
                  "expression": {
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 609,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "7041:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 611,
                      "indexExpression": {
                        "id": 610,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "7046:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7041:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$236_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 613,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "7082:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 614,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7114:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7118:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7114:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 616,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 569,
                          "src": "7154:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 620,
                                "name": "_capacities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 526,
                                "src": "7206:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7218:6:24",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7206:18:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7192:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 617,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7196:7:24",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 618,
                              "nodeType": "ArrayTypeName",
                              "src": "7196:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7192:33:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 623,
                          "name": "_capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "7251:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7286:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 612,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "7060:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$236_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7078:2:24",
                        "7106:6:24",
                        "7138:14:24",
                        "7183:7:24",
                        "7239:10:24",
                        "7276:8:24"
                      ],
                      "names": [
                        "id",
                        "author",
                        "seedValidators",
                        "workers",
                        "capacities",
                        "activity"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7060:241:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$236_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "7041:260:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$236_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7041:260:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 629,
                        "name": "jobCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "7330:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 630,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7342:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7348:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7342:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 632,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "7359:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 628,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "7317:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7317:58:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "EmitStatement",
                  "src": "7312:63:24"
                },
                {
                  "expression": {
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7385:12:24",
                    "subExpression": {
                      "id": 635,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "7385:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "7385:12:24"
                },
                {
                  "expression": {
                    "id": 638,
                    "name": "_validatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 578,
                    "src": "7415:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 531,
                  "id": 639,
                  "nodeType": "Return",
                  "src": "7408:20:24"
                }
              ]
            },
            "functionSelector": "8d12b266",
            "id": 641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "6241:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "6280:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "6261:30:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 524,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6261:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 525,
                    "nodeType": "ArrayTypeName",
                    "src": "6261:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6251:46:24"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "validatorIds",
                  "nameLocation": "6333:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "6316:29:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 528,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6316:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 529,
                    "nodeType": "ArrayTypeName",
                    "src": "6316:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6315:31:24"
            },
            "scope": 1198,
            "src": "6232:1203:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "7584:291:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 655,
                            "name": "_workers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "7602:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7611:6:24",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7602:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 657,
                                "name": "jobs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "7621:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                                  "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                                }
                              },
                              "id": 659,
                              "indexExpression": {
                                "id": 658,
                                "name": "jobId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 643,
                                "src": "7626:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7621:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$236_storage",
                                "typeString": "struct SmartnodesCore.Job storage ref"
                              }
                            },
                            "id": 660,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7633:10:24",
                            "memberName": "capacities",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 233,
                            "src": "7621:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7644:6:24",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7621:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7602:48:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7594:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7594:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "7594:57:24"
                },
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 665,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "7662:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 667,
                        "indexExpression": {
                          "id": 666,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "7667:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7662:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$236_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7674:7:24",
                      "memberName": "workers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 230,
                      "src": "7662:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 669,
                      "name": "_workers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "7684:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7662:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "7662:30:24"
                },
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 672,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "7702:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 674,
                        "indexExpression": {
                          "id": 673,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "7707:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7702:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$236_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7714:8:24",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 235,
                      "src": "7702:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7725:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7702:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "7702:28:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 680,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "7805:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 681,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7812:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7818:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7812:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 679,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "7792:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7792:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "EmitStatement",
                  "src": "7787:41:24"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 685,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "7846:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 687,
                      "indexExpression": {
                        "id": 686,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "7851:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7846:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$236_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7858:10:24",
                    "memberName": "capacities",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 233,
                    "src": "7846:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 653,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "7839:29:24"
                }
              ]
            },
            "functionSelector": "f3259572",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 649,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 648,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7535:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 295,
                  "src": "7535:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "7535:21:24"
              }
            ],
            "name": "completeJob",
            "nameLocation": "7450:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "7479:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "7471:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7471:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "7511:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "7494:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 644,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7494:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 645,
                    "nodeType": "ArrayTypeName",
                    "src": "7494:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7461:64:24"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "7566:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 650,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7566:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 651,
                    "nodeType": "ArrayTypeName",
                    "src": "7566:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7565:18:24"
            },
            "scope": 1198,
            "src": "7441:434:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "7947:126:24",
              "statements": [
                {
                  "assignments": [
                    700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 700,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "7969:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 717,
                      "src": "7957:15:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$236_storage_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 699,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 698,
                          "name": "Job",
                          "nameLocations": [
                            "7957:3:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 236,
                          "src": "7957:3:24"
                        },
                        "referencedDeclaration": 236,
                        "src": "7957:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$236_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "baseExpression": {
                      "id": 701,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "7975:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 703,
                    "indexExpression": {
                      "id": 702,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 693,
                      "src": "7980:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7975:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$236_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7957:29:24"
                },
                {
                  "expression": {
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 705,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "7996:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$236_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job storage pointer"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8000:8:24",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 235,
                      "src": "7996:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8011:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7996:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "7996:20:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 712,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "8043:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 713,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8050:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8056:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8050:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 711,
                      "name": "JobDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "8031:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8031:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "EmitStatement",
                  "src": "8026:40:24"
                }
              ]
            },
            "functionSelector": "d93d9beb",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 695,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7925:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 295,
                  "src": "7925:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "7925:21:24"
              }
            ],
            "name": "disputeJob",
            "nameLocation": "7890:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "7909:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "7901:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7901:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7900:15:24"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7947:0:24"
            },
            "scope": 1198,
            "src": "7881:192:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "8233:629:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 727,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "8251:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8260:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8251:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8263:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8243:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8243:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "8243:56:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 735,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "8327:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 734,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2770,
                            "src": "8317:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8317:17:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 737,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 723,
                          "src": "8338:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8317:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8346:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 733,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8309:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8309:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "8309:61:24"
                },
                {
                  "assignments": [
                    743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 743,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8389:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "8381:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 742,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8381:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "baseExpression": {
                      "id": 744,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "8403:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 746,
                    "indexExpression": {
                      "id": 745,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "8424:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8403:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8381:50:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 749,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 743,
                          "src": "8449:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8464:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8449:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8467:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8441:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8441:54:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "8441:54:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8519:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 759,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8535:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1198",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1198",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8527:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8527:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8527:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 761,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "8542:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 755,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2871,
                      "src": "8506:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8506:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "8506:43:24"
                },
                {
                  "expression": {
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 764,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8559:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 766,
                        "indexExpression": {
                          "id": 765,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 743,
                          "src": "8570:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8559:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$220_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8583:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "8559:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 768,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "8593:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8559:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8559:40:24"
                },
                {
                  "assignments": [
                    772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 772,
                      "mutability": "mutable",
                      "name": "totalLocked",
                      "nameLocation": "8617:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "8609:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 771,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8609:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 777,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 773,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "8631:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 775,
                      "indexExpression": {
                        "id": 774,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "8642:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8631:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$220_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8655:6:24",
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 215,
                    "src": "8631:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8609:52:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 781,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8731:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 782,
                        "name": "totalLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "8751:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 783,
                          "name": "totalLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "8776:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 784,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "8791:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8776:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 778,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "8672:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8699:18:24",
                      "memberName": "updateLockedTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2460,
                      "src": "8672:45:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool) external"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8672:139:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "8672:139:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 789,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "8840:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 790,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "8848:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 788,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "8827:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8827:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "EmitStatement",
                  "src": "8822:33:24"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "8079:87:24",
              "text": " @dev Internal function to lock tokens, callable from other functions"
            },
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "8180:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8200:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8192:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8192:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8216:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8208:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8208:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8191:32:24"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8233:0:24"
            },
            "scope": 1198,
            "src": "8171:691:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "8994:48:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9016:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9020:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9016:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 803,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "9028:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 800,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "9004:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9004:31:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "9004:31:24"
                }
              ]
            },
            "documentation": {
              "id": 795,
              "nodeType": "StructuredDocumentation",
              "src": "8868:76:24",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "6e27d889",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "8958:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8977:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "8969:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8969:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8968:16:24"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8994:0:24"
            },
            "scope": 1198,
            "src": "8949:93:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "9095:1392:24",
              "statements": [
                {
                  "assignments": [
                    813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 813,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "9113:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 916,
                      "src": "9105:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 812,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9105:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 818,
                  "initialValue": {
                    "baseExpression": {
                      "id": 814,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "9127:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 817,
                    "indexExpression": {
                      "expression": {
                        "id": 815,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9148:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9152:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9148:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9127:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9105:54:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 820,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "9177:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9191:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9177:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9194:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9169:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9169:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "9169:55:24"
                },
                {
                  "assignments": [
                    828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 828,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "9253:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 916,
                      "src": "9235:27:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 826,
                          "name": "Validator",
                          "nameLocations": [
                            "9235:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 220,
                          "src": "9235:9:24"
                        },
                        "referencedDeclaration": 220,
                        "src": "9235:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 832,
                  "initialValue": {
                    "baseExpression": {
                      "id": 829,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9265:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 831,
                    "indexExpression": {
                      "id": 830,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "9276:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9265:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$220_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9235:53:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 834,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 809,
                          "src": "9307:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 835,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 828,
                            "src": "9317:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9327:6:24",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 215,
                          "src": "9317:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9307:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9335:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9299:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9299:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "9299:69:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 842,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 809,
                          "src": "9386:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9395:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9386:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9398:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9378:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9378:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "9378:56:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 848,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "9520:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9530:10:24",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 217,
                      "src": "9520:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9544:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9520:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "10023:458:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 888,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10140:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10146:9:24",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10140:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 890,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 828,
                                  "src": "10159:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 891,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10169:10:24",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 217,
                                "src": "10159:20:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10140:39:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10197:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 887,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10115:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10115:122:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 895,
                        "nodeType": "ExpressionStatement",
                        "src": "10115:122:24"
                      },
                      {
                        "expression": {
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 896,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "10252:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10262:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 215,
                            "src": "10252:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 899,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "10272:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10252:26:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "10252:26:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 903,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10298:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10302:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10298:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 905,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "10310:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 902,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3076,
                            "src": "10292:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10292:25:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 907,
                        "nodeType": "ExpressionStatement",
                        "src": "10292:25:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 909,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10399:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10403:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10399:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 911,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "10411:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 908,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "10384:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10384:34:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "EmitStatement",
                        "src": "10379:39:24"
                      }
                    ]
                  },
                  "id": 915,
                  "nodeType": "IfStatement",
                  "src": "9516:965:24",
                  "trueBody": {
                    "id": 886,
                    "nodeType": "Block",
                    "src": "9547:470:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 852,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "9561:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9571:10:24",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 217,
                            "src": "9561:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 855,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9584:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9590:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9584:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 857,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 254,
                              "src": "9602:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9584:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9561:53:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 860,
                        "nodeType": "ExpressionStatement",
                        "src": "9561:53:24"
                      },
                      {
                        "assignments": [
                          862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 862,
                            "mutability": "mutable",
                            "name": "totalLocked",
                            "nameLocation": "9698:11:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 886,
                            "src": "9690:19:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 861,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9690:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 867,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 863,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "9712:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9722:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 215,
                            "src": "9712:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 865,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "9731:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9712:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9690:47:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 871,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9814:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9818:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9814:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 873,
                              "name": "totalLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "9842:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 874,
                                "name": "totalLocked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 862,
                                "src": "9871:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 875,
                                "name": "lockAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 251,
                                "src": "9886:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9871:25:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 868,
                              "name": "_validatorContractInstance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "9751:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9778:18:24",
                            "memberName": "updateLockedTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2460,
                            "src": "9751:45:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool) external"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9751:159:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "9751:159:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9946:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9950:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9946:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 882,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 828,
                                "src": "9958:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 883,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9968:10:24",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 217,
                              "src": "9958:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 879,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "9930:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9930:49:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 885,
                        "nodeType": "EmitStatement",
                        "src": "9925:54:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "9057:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9078:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "9070:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9070:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9069:16:24"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9095:0:24"
            },
            "scope": 1198,
            "src": "9048:1439:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "10875:974:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 935,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2756,
                              "src": "10906:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10906:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 937,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "10922:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10906:28:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 939,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "10938:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10906:42:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c79207265616368656421",
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10962:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        },
                        "value": "Maximum supply reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        }
                      ],
                      "id": 934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10885:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10885:112:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "10885:112:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 944,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "11012:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 945,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "11036:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11012:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 957,
                  "nodeType": "IfStatement",
                  "src": "11008:136:24",
                  "trueBody": {
                    "id": 956,
                    "nodeType": "Block",
                    "src": "11045:99:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 947,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "11063:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11078:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "11063:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 955,
                        "nodeType": "IfStatement",
                        "src": "11059:75:24",
                        "trueBody": {
                          "id": 954,
                          "nodeType": "Block",
                          "src": "11084:50:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 950,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 248,
                                  "src": "11102:12:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11118:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "11102:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 953,
                              "nodeType": "ExpressionStatement",
                              "src": "11102:17:24"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 959,
                      "mutability": "mutable",
                      "name": "validatorRewardTotal",
                      "nameLocation": "11162:20:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1038,
                      "src": "11154:28:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11154:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 966,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 960,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "11186:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3430",
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11201:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40_by_1",
                              "typeString": "int_const 40"
                            },
                            "value": "40"
                          },
                          "src": "11186:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 963,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11185:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11207:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11185:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11154:56:24"
                },
                {
                  "assignments": [
                    968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 968,
                      "mutability": "mutable",
                      "name": "workerRewardTotal",
                      "nameLocation": "11228:17:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1038,
                      "src": "11220:25:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11220:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 975,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 969,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "11249:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3630",
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11264:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "src": "11249:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 972,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11248:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11270:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11248:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11220:53:24"
                },
                {
                  "assignments": [
                    977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 977,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "11345:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1038,
                      "src": "11337:23:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11337:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 982,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 978,
                      "name": "validatorRewardTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "11363:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 979,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "11398:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11415:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11398:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11363:58:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11337:84:24"
                },
                {
                  "body": {
                    "id": 1001,
                    "nodeType": "Block",
                    "src": "11485:68:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 995,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 929,
                                "src": "11505:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 997,
                              "indexExpression": {
                                "id": 996,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 984,
                                "src": "11522:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11505:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 998,
                              "name": "validatorReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "11526:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 994,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3076,
                            "src": "11499:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11499:43:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1000,
                        "nodeType": "ExpressionStatement",
                        "src": "11499:43:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 987,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "11451:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 988,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "11455:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11472:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11455:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11451:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1002,
                  "initializationExpression": {
                    "assignments": [
                      984
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "11444:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 1002,
                        "src": "11436:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11436:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 986,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11448:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11436:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11480:3:24",
                      "subExpression": {
                        "id": 991,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "11480:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 993,
                    "nodeType": "ExpressionStatement",
                    "src": "11480:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "11431:122:24"
                },
                {
                  "body": {
                    "id": 1033,
                    "nodeType": "Block",
                    "src": "11651:159:24",
                    "statements": [
                      {
                        "assignments": [
                          1015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1015,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "11673:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 1033,
                            "src": "11665:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1014,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11665:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1025,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1020,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1016,
                                        "name": "_workerCapacities",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 924,
                                        "src": "11684:17:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1018,
                                      "indexExpression": {
                                        "id": 1017,
                                        "name": "w",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1004,
                                        "src": "11702:1:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11684:20:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1019,
                                      "name": "workerRewardTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 968,
                                      "src": "11707:17:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11684:40:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1021,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11683:42:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1022,
                                "name": "_totalCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "11744:14:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11683:75:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1024,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11682:77:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11665:94:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1027,
                                "name": "_workers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "11779:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1029,
                              "indexExpression": {
                                "id": 1028,
                                "name": "w",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "11788:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11779:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1030,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "11792:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1026,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3076,
                            "src": "11773:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11773:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1032,
                        "nodeType": "ExpressionStatement",
                        "src": "11773:26:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1007,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1004,
                      "src": "11625:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1008,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "11629:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11638:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11629:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11625:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1034,
                  "initializationExpression": {
                    "assignments": [
                      1004
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "w",
                        "nameLocation": "11618:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "11610:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11610:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1006,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11622:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11610:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11646:3:24",
                      "subExpression": {
                        "id": 1011,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "11646:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1013,
                    "nodeType": "ExpressionStatement",
                    "src": "11646:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "11605:205:24"
                },
                {
                  "expression": {
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11820:22:24",
                    "subExpression": {
                      "id": 1035,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "11820:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "11820:22:24"
                }
              ]
            },
            "documentation": {
              "id": 918,
              "nodeType": "StructuredDocumentation",
              "src": "10493:166:24",
              "text": " @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n Updates the emission rate and halving accordingly"
            },
            "functionSelector": "a3273d22",
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 932,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 931,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "10853:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 295,
                  "src": "10853:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "10853:21:24"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "10673:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "10710:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "10693:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 919,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10693:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 920,
                    "nodeType": "ArrayTypeName",
                    "src": "10693:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "_workerCapacities",
                  "nameLocation": "10745:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "10728:34:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 922,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10728:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 923,
                    "nodeType": "ArrayTypeName",
                    "src": "10728:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 926,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "10780:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "10772:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10772:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "10821:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "10804:33:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 927,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10804:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 928,
                    "nodeType": "ArrayTypeName",
                    "src": "10804:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10683:160:24"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10875:0:24"
            },
            "scope": 1198,
            "src": "10664:1185:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1079,
              "nodeType": "Block",
              "src": "12022:273:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1048,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "12040:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1049,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "12048:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12040:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206a6f62204944",
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12060:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        },
                        "value": "Invalid job ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b035299d69208284d5fd5e836e4865a83c02bbc5d969c51f4bf728c405ee42bc",
                          "typeString": "literal_string \"Invalid job ID\""
                        }
                      ],
                      "id": 1047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12032:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12032:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1053,
                  "nodeType": "ExpressionStatement",
                  "src": "12032:45:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1054,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "12091:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 1056,
                        "indexExpression": {
                          "id": 1055,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "12096:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12091:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$236_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12103:2:24",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 222,
                      "src": "12091:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1058,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "12109:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12091:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1077,
                    "nodeType": "Block",
                    "src": "12240:49:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4a6f62206e6f7420666f756e6421",
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12261:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              },
                              "value": "Job not found!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_38bb64a5f02feedb77262be08e01fd5cb97d6259e74cc25d9f0e57785b8ca84b",
                                "typeString": "literal_string \"Job not found!\""
                              }
                            ],
                            "id": 1073,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "12254:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12254:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1076,
                        "nodeType": "ExpressionStatement",
                        "src": "12254:24:24"
                      }
                    ]
                  },
                  "id": 1078,
                  "nodeType": "IfStatement",
                  "src": "12087:202:24",
                  "trueBody": {
                    "id": 1072,
                    "nodeType": "Block",
                    "src": "12116:118:24",
                    "statements": [
                      {
                        "assignments": [
                          1064
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1064,
                            "mutability": "mutable",
                            "name": "jobValidators",
                            "nameLocation": "12147:13:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 1072,
                            "src": "12130:30:24",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1062,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12130:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1063,
                              "nodeType": "ArrayTypeName",
                              "src": "12130:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1069,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1065,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "12163:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$236_storage_$",
                                "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                              }
                            },
                            "id": 1067,
                            "indexExpression": {
                              "id": 1066,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "12168:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12163:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$236_storage",
                              "typeString": "struct SmartnodesCore.Job storage ref"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12175:14:24",
                          "memberName": "seedValidators",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 227,
                          "src": "12163:26:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12130:59:24"
                      },
                      {
                        "expression": {
                          "id": 1070,
                          "name": "jobValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1064,
                          "src": "12210:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 1046,
                        "id": 1071,
                        "nodeType": "Return",
                        "src": "12203:20:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6817dd5b",
            "id": 1080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "11935:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "11969:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "11961:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11961:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11951:29:24"
            },
            "returnParameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "12004:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1043,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12004:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1044,
                    "nodeType": "ArrayTypeName",
                    "src": "12004:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12003:18:24"
            },
            "scope": 1198,
            "src": "11926:369:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "12401:313:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1090,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "12419:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1091,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "12434:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12419:33:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12454:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 1089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12411:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12411:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "12411:57:24"
                },
                {
                  "assignments": [
                    1098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1098,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "12496:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "12478:28:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 1097,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1096,
                          "name": "Validator",
                          "nameLocations": [
                            "12478:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 220,
                          "src": "12478:9:24"
                        },
                        "referencedDeclaration": 220,
                        "src": "12478:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1102,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1099,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "12509:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 1101,
                    "indexExpression": {
                      "id": 1100,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1082,
                      "src": "12520:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12509:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$220_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12478:55:24"
                },
                {
                  "assignments": [
                    1104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1104,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "12548:8:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "12543:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1103,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12543:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1110,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1107,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "12617:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                            "typeString": "struct SmartnodesCore.Validator storage pointer"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12628:16:24",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 211,
                        "src": "12617:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1105,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "12559:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12586:17:24",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2473,
                      "src": "12559:44:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12559:95:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12543:111:24"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1111,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "12672:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1112,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "12682:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$220_storage_ptr",
                            "typeString": "struct SmartnodesCore.Validator storage pointer"
                          }
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12693:13:24",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 213,
                        "src": "12682:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 1114,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12671:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 1088,
                  "id": 1115,
                  "nodeType": "Return",
                  "src": "12664:43:24"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "12310:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "12344:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12336:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12336:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12326:36:24"
            },
            "returnParameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12386:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12386:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "12392:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12392:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12385:15:24"
            },
            "scope": 1198,
            "src": "12301:413:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1126,
              "nodeType": "Block",
              "src": "12776:41:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1122,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "12793:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12809:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12793:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1121,
                  "id": 1125,
                  "nodeType": "Return",
                  "src": "12786:24:24"
                }
              ]
            },
            "functionSelector": "b5cb15f7",
            "id": 1127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCount",
            "nameLocation": "12729:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12741:2:24"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "12767:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12767:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12766:9:24"
            },
            "scope": 1198,
            "src": "12720:97:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "12884:46:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1132,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "12901:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12922:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12901:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1131,
                  "id": 1135,
                  "nodeType": "Return",
                  "src": "12894:29:24"
                }
              ]
            },
            "functionSelector": "7071688a",
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorCount",
            "nameLocation": "12832:17:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12849:2:24"
            },
            "returnParameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "12875:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12875:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12874:9:24"
            },
            "scope": 1198,
            "src": "12823:107:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "13003:69:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1142,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13020:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13047:16:24",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "13020:43:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13020:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1145,
                  "nodeType": "Return",
                  "src": "13013:52:24"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 1147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "12945:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12968:2:24"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "12994:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12994:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12993:9:24"
            },
            "scope": 1198,
            "src": "12936:136:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "13137:36:24",
              "statements": [
                {
                  "expression": {
                    "id": 1152,
                    "name": "emissionRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 248,
                    "src": "13154:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1151,
                  "id": 1153,
                  "nodeType": "Return",
                  "src": "13147:19:24"
                }
              ]
            },
            "functionSelector": "c0a77da9",
            "id": 1155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissionRate",
            "nameLocation": "13087:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13102:2:24"
            },
            "returnParameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "13128:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13128:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13127:9:24"
            },
            "scope": 1198,
            "src": "13078:95:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "13232:42:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1160,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "13249:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartnodesCore_$1198",
                          "typeString": "contract SmartnodesCore"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13254:11:24",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2756,
                      "src": "13249:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13249:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1159,
                  "id": 1163,
                  "nodeType": "Return",
                  "src": "13242:25:24"
                }
              ]
            },
            "functionSelector": "6c9c2faf",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "13188:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13197:2:24"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "13223:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13223:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13222:9:24"
            },
            "scope": 1198,
            "src": "13179:95:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1185,
              "nodeType": "Block",
              "src": "13350:119:24",
              "statements": [
                {
                  "assignments": [
                    1173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1173,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "13368:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1185,
                      "src": "13360:11:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13360:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1177,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1174,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "13374:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1176,
                    "indexExpression": {
                      "id": 1175,
                      "name": "validatorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1167,
                      "src": "13395:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13374:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13360:49:24"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1178,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "13426:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$220_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 1180,
                        "indexExpression": {
                          "id": 1179,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1173,
                          "src": "13437:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13426:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$220_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13442:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "13426:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1182,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "13452:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13426:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1171,
                  "id": 1184,
                  "nodeType": "Return",
                  "src": "13419:43:24"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 1186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "13289:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "validatorAddr",
                  "nameLocation": "13306:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1186,
                  "src": "13298:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13298:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13297:23:24"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1186,
                  "src": "13344:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13344:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13343:6:24"
            },
            "scope": 1198,
            "src": "13280:189:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1196,
              "nodeType": "Block",
              "src": "13540:74:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1192,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13557:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2520",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13584:21:24",
                      "memberName": "getSelectedValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2484,
                      "src": "13557:48:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13557:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1191,
                  "id": 1195,
                  "nodeType": "Return",
                  "src": "13550:57:24"
                }
              ]
            },
            "functionSelector": "4966d086",
            "id": 1197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposees",
            "nameLocation": "13484:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13496:2:24"
            },
            "returnParameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "13522:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1188,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13522:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1189,
                    "nodeType": "ArrayTypeName",
                    "src": "13522:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13521:18:24"
            },
            "scope": 1198,
            "src": "13475:139:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1199,
        "src": "271:13345:24",
        "usedErrors": [],
        "usedEvents": [
          165,
          171,
          177,
          186,
          192,
          198,
          4398,
          4407
        ]
      }
    ],
    "src": "32:13585:24"
  },
  "bytecode": "",
  "bytecodeSha1": "d389d83366eec1ed1342f3055c2bb1c6381c43bf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "150": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "148": [
            2369,
            2382,
            true
          ],
          "149": [
            2369,
            2417,
            true
          ]
        }
      },
      "2": {
        "ERC20Upgradeable._approve": {
          "140": [
            10591,
            10610,
            true
          ],
          "141": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "147": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "142": [
            11303,
            11340,
            false
          ],
          "143": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "144": [
            7951,
            7969,
            true
          ],
          "145": [
            8029,
            8045,
            true
          ],
          "146": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "139": [
            7152,
            7187,
            true
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "136": [
            8251,
            8261,
            true
          ],
          "137": [
            8317,
            8344,
            true
          ],
          "138": [
            8449,
            8465,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "135": [
            7602,
            7650,
            true
          ]
        },
        "SmartnodesCore.createUser": {
          "132": [
            4844,
            4876,
            true
          ]
        },
        "SmartnodesCore.createValidator": {
          "117": [
            5437,
            5474,
            true
          ],
          "118": [
            5557,
            5593,
            false
          ],
          "119": [
            5597,
            5622,
            true
          ]
        },
        "SmartnodesCore.getJobValidators": {
          "120": [
            12040,
            12058,
            true
          ],
          "121": [
            12091,
            12114,
            false
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "133": [
            12419,
            12452,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "129": [
            10906,
            10948,
            true
          ],
          "130": [
            11012,
            11043,
            false
          ],
          "131": [
            11063,
            11082,
            false
          ]
        },
        "SmartnodesCore.requestJob": {
          "127": [
            6417,
            6425,
            true
          ],
          "128": [
            6468,
            6486,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "134": [
            4392,
            4430,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "122": [
            9177,
            9192,
            true
          ],
          "123": [
            9307,
            9333,
            true
          ],
          "124": [
            9386,
            9396,
            true
          ],
          "125": [
            9520,
            9545,
            false
          ],
          "126": [
            10140,
            10179,
            true
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "15": [
            3101,
            3153
          ]
        }
      },
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "103": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "115": [
            2381,
            2394
          ],
          "116": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "90": [
            10583,
            10651
          ],
          "91": [
            10661,
            10729
          ],
          "92": [
            10740,
            10776
          ],
          "93": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "104": [
            8827,
            8892
          ],
          "105": [
            8963,
            8985
          ],
          "106": [
            8995,
            9023
          ],
          "107": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "94": [
            11356,
            11424
          ],
          "95": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "96": [
            7943,
            8011
          ],
          "97": [
            8021,
            8085
          ],
          "98": [
            8192,
            8264
          ],
          "99": [
            8298,
            8336
          ],
          "100": [
            8356,
            8379
          ],
          "101": [
            8390,
            8421
          ],
          "102": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "5": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "8": [
            4907,
            4939
          ],
          "9": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "70": [
            7144,
            7229
          ],
          "71": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "14": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "6": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "62": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "72": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "10": [
            5712,
            5750
          ],
          "11": [
            5760,
            5787
          ],
          "12": [
            5797,
            5808
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "108": [
            8243,
            8299
          ],
          "109": [
            8309,
            8370
          ],
          "110": [
            8441,
            8495
          ],
          "111": [
            8506,
            8549
          ],
          "112": [
            8559,
            8599
          ],
          "113": [
            8672,
            8811
          ],
          "114": [
            8822,
            8855
          ]
        },
        "SmartnodesCore.completeJob": {
          "85": [
            7594,
            7651
          ],
          "86": [
            7662,
            7692
          ],
          "87": [
            7702,
            7730
          ],
          "88": [
            7787,
            7828
          ],
          "89": [
            7839,
            7868
          ]
        },
        "SmartnodesCore.createUser": {
          "73": [
            4836,
            4905
          ],
          "74": [
            4916,
            5094
          ],
          "75": [
            5105,
            5148
          ],
          "76": [
            5158,
            5173
          ]
        },
        "SmartnodesCore.createValidator": {
          "32": [
            5416,
            5525
          ],
          "33": [
            5536,
            5675
          ],
          "34": [
            5732,
            5994
          ],
          "35": [
            6005,
            6058
          ],
          "36": [
            6103,
            6138
          ],
          "37": [
            6149,
            6169
          ]
        },
        "SmartnodesCore.disputeJob": {
          "83": [
            7996,
            8016
          ],
          "84": [
            8026,
            8066
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "13": [
            13013,
            13065
          ]
        },
        "SmartnodesCore.getEmissionRate": {
          "4": [
            13147,
            13166
          ]
        },
        "SmartnodesCore.getJobValidators": {
          "38": [
            12032,
            12077
          ],
          "39": [
            12254,
            12278
          ]
        },
        "SmartnodesCore.getProposees": {
          "31": [
            13550,
            13607
          ]
        },
        "SmartnodesCore.getSupply": {
          "40": [
            13242,
            13267
          ]
        },
        "SmartnodesCore.getUserCount": {
          "77": [
            12786,
            12810
          ]
        },
        "SmartnodesCore.getValidatorCount": {
          "42": [
            12894,
            12923
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "78": [
            12411,
            12468
          ],
          "79": [
            12664,
            12707
          ]
        },
        "SmartnodesCore.initialize": {
          "16": [
            3244,
            3277
          ],
          "17": [
            3361,
            3378
          ],
          "18": [
            3388,
            3402
          ],
          "19": [
            3412,
            3434
          ],
          "20": [
            3483,
            3505
          ],
          "21": [
            3566,
            3588
          ],
          "22": [
            3642,
            3656
          ],
          "23": [
            3666,
            3686
          ],
          "24": [
            3709,
            3733
          ],
          "25": [
            3878,
            3907
          ],
          "26": [
            4076,
            4138
          ],
          "27": [
            4057,
            4060
          ],
          "28": [
            4159,
            4200
          ],
          "29": [
            4239,
            4256
          ],
          "30": [
            4266,
            4283
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            13419,
            13462
          ]
        },
        "SmartnodesCore.lockTokens": {
          "41": [
            9004,
            9035
          ]
        },
        "SmartnodesCore.mintTokens": {
          "63": [
            10885,
            10997
          ],
          "64": [
            11102,
            11119
          ],
          "65": [
            11499,
            11542
          ],
          "66": [
            11480,
            11483
          ],
          "67": [
            11773,
            11799
          ],
          "68": [
            11646,
            11649
          ],
          "69": [
            11820,
            11842
          ]
        },
        "SmartnodesCore.requestJob": {
          "53": [
            6409,
            6450
          ],
          "54": [
            6460,
            6521
          ],
          "55": [
            6531,
            6643
          ],
          "56": [
            6916,
            6975
          ],
          "57": [
            6897,
            6900
          ],
          "58": [
            7041,
            7301
          ],
          "59": [
            7312,
            7375
          ],
          "60": [
            7385,
            7397
          ],
          "61": [
            7408,
            7428
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "80": [
            4371,
            4486
          ],
          "81": [
            4496,
            4562
          ],
          "82": [
            4572,
            4615
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "43": [
            9169,
            9224
          ],
          "44": [
            9299,
            9368
          ],
          "45": [
            9378,
            9434
          ],
          "46": [
            9561,
            9614
          ],
          "47": [
            9751,
            9910
          ],
          "48": [
            9925,
            9979
          ],
          "49": [
            10115,
            10237
          ],
          "50": [
            10252,
            10278
          ],
          "51": [
            10292,
            10317
          ],
          "52": [
            10379,
            10418
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "7": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "271:13345:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:28:24;;;;;;;;;713:25:30;;;701:2;686:18;680:28:24;567:177:30;4770:197:2;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:30;;1363:22;1345:41;;1333:2;1318:18;4770:197:2;1205:187:30;2640:35:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2640:35:24;;;;;;;;;;1778:25:30;;;-1:-1:-1;;;;;1839:32:30;;;1834:2;1819:18;;1812:60;1915:14;1908:22;1888:18;;;1881:50;1766:2;1751:18;2640:35:24;1582:355:30;3581:106:2;3668:12;;3581:106;;2412:35:24;;;;;;5529:286:2;;;;;;:::i;:::-;;:::i;2762:55:24:-;;;;;;:::i;:::-;;;;;;;;;;;;;;544:28;;;;;;3430:91:2;;;3512:2;2797:36:30;;2785:2;2770:18;3430:91:2;2655:184:30;2039:50:24;;2076:13;2039:50;;2587:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2587:47:24;;;;;;;;;;;;;;;;3127:25:30;;;-1:-1:-1;;;;;3188:32:30;;;3183:2;3168:18;;3161:60;3237:18;;;3230:34;;;;3295:2;3280:18;;3273:34;3338:3;3323:19;;3316:35;3400:4;3388:17;3208:3;3367:19;;3360:46;3114:3;3099:19;2587:47:24;2844:568:30;2544:37:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:37:24;;;;;;;;;;;;3644:25:30;;;-1:-1:-1;;;;;3705:32:30;;;3700:2;3685:18;;3678:60;3754:18;;;3747:34;3829:4;3817:17;3812:2;3797:18;;3790:45;3631:3;3616:19;2544:37:24;3417:424:30;12936:136:24;;;:::i;6210:236:2:-;;;;;;:::i;:::-;;:::i;3113:1177:24:-;;;;;;:::i;:::-;;:::i;:::-;;13475:139;;;:::i;:::-;;;;;;;:::i;5305:871::-;;;;;;:::i;:::-;;:::i;13280:189::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13374:35:24;13344:4;13374:35;;;:20;:35;;;;;;;;;13452:10;;13426:15;;;:10;:15;;;;;;:22;;;:36;;;13280:189;2706:50;;;;;;:::i;:::-;;;;;;;;;;;;;;578:25;;;;;;11926:369;;;;;;:::i;:::-;;:::i;13179:95::-;;;:::i;8949:93::-;;;;;;:::i;:::-;;:::i;12823:107::-;;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;9048:1439:24;;;;;;:::i;:::-;;:::i;6232:1203::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;505:33::-;;;;;;2704:102:2;;;:::i;2231:37:24:-;;;;;;10664:1185;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4717:463:24:-;;;;;;:::i;:::-;;:::i;2453:35::-;;;;;;12720:97;;;:::i;12301:413::-;;;;;;:::i;:::-;;:::i;:::-;;;;9744:14:30;;9737:22;9719:41;;9791:2;9776:18;;9769:34;;;;9692:18;12301:413:24;9551:258:30;2823:52:24;;;;;;:::i;:::-;;;;;;;;;;;;;;13078:95;13154:12;;13078:95;;646:28;;;;;;2138:29;;;;;;4296:326;;;;;;:::i;:::-;;:::i;609:31::-;;;;;;2325:37;;;;;;7881:192;;;;;;:::i;:::-;;:::i;4313:149:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;7441:434:24;;;;;;:::i;:::-;;:::i;416:39::-;;;;;-1:-1:-1;;;;;416:39:24;;;;;;-1:-1:-1;;;;;10792:32:30;;;10774:51;;10762:2;10747:18;416:39:24;10628:203:30;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;12936:136:24:-;13020:26;;:45;;;-1:-1:-1;;;13020:45:24;;;;12994:7;;-1:-1:-1;;;;;13020:26:24;;:43;;:45;;;;;;;;;;;;;;:26;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13013:52;;12936:136;:::o;6210:236:2:-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;3113:1177:24:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;11874:2:30;2361:107:1;;;11856:21:30;11913:2;11893:18;;;11886:30;11952:34;11932:18;;;11925:62;-1:-1:-1;;;12003:18:30;;;11996:44;12057:19;;2361:107:1;;;;;;;;;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;3244:33:24::1;;;;;;;;;;;;;;-1:-1:-1::0;;;3244:33:24::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;3244:33:24::1;;::::0;:12:::1;:33::i;:::-;3377:1;3361:13;:17:::0;;;3388:10:::1;:14:::0;;;3412:18:::1;:22:::0;3498:7:::1;3483:12;:22:::0;3579:9:::1;3566:10;:22:::0;3652:4:::1;3642:7;:14:::0;3681:5:::1;3666:12;:20:::0;-1:-1:-1;3709:20:24::1;:24:::0;3765:12:::1;3814;3856;3878:29;3856:12:::0;3814;3878:29:::1;:::i;:::-;;;4017:6;4012:137;4033:15;:22;4029:1;:26;4012:137;;;4076:62;4082:15;4098:1;4082:18;;;;;;;;:::i;:::-;;;;;;;4115:15;:22;4102:10;:35;;;;:::i;:::-;4076:5;:62::i;:::-;4057:3;;4012:137;;;;4159:41;4165:16;4183;4159:5;:41::i;:::-;-1:-1:-1::0;;4255:1:24::1;4239:13;:17:::0;-1:-1:-1;4282:1:24::1;4266:13;:17:::0;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;3113:1177:24;;:::o;13475:139::-;13557:26;;:50;;;-1:-1:-1;;;13557:50:24;;;;13522:16;;-1:-1:-1;;;;;13557:26:24;;:48;;:50;;;;;:26;;:50;;;;;;;:26;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13557:50:24;;;;;;;;;;;;:::i;5305:871::-;5458:10;5437:32;;;;:20;:32;;;;;;:37;5416:109;;;;-1:-1:-1;;;5416:109:24;;13604:2:30;5416:109:24;;;13586:21:30;13643:2;13623:18;;;13616:30;13682:27;13662:18;;;13655:55;13727:18;;5416:109:24;13402:349:30;5416:109:24;5567:10;3819:7:2;3845:18;;;:9;:18;;;;;;5582:11:24;-1:-1:-1;5557:36:24;:65;;;;;5612:10;;5597:11;:25;;5557:65;5536:139;;;;-1:-1:-1;;;5536:139:24;;13958:2:30;5536:139:24;;;13940:21:30;13997:2;13977:18;;;13970:30;14036:29;14016:18;;;14009:57;14083:18;;5536:139:24;13756:351:30;5536:139:24;5765:229;;;;;;;;5793:18;;;5765:229;;;5843:10;5765:229;;;;;;;;;;;;;5918:10;;;5765:229;;;;;;-1:-1:-1;5765:229:24;;;;;;5981:2;5765:229;;;;;;5732:30;;;:10;:30;;;;;:262;;;;;;;;;;;-1:-1:-1;;;;;;5732:262:24;-1:-1:-1;;;;;5732:262:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5732:262:24;5765:229;5732:262;;;;;;;;;;6040:18;;6005:32;;;:20;:32;;;;;;:53;6127:10;6103:35;;5843:10;6103:11;:35::i;:::-;6149:18;:20;;;:18;:20;;;:::i;:::-;;;;;;5305:871;;:::o;11926:369::-;12004:16;12048:10;;12040:5;:18;12032:45;;;;-1:-1:-1;;;12032:45:24;;14454:2:30;12032:45:24;;;14436:21:30;14493:2;14473:18;;;14466:30;-1:-1:-1;;;14512:18:30;;;14505:44;14566:18;;12032:45:24;14252:338:30;12032:45:24;12091:11;;;;:4;:11;;;;;:14;:23;;;12087:202;;12130:30;12163:11;;;:4;:11;;;;;;;;:26;;12130:59;;;;;;;;;;;;;;;;;;;12163:26;;12130:59;;;12163:26;12130:59;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12130:59:24;;;;;;;;;;;;;;;;-1:-1:-1;12130:59:24;;11926:369;-1:-1:-1;;;;;;;11926:369:24:o;12087:202::-;12254:24;;-1:-1:-1;;;12254:24:24;;14797:2:30;12254:24:24;;;14779:21:30;14836:2;14816:18;;;14809:30;-1:-1:-1;;;14855:18:30;;;14848:44;14909:18;;12254:24:24;14595:338:30;13179:95:24;13223:7;13249:4;-1:-1:-1;;;;;13249:16:24;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8949:93;9004:31;9016:10;9028:6;9004:11;:31::i;:::-;8949:93;:::o;12823:107::-;12875:7;12922:1;12901:18;;:22;;;;:::i;9048:1439::-;9148:10;9105:19;9127:32;;;:20;:32;;;;;;9177:15;9169:55;;;;-1:-1:-1;;;9169:55:24;;15273:2:30;9169:55:24;;;15255:21:30;15312:2;15292:18;;;15285:30;15351:29;15331:18;;;15324:57;15398:18;;9169:55:24;15071:351:30;9169:55:24;9235:27;9265:23;;;:10;:23;;;;;9317:16;;;;9307:26;;;9299:69;;;;-1:-1:-1;;;9299:69:24;;15629:2:30;9299:69:24;;;15611:21:30;15668:2;15648:18;;;15641:30;15707:32;15687:18;;;15680:60;15757:18;;9299:69:24;15427:354:30;9299:69:24;9395:1;9386:6;:10;9378:56;;;;-1:-1:-1;;;9378:56:24;;;;;;;:::i;:::-;9520:9;:20;;;9544:1;9520:25;9516:965;;9602:12;;9584:30;;:15;:30;:::i;:::-;9561:20;;;:53;9712:16;;;;9690:19;;9712:25;;9731:6;;9712:25;:::i;:::-;9751:26;;9886:10;;9751:159;;-1:-1:-1;;;9751:159:24;;9814:10;9751:159;;;16384:51:30;16451:18;;;16444:34;;;9871:25:24;;;;16494:18:30;;;16487:50;9690:47:24;;-1:-1:-1;;;;;;9751:26:24;;:45;;16357:18:30;;9751:159:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;9958:20:24;;;;9930:49;;713:25:30;;;9946:10:24;;9930:49;;701:2:30;686:18;9930:49:24;;;;;;;;9547:470;2080:637:1;3113:1177:24;;:::o;9516:965::-;10159:9;:20;;;10140:15;:39;;10115:122;;;;-1:-1:-1;;;10115:122:24;;16750:2:30;10115:122:24;;;16732:21:30;16789:2;16769:18;;;16762:30;16828:26;16808:18;;;16801:54;16872:18;;10115:122:24;16548:348:30;10115:122:24;10272:6;10252:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;10292:25:24;;-1:-1:-1;10298:10:24;10310:6;10292:5;:25::i;:::-;10384:34;;713:25:30;;;10399:10:24;;10384:34;;701:2:30;686:18;10384:34:24;;;;;;;9095:1392;;9048:1439;:::o;6232:1203::-;6387:10;6357:11;6371:27;;;:15;:27;;;;;;6316:29;;6417:8;;;6409:41;;;;-1:-1:-1;;;6409:41:24;;17103:2:30;6409:41:24;;;17085:21:30;17142:2;17122:18;;;17115:30;-1:-1:-1;;;17161:18:30;;;17154:50;17221:18;;6409:41:24;16901:344:30;6409:41:24;6485:1;6468:11;;6480:1;6468:14;;;;;;;:::i;:::-;;;;;;;:18;6460:61;;;;-1:-1:-1;;;6460:61:24;;17452:2:30;6460:61:24;;;17434:21:30;17491:2;17471:18;;;17464:30;17530:32;17510:18;;;17503:60;17580:18;;6460:61:24;17250:354:30;6460:61:24;6552:24;;-1:-1:-1;;;;;6552:24:24;6531:112;;;;-1:-1:-1;;;6531:112:24;;17811:2:30;6531:112:24;;;17793:21:30;17850:2;17830:18;;;17823:30;17889:29;17869:18;;;17862:57;17936:18;;6531:112:24;17609:351:30;6531:112:24;6689:26;;:69;;;-1:-1:-1;;;6689:69:24;;;;6654:32;;-1:-1:-1;;;;;6689:26:24;;:67;;:69;;;;;6654:32;;6689:69;;;;;;;:26;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6689:69:24;;;;;;;;;;;;:::i;:::-;6654:104;;6768:30;6815:15;:22;6801:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6801:37:24;;6768:70;;6854:9;6849:137;6873:15;:22;6869:1;:26;6849:137;;;6935:20;:40;6956:15;6972:1;6956:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6935:40:24;-1:-1:-1;;;;;6935:40:24;;;;;;;;;;;;;6916:13;6930:1;6916:16;;;;;;;;:::i;:::-;;;;;;;;;;:59;6897:3;;6849:137;;;-1:-1:-1;7060:241:24;;;;;;;;7082:10;;7060:241;;7114:10;7060:241;;;;;;;;;;;;;7206:11;7192:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7192:33:24;;7060:241;;;;7251:11;;7060:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7060:241:24;;;-1:-1:-1;;7286:4:24;7060:241;;;;;;;7046:10;;7041:16;;:4;:16;;;;;;;:260;;;;;;;;;;;;;-1:-1:-1;;;;;;7041:260:24;-1:-1:-1;;;;;7041:260:24;;;;;;;;;;;;;;;;:16;;:260;;;;;;-1:-1:-1;7041:260:24;;;;:::i;:::-;-1:-1:-1;7041:260:24;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7041:260:24;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7041:260:24;;;;;;;;;;;;-1:-1:-1;;7041:260:24;;;;;;;;;;7330:10;;7317:58;;;;;;7342:15;;7359;;7317:58;:::i;:::-;;;;;;;;7385:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;7415:13:24;;6232:1203;-1:-1:-1;;;;;;6232:1203:24:o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;10664:1185:24:-;3001:24;;-1:-1:-1;;;;;3001:24:24;2987:10;:38;2966:123;;;;-1:-1:-1;;;2966:123:24;;;;;;;:::i;:::-;2076:13:::1;10922:12;;10906:13;3668:12:2::0;;;3581:106;10906:13:24::1;:28;;;;:::i;:::-;:42;;10885:112;;;::::0;-1:-1:-1;;;10885:112:24;;18911:2:30;10885:112:24::1;::::0;::::1;18893:21:30::0;18950:2;18930:18;;;18923:30;18989:25;18969:18;;;18962:53;19032:18;;10885:112:24::1;18709:347:30::0;10885:112:24::1;11036:7;;11012:20;;:31;11008:136;;11078:4;11063:12;;:19;11059:75;;;11118:1;11102:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11059:75:24::1;11154:28;11207:3;11186:12;;11201:2;11186:17;;;;:::i;:::-;11185:25;;;;:::i;:::-;11154:56;;11220:25;11270:3;11249:12;;11264:2;11249:17;;;;:::i;:::-;11248:25;;;;:::i;:::-;11220:53;;11337:23;11398:16;:23;11363:20;:58;;;;:::i;:::-;11337:84;;11436:9;11431:122;11455:16;:23;11451:1;:27;11431:122;;;11499:43;11505:16;11522:1;11505:19;;;;;;;;:::i;:::-;;;;;;;11526:15;11499:5;:43::i;:::-;11480:3;;11431:122;;;;11610:9;11605:205;11629:8;:15;11625:1;:19;11605:205;;;11665:14;11744;11707:17;11684;11702:1;11684:20;;;;;;;;:::i;:::-;;;;;;;:40;;;;:::i;:::-;11683:75;;;;:::i;:::-;11665:94;;11773:26;11779:8;11788:1;11779:11;;;;;;;;:::i;:::-;;;;;;;11792:6;11773:5;:26::i;:::-;-1:-1:-1::0;11646:3:24::1;;11605:205;;;-1:-1:-1::0;11820:20:24::1;:22:::0;;;:20:::1;:22;::::0;::::1;:::i;:::-;;;;;;10875:974;;;10664:1185:::0;;;;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;19436:2:30;7144:85:2;;;19418:21:30;19475:2;19455:18;;;19448:30;19514:34;19494:18;;;19487:62;-1:-1:-1;;;19565:18:30;;;19558:35;19610:19;;7144:85:2;19234:401:30;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;4717:463:24:-;4860:10;4844:27;;;;:15;:27;;;;;;:32;4836:69;;;;-1:-1:-1;;;4836:69:24;;19842:2:30;4836:69:24;;;19824:21:30;19881:2;19861:18;;;19854:30;19920:26;19900:18;;;19893:54;19964:18;;4836:69:24;19640:348:30;4836:69:24;4939:155;;;;;;;;4962:13;;;4939:155;;;5002:10;4939:155;;;;;;;;;;;;;5081:2;4939:155;;;;;;-1:-1:-1;4916:20:24;;;:5;:20;;;;;:178;;;;;;;;;;;-1:-1:-1;;;;;;4916:178:24;-1:-1:-1;;;;;4916:178:24;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4916:178:24;4939:155;4916:178;;;;;;;;;;5135:13;;5105:27;;;:15;:27;;;;;;:43;;;5135:13;;5158:15;5135:13;5158:15;:::i;:::-;;;;;;4717:463;:::o;12720:97::-;12767:7;12809:1;12793:13;;:17;;;;:::i;12301:413::-;12386:4;12392:7;12434:18;;12419:12;:33;12411:57;;;;-1:-1:-1;;;12411:57:24;;20195:2:30;12411:57:24;;;20177:21:30;20234:2;20214:18;;;20207:30;-1:-1:-1;;;20253:18:30;;;20246:41;20304:18;;12411:57:24;19993:335:30;12411:57:24;12478:28;12509:24;;;:10;:24;;;;;;12559:26;;;12617:27;;;12559:95;;-1:-1:-1;;;12559:95:24;;-1:-1:-1;;;;;12617:27:24;;;12559:95;;;10774:51:30;12509:24:24;;12478:28;12559:26;;:44;;10747:18:30;;12559:95:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12682:24;;;;;12543:111;;12682:24;;-1:-1:-1;12301:413:24;;-1:-1:-1;;;12301:413:24:o;4296:326::-;4392:24;;-1:-1:-1;;;;;4392:24:24;:38;4371:115;;;;-1:-1:-1;;;4371:115:24;;20817:2:30;4371:115:24;;;20799:21:30;20856:2;20836:18;;;20829:30;20895:32;20875:18;;;20868:60;20945:18;;4371:115:24;20615:354:30;4371:115:24;4496:26;:66;;-1:-1:-1;;;;;4496:66:24;;;-1:-1:-1;;;;;;4496:66:24;;;;;;;;4572:24;:43;;;;;;;;4296:326::o;7881:192::-;3001:24;;-1:-1:-1;;;;;3001:24:24;2987:10;:38;2966:123;;;;-1:-1:-1;;;2966:123:24;;;;;;;:::i;:::-;7957:15:::1;7975:11:::0;;;:4:::1;:11;::::0;;;;;;;;7996:12:::1;::::0;::::1;:20:::0;;-1:-1:-1;;7996:20:24::1;::::0;;8031:35;;8050:15:::1;713:25:30::0;;7975:11:24;;8031:35:::1;::::0;686:18:30;8031:35:24::1;;;;;;;7947:126;7881:192:::0;:::o;7441:434::-;3001:24;;7566:16;;-1:-1:-1;;;;;3001:24:24;2987:10;:38;2966:123;;;;-1:-1:-1;;;2966:123:24;;;;;;;:::i;:::-;7621:11:::1;::::0;;;:4:::1;:11;::::0;;;;:22:::1;;:29:::0;7602:15;;:48:::1;7594:57;;;::::0;::::1;;7662:11;::::0;;;:4:::1;:11;::::0;;;;;;;:30;;::::1;::::0;:19:::1;::::0;;::::1;::::0;:30;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7725:5:24::1;7702:11:::0;;;:4:::1;:11;::::0;;;;;;:20:::1;;:28:::0;;-1:-1:-1;;7702:28:24::1;::::0;;7792:36;7707:5;;7792:36:::1;::::0;::::1;::::0;7812:15:::1;713:25:30::0;;701:2;686:18;;567:177;7792:36:24::1;;;;;;;;7846:11;::::0;;;:4:::1;:11;::::0;;;;;;;;:22:::1;;7839:29:::0;;;;;;::::1;::::0;;;;;;;;;;7846:22;;7839:29;::::1;7846:22:::0;7839:29;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7441:434:::0;;;;:::o;10460:370:2:-;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;21176:2:30;10583:68:2;;;21158:21:30;21215:2;21195:18;;;21188:30;21254:34;21234:18;;;21227:62;-1:-1:-1;;;21305:18:30;;;21298:34;21349:19;;10583:68:2;20974:400:30;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;21581:2:30;10661:68:2;;;21563:21:30;21620:2;21600:18;;;21593:30;21659:34;21639:18;;;21632:62;-1:-1:-1;;;21710:18:30;;;21703:32;21752:19;;10661:68:2;21379:398:30;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;713:25:30;;;10791:32:2;;686:18:30;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;21984:2:30;11356:68:2;;;21966:21:30;22023:2;22003:18;;;21996:30;22062:31;22042:18;;;22035:59;22111:18;;11356:68:2;21782:353:30;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;22342:2:30;7943:68:2;;;22324:21:30;22381:2;22361:18;;;22354:30;22420:34;22400:18;;;22393:62;-1:-1:-1;;;22471:18:30;;;22464:35;22516:19;;7943:68:2;22140:401:30;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;22748:2:30;8021:64:2;;;22730:21:30;22787:2;22767:18;;;22760:30;22826:34;22806:18;;;22799:62;-1:-1:-1;;;22877:18:30;;;22870:33;22920:19;;8021:64:2;22546:399:30;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;23152:2:30;8192:72:2;;;23134:21:30;23191:2;23171:18;;;23164:30;23230:34;23210:18;;;23203:62;-1:-1:-1;;;23281:18:30;;;23274:36;23327:19;;8192:72:2;22950:402:30;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;713:25:30;;701:2;686:18;;567:177;8395:26:2;;;;;;;;8432:37;3113:1177:24;2116:147:2;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;8752:389::-;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;23971:2:30;8827:65:2;;;23953:21:30;24010:2;23990:18;;;23983:30;24049:33;24029:18;;;24022:61;24100:18;;8827:65:2;23769:355:30;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;713:25:30;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;701:2:30;686:18;9038:37:2;;;;;;;2116:147;;:::o;8171:691:24:-;8260:1;8251:6;:10;8243:56;;;;-1:-1:-1;;;8243:56:24;;;;;;;:::i;:::-;8338:6;8317:17;8327:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8317:17:24;:27;;8309:61;;;;-1:-1:-1;;;8309:61:24;;24331:2:30;8309:61:24;;;24313:21:30;24370:2;24350:18;;;24343:30;-1:-1:-1;;;24389:18:30;;;24382:51;24450:18;;8309:61:24;24129:345:30;8309:61:24;-1:-1:-1;;;;;8403:28:24;;8381:19;8403:28;;;:20;:28;;;;;;;8449:16;;;8441:54;;;;-1:-1:-1;;;8441:54:24;;24681:2:30;8441:54:24;;;24663:21:30;24720:2;24700:18;;;24693:30;24759:27;24739:18;;;24732:55;24804:18;;8441:54:24;24479:349:30;8441:54:24;8506:43;8519:6;8535:4;8542:6;8506:12;:43::i;:::-;-1:-1:-1;8559:23:24;;;;:10;:23;;;;;:30;;:40;;8593:6;;8559:23;:40;;8593:6;;8559:40;:::i;:::-;;;;-1:-1:-1;;8609:19:24;8631:23;;;:10;:23;;;;;;;:30;;;8672:26;;8791:10;;8672:139;;-1:-1:-1;;;8672:139:24;;-1:-1:-1;;;;;16402:32:30;;;8672:139:24;;;16384:51:30;16451:18;;;16444:34;;;8776:25:24;;;;16494:18:30;;;16487:50;8631:30:24;;8672:26;;:45;;16357:18:30;;8672:139:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8840:6;-1:-1:-1;;;;;8827:28:24;;8848:6;8827:28;;;;713:25:30;;701:2;686:18;;567:177;2269:159:2;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:548:30;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:30;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:30:o;1397:180::-;1456:6;1509:2;1497:9;1488:7;1484:23;1480:32;1477:52;;;1525:1;1522;1515:12;1477:52;-1:-1:-1;1548:23:30;;1397:180;-1:-1:-1;1397:180:30:o;1942:456::-;2019:6;2027;2035;2088:2;2076:9;2067:7;2063:23;2059:32;2056:52;;;2104:1;2101;2094:12;2056:52;2143:9;2130:23;2162:31;2187:5;2162:31;:::i;:::-;2212:5;-1:-1:-1;2269:2:30;2254:18;;2241:32;2282:33;2241:32;2282:33;:::i;:::-;1942:456;;2334:7;;-1:-1:-1;;;2388:2:30;2373:18;;;;2360:32;;1942:456::o;2403:247::-;2462:6;2515:2;2503:9;2494:7;2490:23;2486:32;2483:52;;;2531:1;2528;2521:12;2483:52;2570:9;2557:23;2589:31;2614:5;2589:31;:::i;:::-;2639:5;2403:247;-1:-1:-1;;;2403:247:30:o;3846:127::-;3907:10;3902:3;3898:20;3895:1;3888:31;3938:4;3935:1;3928:15;3962:4;3959:1;3952:15;3978:275;4049:2;4043:9;4114:2;4095:13;;-1:-1:-1;;4091:27:30;4079:40;;4149:18;4134:34;;4170:22;;;4131:62;4128:88;;;4196:18;;:::i;:::-;4232:2;4225:22;3978:275;;-1:-1:-1;3978:275:30:o;4258:183::-;4318:4;4351:18;4343:6;4340:30;4337:56;;;4373:18;;:::i;:::-;-1:-1:-1;4418:1:30;4414:14;4430:4;4410:25;;4258:183::o;4446:743::-;4500:5;4553:3;4546:4;4538:6;4534:17;4530:27;4520:55;;4571:1;4568;4561:12;4520:55;4607:6;4594:20;4633:4;4657:60;4673:43;4713:2;4673:43;:::i;:::-;4657:60;:::i;:::-;4739:3;4763:2;4758:3;4751:15;4791:4;4786:3;4782:14;4775:21;;4848:4;4842:2;4839:1;4835:10;4827:6;4823:23;4819:34;4805:48;;4876:3;4868:6;4865:15;4862:35;;;4893:1;4890;4883:12;4862:35;4929:4;4921:6;4917:17;4943:217;4959:6;4954:3;4951:15;4943:217;;;5039:3;5026:17;5056:31;5081:5;5056:31;:::i;:::-;5100:18;;5138:12;;;;4976;;4943:217;;;-1:-1:-1;5178:5:30;4446:743;-1:-1:-1;;;;;;4446:743:30:o;5194:483::-;5287:6;5295;5348:2;5336:9;5327:7;5323:23;5319:32;5316:52;;;5364:1;5361;5354:12;5316:52;5404:9;5391:23;5437:18;5429:6;5426:30;5423:50;;;5469:1;5466;5459:12;5423:50;5492:61;5545:7;5536:6;5525:9;5521:22;5492:61;:::i;:::-;5482:71;;;5603:2;5592:9;5588:18;5575:32;5616:31;5641:5;5616:31;:::i;:::-;5666:5;5656:15;;;5194:483;;;;;:::o;5682:465::-;5735:3;5773:5;5767:12;5800:6;5795:3;5788:19;5826:4;5855;5850:3;5846:14;5839:21;;5894:4;5887:5;5883:16;5917:1;5927:195;5941:6;5938:1;5935:13;5927:195;;;6006:13;;-1:-1:-1;;;;;6002:39:30;5990:52;;6062:12;;;;6097:15;;;;6038:1;5956:9;5927:195;;;-1:-1:-1;6138:3:30;;5682:465;-1:-1:-1;;;;;5682:465:30:o;6152:261::-;6331:2;6320:9;6313:21;6294:4;6351:56;6403:2;6392:9;6388:18;6380:6;6351:56;:::i;6418:248::-;6486:6;6494;6547:2;6535:9;6526:7;6522:23;6518:32;6515:52;;;6563:1;6560;6553:12;6515:52;-1:-1:-1;;6586:23:30;;;6656:2;6641:18;;;6628:32;;-1:-1:-1;6418:248:30:o;6671:615::-;6757:6;6765;6818:2;6806:9;6797:7;6793:23;6789:32;6786:52;;;6834:1;6831;6824:12;6786:52;6874:9;6861:23;6903:18;6944:2;6936:6;6933:14;6930:34;;;6960:1;6957;6950:12;6930:34;6998:6;6987:9;6983:22;6973:32;;7043:7;7036:4;7032:2;7028:13;7024:27;7014:55;;7065:1;7062;7055:12;7014:55;7105:2;7092:16;7131:2;7123:6;7120:14;7117:34;;;7147:1;7144;7137:12;7117:34;7200:7;7195:2;7185:6;7182:1;7178:14;7174:2;7170:23;7166:32;7163:45;7160:65;;;7221:1;7218;7211:12;7160:65;7252:2;7244:11;;;;;7274:6;;-1:-1:-1;6671:615:30;;-1:-1:-1;;;;6671:615:30:o;7291:632::-;7462:2;7514:21;;;7584:13;;7487:18;;;7606:22;;;7433:4;;7462:2;7685:15;;;;7659:2;7644:18;;;7433:4;7728:169;7742:6;7739:1;7736:13;7728:169;;;7803:13;;7791:26;;7872:15;;;;7837:12;;;;7764:1;7757:9;7728:169;;;-1:-1:-1;7914:3:30;;7291:632;-1:-1:-1;;;;;;7291:632:30:o;7928:1433::-;8089:6;8097;8105;8113;8166:3;8154:9;8145:7;8141:23;8137:33;8134:53;;;8183:1;8180;8173:12;8134:53;8223:9;8210:23;8252:18;8293:2;8285:6;8282:14;8279:34;;;8309:1;8306;8299:12;8279:34;8332:61;8385:7;8376:6;8365:9;8361:22;8332:61;:::i;:::-;8322:71;;8412:2;8402:12;;8467:2;8456:9;8452:18;8439:32;8496:2;8486:8;8483:16;8480:36;;;8512:1;8509;8502:12;8480:36;8535:24;;8590:4;8582:13;;8578:27;-1:-1:-1;8568:55:30;;8619:1;8616;8609:12;8568:55;8655:2;8642:16;8678:60;8694:43;8734:2;8694:43;:::i;8678:60::-;8772:15;;;8854:1;8850:10;;;;8842:19;;8838:28;;;8803:12;;;;8878:19;;;8875:39;;;8910:1;8907;8900:12;8875:39;8934:11;;;;8954:142;8970:6;8965:3;8962:15;8954:142;;;9036:17;;9024:30;;8987:12;;;;9074;;;;8954:142;;;9115:5;-1:-1:-1;;;;9167:2:30;9152:18;;9139:32;;-1:-1:-1;9224:2:30;9209:18;;9196:32;;-1:-1:-1;9240:16:30;;;9237:36;;;9269:1;9266;9259:12;9237:36;;9292:63;9347:7;9336:8;9325:9;9321:24;9292:63;:::i;:::-;9282:73;;;7928:1433;;;;;;;:::o;9814:388::-;9882:6;9890;9943:2;9931:9;9922:7;9918:23;9914:32;9911:52;;;9959:1;9956;9949:12;9911:52;9998:9;9985:23;10017:31;10042:5;10017:31;:::i;:::-;10067:5;-1:-1:-1;10124:2:30;10109:18;;10096:32;10137:33;10096:32;10137:33;:::i;10207:416::-;10300:6;10308;10361:2;10349:9;10340:7;10336:23;10332:32;10329:52;;;10377:1;10374;10367:12;10329:52;10413:9;10400:23;10390:33;;10474:2;10463:9;10459:18;10446:32;10501:18;10493:6;10490:30;10487:50;;;10533:1;10530;10523:12;10487:50;10556:61;10609:7;10600:6;10589:9;10585:22;10556:61;:::i;:::-;10546:71;;;10207:416;;;;;:::o;10836:380::-;10915:1;10911:12;;;;10958;;;10979:61;;11033:4;11025:6;11021:17;11011:27;;10979:61;11086:2;11078:6;11075:14;11055:18;11052:38;11049:161;;11132:10;11127:3;11123:20;11120:1;11113:31;11167:4;11164:1;11157:15;11195:4;11192:1;11185:15;11049:161;;10836:380;;;:::o;11221:184::-;11291:6;11344:2;11332:9;11323:7;11319:23;11315:32;11312:52;;;11360:1;11357;11350:12;11312:52;-1:-1:-1;11383:16:30;;11221:184;-1:-1:-1;11221:184:30:o;11410:127::-;11471:10;11466:3;11462:20;11459:1;11452:31;11502:4;11499:1;11492:15;11526:4;11523:1;11516:15;11542:125;11607:9;;;11628:10;;;11625:36;;;11641:18;;:::i;12087:127::-;12148:10;12143:3;12139:20;12136:1;12129:31;12179:4;12176:1;12169:15;12203:4;12200:1;12193:15;12219:217;12259:1;12285;12275:132;;12329:10;12324:3;12320:20;12317:1;12310:31;12364:4;12361:1;12354:15;12392:4;12389:1;12382:15;12275:132;-1:-1:-1;12421:9:30;;12219:217::o;12441:956::-;12536:6;12567:2;12610;12598:9;12589:7;12585:23;12581:32;12578:52;;;12626:1;12623;12616:12;12578:52;12659:9;12653:16;12692:18;12684:6;12681:30;12678:50;;;12724:1;12721;12714:12;12678:50;12747:22;;12800:4;12792:13;;12788:27;-1:-1:-1;12778:55:30;;12829:1;12826;12819:12;12778:55;12858:2;12852:9;12881:60;12897:43;12937:2;12897:43;:::i;12881:60::-;12975:15;;;13057:1;13053:10;;;;13045:19;;13041:28;;;13006:12;;;;13081:19;;;13078:39;;;13113:1;13110;13103:12;13078:39;13137:11;;;;13157:210;13173:6;13168:3;13165:15;13157:210;;;13246:3;13240:10;13263:31;13288:5;13263:31;:::i;:::-;13307:18;;13190:12;;;;13345;;;;13157:210;;;13386:5;12441:956;-1:-1:-1;;;;;;;12441:956:30:o;14112:135::-;14151:3;14172:17;;;14169:43;;14192:18;;:::i;:::-;-1:-1:-1;14239:1:30;14228:13;;14112:135::o;14938:128::-;15005:9;;;15026:11;;;15023:37;;;15040:18;;:::i;15786:397::-;15988:2;15970:21;;;16027:2;16007:18;;;16000:30;16066:34;16061:2;16046:18;;16039:62;-1:-1:-1;;;16132:2:30;16117:18;;16110:31;16173:3;16158:19;;15786:397::o;17965:332::-;18172:6;18161:9;18154:25;18215:2;18210;18199:9;18195:18;18188:30;18135:4;18235:56;18287:2;18276:9;18272:18;18264:6;18235:56;:::i;:::-;18227:64;17965:332;-1:-1:-1;;;;17965:332:30:o;18302:402::-;18504:2;18486:21;;;18543:2;18523:18;;;18516:30;18582:34;18577:2;18562:18;;18555:62;-1:-1:-1;;;18648:2:30;18633:18;;18626:36;18694:3;18679:19;;18302:402::o;19061:168::-;19134:9;;;19165;;19182:15;;;19176:22;;19162:37;19152:71;;19203:18;;:::i;20333:277::-;20400:6;20453:2;20441:9;20432:7;20428:23;20424:32;20421:52;;;20469:1;20466;20459:12;20421:52;20501:9;20495:16;20554:5;20547:13;20540:21;20533:5;20530:32;20520:60;;20576:1;20573;20566:12;23357:407;23559:2;23541:21;;;23598:2;23578:18;;;23571:30;23637:34;23632:2;23617:18;;23610:62;-1:-1:-1;;;23703:2:30;23688:18;;23681:41;23754:3;23739:19;;23357:407::o;24959:543::-;25061:2;25056:3;25053:11;25050:446;;;25097:1;25121:5;25118:1;25111:16;25165:4;25162:1;25152:18;25235:2;25223:10;25219:19;25216:1;25212:27;25206:4;25202:38;25271:4;25259:10;25256:20;25253:47;;;-1:-1:-1;25294:4:30;25253:47;25349:2;25344:3;25340:12;25337:1;25333:20;25327:4;25323:31;25313:41;;25404:82;25422:2;25415:5;25412:13;25404:82;;;25467:17;;;25448:1;25437:13;25404:82;;;25408:3;;;24959:543;;;:::o;25678:1345::-;25804:3;25798:10;25831:18;25823:6;25820:30;25817:56;;;25853:18;;:::i;:::-;25882:97;25972:6;25932:38;25964:4;25958:11;25932:38;:::i;:::-;25926:4;25882:97;:::i;:::-;26034:4;;26091:2;26080:14;;26108:1;26103:663;;;;26810:1;26827:6;26824:89;;;-1:-1:-1;26879:19:30;;;26873:26;26824:89;-1:-1:-1;;25635:1:30;25631:11;;;25627:24;25623:29;25613:40;25659:1;25655:11;;;25610:57;26926:81;;26073:944;;26103:663;24906:1;24899:14;;;24943:4;24930:18;;-1:-1:-1;;26139:20:30;;;26257:236;26271:7;26268:1;26265:14;26257:236;;;26360:19;;;26354:26;26339:42;;26452:27;;;;26420:1;26408:14;;;;26287:19;;26257:236;;;26261:3;26521:6;26512:7;26509:19;26506:201;;;26582:19;;;26576:26;-1:-1:-1;;26665:1:30;26661:14;;;26677:3;26657:24;26653:37;26649:42;26634:58;26619:74;;26506:201;-1:-1:-1;;;;;26753:1:30;26737:14;;;26733:22;26720:36;;-1:-1:-1;25678:1345:30:o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(bytes32)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(bytes32,uint256)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint256)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(address[],uint256[],uint256,address[])": {
        "details": "Mint tokens for updating state rewards, distribute 40/60 among validators and workers Updates the emission rate and halving accordingly"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    271,
    13616
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7071688A GT PUSH2 0x182 JUMPI DUP1 PUSH4 0xB5CB15F7 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xCDF64A76 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD93D9BEB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD93D9BEB EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0xF3259572 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xF79621BD EQ PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xBC60BD48 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xC0A77DA9 EQ PUSH2 0x6EF JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xC8DF245A EQ PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96AFC450 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0xA3273D22 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xABF7BFD8 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xB115F50D EQ PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7071688A EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x8D12B266 EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x365B98B2 GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x4A4FBEEC GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x4B759088 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x6817DD5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x462D0B2E EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x4966D086 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x278 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x2FABA6AE EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x380 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C8 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x2388 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x2E7 PUSH11 0x115EEC47F6CF7E35000000 DUP2 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x72 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x509 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x513 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x52E CALLDATASIZE PUSH1 0x4 PUSH2 0x257A JUMP JUMPDEST PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6F SLOAD SWAP1 DUP5 MSTORE PUSH1 0x73 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x513 PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x5E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x621 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x259C JUMP JUMPDEST PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x656 CALLDATASIZE PUSH1 0x4 PUSH2 0x2655 JUMP JUMPDEST PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x68F CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x1763 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x6B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x6DD CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x77 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x717 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x509 PUSH2 0x73C CALLDATASIZE PUSH1 0x4 PUSH2 0x236F JUMP JUMPDEST PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x74F CALLDATASIZE PUSH1 0x4 PUSH2 0x273B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x621 PUSH2 0x788 CALLDATASIZE PUSH1 0x4 PUSH2 0x2769 JUMP JUMPDEST PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x7A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x7C7 SWAP1 PUSH2 0x27B0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F3 SWAP1 PUSH2 0x27B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x840 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x815 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x840 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x823 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x858 DUP2 DUP6 DUP6 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x872 DUP6 DUP3 DUP6 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x87D DUP6 DUP6 DUP6 PUSH2 0x1D27 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x27EA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x858 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x935 SWAP1 DUP8 SWAP1 PUSH2 0x2819 JUMP JUMPDEST PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x955 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x959 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA2A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x67 SSTORE PUSH9 0x6F05B59D3B20000000 PUSH1 0x6E SSTORE PUSH10 0xA968163F0A57B400000 PUSH1 0x6F SSTORE PUSH2 0x870 PUSH1 0x6D SSTORE PUSH2 0xC4E0 PUSH1 0x70 SSTORE PUSH1 0x0 PUSH1 0x71 SSTORE PUSH11 0x1EFC90B09E6EBE2800000 PUSH11 0x1A784379D99DB42000000 PUSH11 0x2E5276153CD3FB3800000 PUSH2 0xA93 DUP2 DUP4 PUSH2 0x2819 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0xAD8 JUMPI PUSH2 0xAD0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB6 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 MLOAD DUP7 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA98 JUMP JUMPDEST POP PUSH2 0xAE3 DUP6 DUP4 PUSH2 0x1F2A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6B SSTORE POP PUSH1 0x3 PUSH1 0x6C SSTORE DUP1 ISZERO PUSH2 0xB02 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFBCCA273 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFBCCA273 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8F6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2864 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xBD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206578697374732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xBF7 JUMPI POP PUSH1 0x6F SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x67 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP10 DUP2 MSTORE PUSH1 0x6F DUP1 SLOAD PUSH1 0x60 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP11 ADD DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0xA0 DUP13 ADD SWAP1 DUP2 MSTORE SWAP9 DUP3 MSTORE PUSH1 0x73 DUP8 MSTORE DUP12 DUP3 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP12 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP11 ADD SSTORE MLOAD PUSH1 0x3 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 DUP9 ADD SSTORE SWAP4 MLOAD PUSH1 0x5 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE SWAP3 SLOAD DUP2 DUP4 MSTORE PUSH1 0x76 SWAP1 SWAP4 MSTORE SWAP4 SWAP1 KECCAK256 SSTORE SLOAD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD07 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 SLOAD DUP3 LT PUSH2 0xD54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081A9BD8881251 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 SUB PUSH2 0xDDA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDCD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDAF JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4A6F62206E6F7420666F756E6421 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0xE5D CALLER DUP3 PUSH2 0x2009 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x67 SLOAD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x292A JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x1033 JUMPI PUSH1 0x70 SLOAD PUSH2 0xF69 SWAP1 TIMESTAMP PUSH2 0x2819 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF81 SWAP1 DUP6 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x6F SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6CEECB7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP4 LT ISZERO PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB6CEECB7 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x109B SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10AB SWAP1 POP CALLER DUP5 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 DUP2 SWAP1 SUB PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B9103737BA103932B3B4B9BA32B932B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1153 JUMPI PUSH2 0x1153 PUSH2 0x282C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4361706163697479206D7573742062652067726561746572207A65726F2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220636F6E7472616374206E6F7420736574210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2909069B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA4241A6C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1270 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2864 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x128E JUMPI PUSH2 0x128E PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12B7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x132A JUMPI PUSH1 0x76 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12DC JUMPI PUSH2 0x12DC PUSH2 0x282C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1317 JUMPI PUSH2 0x1317 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x12BD JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x69 SLOAD DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1363 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x138C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x69 SLOAD DUP4 MSTORE PUSH1 0x74 DUP5 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE DUP6 DUP6 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP2 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH2 0x1422 SWAP4 PUSH1 0x2 DUP7 ADD SWAP4 POP SWAP2 ADD SWAP1 PUSH2 0x222A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x143E SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x222A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x145A SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x228F JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x69 SLOAD PUSH1 0x40 MLOAD PUSH32 0x1B59636C5DEB9B679668AD7D3A3B892E3FC3B4A8EA6E10F8D31CE69C4278E8FC SWAP1 PUSH2 0x14AB SWAP1 TIMESTAMP SWAP1 DUP7 SWAP1 PUSH2 0x296B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x69 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x14C3 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x7C7 SWAP1 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x150B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH11 0x115EEC47F6CF7E35000000 PUSH1 0x6E SLOAD PUSH2 0x1523 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x152D SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST GT ISZERO PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20737570706C79207265616368656421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x71 SLOAD LT PUSH2 0x15B1 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x6E SLOAD GT ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x2 PUSH1 0x6E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15AB SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x28 PUSH2 0x15C4 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x15CE SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x3C PUSH2 0x15E3 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 MLOAD DUP4 PUSH2 0x15FE SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1637 JUMPI PUSH2 0x162F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1621 JUMPI PUSH2 0x1621 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1603 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x0 DUP7 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x165A JUMPI PUSH2 0x165A PUSH2 0x282C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x166C SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x1676 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH2 0x169B DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x168D JUMPI PUSH2 0x168D PUSH2 0x282C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1F2A JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x163B JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x16B5 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x87D DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x858 DUP2 DUP6 DUP6 PUSH2 0x1D27 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x68 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x32 PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x72 DUP5 MSTORE DUP9 DUP7 KECCAK256 SWAP8 MLOAD DUP9 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP3 SLOAD SWAP1 DUP3 MSTORE PUSH1 0x75 SWAP1 SWAP4 MSTORE SWAP3 DUP4 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SWAP2 PUSH2 0x1855 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x68 SLOAD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x67 SLOAD DUP4 LT PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x65 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP4 SWAP3 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x190E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x199D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 MLOAD TIMESTAMP DUP2 MSTORE DUP4 SWAP2 PUSH32 0x2F86696B420AA8D6E35F66F693EA69962E1A320F7F56220E777EC1DB40903130 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 MLOAD EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x1AB7 SWAP3 PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x222A JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH32 0x152D31E943F2D79D470375C901F5A6CFB7D465EE4969DB651885948D3B6015B8 SWAP1 PUSH2 0x1B05 SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x74 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1B64 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1B50 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D21 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1D14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x1D21 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1B71 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1E9C SWAP1 DUP5 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1EE8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x2A0B JUMP JUMPDEST PUSH2 0x1F26 DUP3 DUP3 PUSH2 0x21EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F92 SWAP2 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1FBF SWAP1 DUP5 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2029 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x292A JUMP JUMPDEST DUP1 PUSH2 0x2049 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x208F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x20F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x2103 DUP4 ADDRESS DUP5 PUSH2 0x864 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2125 SWAP1 DUP5 SWAP1 PUSH2 0x2819 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x65 SLOAD PUSH1 0x6F SLOAD SWAP3 MLOAD PUSH4 0xB6CEECB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP4 DUP4 LT ISZERO PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 AND SWAP1 PUSH4 0xB6CEECB7 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP5 PUSH1 0x40 MLOAD PUSH2 0x1025 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP1 PUSH2 0x2A0B JUMP JUMPDEST PUSH1 0x36 PUSH2 0x221D DUP4 DUP3 PUSH2 0x2AA6 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xB02 DUP3 DUP3 PUSH2 0x2AA6 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x227F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x227F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x224A JUMP JUMPDEST POP PUSH2 0x228B SWAP3 SWAP2 POP PUSH2 0x22CA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x227F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x227F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x22AF JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x228B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x230D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x22F1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2361 DUP2 PUSH2 0x232E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x239D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x23A8 DUP2 PUSH2 0x232E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x23B8 DUP2 PUSH2 0x232E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23E6 DUP2 PUSH2 0x232E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x242C JUMPI PUSH2 0x242C PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244E PUSH2 0x23ED JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x247E PUSH2 0x2479 DUP4 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0x2403 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x24A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x24C5 JUMPI DUP1 CALLDATALOAD PUSH2 0x24B8 DUP2 PUSH2 0x232E JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x24A5 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2506 DUP6 DUP3 DUP7 ADD PUSH2 0x2458 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2517 DUP2 PUSH2 0x232E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x255C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2537 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x23E6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x25EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x25FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2649 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x262D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x266B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x268F DUP9 DUP4 DUP10 ADD PUSH2 0x2458 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x26A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x26B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x26C5 PUSH2 0x2479 DUP3 PUSH2 0x2434 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x26E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2702 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x26E9 JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272F DUP8 DUP3 DUP9 ADD PUSH2 0x2458 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x274E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2759 DUP2 PUSH2 0x232E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2517 DUP2 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x277C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x279A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A6 DUP6 DUP3 DUP7 ADD PUSH2 0x2458 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x27C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x85E JUMPI PUSH2 0x85E PUSH2 0x2803 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x285F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x289F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x28AD PUSH2 0x2479 DUP3 PUSH2 0x2434 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x28CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x28F3 JUMPI DUP4 MLOAD PUSH2 0x28E4 DUP2 PUSH2 0x232E JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x28D1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2910 JUMPI PUSH2 0x2910 PUSH2 0x2803 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x85E JUMPI PUSH2 0x85E PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2984 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x85E JUMPI PUSH2 0x85E PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x23E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB02 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2A7F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A9E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A8B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC0 JUMPI PUSH2 0x2AC0 PUSH2 0x23ED JUMP JUMPDEST PUSH2 0x2AD4 DUP2 PUSH2 0x2ACE DUP5 SLOAD PUSH2 0x27B0 JUMP JUMPDEST DUP5 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B09 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2AF1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B38 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B19 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2B56 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD1E2785C7523D73D7402307B2B5ECAAD8E09AA5D240B2BDE8937532D DUP1 SUB 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BB"
    },
    "25": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7071688A"
    },
    "38": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x182"
    },
    "42": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB5CB15F7"
    },
    "49": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE9"
    },
    "53": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCDF64A76"
    },
    "60": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD93D9BEB"
    },
    "71": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD93D9BEB"
    },
    "82": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x72E"
    },
    "86": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x741"
    },
    "97": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF3259572"
    },
    "104": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x77A"
    },
    "108": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "110": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF79621BD"
    },
    "115": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "116": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x78D"
    },
    "119": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "120": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "123": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "124": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "125": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "126": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCDF64A76"
    },
    "131": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "132": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x709"
    },
    "135": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "136": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "137": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD2D49C4B"
    },
    "142": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x71C"
    },
    "146": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "147": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "148": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8DF5DC1"
    },
    "153": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x725"
    },
    "157": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "158": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "161": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "162": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "163": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "164": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB5CB15F7"
    },
    "169": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "170": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x69D"
    },
    "173": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "174": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "175": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB7797537"
    },
    "180": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "181": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6A5"
    },
    "184": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "185": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "186": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xBC60BD48"
    },
    "191": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "192": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6CF"
    },
    "195": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "196": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "197": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC0A77DA9"
    },
    "202": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "203": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6EF"
    },
    "206": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "207": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "208": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC5AB2241"
    },
    "213": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "214": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6F7"
    },
    "217": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "218": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "219": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC8DF245A"
    },
    "224": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "225": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x700"
    },
    "228": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "229": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "232": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "233": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "234": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "235": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "240": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "241": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13B"
    },
    "244": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "245": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "246": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "251": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "252": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x63F"
    },
    "255": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "256": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "257": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA3273D22"
    },
    "262": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "263": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x648"
    },
    "266": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "267": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "268": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "273": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "274": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x65B"
    },
    "277": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "278": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "279": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA9059CBB"
    },
    "284": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "285": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x66E"
    },
    "288": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "289": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "290": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xABF7BFD8"
    },
    "295": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "296": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x681"
    },
    "299": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "300": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "301": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB115F50D"
    },
    "306": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "307": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x694"
    },
    "310": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "311": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "314": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "315": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "316": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "317": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7071688A"
    },
    "322": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "323": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5CA"
    },
    "326": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "327": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "328": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "333": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "334": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5D2"
    },
    "337": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "338": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "339": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7C405325"
    },
    "344": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "345": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5FB"
    },
    "348": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "349": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "350": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8D12B266"
    },
    "355": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "356": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x60E"
    },
    "359": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "360": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "361": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8F029D5E"
    },
    "366": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "367": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x62E"
    },
    "370": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "371": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "372": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95D89B41"
    },
    "377": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "378": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x637"
    },
    "381": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "382": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "384": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "385": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "386": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "387": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "388": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x365B98B2"
    },
    "393": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "394": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x226"
    },
    "397": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "398": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "399": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4A4FBEEC"
    },
    "404": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "405": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DF"
    },
    "408": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "409": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "410": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4A4FBEEC"
    },
    "415": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "416": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x533"
    },
    "419": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "420": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "421": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4B759088"
    },
    "426": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "427": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x573"
    },
    "430": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "431": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "432": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x50355D76"
    },
    "437": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "438": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x593"
    },
    "441": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "442": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "443": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6817DD5B"
    },
    "448": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "449": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x59C"
    },
    "452": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "453": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "454": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6C9C2FAF"
    },
    "459": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "460": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5AF"
    },
    "463": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "464": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "465": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6E27D889"
    },
    "470": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "471": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5B7"
    },
    "474": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "475": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "477": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "478": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "479": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "480": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "481": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x365B98B2"
    },
    "486": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "487": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x46E"
    },
    "490": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "491": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "492": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x37DEEA70"
    },
    "497": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "498": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DB"
    },
    "501": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "502": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "503": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x39509351"
    },
    "508": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "509": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E3"
    },
    "512": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "513": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "514": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x462D0B2E"
    },
    "519": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "520": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4F6"
    },
    "523": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "524": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "525": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4966D086"
    },
    "530": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "531": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x50B"
    },
    "534": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "535": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "536": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x497DFE63"
    },
    "541": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "542": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x520"
    },
    "545": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "546": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "548": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "549": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "550": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "551": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "552": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "557": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "GT",
      "path": "24"
    },
    "558": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x278"
    },
    "561": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "562": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "563": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "568": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "569": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x389"
    },
    "572": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "573": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "574": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x27764547"
    },
    "579": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "580": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x39C"
    },
    "583": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "584": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "585": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x2FABA6AE"
    },
    "590": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "591": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3BC"
    },
    "594": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "595": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "596": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x313CE567"
    },
    "601": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "602": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3C5"
    },
    "605": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "606": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "607": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x32CB6B0C"
    },
    "612": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "613": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3D4"
    },
    "616": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "617": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "618": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x35AA2E44"
    },
    "623": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "624": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3E6"
    },
    "627": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "628": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "630": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "631": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "632": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "633": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "634": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6FDDE03"
    },
    "639": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "640": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C0"
    },
    "643": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "644": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "645": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8AC5256"
    },
    "650": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "651": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2DE"
    },
    "654": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "655": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "656": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95EA7B3"
    },
    "661": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "662": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2F5"
    },
    "665": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "666": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "667": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x180AEDF3"
    },
    "672": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "673": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x318"
    },
    "676": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "677": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "678": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18160DDD"
    },
    "683": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "684": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x378"
    },
    "687": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "688": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "689": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x20D3A0B4"
    },
    "694": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "EQ",
      "path": "24"
    },
    "695": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x380"
    },
    "698": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "699": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "700": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "702": {
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "DUP1",
      "path": "24"
    },
    "703": {
      "first_revert": true,
      "fn": null,
      "offset": [
        271,
        13616
      ],
      "op": "REVERT",
      "path": "24"
    },
    "704": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "705": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8"
    },
    "708": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B8"
    },
    "711": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "712": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "713": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "715": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "716": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5"
    },
    "719": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "720": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "721": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22DF"
    },
    "724": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "725": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "726": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "728": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "729": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "730": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "731": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "732": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "733": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "734": {
      "offset": [
        680,
        708
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "735": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "738": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "740": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "741": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "DUP2",
      "path": "24"
    },
    "742": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "JUMP",
      "path": "24"
    },
    "743": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "744": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "746": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        680,
        708
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "747": {
      "op": "SWAP1"
    },
    "748": {
      "op": "DUP2"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "offset": [
        680,
        708
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "756": {
      "op": "JUMP"
    },
    "757": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "758": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "761": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303"
    },
    "764": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "765": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "767": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2343"
    },
    "770": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "771": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "772": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84A"
    },
    "775": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "776": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "777": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "779": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "780": {
      "op": "SWAP1"
    },
    "781": {
      "op": "ISZERO"
    },
    "782": {
      "op": "ISZERO"
    },
    "783": {
      "op": "DUP2"
    },
    "784": {
      "op": "MSTORE"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "787": {
      "op": "ADD"
    },
    "788": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5"
    },
    "791": {
      "op": "JUMP"
    },
    "792": {
      "offset": [
        2640,
        2675
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "793": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "796": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x326"
    },
    "799": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "800": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "802": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "805": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        2640,
        2675
      ],
      "op": "JUMP",
      "path": "24"
    },
    "806": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "807": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "809": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "811": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "812": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "814": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "815": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "DUP2",
      "path": "24"
    },
    "816": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "817": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "819": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "820": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "821": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "DUP1",
      "path": "24"
    },
    "822": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "823": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "825": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "DUP3",
      "path": "24"
    },
    "826": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "ADD",
      "path": "24"
    },
    "827": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "828": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "830": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "831": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "832": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "ADD",
      "path": "24"
    },
    "833": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "834": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "835": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "op": "SUB"
    },
    "844": {
      "offset": [
        2640,
        2675
      ],
      "op": "AND",
      "path": "24"
    },
    "845": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "846": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "848": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "AND",
      "path": "24"
    },
    "849": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "DUP4",
      "path": "24"
    },
    "850": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "JUMP",
      "path": "24"
    },
    "851": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "852": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "854": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "DUP1",
      "path": "24"
    },
    "855": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        2640,
        2675
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "856": {
      "op": "SWAP4"
    },
    "857": {
      "op": "DUP5"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "SUB"
    },
    "867": {
      "op": "SWAP1"
    },
    "868": {
      "op": "SWAP3"
    },
    "869": {
      "op": "AND"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "op": "DUP5"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "ISZERO"
    },
    "876": {
      "op": "ISZERO"
    },
    "877": {
      "op": "SWAP1"
    },
    "878": {
      "op": "DUP3"
    },
    "879": {
      "op": "ADD"
    },
    "880": {
      "op": "MSTORE"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "883": {
      "op": "ADD"
    },
    "884": {
      "offset": [
        2640,
        2675
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "887": {
      "op": "JUMP"
    },
    "888": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "889": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "891": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "892": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7"
    },
    "895": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "896": {
      "offset": [
        2412,
        2447
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "897": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2412,
        2447
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "900": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2412,
        2447
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "902": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2412,
        2447
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "903": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2412,
        2447
      ],
      "op": "DUP2",
      "path": "24"
    },
    "904": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        2412,
        2447
      ],
      "op": "JUMP",
      "path": "24"
    },
    "905": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "906": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "909": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x397"
    },
    "912": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "913": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2388"
    },
    "918": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "919": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "920": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x864"
    },
    "923": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "924": {
      "offset": [
        2762,
        2817
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "925": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "928": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3AA"
    },
    "931": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "932": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "934": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23C9"
    },
    "937": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        2762,
        2817
      ],
      "op": "JUMP",
      "path": "24"
    },
    "938": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "939": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "941": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "943": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "944": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "946": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "947": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "DUP2",
      "path": "24"
    },
    "948": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "949": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "951": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "952": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "953": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "954": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "DUP2",
      "path": "24"
    },
    "955": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2762,
        2817
      ],
      "op": "JUMP",
      "path": "24"
    },
    "956": {
      "offset": [
        544,
        572
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "957": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "960": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "962": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "963": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "DUP2",
      "path": "24"
    },
    "964": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        544,
        572
      ],
      "op": "JUMP",
      "path": "24"
    },
    "965": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "966": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "968": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "969": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "971": {
      "op": "DUP2"
    },
    "972": {
      "op": "MSTORE"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "975": {
      "op": "ADD"
    },
    "976": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5"
    },
    "979": {
      "op": "JUMP"
    },
    "980": {
      "offset": [
        2039,
        2089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "981": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2039,
        2089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "984": {
      "offset": [
        2076,
        2089
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "996": {
      "offset": [
        2039,
        2089
      ],
      "op": "DUP2",
      "path": "24"
    },
    "997": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2039,
        2089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "998": {
      "offset": [
        2587,
        2634
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "999": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x436"
    },
    "1002": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3F4"
    },
    "1005": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1006": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1008": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1011": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2587,
        2634
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1012": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1013": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "1015": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1017": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1018": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1020": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1021": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1022": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1023": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1025": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1026": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1027": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1028": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1029": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1031": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1032": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "ADD",
      "path": "24"
    },
    "1033": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1034": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1036": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1037": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "ADD",
      "path": "24"
    },
    "1038": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1039": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1041": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1042": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "ADD",
      "path": "24"
    },
    "1043": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1044": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1046": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP6",
      "path": "24"
    },
    "1047": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "ADD",
      "path": "24"
    },
    "1048": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1049": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "1051": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1052": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "1053": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "ADD",
      "path": "24"
    },
    "1054": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1055": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1056": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1066": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1067": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "AND",
      "path": "24"
    },
    "1068": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1069": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1070": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1071": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1072": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1073": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "1075": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "AND",
      "path": "24"
    },
    "1076": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1077": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1078": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1079": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1081": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1082": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2587,
        2634
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1083": {
      "op": "SWAP7"
    },
    "1084": {
      "op": "DUP8"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "op": "SWAP1"
    },
    "1095": {
      "op": "SWAP6"
    },
    "1096": {
      "op": "AND"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1099": {
      "op": "DUP8"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "SWAP4"
    },
    "1103": {
      "op": "DUP6"
    },
    "1104": {
      "op": "ADD"
    },
    "1105": {
      "op": "SWAP3"
    },
    "1106": {
      "op": "SWAP1"
    },
    "1107": {
      "op": "SWAP3"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1111": {
      "op": "DUP5"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1116": {
      "op": "DUP4"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "op": "MSTORE"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1121": {
      "op": "AND"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "DUP3"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "op": "MSTORE"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "offset": [
        2587,
        2634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "1133": {
      "op": "JUMP"
    },
    "1134": {
      "offset": [
        2544,
        2581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1135": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4B0"
    },
    "1138": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x47C"
    },
    "1141": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1142": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1144": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1147": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2544,
        2581
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1148": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1149": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x72"
    },
    "1151": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1153": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1154": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1156": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1157": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1158": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1159": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1161": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1162": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1163": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1164": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1165": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1167": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1168": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "ADD",
      "path": "24"
    },
    "1169": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1170": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1172": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1173": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "ADD",
      "path": "24"
    },
    "1174": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1175": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1177": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1178": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1179": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "ADD",
      "path": "24"
    },
    "1180": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1181": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1182": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "op": "SUB"
    },
    "1191": {
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1192": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1193": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "AND",
      "path": "24"
    },
    "1194": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1195": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "1197": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "AND",
      "path": "24"
    },
    "1198": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1199": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1200": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1201": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1203": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1204": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2544,
        2581
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1205": {
      "op": "SWAP5"
    },
    "1206": {
      "op": "DUP6"
    },
    "1207": {
      "op": "MSTORE"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "op": "SUB"
    },
    "1216": {
      "op": "SWAP1"
    },
    "1217": {
      "op": "SWAP4"
    },
    "1218": {
      "op": "AND"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "op": "DUP6"
    },
    "1222": {
      "op": "ADD"
    },
    "1223": {
      "op": "MSTORE"
    },
    "1224": {
      "op": "SWAP2"
    },
    "1225": {
      "op": "DUP4"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1230": {
      "op": "AND"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1233": {
      "op": "DUP3"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "offset": [
        2544,
        2581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "1242": {
      "op": "JUMP"
    },
    "1243": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12936,
        13072
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1244": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12936,
        13072
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1247": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12936,
        13072
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x888"
    },
    "1250": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        12936,
        13072
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1251": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1252": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "1255": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F1"
    },
    "1258": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1259": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1261": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2343"
    },
    "1264": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1265": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1266": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FB"
    },
    "1269": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1270": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1271": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1274": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x504"
    },
    "1277": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1278": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1280": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x24D0"
    },
    "1283": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1284": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1285": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x93A"
    },
    "1288": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1289": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1290": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "STOP",
      "path": "24"
    },
    "1291": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1292": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x513"
    },
    "1295": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB07"
    },
    "1298": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13475,
        13614
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1299": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1300": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1302": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1303": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "1306": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1307": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1308": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2567"
    },
    "1311": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13475,
        13614
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1312": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1313": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1316": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x52E"
    },
    "1319": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1320": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1322": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x257A"
    },
    "1325": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5305,
        6176
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1326": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1327": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB79"
    },
    "1330": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5305,
        6176
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1331": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1332": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x308"
    },
    "1335": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x541"
    },
    "1338": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1339": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1341": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23C9"
    },
    "1344": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        13280,
        13469
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1345": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "AND",
      "path": "24"
    },
    "1355": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13344,
        13348
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1357": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1358": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1359": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1360": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13394
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "1362": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1364": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1365": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1366": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1367": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1369": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1370": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1371": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1372": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13374,
        13409
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1373": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13452,
        13462
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 2,
      "value": "0x6F"
    },
    "1375": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13452,
        13462
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1376": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1377": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1378": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1379": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13436
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "1381": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1382": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1383": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1384": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1385": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1386": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13441
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1387": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13448
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1389": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13448
      ],
      "op": "ADD",
      "path": "24"
    },
    "1390": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13448
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1391": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13462
      ],
      "op": "LT",
      "path": "24"
    },
    "1392": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13462
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1393": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13426,
        13462
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1394": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13280,
        13469
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1395": {
      "offset": [
        2706,
        2756
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1396": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1399": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x581"
    },
    "1402": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1403": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1405": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23C9"
    },
    "1408": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        2706,
        2756
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1409": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1410": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "1412": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1414": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1415": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1417": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1418": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1419": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1420": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1422": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1423": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1424": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1425": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1426": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        2706,
        2756
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1427": {
      "offset": [
        578,
        603
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1428": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1431": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "1433": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1434": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1435": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        578,
        603
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1436": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1437": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x513"
    },
    "1440": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5AA"
    },
    "1443": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1444": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1446": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1449": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11926,
        12295
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1450": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1451": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD10"
    },
    "1454": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11926,
        12295
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1455": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13179,
        13274
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1456": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13179,
        13274
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1459": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13179,
        13274
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE13"
    },
    "1462": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        13179,
        13274
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1463": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1464": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1467": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5C5"
    },
    "1470": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1471": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1473": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1476": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8949,
        9042
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1477": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1478": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE53"
    },
    "1481": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        8949,
        9042
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1482": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12823,
        12930
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1483": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12823,
        12930
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1486": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12823,
        12930
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE60"
    },
    "1489": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12823,
        12930
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1490": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1491": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7"
    },
    "1494": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E0"
    },
    "1497": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1498": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1500": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C9"
    },
    "1503": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1504": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "op": "SUB"
    },
    "1513": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 3
    },
    "1514": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1516": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1517": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1518": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1519": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1521": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1523": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1524": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1526": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1527": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1528": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1529": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1530": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1531": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1532": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1535": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x609"
    },
    "1538": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1539": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1541": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1544": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9048,
        10487
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1545": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1546": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE71"
    },
    "1549": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9048,
        10487
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1550": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1551": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x621"
    },
    "1554": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x61C"
    },
    "1557": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1558": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1560": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x259C"
    },
    "1563": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1564": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1565": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "1568": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1569": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1570": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1572": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1573": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "1576": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1577": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1578": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2611"
    },
    "1581": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1582": {
      "offset": [
        505,
        538
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1583": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        505,
        538
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1586": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        505,
        538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "1588": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        505,
        538
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1589": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        505,
        538
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1590": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        505,
        538
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1591": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1592": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8"
    },
    "1595": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D2"
    },
    "1598": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1599": {
      "offset": [
        2231,
        2268
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1600": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2231,
        2268
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1603": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2231,
        2268
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "1605": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2231,
        2268
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1606": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2231,
        2268
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1607": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2231,
        2268
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1608": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1609": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1612": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x656"
    },
    "1615": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1616": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1618": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2655"
    },
    "1621": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10664,
        11849
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1622": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1623": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14E1"
    },
    "1626": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10664,
        11849
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1627": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1628": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "1631": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x669"
    },
    "1634": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1635": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1637": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2343"
    },
    "1640": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1641": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1642": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C3"
    },
    "1645": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1646": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1647": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "1650": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67C"
    },
    "1653": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1654": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1656": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2343"
    },
    "1659": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1660": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1661": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1755"
    },
    "1664": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1665": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1666": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1669": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x68F"
    },
    "1672": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1673": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1675": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1678": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4717,
        5180
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1679": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1680": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1763"
    },
    "1683": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4717,
        5180
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1684": {
      "offset": [
        2453,
        2488
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1685": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2453,
        2488
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1688": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2453,
        2488
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "1690": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2453,
        2488
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1691": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2453,
        2488
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1692": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2453,
        2488
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1693": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12720,
        12817
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1694": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12720,
        12817
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1697": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12720,
        12817
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x185D"
    },
    "1700": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12720,
        12817
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1701": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1702": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6B8"
    },
    "1705": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6B3"
    },
    "1708": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1709": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1711": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1714": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1715": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1716": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x186E"
    },
    "1719": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1720": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1721": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1723": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1724": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1725": {
      "op": "SWAP3"
    },
    "1726": {
      "op": "ISZERO"
    },
    "1727": {
      "op": "ISZERO"
    },
    "1728": {
      "op": "DUP4"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1732": {
      "op": "DUP4"
    },
    "1733": {
      "op": "ADD"
    },
    "1734": {
      "op": "SWAP2"
    },
    "1735": {
      "op": "SWAP1"
    },
    "1736": {
      "op": "SWAP2"
    },
    "1737": {
      "op": "MSTORE"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "1742": {
      "op": "JUMP"
    },
    "1743": {
      "offset": [
        2823,
        2875
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1744": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1747": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6DD"
    },
    "1750": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1751": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1753": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1756": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        2823,
        2875
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1757": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1758": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x77"
    },
    "1760": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1762": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1763": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1765": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1766": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1767": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1768": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1770": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1771": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1772": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1773": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1774": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        2823,
        2875
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1775": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13078,
        13173
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1776": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13154,
        13166
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 4,
      "value": "0x6E"
    },
    "1778": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13154,
        13166
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1779": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13078,
        13173
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1782": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13078,
        13173
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1783": {
      "offset": [
        646,
        674
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1784": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1787": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "1789": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1790": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1791": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        646,
        674
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1792": {
      "offset": [
        2138,
        2167
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1793": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2138,
        2167
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1796": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2138,
        2167
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "1798": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2138,
        2167
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1799": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2138,
        2167
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1800": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2138,
        2167
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1801": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1802": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1805": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x717"
    },
    "1808": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1809": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1811": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23C9"
    },
    "1814": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        4296,
        4622
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1815": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1816": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1944"
    },
    "1819": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        4296,
        4622
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1820": {
      "offset": [
        609,
        640
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1821": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1824": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "1826": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1827": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1828": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        609,
        640
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1829": {
      "offset": [
        2325,
        2362
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1830": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2325,
        2362
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "1833": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2325,
        2362
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "1835": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2325,
        2362
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1836": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2325,
        2362
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1837": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2325,
        2362
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1838": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1839": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "1842": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x73C"
    },
    "1845": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1846": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1848": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x236F"
    },
    "1851": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7881,
        8073
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1852": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1853": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19C9"
    },
    "1856": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        7881,
        8073
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1857": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1858": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7"
    },
    "1861": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x74F"
    },
    "1864": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1865": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1867": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273B"
    },
    "1870": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1871": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "op": "SUB"
    },
    "1880": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "1881": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1882": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "1883": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1885": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1886": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1887": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1888": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "1890": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1892": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1893": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1894": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1895": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1897": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1898": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1899": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1900": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1901": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1902": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1903": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "1904": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1905": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1906": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1907": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1908": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1909": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1910": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1911": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1912": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1913": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1914": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1915": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x621"
    },
    "1918": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x788"
    },
    "1921": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1922": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1924": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2769"
    },
    "1927": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7441,
        7875
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1928": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1929": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A47"
    },
    "1932": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7441,
        7875
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1933": {
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1934": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "1936": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1937": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7A0"
    },
    "1940": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "offset": [
        416,
        455
      ],
      "op": "AND",
      "path": "24"
    },
    "1950": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1951": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1952": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1953": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1955": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        416,
        455
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "SUB"
    },
    "1964": {
      "op": "SWAP1"
    },
    "1965": {
      "op": "SWAP2"
    },
    "1966": {
      "op": "AND"
    },
    "1967": {
      "op": "DUP2"
    },
    "1968": {
      "op": "MSTORE"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1971": {
      "op": "ADD"
    },
    "1972": {
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D5"
    },
    "1975": {
      "op": "JUMP"
    },
    "1976": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1977": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1979": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x36"
    },
    "1981": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1982": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1983": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C7"
    },
    "1986": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1987": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B0"
    },
    "1990": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1991": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1992": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1993": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1995": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1996": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1998": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1999": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2000": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2001": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2002": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2004": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2005": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2007": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2008": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2009": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2010": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2011": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2013": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2014": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2015": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2016": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2017": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2018": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2019": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2020": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2021": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2023": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2024": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2025": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2026": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2027": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F3"
    },
    "2030": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2031": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B0"
    },
    "2034": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2035": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2036": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2037": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2038": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x840"
    },
    "2041": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2042": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2043": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2045": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "2046": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x815"
    },
    "2049": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2050": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2053": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2054": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2055": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2056": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2057": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2058": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2059": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2060": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2061": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2063": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2064": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2065": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x840"
    },
    "2068": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2069": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2070": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2071": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2072": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2073": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2074": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2076": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2077": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2079": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2081": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2082": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2083": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2084": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2085": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2086": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2087": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2088": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2089": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2091": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2092": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2093": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2095": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2096": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2097": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2098": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "2099": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x823"
    },
    "2102": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2103": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2104": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2105": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "2106": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2108": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "2109": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2110": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2111": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2112": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2113": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2114": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2115": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2116": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2117": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2118": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2119": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2120": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2121": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2122": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2123": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2125": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "2126": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x858"
    },
    "2129": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2130": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2131": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2132": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B71"
    },
    "2135": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2136": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2137": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2139": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2140": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2141": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2142": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2143": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2144": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2145": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2146": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2147": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2148": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2149": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2151": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2152": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x872"
    },
    "2155": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2156": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2157": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2158": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C95"
    },
    "2161": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2162": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2163": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x87D"
    },
    "2166": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2167": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2168": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2169": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D27"
    },
    "2172": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2173": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "2177": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2178": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "op": "POP"
    },
    "2181": {
      "op": "POP"
    },
    "2182": {
      "op": "POP"
    },
    "2183": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2184": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12936,
        13072
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2185": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13046
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 13,
      "value": "0x65"
    },
    "2187": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13046
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2188": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2190": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2191": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2192": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2201": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2202": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2203": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2204": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12994,
        13001
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2206": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12994,
        13001
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2213": {
      "op": "SHL"
    },
    "2214": {
      "op": "SUB"
    },
    "2215": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13046
      ],
      "op": "AND",
      "path": "24"
    },
    "2216": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13046
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2217": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13063
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x91E2E252"
    },
    "2222": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13063
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2223": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2225": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2226": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2227": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2228": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2229": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2231": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2232": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2233": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2234": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2235": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2236": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SUB",
      "path": "24"
    },
    "2237": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2238": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2239": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13046
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2240": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "GAS",
      "path": "24"
    },
    "2241": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "2242": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2243": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2244": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2245": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8D2"
    },
    "2248": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2249": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2250": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2252": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2253": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2254": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2255": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2257": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2258": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2259": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "POP",
      "path": "24"
    },
    "2260": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "POP",
      "path": "24"
    },
    "2261": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "POP",
      "path": "24"
    },
    "2262": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "POP",
      "path": "24"
    },
    "2263": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2265": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2266": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2267": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2269": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "NOT",
      "path": "24"
    },
    "2270": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2272": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2273": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2274": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "AND",
      "path": "24"
    },
    "2275": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2276": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2277": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2278": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2280": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2281": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "POP",
      "path": "24"
    },
    "2282": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2283": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2284": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2285": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8F6"
    },
    "2288": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2289": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2290": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27EA"
    },
    "2293": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        13020,
        13065
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2294": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13020,
        13065
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2295": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13013,
        13065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2296": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13013,
        13065
      ],
      "op": "POP",
      "path": "24"
    },
    "2297": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        12936,
        13072
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2298": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        12936,
        13072
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2299": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2300": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2301": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2303": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "2304": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2305": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2306": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "2308": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2310": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2311": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2312": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2313": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2315": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2316": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2317": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "SUB"
    },
    "2326": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2327": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "2328": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2329": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2330": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2331": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2332": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2333": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2334": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2335": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2336": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2337": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2338": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2339": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x858"
    },
    "2342": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2343": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2344": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2345": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2346": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2347": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x935"
    },
    "2350": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2351": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2352": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2353": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2819"
    },
    "2356": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2357": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2358": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B71"
    },
    "2361": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2362": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2363": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2365": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2366": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2369": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2370": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "2371": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2373": {
      "branch": 148,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "2374": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x955"
    },
    "2377": {
      "branch": 148,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2378": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2380": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2381": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2383": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "2384": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2385": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x959"
    },
    "2388": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2389": {
      "branch": 149,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2390": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 15
    },
    "2391": {
      "op": "EXTCODESIZE"
    },
    "2392": {
      "op": "ISZERO"
    },
    "2393": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2394": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C1"
    },
    "2397": {
      "branch": 149,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2398": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2400": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2409": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2412": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2414": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2415": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2421": {
      "op": "DUP3"
    },
    "2422": {
      "op": "ADD"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2459": {
      "op": "DUP3"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2479": {
      "op": "SHL"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2482": {
      "op": "DUP3"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2487": {
      "op": "ADD"
    },
    "2488": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2489": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2491": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2492": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2493": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2494": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "SUB",
      "path": "1"
    },
    "2495": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2496": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "2497": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2498": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2500": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2501": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2504": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2505": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "2506": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2508": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "2509": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2510": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2511": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2512": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E3"
    },
    "2515": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2516": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2518": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2519": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2520": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2523": {
      "op": "NOT"
    },
    "2524": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "2525": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "2528": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "2529": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2530": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2531": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2532": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 16,
      "value": "0xA2A"
    },
    "2535": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2537": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2538": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2539": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2541": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "ADD",
      "path": "24"
    },
    "2542": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2544": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2545": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2546": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "2548": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2549": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2550": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2552": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "ADD",
      "path": "24"
    },
    "2553": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2566": {
      "op": "SHL"
    },
    "2567": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2568": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2569": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "POP",
      "path": "24"
    },
    "2570": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2572": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2573": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2574": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2576": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "ADD",
      "path": "24"
    },
    "2577": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2579": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2580": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2581": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2583": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2584": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2585": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2587": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "ADD",
      "path": "24"
    },
    "2588": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2596": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2597": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "POP",
      "path": "24"
    },
    "2598": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3256
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EF5"
    },
    "2601": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3244,
        3277
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2602": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3244,
        3277
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2603": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3377,
        3378
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0x1"
    },
    "2605": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3361,
        3374
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2607": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3361,
        3378
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2608": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3361,
        3378
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2609": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3361,
        3378
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2610": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3388,
        3398
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 18,
      "value": "0x69"
    },
    "2612": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3388,
        3402
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2613": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3388,
        3402
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2614": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3388,
        3402
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2615": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3412,
        3430
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 19,
      "value": "0x67"
    },
    "2617": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3412,
        3434
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2618": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3498,
        3505
      ],
      "op": "PUSH9",
      "path": "24",
      "statement": 20,
      "value": "0x6F05B59D3B20000000"
    },
    "2628": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3483,
        3495
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "2630": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3483,
        3505
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2631": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3579,
        3588
      ],
      "op": "PUSH10",
      "path": "24",
      "statement": 21,
      "value": "0xA968163F0A57B400000"
    },
    "2642": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2644": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3566,
        3588
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2645": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3652,
        3656
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 22,
      "value": "0x870"
    },
    "2648": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3642,
        3649
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "2650": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3642,
        3656
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2651": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3681,
        3686
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 23,
      "value": "0xC4E0"
    },
    "2654": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3666,
        3678
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "2656": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3666,
        3686
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2659": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3709,
        3729
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 24,
      "value": "0x71"
    },
    "2661": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3709,
        3733
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2662": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3765,
        3777
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x1EFC90B09E6EBE2800000"
    },
    "2674": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3814,
        3826
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x1A784379D99DB42000000"
    },
    "2686": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3856,
        3868
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x2E5276153CD3FB3800000"
    },
    "2698": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3878,
        3907
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 25,
      "value": "0xA93"
    },
    "2701": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3856,
        3868
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2702": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3814,
        3826
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2703": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3878,
        3907
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2819"
    },
    "2706": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3878,
        3907
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2707": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3878,
        3907
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2708": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3878,
        3907
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2709": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3878,
        3907
      ],
      "op": "POP",
      "path": "24"
    },
    "2710": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4017,
        4023
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2712": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2713": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4033,
        4048
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2714": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4033,
        4055
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2715": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4029,
        4030
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2716": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4029,
        4055
      ],
      "op": "LT",
      "path": "24"
    },
    "2717": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2718": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAD8"
    },
    "2721": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2722": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4076,
        4138
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 26,
      "value": "0xAD0"
    },
    "2725": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4097
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2726": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4098,
        4099
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2727": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2728": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2729": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2730": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "LT",
      "path": "24"
    },
    "2731": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAB6"
    },
    "2734": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2735": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAB6"
    },
    "2738": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "2741": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4082,
        4100
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2742": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2743": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2745": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "MUL",
      "path": "24"
    },
    "2746": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2748": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "ADD",
      "path": "24"
    },
    "2749": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "ADD",
      "path": "24"
    },
    "2750": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4082,
        4100
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2751": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4115,
        4130
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2752": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4115,
        4137
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2753": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4102,
        4112
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2754": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4102,
        4137
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xACB"
    },
    "2757": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4102,
        4137
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2758": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4102,
        4137
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2759": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4102,
        4137
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2842"
    },
    "2762": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4102,
        4137
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2763": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4102,
        4137
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2764": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4076,
        4081
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F2A"
    },
    "2767": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4076,
        4138
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2768": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4076,
        4138
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2769": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4057,
        4060
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 27,
      "value": "0x1"
    },
    "2771": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4057,
        4060
      ],
      "op": "ADD",
      "path": "24"
    },
    "2772": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA98"
    },
    "2775": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2776": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2777": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4012,
        4149
      ],
      "op": "POP",
      "path": "24"
    },
    "2778": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4159,
        4200
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 28,
      "value": "0xAE3"
    },
    "2781": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4165,
        4181
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2782": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4183,
        4199
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2783": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4159,
        4164
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F2A"
    },
    "2786": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4159,
        4200
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2787": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4159,
        4200
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4255,
        4256
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 29,
      "value": "0x1"
    },
    "2792": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4239,
        4252
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "2794": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4239,
        4256
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2795": {
      "op": "POP"
    },
    "2796": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4282,
        4283
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 30,
      "value": "0x3"
    },
    "2798": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4266,
        4279
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "2800": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4266,
        4283
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2801": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2802": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2803": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB02"
    },
    "2806": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2807": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2809": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2810": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2811": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2814": {
      "op": "NOT"
    },
    "2815": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "2816": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2817": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2818": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2819": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "2820": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "POP",
      "path": "24"
    },
    "2821": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "POP",
      "path": "24"
    },
    "2822": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2823": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13475,
        13614
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2824": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 31,
      "value": "0x65"
    },
    "2826": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2827": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2829": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2830": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2831": {
      "op": "PUSH4",
      "value": "0xFBCCA273"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2840": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2841": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2842": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2843": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13522,
        13538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2845": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13522,
        13538
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "op": "SUB"
    },
    "2854": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "AND",
      "path": "24"
    },
    "2855": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2856": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13605
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFBCCA273"
    },
    "2861": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13605
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2862": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2864": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2865": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2866": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ADD",
      "path": "24"
    },
    "2867": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2868": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2870": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2871": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2872": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2873": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2874": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2875": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SUB",
      "path": "24"
    },
    "2876": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ADD",
      "path": "24"
    },
    "2877": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2878": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13583
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2879": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "GAS",
      "path": "24"
    },
    "2880": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "2881": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2882": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2883": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2884": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB51"
    },
    "2887": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2888": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2889": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2891": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2892": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2893": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2894": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2896": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2897": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2898": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "POP",
      "path": "24"
    },
    "2899": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "POP",
      "path": "24"
    },
    "2900": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "POP",
      "path": "24"
    },
    "2901": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "POP",
      "path": "24"
    },
    "2902": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2904": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2905": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2906": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2908": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2909": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2910": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2912": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2913": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2914": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2915": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ADD",
      "path": "24"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2918": {
      "op": "NOT"
    },
    "2919": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "AND",
      "path": "24"
    },
    "2920": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2921": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ADD",
      "path": "24"
    },
    "2922": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2924": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2925": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8F6"
    },
    "2928": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2929": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2930": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2931": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "ADD",
      "path": "24"
    },
    "2932": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2933": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13557,
        13607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2864"
    },
    "2936": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13557,
        13607
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2937": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2938": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5458,
        5468
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 32
    },
    "2939": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2941": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2942": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2943": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2944": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "2946": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2948": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2949": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2951": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2952": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2953": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5469
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2954": {
      "branch": 117,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5437,
        5474
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2955": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBD6"
    },
    "2958": {
      "branch": 117,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2959": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2961": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2970": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2973": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2975": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2976": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "ADD",
      "path": "24"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2982": {
      "op": "DUP3"
    },
    "2983": {
      "op": "ADD"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206578697374732E00000000000000"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3020": {
      "op": "DUP3"
    },
    "3021": {
      "op": "ADD"
    },
    "3022": {
      "op": "MSTORE"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3025": {
      "op": "ADD"
    },
    "3026": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3029": {
      "op": "JUMP"
    },
    "3030": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5416,
        5525
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3031": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5567,
        5577
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 33
    },
    "3032": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3034": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3035": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3036": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3037": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "3039": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3041": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3042": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3044": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3045": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3046": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3047": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5582,
        5593
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3048": {
      "op": "GT"
    },
    "3049": {
      "branch": 118,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5593
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3050": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5622
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3051": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5622
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3052": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5622
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBF7"
    },
    "3055": {
      "branch": 118,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5622
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3056": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5622
      ],
      "op": "POP",
      "path": "24"
    },
    "3057": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5612,
        5622
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3059": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5612,
        5622
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3060": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5608
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3061": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5622
      ],
      "op": "LT",
      "path": "24"
    },
    "3062": {
      "branch": 119,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5597,
        5622
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3063": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5557,
        5622
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3064": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC43"
    },
    "3067": {
      "branch": 119,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3068": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3070": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3079": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3082": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3084": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3085": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "ADD",
      "path": "24"
    },
    "3086": {
      "op": "MSTORE"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3091": {
      "op": "DUP3"
    },
    "3092": {
      "op": "ADD"
    },
    "3093": {
      "op": "MSTORE"
    },
    "3094": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3129": {
      "op": "DUP3"
    },
    "3130": {
      "op": "ADD"
    },
    "3131": {
      "op": "MSTORE"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3138": {
      "op": "JUMP"
    },
    "3139": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5536,
        5675
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3140": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 34,
      "value": "0x40"
    },
    "3142": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3143": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3144": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC0"
    },
    "3146": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3147": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3148": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3149": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3150": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5793,
        5811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "3152": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5793,
        5811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3153": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5793,
        5811
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3154": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3155": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3156": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3157": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5843,
        5853
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3158": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3160": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3161": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3162": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3163": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3164": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3165": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3166": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3167": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP8",
      "path": "24"
    },
    "3168": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3169": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP10",
      "path": "24"
    },
    "3170": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3171": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3172": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5918,
        5928
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3174": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5918,
        5928
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3175": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5918,
        5928
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3176": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3178": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP10",
      "path": "24"
    },
    "3179": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3180": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3181": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3182": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "3187": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP11",
      "path": "24"
    },
    "3188": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3189": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3190": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3191": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3192": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5981,
        5983
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x32"
    },
    "3194": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA0"
    },
    "3196": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP13",
      "path": "24"
    },
    "3197": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3198": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3199": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3200": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3201": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "SWAP9",
      "path": "24"
    },
    "3202": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3203": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3204": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5742
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "3206": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP8",
      "path": "24"
    },
    "3207": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3208": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP12",
      "path": "24"
    },
    "3209": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3210": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5762
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3211": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP11",
      "path": "24"
    },
    "3212": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3213": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP12",
      "path": "24"
    },
    "3214": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3215": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "3216": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3217": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3219": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP12",
      "path": "24"
    },
    "3220": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3221": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3222": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3229": {
      "op": "SHL"
    },
    "3230": {
      "op": "SUB"
    },
    "3231": {
      "op": "NOT"
    },
    "3232": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "AND",
      "path": "24"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "op": "SUB"
    },
    "3241": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3242": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3243": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "AND",
      "path": "24"
    },
    "3244": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3245": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3246": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3247": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "OR",
      "path": "24"
    },
    "3248": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3249": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3250": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3251": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3252": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3254": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP11",
      "path": "24"
    },
    "3255": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3256": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3257": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3258": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "3260": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP10",
      "path": "24"
    },
    "3261": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3262": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3263": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3265": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3267": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP9",
      "path": "24"
    },
    "3268": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3269": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3270": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3271": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3272": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "3274": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3275": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3276": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "ADD",
      "path": "24"
    },
    "3277": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3278": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3281": {
      "op": "NOT"
    },
    "3282": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "AND",
      "path": "24"
    },
    "3283": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5765,
        5994
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "3285": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3286": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "3287": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "AND",
      "path": "24"
    },
    "3288": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3289": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3290": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3291": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "OR",
      "path": "24"
    },
    "3292": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3293": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "3294": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5732,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3295": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP3",
      "path": "24",
      "statement": 35
    },
    "3296": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6040,
        6058
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3297": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3298": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3299": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3300": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6025
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "3302": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3303": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3304": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3305": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3306": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3307": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6037
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3308": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6005,
        6058
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3309": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6127,
        6137
      ],
      "op": "SLOAD",
      "path": "24",
      "statement": 36
    },
    "3310": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6103,
        6138
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCF7"
    },
    "3313": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6103,
        6138
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3314": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5843,
        5853
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3315": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6103,
        6114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2009"
    },
    "3318": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        6103,
        6138
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3319": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6103,
        6138
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3320": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6167
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 37,
      "value": "0x67"
    },
    "3322": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3323": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3324": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3325": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6167
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3327": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD07"
    },
    "3330": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3331": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28FE"
    },
    "3334": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        6149,
        6169
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3335": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3336": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3337": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3338": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "POP",
      "path": "24"
    },
    "3339": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3340": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6149,
        6169
      ],
      "op": "POP",
      "path": "24"
    },
    "3341": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "POP",
      "path": "24"
    },
    "3342": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5305,
        6176
      ],
      "op": "POP",
      "path": "24"
    },
    "3343": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        5305,
        6176
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3344": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3345": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12004,
        12020
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3347": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12048,
        12058
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 38,
      "value": "0x69"
    },
    "3349": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12048,
        12058
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3350": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12040,
        12045
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3351": {
      "branch": 120,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12040,
        12058
      ],
      "op": "LT",
      "path": "24"
    },
    "3352": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD54"
    },
    "3355": {
      "branch": 120,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3356": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3358": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3367": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3370": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3372": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3373": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "ADD",
      "path": "24"
    },
    "3374": {
      "op": "MSTORE"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3379": {
      "op": "DUP3"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "op": "MSTORE"
    },
    "3382": {
      "op": "PUSH14",
      "value": "0x125B9D985B1A59081A9BD8881251"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "MSTORE"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3407": {
      "op": "ADD"
    },
    "3408": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3411": {
      "op": "JUMP"
    },
    "3412": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12032,
        12077
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3413": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3415": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3416": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3417": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3418": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12095
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "3420": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3422": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3423": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3425": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3426": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12102
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3427": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12105
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3428": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12114
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3429": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12114
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3430": {
      "branch": 121,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12091,
        12114
      ],
      "op": "SUB",
      "path": "24"
    },
    "3431": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12087,
        12289
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDDA"
    },
    "3434": {
      "branch": 121,
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12087,
        12289
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3435": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12160
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3437": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3438": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3439": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3440": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12167
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "3442": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3444": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3445": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3446": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3447": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3449": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3450": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3451": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12174
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3452": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3454": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3455": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3456": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3457": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3458": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3459": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3460": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3461": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MUL",
      "path": "24"
    },
    "3462": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3463": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3464": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3465": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3466": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3467": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3468": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3469": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3470": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3471": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3472": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3473": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3474": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3475": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12189
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3476": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3477": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3478": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3479": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12163,
        12189
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3480": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3481": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3482": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3483": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDCD"
    },
    "3486": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3487": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3489": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MUL",
      "path": "24"
    },
    "3490": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3491": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3492": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3493": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3494": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3496": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3497": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3499": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3501": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3502": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3503": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3504": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3505": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3512": {
      "op": "SHL"
    },
    "3513": {
      "op": "SUB"
    },
    "3514": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "AND",
      "path": "24"
    },
    "3515": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3516": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3517": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3519": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3520": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3521": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3522": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3523": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3525": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "ADD",
      "path": "24"
    },
    "3526": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3527": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3528": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "GT",
      "path": "24"
    },
    "3529": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDAF"
    },
    "3532": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3533": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3536": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12130,
        12189
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "3537": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11926,
        12295
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "op": "POP"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "o",
      "offset": [
        11926,
        12295
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3546": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12087,
        12289
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3547": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 39,
      "value": "0x40"
    },
    "3549": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3558": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3561": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3563": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3564": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "ADD",
      "path": "24"
    },
    "3565": {
      "op": "MSTORE"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "op": "PUSH14",
      "value": "0x4A6F62206E6F7420666F756E6421"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3593": {
      "op": "DUP3"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "MSTORE"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3598": {
      "op": "ADD"
    },
    "3599": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        12254,
        12278
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3602": {
      "op": "JUMP"
    },
    "3603": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13179,
        13274
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3604": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13223,
        13230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3606": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13253
      ],
      "op": "ADDRESS",
      "path": "24",
      "statement": 40
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "op": "SUB"
    },
    "3615": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13265
      ],
      "op": "AND",
      "path": "24"
    },
    "3616": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13265
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18160DDD"
    },
    "3621": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3623": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3624": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3625": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "3630": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "AND",
      "path": "24"
    },
    "3631": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "3633": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "SHL",
      "path": "24"
    },
    "3634": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3635": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3636": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3638": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "ADD",
      "path": "24"
    },
    "3639": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3641": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3643": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3644": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3645": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3646": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "SUB",
      "path": "24"
    },
    "3647": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3648": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP7",
      "path": "24"
    },
    "3649": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "GAS",
      "path": "24"
    },
    "3650": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "3651": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3652": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3653": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3654": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8D2"
    },
    "3657": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3658": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3659": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3661": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3662": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3663": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3664": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3666": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13249,
        13267
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3667": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3668": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9004,
        9035
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 41,
      "value": "0xE5D"
    },
    "3671": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9016,
        9026
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3672": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9028,
        9034
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3673": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9004,
        9015
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2009"
    },
    "3676": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9004,
        9035
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3677": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9004,
        9035
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3678": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        8949,
        9042
      ],
      "op": "POP",
      "path": "24"
    },
    "3679": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        8949,
        9042
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3680": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12823,
        12930
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3681": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12875,
        12882
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3683": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12922,
        12923
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 42,
      "value": "0x1"
    },
    "3685": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12901,
        12919
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "3687": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12901,
        12919
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3688": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12901,
        12923
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8F6"
    },
    "3691": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12901,
        12923
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3692": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12901,
        12923
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3693": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12901,
        12923
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2917"
    },
    "3696": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12901,
        12923
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3697": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3698": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9148,
        9158
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3699": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9105,
        9124
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3701": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3702": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3703": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3704": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9147
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "3706": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3708": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3709": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3711": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3712": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3713": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9127,
        9159
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3714": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9177,
        9192
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 43
    },
    "3715": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xECE"
    },
    "3718": {
      "branch": 122,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3719": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3721": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3728": {
      "op": "SHL"
    },
    "3729": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3730": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3733": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3735": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3736": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "ADD",
      "path": "24"
    },
    "3737": {
      "op": "MSTORE"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3742": {
      "op": "DUP3"
    },
    "3743": {
      "op": "ADD"
    },
    "3744": {
      "op": "MSTORE"
    },
    "3745": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3780": {
      "op": "DUP3"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3785": {
      "op": "ADD"
    },
    "3786": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3789": {
      "op": "JUMP"
    },
    "3790": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9169,
        9224
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3791": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9235,
        9262
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3793": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3794": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3795": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3796": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9275
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "3798": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3800": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3801": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3803": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3804": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9265,
        9288
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3805": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9317,
        9333
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 44,
      "value": "0x3"
    },
    "3807": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9317,
        9333
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3808": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9317,
        9333
      ],
      "op": "ADD",
      "path": "24"
    },
    "3809": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9317,
        9333
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3810": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9307,
        9333
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3811": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9307,
        9333
      ],
      "op": "GT",
      "path": "24"
    },
    "3812": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9307,
        9333
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3813": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF30"
    },
    "3816": {
      "branch": 123,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3817": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3819": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3826": {
      "op": "SHL"
    },
    "3827": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3828": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3831": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3833": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3834": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "ADD",
      "path": "24"
    },
    "3835": {
      "op": "MSTORE"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3840": {
      "op": "DUP3"
    },
    "3841": {
      "op": "ADD"
    },
    "3842": {
      "op": "MSTORE"
    },
    "3843": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "MSTORE"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3887": {
      "op": "JUMP"
    },
    "3888": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9299,
        9368
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3889": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9395,
        9396
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 45,
      "value": "0x0"
    },
    "3891": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9386,
        9392
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3892": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9386,
        9396
      ],
      "op": "GT",
      "path": "24"
    },
    "3893": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF50"
    },
    "3896": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3897": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3899": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3906": {
      "op": "SHL"
    },
    "3907": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3908": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3909": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3911": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "ADD",
      "path": "24"
    },
    "3912": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "3915": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3916": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x292A"
    },
    "3919": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9378,
        9434
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3920": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9378,
        9434
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3921": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9520,
        9529
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3922": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9520,
        9540
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3924": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9520,
        9540
      ],
      "op": "ADD",
      "path": "24"
    },
    "3925": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9520,
        9540
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3926": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9544,
        9545
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3928": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9520,
        9545
      ],
      "op": "SUB",
      "path": "24"
    },
    "3929": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9516,
        10481
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1033"
    },
    "3932": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9516,
        10481
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3933": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9602,
        9614
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 46,
      "value": "0x70"
    },
    "3935": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9602,
        9614
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3936": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9584,
        9614
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF69"
    },
    "3939": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9584,
        9614
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3940": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9584,
        9599
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "3941": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9584,
        9614
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2819"
    },
    "3944": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9584,
        9614
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3945": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9584,
        9614
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3946": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9561,
        9581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3948": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9561,
        9581
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3949": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9561,
        9581
      ],
      "op": "ADD",
      "path": "24"
    },
    "3950": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9561,
        9614
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3951": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9728
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "3953": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9728
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3954": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9728
      ],
      "op": "ADD",
      "path": "24"
    },
    "3955": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9728
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3956": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9690,
        9709
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3958": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9690,
        9709
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3959": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF81"
    },
    "3962": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3963": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9731,
        9737
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3964": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9731,
        9737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3965": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2917"
    },
    "3968": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9712,
        9737
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3969": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9712,
        9737
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3970": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9777
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 47,
      "value": "0x65"
    },
    "3972": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9777
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3973": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9886,
        9896
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3975": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9886,
        9896
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3976": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3978": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3979": {
      "op": "PUSH4",
      "value": "0xB6CEECB7"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3986": {
      "op": "SHL"
    },
    "3987": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3988": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3989": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9814,
        9824
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3990": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3992": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3993": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "ADD",
      "path": "24"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3997": {
      "op": "DUP2"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "DUP5"
    },
    "4000": {
      "op": "SWAP1"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9871,
        9896
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4003": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9871,
        9896
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4004": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9871,
        9896
      ],
      "op": "LT",
      "path": "24"
    },
    "4005": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9871,
        9896
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4008": {
      "op": "DUP3"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "op": "MSTORE"
    },
    "4011": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9690,
        9737
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4012": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9690,
        9737
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4020": {
      "op": "SHL"
    },
    "4021": {
      "op": "SUB"
    },
    "4022": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9777
      ],
      "op": "AND",
      "path": "24"
    },
    "4023": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9777
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4024": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9796
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB6CEECB7"
    },
    "4029": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9796
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4032": {
      "op": "ADD"
    },
    "4033": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4035": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4037": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4038": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4039": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4040": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "SUB",
      "path": "24"
    },
    "4041": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4042": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4044": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4045": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4046": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "4047": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4048": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4049": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4050": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFDA"
    },
    "4053": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4054": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4056": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4057": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4058": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4059": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "POP",
      "path": "24"
    },
    "4060": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "GAS",
      "path": "24"
    },
    "4061": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "CALL",
      "path": "24"
    },
    "4062": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4063": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4064": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4065": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFEE"
    },
    "4068": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4069": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4070": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4072": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4073": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "4074": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4075": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4077": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4078": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9751,
        9910
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "op": "POP"
    },
    "4083": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9958,
        9978
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 48,
      "value": "0x4"
    },
    "4085": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9958,
        9978
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4086": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9958,
        9978
      ],
      "op": "ADD",
      "path": "24"
    },
    "4087": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9958,
        9978
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4088": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4090": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4091": {
      "op": "SWAP1"
    },
    "4092": {
      "op": "DUP2"
    },
    "4093": {
      "op": "MSTORE"
    },
    "4094": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9946,
        9956
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9946,
        9956
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4096": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "4129": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4132": {
      "op": "ADD"
    },
    "4133": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4134": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4136": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4137": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4138": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4139": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "SUB",
      "path": "24"
    },
    "4140": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4141": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9930,
        9979
      ],
      "op": "LOG2",
      "path": "24"
    },
    "4142": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9547,
        10017
      ],
      "op": "POP",
      "path": "24"
    },
    "4143": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "4144": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "POP",
      "path": "24"
    },
    "4145": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "POP",
      "path": "24"
    },
    "4146": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4147": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9516,
        10481
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4148": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10159,
        10168
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 49
    },
    "4149": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10159,
        10179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4151": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10159,
        10179
      ],
      "op": "ADD",
      "path": "24"
    },
    "4152": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10159,
        10179
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4153": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10140,
        10155
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "4154": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10140,
        10179
      ],
      "op": "LT",
      "path": "24"
    },
    "4155": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10140,
        10179
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4156": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1087"
    },
    "4159": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4160": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4162": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4169": {
      "op": "SHL"
    },
    "4170": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4171": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4174": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4176": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4177": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "ADD",
      "path": "24"
    },
    "4178": {
      "op": "MSTORE"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4183": {
      "op": "DUP3"
    },
    "4184": {
      "op": "ADD"
    },
    "4185": {
      "op": "MSTORE"
    },
    "4186": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4221": {
      "op": "DUP3"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4226": {
      "op": "ADD"
    },
    "4227": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "4230": {
      "op": "JUMP"
    },
    "4231": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10115,
        10237
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4232": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10272,
        10278
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 50
    },
    "4233": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10261
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4234": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10268
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4236": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10268
      ],
      "op": "ADD",
      "path": "24"
    },
    "4237": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10268
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4239": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4240": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4241": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4242": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x109B"
    },
    "4245": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4246": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4247": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2917"
    },
    "4250": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        10252,
        10278
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4251": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4252": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4253": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4254": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10252,
        10278
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10292,
        10317
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 51,
      "value": "0x10AB"
    },
    "4259": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10292,
        10317
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4260": {
      "op": "POP"
    },
    "4261": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10298,
        10308
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4262": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10310,
        10316
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4263": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10292,
        10297
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F2A"
    },
    "4266": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        10292,
        10317
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4267": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10292,
        10317
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4268": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 52,
      "value": "0x40"
    },
    "4270": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4271": {
      "op": "DUP4"
    },
    "4272": {
      "op": "DUP2"
    },
    "4273": {
      "op": "MSTORE"
    },
    "4274": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10399,
        10409
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4275": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10399,
        10409
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4276": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "4309": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4315": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4316": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4317": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4318": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "SUB",
      "path": "24"
    },
    "4319": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4320": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10384,
        10418
      ],
      "op": "LOG2",
      "path": "24"
    },
    "4321": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        10487
      ],
      "op": "POP",
      "path": "24"
    },
    "4322": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9095,
        10487
      ],
      "op": "POP",
      "path": "24"
    },
    "4323": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9048,
        10487
      ],
      "op": "POP",
      "path": "24"
    },
    "4324": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        9048,
        10487
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4325": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4326": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6387,
        6397
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4327": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6357,
        6368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4329": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4330": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4331": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4332": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6386
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "4334": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4336": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4337": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4339": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4340": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4341": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6371,
        6398
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4342": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6316,
        6345
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "4344": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6316,
        6345
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4345": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6417,
        6425
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 53
    },
    "4346": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6417,
        6425
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4347": {
      "branch": 127,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6417,
        6425
      ],
      "op": "SUB",
      "path": "24"
    },
    "4348": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x113E"
    },
    "4351": {
      "branch": 127,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4352": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4354": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4363": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4366": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4368": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4369": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "ADD",
      "path": "24"
    },
    "4370": {
      "op": "MSTORE"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4375": {
      "op": "DUP3"
    },
    "4376": {
      "op": "ADD"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "op": "PUSH20",
      "value": "0x2AB9B2B9103737BA103932B3B4B9BA32B932B217"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4401": {
      "op": "SHL"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "op": "MSTORE"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4409": {
      "op": "ADD"
    },
    "4410": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "4413": {
      "op": "JUMP"
    },
    "4414": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6409,
        6450
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4415": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6485,
        6486
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 54,
      "value": "0x0"
    },
    "4417": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6479
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4418": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6479
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4419": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6480,
        6481
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4421": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4422": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4423": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "LT",
      "path": "24"
    },
    "4424": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1153"
    },
    "4427": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4428": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1153"
    },
    "4431": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "4434": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6468,
        6482
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4435": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4436": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4437": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "POP",
      "path": "24"
    },
    "4438": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4440": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "MUL",
      "path": "24"
    },
    "4441": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "ADD",
      "path": "24"
    },
    "4442": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6482
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "4443": {
      "branch": 128,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6468,
        6486
      ],
      "op": "GT",
      "path": "24"
    },
    "4444": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11A7"
    },
    "4447": {
      "branch": 128,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4448": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4450": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4457": {
      "op": "SHL"
    },
    "4458": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4459": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4462": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4464": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4465": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "ADD",
      "path": "24"
    },
    "4466": {
      "op": "MSTORE"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4471": {
      "op": "DUP3"
    },
    "4472": {
      "op": "ADD"
    },
    "4473": {
      "op": "MSTORE"
    },
    "4474": {
      "op": "PUSH32",
      "value": "0x4361706163697479206D7573742062652067726561746572207A65726F2E0000"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4509": {
      "op": "DUP3"
    },
    "4510": {
      "op": "ADD"
    },
    "4511": {
      "op": "MSTORE"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "4518": {
      "op": "JUMP"
    },
    "4519": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6460,
        6521
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4520": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6552,
        6576
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 55,
      "value": "0x66"
    },
    "4522": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6552,
        6576
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4529": {
      "op": "SHL"
    },
    "4530": {
      "op": "SUB"
    },
    "4531": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6552,
        6576
      ],
      "op": "AND",
      "path": "24"
    },
    "4532": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11FF"
    },
    "4535": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4536": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4538": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4547": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4550": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4552": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4553": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "ADD",
      "path": "24"
    },
    "4554": {
      "op": "MSTORE"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "ADD"
    },
    "4561": {
      "op": "MSTORE"
    },
    "4562": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220636F6E7472616374206E6F7420736574210000000000"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4597": {
      "op": "DUP3"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "MSTORE"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4602": {
      "op": "ADD"
    },
    "4603": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "4606": {
      "op": "JUMP"
    },
    "4607": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6531,
        6643
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4608": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6715
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "4610": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6715
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4611": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4613": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4614": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4615": {
      "op": "PUSH4",
      "value": "0x2909069B"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4624": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4625": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4626": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4627": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6654,
        6686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4629": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6654,
        6686
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4636": {
      "op": "SHL"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6715
      ],
      "op": "AND",
      "path": "24"
    },
    "4639": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6715
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4640": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6756
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA4241A6C"
    },
    "4645": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6756
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4646": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4648": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4649": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4650": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ADD",
      "path": "24"
    },
    "4651": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4652": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6654,
        6686
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4653": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6654,
        6686
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4654": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4655": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4656": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4657": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4658": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SUB",
      "path": "24"
    },
    "4659": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ADD",
      "path": "24"
    },
    "4660": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4661": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6715
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4662": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "GAS",
      "path": "24"
    },
    "4663": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "4664": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4665": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4666": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4667": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1248"
    },
    "4670": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4671": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4672": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4674": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4675": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "4676": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4677": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4679": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4680": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4681": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "POP",
      "path": "24"
    },
    "4682": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "POP",
      "path": "24"
    },
    "4683": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "POP",
      "path": "24"
    },
    "4684": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "POP",
      "path": "24"
    },
    "4685": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4687": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4688": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4689": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4691": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4692": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "4693": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "4695": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4696": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4697": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4698": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ADD",
      "path": "24"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4701": {
      "op": "NOT"
    },
    "4702": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "AND",
      "path": "24"
    },
    "4703": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4704": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ADD",
      "path": "24"
    },
    "4705": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4707": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4708": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1270"
    },
    "4711": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4712": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4713": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4714": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "ADD",
      "path": "24"
    },
    "4715": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4716": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2864"
    },
    "4719": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6689,
        6758
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4720": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6689,
        6758
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4721": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6654,
        6758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4722": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6654,
        6758
      ],
      "op": "POP",
      "path": "24"
    },
    "4723": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6768,
        6798
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4725": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6815,
        6830
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4726": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6815,
        6837
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4727": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH8",
      "path": "24",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4736": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4737": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "GT",
      "path": "24"
    },
    "4738": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4739": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x128E"
    },
    "4742": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4743": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x128E"
    },
    "4746": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23ED"
    },
    "4749": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6801,
        6838
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4750": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4751": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4753": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4754": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4755": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4756": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4757": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4758": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4759": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4761": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "MUL",
      "path": "24"
    },
    "4762": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4764": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "ADD",
      "path": "24"
    },
    "4765": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4766": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "ADD",
      "path": "24"
    },
    "4767": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4769": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4770": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4771": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4772": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12B7"
    },
    "4775": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4776": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4777": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4779": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "ADD",
      "path": "24"
    },
    "4780": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4782": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4783": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "MUL",
      "path": "24"
    },
    "4784": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4785": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "4786": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4787": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "4788": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "ADD",
      "path": "24"
    },
    "4789": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4792": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6801,
        6838
      ],
      "op": "POP",
      "path": "24"
    },
    "4793": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6768,
        6838
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4794": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6768,
        6838
      ],
      "op": "POP",
      "path": "24"
    },
    "4795": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6854,
        6863
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4797": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4798": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6873,
        6888
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4799": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6873,
        6895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4800": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6869,
        6870
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4801": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6869,
        6895
      ],
      "op": "LT",
      "path": "24"
    },
    "4802": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4803": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x132A"
    },
    "4806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4807": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6955
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 56,
      "value": "0x76"
    },
    "4809": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6971
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6972,
        6973
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4813": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4814": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4815": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4816": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "LT",
      "path": "24"
    },
    "4817": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12DC"
    },
    "4820": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4821": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12DC"
    },
    "4824": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "4827": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6956,
        6974
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4828": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4829": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4831": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "MUL",
      "path": "24"
    },
    "4832": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4834": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "ADD",
      "path": "24"
    },
    "4835": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "ADD",
      "path": "24"
    },
    "4836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6956,
        6974
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4843": {
      "op": "SHL"
    },
    "4844": {
      "op": "SUB"
    },
    "4845": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "AND",
      "path": "24"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4852": {
      "op": "SHL"
    },
    "4853": {
      "op": "SUB"
    },
    "4854": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "AND",
      "path": "24"
    },
    "4855": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4856": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4857": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4859": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "ADD",
      "path": "24"
    },
    "4860": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4861": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4862": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4863": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4865": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "ADD",
      "path": "24"
    },
    "4866": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4868": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4869": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6935,
        6975
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4870": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6929
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4871": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6930,
        6931
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4872": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4873": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4875": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "LT",
      "path": "24"
    },
    "4876": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1317"
    },
    "4879": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4880": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1317"
    },
    "4883": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "4886": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6916,
        6932
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4887": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4888": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4890": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4891": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4892": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "MUL",
      "path": "24"
    },
    "4893": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4894": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4895": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4896": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "ADD",
      "path": "24"
    },
    "4897": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6932
      ],
      "op": "ADD",
      "path": "24"
    },
    "4898": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6975
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4899": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6897,
        6900
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 57,
      "value": "0x1"
    },
    "4901": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6897,
        6900
      ],
      "op": "ADD",
      "path": "24"
    },
    "4902": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12BD"
    },
    "4905": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4906": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6849,
        6986
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 58,
      "value": "0x40"
    },
    "4910": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4911": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4912": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC0"
    },
    "4914": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4915": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "4916": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4917": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4918": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7082,
        7092
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "4920": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7082,
        7092
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4921": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4922": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4923": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7114,
        7124
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4924": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4926": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4927": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "4928": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4929": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4930": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4931": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "4932": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4934": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4935": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "4937": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4938": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "4939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7206,
        7217
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH8",
      "path": "24",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4949": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4950": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "GT",
      "path": "24"
    },
    "4951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4952": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1363"
    },
    "4955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4956": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1363"
    },
    "4959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23ED"
    },
    "4962": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7192,
        7225
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4963": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4964": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4966": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4967": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4969": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4970": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4971": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4972": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4974": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "MUL",
      "path": "24"
    },
    "4975": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4977": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "ADD",
      "path": "24"
    },
    "4978": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4979": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "ADD",
      "path": "24"
    },
    "4980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4982": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4983": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4984": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x138C"
    },
    "4988": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4989": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4990": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4992": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "ADD",
      "path": "24"
    },
    "4993": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4995": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4996": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "MUL",
      "path": "24"
    },
    "4997": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4998": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "4999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5000": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "5001": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "ADD",
      "path": "24"
    },
    "5002": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5003": {
      "op": "POP"
    },
    "5004": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5005": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7225
      ],
      "op": "POP",
      "path": "24"
    },
    "5006": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5007": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5008": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5010": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5011": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7251,
        7262
      ],
      "op": "DUP8",
      "path": "24"
    },
    "5012": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7251,
        7262
      ],
      "op": "DUP8",
      "path": "24"
    },
    "5013": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5014": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5015": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5017": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MUL",
      "path": "24"
    },
    "5018": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5020": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5021": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5023": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5024": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5025": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5026": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5027": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5029": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5030": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5031": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5032": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5033": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5034": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5035": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5036": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5037": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5038": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5040": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5041": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5042": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5043": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5045": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MUL",
      "path": "24"
    },
    "5046": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5047": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5048": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5049": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "5050": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5052": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5053": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5054": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5055": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5056": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5059": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP6",
      "path": "24"
    },
    "5060": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7286,
        7290
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "5065": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5067": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5068": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5069": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5070": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5071": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5072": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7060,
        7301
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5073": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7056
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "5075": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7046,
        7056
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5076": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5077": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5078": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7045
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "5080": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5081": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5082": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5084": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5085": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5086": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5087": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5088": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP6",
      "path": "24"
    },
    "5089": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5090": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5091": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5092": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP6",
      "path": "24"
    },
    "5093": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP6",
      "path": "24"
    },
    "5094": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5095": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5096": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5097": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5098": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5099": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5100": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5107": {
      "op": "SHL"
    },
    "5108": {
      "op": "SUB"
    },
    "5109": {
      "op": "NOT"
    },
    "5110": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "AND",
      "path": "24"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5117": {
      "op": "SHL"
    },
    "5118": {
      "op": "SUB"
    },
    "5119": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5120": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5121": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "AND",
      "path": "24"
    },
    "5122": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5123": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5124": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5125": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "OR",
      "path": "24"
    },
    "5126": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5127": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5128": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5129": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5130": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5131": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5132": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5133": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5134": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5135": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5136": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7057
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5137": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1422"
    },
    "5140": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5141": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "5143": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP7",
      "path": "24"
    },
    "5144": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5145": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5148": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5149": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5150": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x222A"
    },
    "5153": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7041,
        7301
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5154": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "5158": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5159": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5160": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5161": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5162": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5163": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x143E"
    },
    "5166": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5167": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "5169": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5170": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5171": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5172": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5174": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5175": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5176": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5177": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x222A"
    },
    "5181": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7041,
        7301
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5182": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5183": {
      "op": "POP"
    },
    "5184": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "5186": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5187": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5188": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5189": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5190": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5191": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x145A"
    },
    "5194": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5195": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5197": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5198": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5199": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5200": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5202": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5203": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5204": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5205": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x228F"
    },
    "5209": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7041,
        7301
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5210": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5211": {
      "op": "POP"
    },
    "5212": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA0"
    },
    "5214": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5215": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5216": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5217": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5218": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5219": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "5221": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5222": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5223": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ADD",
      "path": "24"
    },
    "5224": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5225": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5228": {
      "op": "NOT"
    },
    "5229": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "AND",
      "path": "24"
    },
    "5230": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5231": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5232": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5233": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5234": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5235": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5236": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "OR",
      "path": "24"
    },
    "5237": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5238": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7041,
        7301
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5239": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7340
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 59,
      "value": "0x69"
    },
    "5241": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7330,
        7340
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5242": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5244": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5245": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x1B59636C5DEB9B679668AD7D3A3B892E3FC3B4A8EA6E10F8D31CE69C4278E8FC"
    },
    "5278": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5279": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14AB"
    },
    "5282": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5283": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7342,
        7357
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "5284": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7342,
        7357
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5285": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7359,
        7374
      ],
      "op": "DUP7",
      "path": "24"
    },
    "5286": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7359,
        7374
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5287": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x296B"
    },
    "5290": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7317,
        7375
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5291": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5292": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5294": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5295": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5296": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5297": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "SUB",
      "path": "24"
    },
    "5298": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5299": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7317,
        7375
      ],
      "op": "LOG2",
      "path": "24"
    },
    "5300": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7395
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 60,
      "value": "0x69"
    },
    "5302": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5303": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5304": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5305": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7395
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5307": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14C3"
    },
    "5310": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5311": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28FE"
    },
    "5314": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7385,
        7397
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5315": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5316": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5317": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5318": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7385,
        7397
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7415,
        7428
      ],
      "op": "SWAP1",
      "path": "24",
      "statement": 61
    },
    "5321": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7415,
        7428
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "5322": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6232,
        7435
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "op": "POP"
    },
    "5325": {
      "op": "POP"
    },
    "5326": {
      "op": "POP"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        6232,
        7435
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5330": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5331": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5333": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x37"
    },
    "5335": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5336": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5337": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C7"
    },
    "5340": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5341": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B0"
    },
    "5344": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5345": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5346": {
      "offset": [
        3001,
        3025
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "5348": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        3001,
        3025
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5355": {
      "op": "SHL"
    },
    "5356": {
      "op": "SUB"
    },
    "5357": {
      "offset": [
        3001,
        3025
      ],
      "op": "AND",
      "path": "24"
    },
    "5358": {
      "offset": [
        2987,
        2997
      ],
      "op": "CALLER",
      "path": "24"
    },
    "5359": {
      "offset": [
        2987,
        3025
      ],
      "op": "EQ",
      "path": "24"
    },
    "5360": {
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x150B"
    },
    "5363": {
      "offset": [
        2966,
        3089
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5364": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5366": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "offset": [
        2966,
        3089
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5375": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5376": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5378": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "ADD",
      "path": "24"
    },
    "5379": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "5382": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5383": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x298C"
    },
    "5386": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        2966,
        3089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5387": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2966,
        3089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5388": {
      "offset": [
        2076,
        2089
      ],
      "op": "PUSH11",
      "path": "24",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "5400": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10922,
        10934
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 63,
      "value": "0x6E"
    },
    "5402": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10922,
        10934
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5403": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10919
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1523"
    },
    "5406": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "5408": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5409": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5410": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5411": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10919
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5412": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10934
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x152D"
    },
    "5415": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10934
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5416": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10934
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5417": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10934
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2819"
    },
    "5420": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10906,
        10934
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5421": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10934
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5422": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10948
      ],
      "op": "GT",
      "path": "24"
    },
    "5423": {
      "branch": 129,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10906,
        10948
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5424": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x157B"
    },
    "5427": {
      "branch": 129,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5428": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5430": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5431": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5437": {
      "op": "SHL"
    },
    "5438": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5439": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5442": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5444": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5445": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "ADD",
      "path": "24"
    },
    "5446": {
      "op": "MSTORE"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5451": {
      "op": "DUP3"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "op": "MSTORE"
    },
    "5454": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D20737570706C79207265616368656421000000000000000000"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5489": {
      "op": "DUP3"
    },
    "5490": {
      "op": "ADD"
    },
    "5491": {
      "op": "MSTORE"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5494": {
      "op": "ADD"
    },
    "5495": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "5498": {
      "op": "JUMP"
    },
    "5499": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10885,
        10997
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5500": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11043
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "5502": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11036,
        11043
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5503": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11012,
        11032
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "5505": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11012,
        11032
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5506": {
      "branch": 130,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11012,
        11043
      ],
      "op": "LT",
      "path": "24"
    },
    "5507": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11008,
        11144
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15B1"
    },
    "5510": {
      "branch": 130,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11008,
        11144
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5511": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11078,
        11082
      ],
      "op": "PUSH8",
      "path": "24",
      "value": "0xDE0B6B3A7640000"
    },
    "5520": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11063,
        11075
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "5522": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11063,
        11075
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5523": {
      "branch": 131,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11063,
        11082
      ],
      "op": "GT",
      "path": "24"
    },
    "5524": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11059,
        11134
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5525": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11059,
        11134
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15B1"
    },
    "5528": {
      "branch": 131,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11059,
        11134
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5529": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11118,
        11119
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 64,
      "value": "0x2"
    },
    "5531": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11114
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "5533": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11114
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5535": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5536": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5537": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5538": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15AB"
    },
    "5541": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5542": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5543": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2842"
    },
    "5546": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11102,
        11119
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5547": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5548": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5549": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5550": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11102,
        11119
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5551": {
      "op": "POP"
    },
    "5552": {
      "op": "POP"
    },
    "5553": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11059,
        11134
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5554": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11154,
        11182
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5556": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11207,
        11210
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "5558": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "5560": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11198
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5561": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11201,
        11203
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x28"
    },
    "5563": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11203
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15C4"
    },
    "5566": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11203
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5567": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11203
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5568": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11203
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29D2"
    },
    "5571": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11186,
        11203
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5572": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11186,
        11203
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5573": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11210
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15CE"
    },
    "5576": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11210
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5577": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11210
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5578": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11210
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2842"
    },
    "5581": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11185,
        11210
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5582": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11210
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5583": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11154,
        11210
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5584": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11154,
        11210
      ],
      "op": "POP",
      "path": "24"
    },
    "5585": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11220,
        11245
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5587": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11270,
        11273
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "5589": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11261
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "5591": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11261
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5592": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11264,
        11266
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3C"
    },
    "5594": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11266
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15E3"
    },
    "5597": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11266
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5598": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11266
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5599": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11266
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29D2"
    },
    "5602": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11249,
        11266
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5603": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11249,
        11266
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5604": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11248,
        11273
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15ED"
    },
    "5607": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11248,
        11273
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5608": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11248,
        11273
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5609": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11248,
        11273
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2842"
    },
    "5612": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11248,
        11273
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5613": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11248,
        11273
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5614": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11220,
        11273
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5615": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11220,
        11273
      ],
      "op": "POP",
      "path": "24"
    },
    "5616": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11337,
        11360
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5618": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11398,
        11414
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5619": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11398,
        11421
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5620": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11363,
        11383
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5621": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11363,
        11421
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15FE"
    },
    "5624": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11363,
        11421
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5625": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11363,
        11421
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5626": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11363,
        11421
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2842"
    },
    "5629": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11363,
        11421
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5630": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11363,
        11421
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5631": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11337,
        11421
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5632": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11337,
        11421
      ],
      "op": "POP",
      "path": "24"
    },
    "5633": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11436,
        11445
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5635": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5636": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11455,
        11471
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5637": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11455,
        11478
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5638": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11451,
        11452
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5639": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11451,
        11478
      ],
      "op": "LT",
      "path": "24"
    },
    "5640": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5641": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1637"
    },
    "5644": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5645": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11499,
        11542
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 65,
      "value": "0x162F"
    },
    "5648": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11521
      ],
      "op": "DUP6",
      "path": "24"
    },
    "5649": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11522,
        11523
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5650": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5651": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5652": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5653": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "LT",
      "path": "24"
    },
    "5654": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1621"
    },
    "5657": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5658": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1621"
    },
    "5661": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "5664": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11505,
        11524
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5665": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5666": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5668": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "MUL",
      "path": "24"
    },
    "5669": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5671": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "ADD",
      "path": "24"
    },
    "5672": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "ADD",
      "path": "24"
    },
    "5673": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11505,
        11524
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5674": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11526,
        11541
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5675": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11499,
        11504
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F2A"
    },
    "5678": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11499,
        11542
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5679": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11499,
        11542
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5680": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11480,
        11483
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 66,
      "value": "0x1"
    },
    "5682": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11480,
        11483
      ],
      "op": "ADD",
      "path": "24"
    },
    "5683": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1603"
    },
    "5686": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5687": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5688": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11431,
        11553
      ],
      "op": "POP",
      "path": "24"
    },
    "5689": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11610,
        11619
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5691": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5692": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11629,
        11637
      ],
      "op": "DUP8",
      "path": "24"
    },
    "5693": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11629,
        11644
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5694": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11625,
        11626
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5695": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11625,
        11644
      ],
      "op": "LT",
      "path": "24"
    },
    "5696": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5697": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16A4"
    },
    "5700": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5701": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11665,
        11679
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5703": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11744,
        11758
      ],
      "op": "DUP7",
      "path": "24"
    },
    "5704": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11707,
        11724
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5705": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11701
      ],
      "op": "DUP10",
      "path": "24"
    },
    "5706": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11702,
        11703
      ],
      "op": "DUP5",
      "path": "24"
    },
    "5707": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5708": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5709": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5710": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "LT",
      "path": "24"
    },
    "5711": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x165A"
    },
    "5714": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5715": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x165A"
    },
    "5718": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "5721": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11684,
        11704
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5722": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5723": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5725": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "MUL",
      "path": "24"
    },
    "5726": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5728": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "ADD",
      "path": "24"
    },
    "5729": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "ADD",
      "path": "24"
    },
    "5730": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11704
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5731": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11724
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x166C"
    },
    "5734": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11724
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5735": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11724
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5736": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11724
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29D2"
    },
    "5739": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11684,
        11724
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5740": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11684,
        11724
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5741": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11683,
        11758
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1676"
    },
    "5744": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11683,
        11758
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5745": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11683,
        11758
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5746": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11683,
        11758
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2842"
    },
    "5749": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11683,
        11758
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5750": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11683,
        11758
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5751": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11665,
        11759
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5752": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11665,
        11759
      ],
      "op": "POP",
      "path": "24"
    },
    "5753": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11773,
        11799
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 67,
      "value": "0x169B"
    },
    "5756": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11787
      ],
      "op": "DUP10",
      "path": "24"
    },
    "5757": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11788,
        11789
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5758": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5759": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5760": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5761": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "LT",
      "path": "24"
    },
    "5762": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x168D"
    },
    "5765": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5766": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x168D"
    },
    "5769": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x282C"
    },
    "5772": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11779,
        11790
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5773": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5774": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5776": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "MUL",
      "path": "24"
    },
    "5777": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5779": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "ADD",
      "path": "24"
    },
    "5780": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "ADD",
      "path": "24"
    },
    "5781": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11779,
        11790
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5782": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11792,
        11798
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5783": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11773,
        11778
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F2A"
    },
    "5786": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11773,
        11799
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5787": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11773,
        11799
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5788": {
      "op": "POP"
    },
    "5789": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11646,
        11649
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 68,
      "value": "0x1"
    },
    "5791": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11646,
        11649
      ],
      "op": "ADD",
      "path": "24"
    },
    "5792": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x163B"
    },
    "5795": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5796": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11810
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5797": {
      "op": "POP"
    },
    "5798": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11840
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 69,
      "value": "0x71"
    },
    "5800": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5801": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5802": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5803": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11840
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5805": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16B5"
    },
    "5808": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5809": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28FE"
    },
    "5812": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11820,
        11842
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5813": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5814": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5815": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5816": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "POP",
      "path": "24"
    },
    "5817": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5818": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11820,
        11842
      ],
      "op": "POP",
      "path": "24"
    },
    "5819": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10875,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5820": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10875,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5821": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10875,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5822": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5823": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5824": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5825": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10664,
        11849
      ],
      "op": "POP",
      "path": "24"
    },
    "5826": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        10664,
        11849
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5827": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5828": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5829": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5831": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5832": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5833": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5834": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5836": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5838": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5839": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5840": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5841": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5843": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5844": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5845": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "op": "SUB"
    },
    "5854": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5855": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "5856": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5857": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5858": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5859": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5860": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5861": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5862": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5863": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5864": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5865": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5866": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5867": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 70
    },
    "5868": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5869": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "5870": {
      "branch": 139,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5871": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1748"
    },
    "5874": {
      "branch": 139,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5875": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5877": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5884": {
      "op": "SHL"
    },
    "5885": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5886": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5889": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5891": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5892": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "5893": {
      "op": "MSTORE"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5898": {
      "op": "DUP3"
    },
    "5899": {
      "op": "ADD"
    },
    "5900": {
      "op": "MSTORE"
    },
    "5901": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5936": {
      "op": "DUP3"
    },
    "5937": {
      "op": "ADD"
    },
    "5938": {
      "op": "MSTORE"
    },
    "5939": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5947": {
      "op": "SHL"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5950": {
      "op": "DUP3"
    },
    "5951": {
      "op": "ADD"
    },
    "5952": {
      "op": "MSTORE"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "5959": {
      "op": "JUMP"
    },
    "5960": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5961": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 71,
      "value": "0x87D"
    },
    "5964": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5965": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5967": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5968": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "5969": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B71"
    },
    "5972": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5973": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5974": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5976": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5977": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 72,
      "value": "0x858"
    },
    "5980": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5981": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5982": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5983": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D27"
    },
    "5986": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5987": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5988": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4860,
        4870
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 73
    },
    "5989": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5991": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5992": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5993": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5994": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4859
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "5996": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5998": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5999": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6001": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6002": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6003": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4871
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6004": {
      "branch": 132,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4844,
        4876
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6005": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17C0"
    },
    "6008": {
      "branch": 132,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6009": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6011": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6018": {
      "op": "SHL"
    },
    "6019": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6020": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6023": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6025": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6026": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "ADD",
      "path": "24"
    },
    "6027": {
      "op": "MSTORE"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6032": {
      "op": "DUP3"
    },
    "6033": {
      "op": "ADD"
    },
    "6034": {
      "op": "MSTORE"
    },
    "6035": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6070": {
      "op": "DUP3"
    },
    "6071": {
      "op": "ADD"
    },
    "6072": {
      "op": "MSTORE"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6075": {
      "op": "ADD"
    },
    "6076": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "6079": {
      "op": "JUMP"
    },
    "6080": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4836,
        4905
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6081": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 74,
      "value": "0x40"
    },
    "6083": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6084": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6085": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "6087": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6088": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6089": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6090": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6091": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4962,
        4975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "6093": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4962,
        4975
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6094": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4962,
        4975
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6095": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6096": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6097": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6098": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5002,
        5012
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6099": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6101": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6102": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6103": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6104": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6105": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6106": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6107": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6108": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP8",
      "path": "24"
    },
    "6109": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6110": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP9",
      "path": "24"
    },
    "6111": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6112": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6113": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5081,
        5083
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x32"
    },
    "6115": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "6117": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP9",
      "path": "24"
    },
    "6118": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6119": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6120": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6121": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6124": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "6125": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "DUP7",
      "path": "24"
    },
    "6126": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6127": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4921
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x72"
    },
    "6129": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6130": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6131": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "DUP9",
      "path": "24"
    },
    "6132": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "DUP7",
      "path": "24"
    },
    "6133": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        4936
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6134": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "6135": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6136": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "DUP9",
      "path": "24"
    },
    "6137": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6138": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6139": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6140": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "6142": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "DUP9",
      "path": "24"
    },
    "6143": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6144": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6145": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6152": {
      "op": "SHL"
    },
    "6153": {
      "op": "SUB"
    },
    "6154": {
      "op": "NOT"
    },
    "6155": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "AND",
      "path": "24"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6162": {
      "op": "SHL"
    },
    "6163": {
      "op": "SUB"
    },
    "6164": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6165": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6166": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "AND",
      "path": "24"
    },
    "6167": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6168": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6169": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6170": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "OR",
      "path": "24"
    },
    "6171": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6172": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6173": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6174": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "6176": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "DUP8",
      "path": "24"
    },
    "6177": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6178": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6179": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6180": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "6182": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6183": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "6184": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "ADD",
      "path": "24"
    },
    "6185": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6186": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6189": {
      "op": "NOT"
    },
    "6190": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "AND",
      "path": "24"
    },
    "6191": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4939,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "6193": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6194": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "6195": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "AND",
      "path": "24"
    },
    "6196": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "6197": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6198": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "6199": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "OR",
      "path": "24"
    },
    "6200": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6201": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "6202": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4916,
        5094
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6203": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5135,
        5148
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 75
    },
    "6204": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5135,
        5148
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6205": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6206": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6207": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6208": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5120
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "6210": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6211": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6212": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6213": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6214": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6215": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5132
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6216": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5148
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6217": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5148
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6218": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5105,
        5148
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6219": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5135,
        5148
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6220": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5135,
        5148
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6221": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 76,
      "value": "0x1855"
    },
    "6224": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5135,
        5148
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6225": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28FE"
    },
    "6228": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        5158,
        5173
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6229": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6230": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6231": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6232": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "POP",
      "path": "24"
    },
    "6233": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6234": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5158,
        5173
      ],
      "op": "POP",
      "path": "24"
    },
    "6235": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4717,
        5180
      ],
      "op": "POP",
      "path": "24"
    },
    "6236": {
      "fn": "SmartnodesCore.createUser",
      "jump": "o",
      "offset": [
        4717,
        5180
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6237": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12720,
        12817
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6238": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12767,
        12774
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6240": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12809,
        12810
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 77,
      "value": "0x1"
    },
    "6242": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12793,
        12806
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "6244": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12793,
        12806
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6245": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12793,
        12810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8F6"
    },
    "6248": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12793,
        12810
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6249": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12793,
        12810
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6250": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12793,
        12810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2917"
    },
    "6253": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12793,
        12810
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6254": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6255": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12386,
        12390
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6257": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12392,
        12399
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6258": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12434,
        12452
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 78,
      "value": "0x67"
    },
    "6260": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12434,
        12452
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6261": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12419,
        12431
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6262": {
      "branch": 133,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12419,
        12452
      ],
      "op": "LT",
      "path": "24"
    },
    "6263": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x18B0"
    },
    "6266": {
      "branch": 133,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6267": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6269": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6276": {
      "op": "SHL"
    },
    "6277": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6278": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6281": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6283": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6284": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "ADD",
      "path": "24"
    },
    "6285": {
      "op": "MSTORE"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6290": {
      "op": "DUP3"
    },
    "6291": {
      "op": "ADD"
    },
    "6292": {
      "op": "MSTORE"
    },
    "6293": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6310": {
      "op": "DUP3"
    },
    "6311": {
      "op": "ADD"
    },
    "6312": {
      "op": "MSTORE"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6315": {
      "op": "ADD"
    },
    "6316": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "6319": {
      "op": "JUMP"
    },
    "6320": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12411,
        12468
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6321": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12478,
        12506
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6323": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6324": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6325": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6326": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12519
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "6328": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6330": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6331": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6333": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6334": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6335": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6336": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12585
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "6338": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12585
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6339": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12585
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "6341": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12644
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6342": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12644
      ],
      "op": "ADD",
      "path": "24"
    },
    "6343": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12644
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6344": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6345": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6346": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6353": {
      "op": "SHL"
    },
    "6354": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6355": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6362": {
      "op": "SHL"
    },
    "6363": {
      "op": "SUB"
    },
    "6364": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12644
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6365": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12644
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6366": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12617,
        12644
      ],
      "op": "AND",
      "path": "24"
    },
    "6367": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6369": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6370": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "ADD",
      "path": "24"
    },
    "6371": {
      "op": "MSTORE"
    },
    "6372": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6373": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12509,
        12533
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "6374": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12478,
        12506
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6375": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12585
      ],
      "op": "AND",
      "path": "24"
    },
    "6376": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12585
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6377": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12603
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40550A1C"
    },
    "6382": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12603
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6388": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6390": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6391": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6392": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6393": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "SUB",
      "path": "24"
    },
    "6394": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6395": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP7",
      "path": "24"
    },
    "6396": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "GAS",
      "path": "24"
    },
    "6397": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "6398": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6399": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6400": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6401": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x190E"
    },
    "6404": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6405": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "6406": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6408": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6409": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "6410": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "6411": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6413": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "REVERT",
      "path": "24"
    },
    "6414": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6415": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "POP",
      "path": "24"
    },
    "6416": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "POP",
      "path": "24"
    },
    "6417": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "POP",
      "path": "24"
    },
    "6418": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "POP",
      "path": "24"
    },
    "6419": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6421": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6422": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "6423": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "6425": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "NOT",
      "path": "24"
    },
    "6426": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "6428": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6429": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "ADD",
      "path": "24"
    },
    "6430": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "AND",
      "path": "24"
    },
    "6431": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6432": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "ADD",
      "path": "24"
    },
    "6433": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6434": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6436": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6437": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "POP",
      "path": "24"
    },
    "6438": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6439": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "ADD",
      "path": "24"
    },
    "6440": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6441": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1932"
    },
    "6444": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6445": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6446": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29E9"
    },
    "6449": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12559,
        12654
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6450": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12559,
        12654
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6451": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 79,
      "value": "0x2"
    },
    "6453": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6454": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6455": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "ADD",
      "path": "24"
    },
    "6456": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6457": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12543,
        12654
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6458": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12543,
        12654
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "6459": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6460": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12682,
        12706
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "6461": {
      "op": "POP"
    },
    "6462": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6463": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12301,
        12714
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6464": {
      "op": "POP"
    },
    "6465": {
      "op": "POP"
    },
    "6466": {
      "op": "POP"
    },
    "6467": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        12301,
        12714
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6468": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4296,
        4622
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6469": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4392,
        4416
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 80,
      "value": "0x66"
    },
    "6471": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4392,
        4416
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6478": {
      "op": "SHL"
    },
    "6479": {
      "op": "SUB"
    },
    "6480": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4392,
        4416
      ],
      "op": "AND",
      "path": "24"
    },
    "6481": {
      "branch": 134,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4392,
        4430
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6482": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x199D"
    },
    "6485": {
      "branch": 134,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6486": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6488": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6495": {
      "op": "SHL"
    },
    "6496": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6497": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6500": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6502": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6503": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "ADD",
      "path": "24"
    },
    "6504": {
      "op": "MSTORE"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6509": {
      "op": "DUP3"
    },
    "6510": {
      "op": "ADD"
    },
    "6511": {
      "op": "MSTORE"
    },
    "6512": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6547": {
      "op": "DUP3"
    },
    "6548": {
      "op": "ADD"
    },
    "6549": {
      "op": "MSTORE"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6552": {
      "op": "ADD"
    },
    "6553": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "6556": {
      "op": "JUMP"
    },
    "6557": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4371,
        4486
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6558": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4522
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 81,
      "value": "0x65"
    },
    "6560": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6561": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6568": {
      "op": "SHL"
    },
    "6569": {
      "op": "SUB"
    },
    "6570": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6571": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6572": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "AND",
      "path": "24"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6579": {
      "op": "SHL"
    },
    "6580": {
      "op": "SUB"
    },
    "6581": {
      "op": "NOT"
    },
    "6582": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6583": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6584": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "AND",
      "path": "24"
    },
    "6585": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6586": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "OR",
      "path": "24"
    },
    "6587": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6588": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6589": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4496,
        4562
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6590": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4596
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 82,
      "value": "0x66"
    },
    "6592": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6593": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6594": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6595": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6596": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "AND",
      "path": "24"
    },
    "6597": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "OR",
      "path": "24"
    },
    "6598": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6599": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4572,
        4615
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6600": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        4296,
        4622
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6601": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6602": {
      "offset": [
        3001,
        3025
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "6604": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        3001,
        3025
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6611": {
      "op": "SHL"
    },
    "6612": {
      "op": "SUB"
    },
    "6613": {
      "offset": [
        3001,
        3025
      ],
      "op": "AND",
      "path": "24"
    },
    "6614": {
      "offset": [
        2987,
        2997
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6615": {
      "offset": [
        2987,
        3025
      ],
      "op": "EQ",
      "path": "24"
    },
    "6616": {
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19F3"
    },
    "6619": {
      "offset": [
        2966,
        3089
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6620": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6622": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6629": {
      "op": "SHL"
    },
    "6630": {
      "offset": [
        2966,
        3089
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6631": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6632": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6634": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "ADD",
      "path": "24"
    },
    "6635": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "6638": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6639": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x298C"
    },
    "6642": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        2966,
        3089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6643": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6644": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7957,
        7972
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6646": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6647": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6648": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6649": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7979
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6651": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6653": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6654": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6655": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6656": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6658": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6659": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6660": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6661": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6662": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8008
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 83,
      "value": "0x5"
    },
    "6664": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8008
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6665": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8008
      ],
      "op": "ADD",
      "path": "24"
    },
    "6666": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8016
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6667": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8016
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6670": {
      "op": "NOT"
    },
    "6671": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8016
      ],
      "op": "AND",
      "path": "24"
    },
    "6672": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8016
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6673": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7996,
        8016
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6674": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "SWAP2",
      "path": "24",
      "statement": 84
    },
    "6675": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6676": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8050,
        8065
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "6677": {
      "op": "DUP2"
    },
    "6678": {
      "op": "MSTORE"
    },
    "6679": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6680": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7975,
        7986
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6681": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x2F86696B420AA8D6E35F66F693EA69962E1A320F7F56220E777EC1DB40903130"
    },
    "6714": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6715": {
      "op": "ADD"
    },
    "6716": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6718": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6719": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6720": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6721": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "SUB",
      "path": "24"
    },
    "6722": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6723": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8031,
        8066
      ],
      "op": "LOG2",
      "path": "24"
    },
    "6724": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7947,
        8073
      ],
      "op": "POP",
      "path": "24"
    },
    "6725": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        7881,
        8073
      ],
      "op": "POP",
      "path": "24"
    },
    "6726": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "o",
      "offset": [
        7881,
        8073
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6727": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6728": {
      "offset": [
        3001,
        3025
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "6730": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3001,
        3025
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6731": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7566,
        7582
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "6733": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7566,
        7582
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6740": {
      "op": "SHL"
    },
    "6741": {
      "op": "SUB"
    },
    "6742": {
      "offset": [
        3001,
        3025
      ],
      "op": "AND",
      "path": "24"
    },
    "6743": {
      "offset": [
        2987,
        2997
      ],
      "op": "CALLER",
      "path": "24"
    },
    "6744": {
      "offset": [
        2987,
        3025
      ],
      "op": "EQ",
      "path": "24"
    },
    "6745": {
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A74"
    },
    "6748": {
      "offset": [
        2966,
        3089
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6749": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6751": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6758": {
      "op": "SHL"
    },
    "6759": {
      "offset": [
        2966,
        3089
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6760": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6761": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6763": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "ADD",
      "path": "24"
    },
    "6764": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "6767": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6768": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x298C"
    },
    "6771": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        2966,
        3089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6772": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2966,
        3089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6773": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 85,
      "value": "0x0"
    },
    "6775": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6776": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6777": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6778": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7625
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6780": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6782": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6783": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6785": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6786": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7632
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6787": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7643
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6789": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7643
      ],
      "op": "ADD",
      "path": "24"
    },
    "6790": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7621,
        7650
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6791": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7602,
        7617
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6792": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7602,
        7617
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6793": {
      "branch": 135,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7602,
        7650
      ],
      "op": "EQ",
      "path": "24"
    },
    "6794": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7594,
        7651
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A92"
    },
    "6797": {
      "branch": 135,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7594,
        7651
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6798": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7594,
        7651
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6800": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7594,
        7651
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6801": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7594,
        7651
      ],
      "op": "REVERT",
      "path": "24"
    },
    "6802": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7594,
        7651
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6803": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 86,
      "value": "0x0"
    },
    "6805": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6806": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6807": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6808": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7666
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6810": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6812": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6813": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6814": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6815": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6817": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6818": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6819": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7673
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6820": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6821": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6822": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AB7"
    },
    "6825": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6826": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7681
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "6828": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7681
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6829": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7681
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6830": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7681
      ],
      "op": "ADD",
      "path": "24"
    },
    "6831": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7681
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6832": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6833": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "ADD",
      "path": "24"
    },
    "6834": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6835": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x222A"
    },
    "6838": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7662,
        7692
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6839": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7662,
        7692
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6840": {
      "op": "POP"
    },
    "6841": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7725,
        7730
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 87,
      "value": "0x0"
    },
    "6843": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6844": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6845": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6846": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7706
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6848": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6850": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6851": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6853": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6854": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6855": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6856": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7713
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6857": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7722
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "6859": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7722
      ],
      "op": "ADD",
      "path": "24"
    },
    "6860": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7730
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6861": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7730
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6864": {
      "op": "NOT"
    },
    "6865": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7730
      ],
      "op": "AND",
      "path": "24"
    },
    "6866": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7730
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6867": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7702,
        7730
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6868": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "MLOAD",
      "path": "24",
      "statement": 88
    },
    "6869": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7707,
        7712
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6870": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7707,
        7712
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6871": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x152D31E943F2D79D470375C901F5A6CFB7D465EE4969DB651885948D3B6015B8"
    },
    "6904": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6905": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B05"
    },
    "6908": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6909": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7812,
        7827
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "6910": {
      "op": "DUP2"
    },
    "6911": {
      "op": "MSTORE"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6914": {
      "op": "ADD"
    },
    "6915": {
      "op": "SWAP1"
    },
    "6916": {
      "op": "JUMP"
    },
    "6917": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6918": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6920": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6921": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6922": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6923": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "SUB",
      "path": "24"
    },
    "6924": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6925": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7792,
        7828
      ],
      "op": "LOG2",
      "path": "24"
    },
    "6926": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 89,
      "value": "0x0"
    },
    "6928": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6929": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6930": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6931": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7850
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "6933": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6935": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6936": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6937": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6938": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6940": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6941": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6942": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6943": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7857
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6944": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6946": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "6947": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6948": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6949": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6950": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6951": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6952": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6953": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MUL",
      "path": "24"
    },
    "6954": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6955": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "6956": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6957": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "6958": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6959": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "6960": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6961": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6962": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6963": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6964": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6965": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7868
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6966": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6967": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "6968": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7846,
        7868
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6969": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6970": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6971": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6972": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B64"
    },
    "6975": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6976": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6978": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MUL",
      "path": "24"
    },
    "6979": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6980": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "6981": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6982": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6983": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6985": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6986": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6988": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6990": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6991": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6992": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6993": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6994": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6995": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6996": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6997": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6999": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "7000": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "7001": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "7003": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "ADD",
      "path": "24"
    },
    "7004": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "7005": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7006": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "DUP4",
      "path": "24"
    },
    "7007": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "GT",
      "path": "24"
    },
    "7008": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B50"
    },
    "7011": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "7012": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "7013": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "POP",
      "path": "24"
    },
    "7014": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "POP",
      "path": "24"
    },
    "7015": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "POP",
      "path": "24"
    },
    "7016": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "POP",
      "path": "24"
    },
    "7017": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "POP",
      "path": "24"
    },
    "7018": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "7019": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7839,
        7868
      ],
      "op": "POP",
      "path": "24"
    },
    "7020": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "7021": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "7022": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "POP",
      "path": "24"
    },
    "7023": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7441,
        7875
      ],
      "op": "POP",
      "path": "24"
    },
    "7024": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        7441,
        7875
      ],
      "op": "JUMP",
      "path": "24"
    },
    "7025": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7032": {
      "op": "SHL"
    },
    "7033": {
      "op": "SUB"
    },
    "7034": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 90
    },
    "7035": {
      "branch": 140,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "7036": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BD3"
    },
    "7039": {
      "branch": 140,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7040": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7042": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7049": {
      "op": "SHL"
    },
    "7050": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7051": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7054": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7056": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7057": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "7058": {
      "op": "MSTORE"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7061": {
      "op": "DUP1"
    },
    "7062": {
      "op": "DUP3"
    },
    "7063": {
      "op": "ADD"
    },
    "7064": {
      "op": "MSTORE"
    },
    "7065": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7100": {
      "op": "DUP3"
    },
    "7101": {
      "op": "ADD"
    },
    "7102": {
      "op": "MSTORE"
    },
    "7103": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7110": {
      "op": "SHL"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7113": {
      "op": "DUP3"
    },
    "7114": {
      "op": "ADD"
    },
    "7115": {
      "op": "MSTORE"
    },
    "7116": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7118": {
      "op": "ADD"
    },
    "7119": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "7122": {
      "op": "JUMP"
    },
    "7123": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7130": {
      "op": "SHL"
    },
    "7131": {
      "op": "SUB"
    },
    "7132": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 91
    },
    "7133": {
      "branch": 141,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "7134": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C34"
    },
    "7137": {
      "branch": 141,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7138": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7140": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7149": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7152": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7154": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7155": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7161": {
      "op": "DUP3"
    },
    "7162": {
      "op": "ADD"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7199": {
      "op": "DUP3"
    },
    "7200": {
      "op": "ADD"
    },
    "7201": {
      "op": "MSTORE"
    },
    "7202": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7207": {
      "op": "SHL"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7210": {
      "op": "DUP3"
    },
    "7211": {
      "op": "ADD"
    },
    "7212": {
      "op": "MSTORE"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7215": {
      "op": "ADD"
    },
    "7216": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "7219": {
      "op": "JUMP"
    },
    "7220": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7227": {
      "op": "SHL"
    },
    "7228": {
      "op": "SUB"
    },
    "7229": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 92
    },
    "7230": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7231": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "7232": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7234": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7235": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7236": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7237": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7239": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7241": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7242": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7243": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7244": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7246": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7247": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7248": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7249": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7250": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7251": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "7252": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7253": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7254": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7255": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7256": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7257": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7258": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7259": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7260": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7261": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7262": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7263": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7264": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7265": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 93
    },
    "7266": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7267": {
      "op": "DUP5"
    },
    "7268": {
      "op": "DUP2"
    },
    "7269": {
      "op": "MSTORE"
    },
    "7270": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7303": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7304": {
      "op": "ADD"
    },
    "7305": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7307": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7308": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7309": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7310": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "7311": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7312": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7313": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7314": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7315": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7316": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7317": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7324": {
      "op": "SHL"
    },
    "7325": {
      "op": "SUB"
    },
    "7326": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7327": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7328": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "7329": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7331": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7332": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7333": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7334": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7336": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7338": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7339": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7340": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7341": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7343": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7344": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7345": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7346": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7347": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7348": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "7349": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7350": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7351": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7352": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7353": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7354": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7355": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7358": {
      "op": "NOT"
    },
    "7359": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7360": {
      "branch": 142,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "7361": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D21"
    },
    "7364": {
      "branch": 142,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7365": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 94
    },
    "7366": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7367": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "7368": {
      "branch": 143,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7369": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D14"
    },
    "7372": {
      "branch": 143,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7373": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7375": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7382": {
      "op": "SHL"
    },
    "7383": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7384": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7387": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7389": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7390": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "7391": {
      "op": "MSTORE"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7396": {
      "op": "DUP3"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "MSTORE"
    },
    "7399": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7434": {
      "op": "DUP3"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "MSTORE"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7439": {
      "op": "ADD"
    },
    "7440": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "7443": {
      "op": "JUMP"
    },
    "7444": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7445": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 95,
      "value": "0x1D21"
    },
    "7448": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7449": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7450": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7451": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7452": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "7453": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B71"
    },
    "7456": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7457": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7458": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7459": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7460": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7461": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7462": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7463": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7470": {
      "op": "SHL"
    },
    "7471": {
      "op": "SUB"
    },
    "7472": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 96
    },
    "7473": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "7474": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D8B"
    },
    "7477": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7478": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7480": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7487": {
      "op": "SHL"
    },
    "7488": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7489": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7492": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7494": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7495": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "7496": {
      "op": "MSTORE"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7501": {
      "op": "DUP3"
    },
    "7502": {
      "op": "ADD"
    },
    "7503": {
      "op": "MSTORE"
    },
    "7504": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7539": {
      "op": "DUP3"
    },
    "7540": {
      "op": "ADD"
    },
    "7541": {
      "op": "MSTORE"
    },
    "7542": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7550": {
      "op": "SHL"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7553": {
      "op": "DUP3"
    },
    "7554": {
      "op": "ADD"
    },
    "7555": {
      "op": "MSTORE"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7558": {
      "op": "ADD"
    },
    "7559": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "7562": {
      "op": "JUMP"
    },
    "7563": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7570": {
      "op": "SHL"
    },
    "7571": {
      "op": "SUB"
    },
    "7572": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 97
    },
    "7573": {
      "branch": 145,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "7574": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DED"
    },
    "7577": {
      "branch": 145,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7578": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7580": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7587": {
      "op": "SHL"
    },
    "7588": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7589": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7592": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7594": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7595": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "7596": {
      "op": "MSTORE"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7601": {
      "op": "DUP3"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "MSTORE"
    },
    "7604": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7639": {
      "op": "DUP3"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "MSTORE"
    },
    "7642": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7648": {
      "op": "SHL"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7651": {
      "op": "DUP3"
    },
    "7652": {
      "op": "ADD"
    },
    "7653": {
      "op": "MSTORE"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7656": {
      "op": "ADD"
    },
    "7657": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "7660": {
      "op": "JUMP"
    },
    "7661": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7668": {
      "op": "SHL"
    },
    "7669": {
      "op": "SUB"
    },
    "7670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "7672": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7674": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7675": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7676": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7677": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7679": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7681": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7682": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7684": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7685": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7686": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7687": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 98
    },
    "7688": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7689": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "7690": {
      "branch": 146,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7691": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E65"
    },
    "7694": {
      "branch": 146,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7695": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7697": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7704": {
      "op": "SHL"
    },
    "7705": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7706": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7709": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7711": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7712": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "7713": {
      "op": "MSTORE"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7718": {
      "op": "DUP3"
    },
    "7719": {
      "op": "ADD"
    },
    "7720": {
      "op": "MSTORE"
    },
    "7721": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7756": {
      "op": "DUP3"
    },
    "7757": {
      "op": "ADD"
    },
    "7758": {
      "op": "MSTORE"
    },
    "7759": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7768": {
      "op": "SHL"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7771": {
      "op": "DUP3"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "op": "MSTORE"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "7780": {
      "op": "JUMP"
    },
    "7781": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7788": {
      "op": "SHL"
    },
    "7789": {
      "op": "SUB"
    },
    "7790": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 99
    },
    "7791": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7792": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "7793": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7795": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7796": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7797": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7798": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7800": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7802": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7803": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7805": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7806": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7807": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7808": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7809": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7810": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "7811": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7812": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7813": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 100
    },
    "7814": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7815": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "7816": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7817": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7818": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7819": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7820": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7821": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7822": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7823": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7824": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7825": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7826": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E9C"
    },
    "7829": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7830": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7831": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7832": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2819"
    },
    "7835": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7836": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7837": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7838": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7839": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7840": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7841": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7842": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7843": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "7844": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 101
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7851": {
      "op": "SHL"
    },
    "7852": {
      "op": "SUB"
    },
    "7853": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7854": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7861": {
      "op": "SHL"
    },
    "7862": {
      "op": "SUB"
    },
    "7863": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "7864": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7897": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7898": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7900": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7901": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE8"
    },
    "7904": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7905": {
      "op": "DUP2"
    },
    "7906": {
      "op": "MSTORE"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7909": {
      "op": "ADD"
    },
    "7910": {
      "op": "SWAP1"
    },
    "7911": {
      "op": "JUMP"
    },
    "7912": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7913": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7915": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7916": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7917": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7918": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "7919": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7920": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7921": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 102,
      "value": "0x1D21"
    },
    "7924": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3113,
        4290
      ],
      "op": "JUMP",
      "path": "24"
    },
    "7925": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7926": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7928": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7929": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7932": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7933": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "7934": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7936": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "7937": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F1C"
    },
    "7940": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7941": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7943": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7950": {
      "op": "SHL"
    },
    "7951": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7952": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7953": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7955": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "7956": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B8"
    },
    "7959": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7960": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A0B"
    },
    "7963": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7964": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7965": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 103,
      "value": "0x1F26"
    },
    "7968": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7969": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7970": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21EA"
    },
    "7973": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7974": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7975": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "7976": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "7977": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7978": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7985": {
      "op": "SHL"
    },
    "7986": {
      "op": "SUB"
    },
    "7987": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 104
    },
    "7988": {
      "branch": 147,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "7989": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F80"
    },
    "7992": {
      "branch": 147,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7993": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7995": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8002": {
      "op": "SHL"
    },
    "8003": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8004": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8007": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8009": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8010": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "8011": {
      "op": "MSTORE"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8016": {
      "op": "DUP3"
    },
    "8017": {
      "op": "ADD"
    },
    "8018": {
      "op": "MSTORE"
    },
    "8019": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8054": {
      "op": "DUP3"
    },
    "8055": {
      "op": "ADD"
    },
    "8056": {
      "op": "MSTORE"
    },
    "8057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8059": {
      "op": "ADD"
    },
    "8060": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B8"
    },
    "8063": {
      "op": "JUMP"
    },
    "8064": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8065": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 105
    },
    "8066": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "8068": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8070": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8071": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8072": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8073": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F92"
    },
    "8076": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8077": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8078": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2819"
    },
    "8081": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8082": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8083": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8084": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8085": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8086": {
      "op": "POP"
    },
    "8087": {
      "op": "POP"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8094": {
      "op": "SHL"
    },
    "8095": {
      "op": "SUB"
    },
    "8096": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 106
    },
    "8097": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "8098": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8100": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8101": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8102": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8103": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "8105": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8107": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8108": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8110": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8111": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8112": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8113": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8114": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8115": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8116": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8117": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FBF"
    },
    "8120": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8121": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8122": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8123": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2819"
    },
    "8126": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8127": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8128": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8129": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8130": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8131": {
      "op": "POP"
    },
    "8132": {
      "op": "POP"
    },
    "8133": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 107,
      "value": "0x40"
    },
    "8135": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8136": {
      "op": "DUP2"
    },
    "8137": {
      "op": "DUP2"
    },
    "8138": {
      "op": "MSTORE"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8145": {
      "op": "SHL"
    },
    "8146": {
      "op": "SUB"
    },
    "8147": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8148": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "8149": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8150": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8152": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8153": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8186": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8189": {
      "op": "ADD"
    },
    "8190": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8192": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8193": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8194": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8195": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "8196": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8197": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8198": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "8199": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "8200": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8201": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8171,
        8862
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8202": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8260,
        8261
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 108,
      "value": "0x0"
    },
    "8204": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8251,
        8257
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8205": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8251,
        8261
      ],
      "op": "GT",
      "path": "24"
    },
    "8206": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2029"
    },
    "8209": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8210": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8212": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8219": {
      "op": "SHL"
    },
    "8220": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8221": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8222": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8224": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "ADD",
      "path": "24"
    },
    "8225": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "8228": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8229": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x292A"
    },
    "8232": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8243,
        8299
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8233": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8243,
        8299
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8234": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8338,
        8344
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 109
    },
    "8235": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8317,
        8334
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2049"
    },
    "8238": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8327,
        8333
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8245": {
      "op": "SHL"
    },
    "8246": {
      "op": "SUB"
    },
    "8247": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "8248": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8250": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8251": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8252": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8253": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "8255": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8257": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8258": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8260": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8261": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8262": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8263": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8264": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8265": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8317,
        8334
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8266": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8317,
        8344
      ],
      "op": "LT",
      "path": "24"
    },
    "8267": {
      "branch": 137,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8317,
        8344
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8268": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x208F"
    },
    "8271": {
      "branch": 137,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8272": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8274": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8281": {
      "op": "SHL"
    },
    "8282": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8283": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8286": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8288": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "DUP3",
      "path": "24"
    },
    "8289": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "ADD",
      "path": "24"
    },
    "8290": {
      "op": "MSTORE"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8295": {
      "op": "DUP3"
    },
    "8296": {
      "op": "ADD"
    },
    "8297": {
      "op": "MSTORE"
    },
    "8298": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8322": {
      "op": "SHL"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8325": {
      "op": "DUP3"
    },
    "8326": {
      "op": "ADD"
    },
    "8327": {
      "op": "MSTORE"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8330": {
      "op": "ADD"
    },
    "8331": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "8334": {
      "op": "JUMP"
    },
    "8335": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8309,
        8370
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8342": {
      "op": "SHL"
    },
    "8343": {
      "op": "SUB"
    },
    "8344": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "DUP3",
      "path": "24"
    },
    "8345": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "AND",
      "path": "24"
    },
    "8346": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8381,
        8400
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8348": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8349": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8350": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8351": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8423
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x76"
    },
    "8353": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "8355": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8356": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8358": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8359": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "8360": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8361": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8403,
        8431
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8362": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8449,
        8465
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 110
    },
    "8363": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8449,
        8465
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8364": {
      "branch": 138,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8449,
        8465
      ],
      "op": "SUB",
      "path": "24"
    },
    "8365": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x20F8"
    },
    "8368": {
      "branch": 138,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8369": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8371": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8378": {
      "op": "SHL"
    },
    "8379": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8380": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8383": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8385": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "DUP3",
      "path": "24"
    },
    "8386": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "ADD",
      "path": "24"
    },
    "8387": {
      "op": "MSTORE"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "ADD"
    },
    "8394": {
      "op": "MSTORE"
    },
    "8395": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8430": {
      "op": "DUP3"
    },
    "8431": {
      "op": "ADD"
    },
    "8432": {
      "op": "MSTORE"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8435": {
      "op": "ADD"
    },
    "8436": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B8"
    },
    "8439": {
      "op": "JUMP"
    },
    "8440": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8441,
        8495
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8441": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8506,
        8549
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 111,
      "value": "0x2103"
    },
    "8444": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8519,
        8525
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8445": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8535,
        8539
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "8446": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8542,
        8548
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8447": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8506,
        8518
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x864"
    },
    "8450": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8506,
        8549
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8451": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8506,
        8549
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8452": {
      "op": "POP"
    },
    "8453": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 112,
      "value": "0x0"
    },
    "8455": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8456": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8457": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8458": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8569
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "8460": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "8462": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8463": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8465": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8466": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "8467": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8589
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "8469": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8589
      ],
      "op": "ADD",
      "path": "24"
    },
    "8470": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8471": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8472": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8593,
        8599
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8473": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8593,
        8599
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "8474": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8582
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8475": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2125"
    },
    "8478": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8479": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8593,
        8599
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8480": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8593,
        8599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8481": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2819"
    },
    "8484": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8559,
        8599
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8485": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8486": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8487": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "8488": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8559,
        8599
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "8489": {
      "op": "POP"
    },
    "8490": {
      "op": "POP"
    },
    "8491": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8609,
        8628
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8493": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8494": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8495": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8496": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8641
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "8498": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "8500": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8501": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8503": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8504": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8505": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8506": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8654
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "8507": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8661
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "8509": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8661
      ],
      "op": "ADD",
      "path": "24"
    },
    "8510": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8661
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8511": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8698
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 113,
      "value": "0x65"
    },
    "8513": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8698
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8514": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8791,
        8801
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "8516": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8791,
        8801
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "8517": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "8518": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8519": {
      "op": "PUSH4",
      "value": "0xB6CEECB7"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8526": {
      "op": "SHL"
    },
    "8527": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8528": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8535": {
      "op": "SHL"
    },
    "8536": {
      "op": "SUB"
    },
    "8537": {
      "op": "DUP8"
    },
    "8538": {
      "op": "DUP2"
    },
    "8539": {
      "op": "AND"
    },
    "8540": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "8542": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8543": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "ADD",
      "path": "24"
    },
    "8544": {
      "op": "MSTORE"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8547": {
      "op": "DUP3"
    },
    "8548": {
      "op": "ADD"
    },
    "8549": {
      "op": "DUP5"
    },
    "8550": {
      "op": "SWAP1"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8776,
        8801
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "8553": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8776,
        8801
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8554": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8776,
        8801
      ],
      "op": "LT",
      "path": "24"
    },
    "8555": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8776,
        8801
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8558": {
      "op": "DUP3"
    },
    "8559": {
      "op": "ADD"
    },
    "8560": {
      "op": "MSTORE"
    },
    "8561": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8661
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "8562": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8631,
        8661
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "8563": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8698
      ],
      "op": "AND",
      "path": "24"
    },
    "8564": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8698
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8565": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8717
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB6CEECB7"
    },
    "8570": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8717
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8573": {
      "op": "ADD"
    },
    "8574": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8576": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8578": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8579": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8580": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8581": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "SUB",
      "path": "24"
    },
    "8582": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP2",
      "path": "24"
    },
    "8583": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8585": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP8",
      "path": "24"
    },
    "8586": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8587": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "8588": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8589": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8590": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8591": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2197"
    },
    "8594": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8595": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8597": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8598": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "REVERT",
      "path": "24"
    },
    "8599": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8600": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "POP",
      "path": "24"
    },
    "8601": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "GAS",
      "path": "24"
    },
    "8602": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "CALL",
      "path": "24"
    },
    "8603": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8604": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8605": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8606": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x21AB"
    },
    "8609": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "8610": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "8611": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8613": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8614": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "8615": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "8616": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8618": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "REVERT",
      "path": "24"
    },
    "8619": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8620": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "POP",
      "path": "24"
    },
    "8621": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "POP",
      "path": "24"
    },
    "8622": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "POP",
      "path": "24"
    },
    "8623": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8672,
        8811
      ],
      "op": "POP",
      "path": "24"
    },
    "8624": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8840,
        8846
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 114
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8631": {
      "op": "SHL"
    },
    "8632": {
      "op": "SUB"
    },
    "8633": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8827,
        8855
      ],
      "op": "AND",
      "path": "24"
    },
    "8634": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8827,
        8855
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "8667": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8848,
        8854
      ],
      "op": "DUP5",
      "path": "24"
    },
    "8668": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8827,
        8855
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8670": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8827,
        8855
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "8671": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8827,
        8855
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1025"
    },
    "8674": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8827,
        8855
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "8675": {
      "op": "DUP2"
    },
    "8676": {
      "op": "MSTORE"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8679": {
      "op": "ADD"
    },
    "8680": {
      "op": "SWAP1"
    },
    "8681": {
      "op": "JUMP"
    },
    "8682": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8683": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8685": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8686": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8689": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8690": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8691": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8693": {
      "branch": 150,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8694": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2211"
    },
    "8697": {
      "branch": 150,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8698": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8700": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8707": {
      "op": "SHL"
    },
    "8708": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8709": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8710": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8712": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8713": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B8"
    },
    "8716": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8717": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A0B"
    },
    "8720": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8721": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8722": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 115,
      "value": "0x36"
    },
    "8724": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221D"
    },
    "8727": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8728": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8729": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA6"
    },
    "8732": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8733": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8734": {
      "op": "POP"
    },
    "8735": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 116,
      "value": "0x37"
    },
    "8737": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB02"
    },
    "8740": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8741": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8742": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA6"
    },
    "8745": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8746": {
      "op": "JUMPDEST"
    },
    "8747": {
      "op": "DUP3"
    },
    "8748": {
      "op": "DUP1"
    },
    "8749": {
      "op": "SLOAD"
    },
    "8750": {
      "op": "DUP3"
    },
    "8751": {
      "op": "DUP3"
    },
    "8752": {
      "op": "SSTORE"
    },
    "8753": {
      "op": "SWAP1"
    },
    "8754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8756": {
      "op": "MSTORE"
    },
    "8757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8761": {
      "op": "KECCAK256"
    },
    "8762": {
      "op": "SWAP1"
    },
    "8763": {
      "op": "DUP2"
    },
    "8764": {
      "op": "ADD"
    },
    "8765": {
      "op": "SWAP3"
    },
    "8766": {
      "op": "DUP3"
    },
    "8767": {
      "op": "ISZERO"
    },
    "8768": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "8771": {
      "op": "JUMPI"
    },
    "8772": {
      "op": "SWAP2"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8775": {
      "op": "MUL"
    },
    "8776": {
      "op": "DUP3"
    },
    "8777": {
      "op": "ADD"
    },
    "8778": {
      "op": "JUMPDEST"
    },
    "8779": {
      "op": "DUP3"
    },
    "8780": {
      "op": "DUP2"
    },
    "8781": {
      "op": "GT"
    },
    "8782": {
      "op": "ISZERO"
    },
    "8783": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "8786": {
      "op": "JUMPI"
    },
    "8787": {
      "op": "DUP3"
    },
    "8788": {
      "op": "MLOAD"
    },
    "8789": {
      "op": "DUP3"
    },
    "8790": {
      "op": "SLOAD"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8797": {
      "op": "SHL"
    },
    "8798": {
      "op": "SUB"
    },
    "8799": {
      "op": "NOT"
    },
    "8800": {
      "op": "AND"
    },
    "8801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8807": {
      "op": "SHL"
    },
    "8808": {
      "op": "SUB"
    },
    "8809": {
      "op": "SWAP1"
    },
    "8810": {
      "op": "SWAP2"
    },
    "8811": {
      "op": "AND"
    },
    "8812": {
      "op": "OR"
    },
    "8813": {
      "op": "DUP3"
    },
    "8814": {
      "op": "SSTORE"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8817": {
      "op": "SWAP1"
    },
    "8818": {
      "op": "SWAP3"
    },
    "8819": {
      "op": "ADD"
    },
    "8820": {
      "op": "SWAP2"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "SWAP1"
    },
    "8824": {
      "op": "SWAP2"
    },
    "8825": {
      "op": "ADD"
    },
    "8826": {
      "op": "SWAP1"
    },
    "8827": {
      "op": "PUSH2",
      "value": "0x224A"
    },
    "8830": {
      "op": "JUMP"
    },
    "8831": {
      "op": "JUMPDEST"
    },
    "8832": {
      "op": "POP"
    },
    "8833": {
      "op": "PUSH2",
      "value": "0x228B"
    },
    "8836": {
      "op": "SWAP3"
    },
    "8837": {
      "op": "SWAP2"
    },
    "8838": {
      "op": "POP"
    },
    "8839": {
      "op": "PUSH2",
      "value": "0x22CA"
    },
    "8842": {
      "jump": "i",
      "op": "JUMP"
    },
    "8843": {
      "op": "JUMPDEST"
    },
    "8844": {
      "op": "POP"
    },
    "8845": {
      "op": "SWAP1"
    },
    "8846": {
      "jump": "o",
      "op": "JUMP"
    },
    "8847": {
      "op": "JUMPDEST"
    },
    "8848": {
      "op": "DUP3"
    },
    "8849": {
      "op": "DUP1"
    },
    "8850": {
      "op": "SLOAD"
    },
    "8851": {
      "op": "DUP3"
    },
    "8852": {
      "op": "DUP3"
    },
    "8853": {
      "op": "SSTORE"
    },
    "8854": {
      "op": "SWAP1"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8857": {
      "op": "MSTORE"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8862": {
      "op": "KECCAK256"
    },
    "8863": {
      "op": "SWAP1"
    },
    "8864": {
      "op": "DUP2"
    },
    "8865": {
      "op": "ADD"
    },
    "8866": {
      "op": "SWAP3"
    },
    "8867": {
      "op": "DUP3"
    },
    "8868": {
      "op": "ISZERO"
    },
    "8869": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "8872": {
      "op": "JUMPI"
    },
    "8873": {
      "op": "SWAP2"
    },
    "8874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8876": {
      "op": "MUL"
    },
    "8877": {
      "op": "DUP3"
    },
    "8878": {
      "op": "ADD"
    },
    "8879": {
      "op": "JUMPDEST"
    },
    "8880": {
      "op": "DUP3"
    },
    "8881": {
      "op": "DUP2"
    },
    "8882": {
      "op": "GT"
    },
    "8883": {
      "op": "ISZERO"
    },
    "8884": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "8887": {
      "op": "JUMPI"
    },
    "8888": {
      "op": "DUP3"
    },
    "8889": {
      "op": "MLOAD"
    },
    "8890": {
      "op": "DUP3"
    },
    "8891": {
      "op": "SSTORE"
    },
    "8892": {
      "op": "SWAP2"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8895": {
      "op": "ADD"
    },
    "8896": {
      "op": "SWAP2"
    },
    "8897": {
      "op": "SWAP1"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8900": {
      "op": "ADD"
    },
    "8901": {
      "op": "SWAP1"
    },
    "8902": {
      "op": "PUSH2",
      "value": "0x22AF"
    },
    "8905": {
      "op": "JUMP"
    },
    "8906": {
      "op": "JUMPDEST"
    },
    "8907": {
      "op": "JUMPDEST"
    },
    "8908": {
      "op": "DUP1"
    },
    "8909": {
      "op": "DUP3"
    },
    "8910": {
      "op": "GT"
    },
    "8911": {
      "op": "ISZERO"
    },
    "8912": {
      "op": "PUSH2",
      "value": "0x228B"
    },
    "8915": {
      "op": "JUMPI"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8918": {
      "op": "DUP2"
    },
    "8919": {
      "op": "SSTORE"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8922": {
      "op": "ADD"
    },
    "8923": {
      "op": "PUSH2",
      "value": "0x22CB"
    },
    "8926": {
      "op": "JUMP"
    },
    "8927": {
      "op": "JUMPDEST"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8932": {
      "op": "DUP1"
    },
    "8933": {
      "op": "DUP4"
    },
    "8934": {
      "op": "MSTORE"
    },
    "8935": {
      "op": "DUP4"
    },
    "8936": {
      "op": "MLOAD"
    },
    "8937": {
      "op": "DUP1"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8940": {
      "op": "DUP6"
    },
    "8941": {
      "op": "ADD"
    },
    "8942": {
      "op": "MSTORE"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8945": {
      "op": "JUMPDEST"
    },
    "8946": {
      "op": "DUP2"
    },
    "8947": {
      "op": "DUP2"
    },
    "8948": {
      "op": "LT"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x230D"
    },
    "8953": {
      "op": "JUMPI"
    },
    "8954": {
      "op": "DUP6"
    },
    "8955": {
      "op": "DUP2"
    },
    "8956": {
      "op": "ADD"
    },
    "8957": {
      "op": "DUP4"
    },
    "8958": {
      "op": "ADD"
    },
    "8959": {
      "op": "MLOAD"
    },
    "8960": {
      "op": "DUP6"
    },
    "8961": {
      "op": "DUP3"
    },
    "8962": {
      "op": "ADD"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8965": {
      "op": "ADD"
    },
    "8966": {
      "op": "MSTORE"
    },
    "8967": {
      "op": "DUP3"
    },
    "8968": {
      "op": "ADD"
    },
    "8969": {
      "op": "PUSH2",
      "value": "0x22F1"
    },
    "8972": {
      "op": "JUMP"
    },
    "8973": {
      "op": "JUMPDEST"
    },
    "8974": {
      "op": "POP"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8979": {
      "op": "DUP3"
    },
    "8980": {
      "op": "DUP7"
    },
    "8981": {
      "op": "ADD"
    },
    "8982": {
      "op": "ADD"
    },
    "8983": {
      "op": "MSTORE"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8988": {
      "op": "NOT"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8991": {
      "op": "DUP4"
    },
    "8992": {
      "op": "ADD"
    },
    "8993": {
      "op": "AND"
    },
    "8994": {
      "op": "DUP6"
    },
    "8995": {
      "op": "ADD"
    },
    "8996": {
      "op": "ADD"
    },
    "8997": {
      "op": "SWAP3"
    },
    "8998": {
      "op": "POP"
    },
    "8999": {
      "op": "POP"
    },
    "9000": {
      "op": "POP"
    },
    "9001": {
      "op": "SWAP3"
    },
    "9002": {
      "op": "SWAP2"
    },
    "9003": {
      "op": "POP"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "jump": "o",
      "op": "JUMP"
    },
    "9006": {
      "op": "JUMPDEST"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9013": {
      "op": "SHL"
    },
    "9014": {
      "op": "SUB"
    },
    "9015": {
      "op": "DUP2"
    },
    "9016": {
      "op": "AND"
    },
    "9017": {
      "op": "DUP2"
    },
    "9018": {
      "op": "EQ"
    },
    "9019": {
      "op": "PUSH2",
      "value": "0xE5D"
    },
    "9022": {
      "op": "JUMPI"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9025": {
      "op": "DUP1"
    },
    "9026": {
      "op": "REVERT"
    },
    "9027": {
      "op": "JUMPDEST"
    },
    "9028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9030": {
      "op": "DUP1"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9033": {
      "op": "DUP4"
    },
    "9034": {
      "op": "DUP6"
    },
    "9035": {
      "op": "SUB"
    },
    "9036": {
      "op": "SLT"
    },
    "9037": {
      "op": "ISZERO"
    },
    "9038": {
      "op": "PUSH2",
      "value": "0x2356"
    },
    "9041": {
      "op": "JUMPI"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9044": {
      "op": "DUP1"
    },
    "9045": {
      "op": "REVERT"
    },
    "9046": {
      "op": "JUMPDEST"
    },
    "9047": {
      "op": "DUP3"
    },
    "9048": {
      "op": "CALLDATALOAD"
    },
    "9049": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9052": {
      "op": "DUP2"
    },
    "9053": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9056": {
      "jump": "i",
      "op": "JUMP"
    },
    "9057": {
      "op": "JUMPDEST"
    },
    "9058": {
      "op": "SWAP5"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9061": {
      "op": "SWAP4"
    },
    "9062": {
      "op": "SWAP1"
    },
    "9063": {
      "op": "SWAP4"
    },
    "9064": {
      "op": "ADD"
    },
    "9065": {
      "op": "CALLDATALOAD"
    },
    "9066": {
      "op": "SWAP4"
    },
    "9067": {
      "op": "POP"
    },
    "9068": {
      "op": "POP"
    },
    "9069": {
      "op": "POP"
    },
    "9070": {
      "jump": "o",
      "op": "JUMP"
    },
    "9071": {
      "op": "JUMPDEST"
    },
    "9072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9076": {
      "op": "DUP3"
    },
    "9077": {
      "op": "DUP5"
    },
    "9078": {
      "op": "SUB"
    },
    "9079": {
      "op": "SLT"
    },
    "9080": {
      "op": "ISZERO"
    },
    "9081": {
      "op": "PUSH2",
      "value": "0x2381"
    },
    "9084": {
      "op": "JUMPI"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9087": {
      "op": "DUP1"
    },
    "9088": {
      "op": "REVERT"
    },
    "9089": {
      "op": "JUMPDEST"
    },
    "9090": {
      "op": "POP"
    },
    "9091": {
      "op": "CALLDATALOAD"
    },
    "9092": {
      "op": "SWAP2"
    },
    "9093": {
      "op": "SWAP1"
    },
    "9094": {
      "op": "POP"
    },
    "9095": {
      "jump": "o",
      "op": "JUMP"
    },
    "9096": {
      "op": "JUMPDEST"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9099": {
      "op": "DUP1"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9104": {
      "op": "DUP5"
    },
    "9105": {
      "op": "DUP7"
    },
    "9106": {
      "op": "SUB"
    },
    "9107": {
      "op": "SLT"
    },
    "9108": {
      "op": "ISZERO"
    },
    "9109": {
      "op": "PUSH2",
      "value": "0x239D"
    },
    "9112": {
      "op": "JUMPI"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9115": {
      "op": "DUP1"
    },
    "9116": {
      "op": "REVERT"
    },
    "9117": {
      "op": "JUMPDEST"
    },
    "9118": {
      "op": "DUP4"
    },
    "9119": {
      "op": "CALLDATALOAD"
    },
    "9120": {
      "op": "PUSH2",
      "value": "0x23A8"
    },
    "9123": {
      "op": "DUP2"
    },
    "9124": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9127": {
      "jump": "i",
      "op": "JUMP"
    },
    "9128": {
      "op": "JUMPDEST"
    },
    "9129": {
      "op": "SWAP3"
    },
    "9130": {
      "op": "POP"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9133": {
      "op": "DUP5"
    },
    "9134": {
      "op": "ADD"
    },
    "9135": {
      "op": "CALLDATALOAD"
    },
    "9136": {
      "op": "PUSH2",
      "value": "0x23B8"
    },
    "9139": {
      "op": "DUP2"
    },
    "9140": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9143": {
      "jump": "i",
      "op": "JUMP"
    },
    "9144": {
      "op": "JUMPDEST"
    },
    "9145": {
      "op": "SWAP3"
    },
    "9146": {
      "op": "SWAP6"
    },
    "9147": {
      "op": "SWAP3"
    },
    "9148": {
      "op": "SWAP5"
    },
    "9149": {
      "op": "POP"
    },
    "9150": {
      "op": "POP"
    },
    "9151": {
      "op": "POP"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9154": {
      "op": "SWAP2"
    },
    "9155": {
      "op": "SWAP1"
    },
    "9156": {
      "op": "SWAP2"
    },
    "9157": {
      "op": "ADD"
    },
    "9158": {
      "op": "CALLDATALOAD"
    },
    "9159": {
      "op": "SWAP1"
    },
    "9160": {
      "jump": "o",
      "op": "JUMP"
    },
    "9161": {
      "op": "JUMPDEST"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9166": {
      "op": "DUP3"
    },
    "9167": {
      "op": "DUP5"
    },
    "9168": {
      "op": "SUB"
    },
    "9169": {
      "op": "SLT"
    },
    "9170": {
      "op": "ISZERO"
    },
    "9171": {
      "op": "PUSH2",
      "value": "0x23DB"
    },
    "9174": {
      "op": "JUMPI"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9177": {
      "op": "DUP1"
    },
    "9178": {
      "op": "REVERT"
    },
    "9179": {
      "op": "JUMPDEST"
    },
    "9180": {
      "op": "DUP2"
    },
    "9181": {
      "op": "CALLDATALOAD"
    },
    "9182": {
      "op": "PUSH2",
      "value": "0x23E6"
    },
    "9185": {
      "op": "DUP2"
    },
    "9186": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9189": {
      "jump": "i",
      "op": "JUMP"
    },
    "9190": {
      "op": "JUMPDEST"
    },
    "9191": {
      "op": "SWAP4"
    },
    "9192": {
      "op": "SWAP3"
    },
    "9193": {
      "op": "POP"
    },
    "9194": {
      "op": "POP"
    },
    "9195": {
      "op": "POP"
    },
    "9196": {
      "jump": "o",
      "op": "JUMP"
    },
    "9197": {
      "op": "JUMPDEST"
    },
    "9198": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9205": {
      "op": "SHL"
    },
    "9206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9208": {
      "op": "MSTORE"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9213": {
      "op": "MSTORE"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9218": {
      "op": "REVERT"
    },
    "9219": {
      "op": "JUMPDEST"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9222": {
      "op": "MLOAD"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9225": {
      "op": "DUP3"
    },
    "9226": {
      "op": "ADD"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9229": {
      "op": "NOT"
    },
    "9230": {
      "op": "AND"
    },
    "9231": {
      "op": "DUP2"
    },
    "9232": {
      "op": "ADD"
    },
    "9233": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9242": {
      "op": "DUP2"
    },
    "9243": {
      "op": "GT"
    },
    "9244": {
      "op": "DUP3"
    },
    "9245": {
      "op": "DUP3"
    },
    "9246": {
      "op": "LT"
    },
    "9247": {
      "op": "OR"
    },
    "9248": {
      "op": "ISZERO"
    },
    "9249": {
      "op": "PUSH2",
      "value": "0x242C"
    },
    "9252": {
      "op": "JUMPI"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x242C"
    },
    "9256": {
      "op": "PUSH2",
      "value": "0x23ED"
    },
    "9259": {
      "jump": "i",
      "op": "JUMP"
    },
    "9260": {
      "op": "JUMPDEST"
    },
    "9261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9263": {
      "op": "MSTORE"
    },
    "9264": {
      "op": "SWAP2"
    },
    "9265": {
      "op": "SWAP1"
    },
    "9266": {
      "op": "POP"
    },
    "9267": {
      "jump": "o",
      "op": "JUMP"
    },
    "9268": {
      "op": "JUMPDEST"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9271": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9280": {
      "op": "DUP3"
    },
    "9281": {
      "op": "GT"
    },
    "9282": {
      "op": "ISZERO"
    },
    "9283": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "9286": {
      "op": "JUMPI"
    },
    "9287": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "9290": {
      "op": "PUSH2",
      "value": "0x23ED"
    },
    "9293": {
      "jump": "i",
      "op": "JUMP"
    },
    "9294": {
      "op": "JUMPDEST"
    },
    "9295": {
      "op": "POP"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9298": {
      "op": "SHL"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9301": {
      "op": "ADD"
    },
    "9302": {
      "op": "SWAP1"
    },
    "9303": {
      "jump": "o",
      "op": "JUMP"
    },
    "9304": {
      "op": "JUMPDEST"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9307": {
      "op": "DUP3"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9310": {
      "op": "DUP4"
    },
    "9311": {
      "op": "ADD"
    },
    "9312": {
      "op": "SLT"
    },
    "9313": {
      "op": "PUSH2",
      "value": "0x2469"
    },
    "9316": {
      "op": "JUMPI"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9319": {
      "op": "DUP1"
    },
    "9320": {
      "op": "REVERT"
    },
    "9321": {
      "op": "JUMPDEST"
    },
    "9322": {
      "op": "DUP2"
    },
    "9323": {
      "op": "CALLDATALOAD"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9326": {
      "op": "PUSH2",
      "value": "0x247E"
    },
    "9329": {
      "op": "PUSH2",
      "value": "0x2479"
    },
    "9332": {
      "op": "DUP4"
    },
    "9333": {
      "op": "PUSH2",
      "value": "0x2434"
    },
    "9336": {
      "jump": "i",
      "op": "JUMP"
    },
    "9337": {
      "op": "JUMPDEST"
    },
    "9338": {
      "op": "PUSH2",
      "value": "0x2403"
    },
    "9341": {
      "jump": "i",
      "op": "JUMP"
    },
    "9342": {
      "op": "JUMPDEST"
    },
    "9343": {
      "op": "DUP1"
    },
    "9344": {
      "op": "DUP4"
    },
    "9345": {
      "op": "DUP3"
    },
    "9346": {
      "op": "MSTORE"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9349": {
      "op": "DUP3"
    },
    "9350": {
      "op": "ADD"
    },
    "9351": {
      "op": "SWAP2"
    },
    "9352": {
      "op": "POP"
    },
    "9353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9355": {
      "op": "DUP5"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9358": {
      "op": "SHL"
    },
    "9359": {
      "op": "DUP8"
    },
    "9360": {
      "op": "ADD"
    },
    "9361": {
      "op": "ADD"
    },
    "9362": {
      "op": "SWAP4"
    },
    "9363": {
      "op": "POP"
    },
    "9364": {
      "op": "DUP7"
    },
    "9365": {
      "op": "DUP5"
    },
    "9366": {
      "op": "GT"
    },
    "9367": {
      "op": "ISZERO"
    },
    "9368": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9371": {
      "op": "JUMPI"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9374": {
      "op": "DUP1"
    },
    "9375": {
      "op": "REVERT"
    },
    "9376": {
      "op": "JUMPDEST"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9379": {
      "op": "DUP7"
    },
    "9380": {
      "op": "ADD"
    },
    "9381": {
      "op": "JUMPDEST"
    },
    "9382": {
      "op": "DUP5"
    },
    "9383": {
      "op": "DUP2"
    },
    "9384": {
      "op": "LT"
    },
    "9385": {
      "op": "ISZERO"
    },
    "9386": {
      "op": "PUSH2",
      "value": "0x24C5"
    },
    "9389": {
      "op": "JUMPI"
    },
    "9390": {
      "op": "DUP1"
    },
    "9391": {
      "op": "CALLDATALOAD"
    },
    "9392": {
      "op": "PUSH2",
      "value": "0x24B8"
    },
    "9395": {
      "op": "DUP2"
    },
    "9396": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9399": {
      "jump": "i",
      "op": "JUMP"
    },
    "9400": {
      "op": "JUMPDEST"
    },
    "9401": {
      "op": "DUP4"
    },
    "9402": {
      "op": "MSTORE"
    },
    "9403": {
      "op": "SWAP2"
    },
    "9404": {
      "op": "DUP4"
    },
    "9405": {
      "op": "ADD"
    },
    "9406": {
      "op": "SWAP2"
    },
    "9407": {
      "op": "DUP4"
    },
    "9408": {
      "op": "ADD"
    },
    "9409": {
      "op": "PUSH2",
      "value": "0x24A5"
    },
    "9412": {
      "op": "JUMP"
    },
    "9413": {
      "op": "JUMPDEST"
    },
    "9414": {
      "op": "POP"
    },
    "9415": {
      "op": "SWAP7"
    },
    "9416": {
      "op": "SWAP6"
    },
    "9417": {
      "op": "POP"
    },
    "9418": {
      "op": "POP"
    },
    "9419": {
      "op": "POP"
    },
    "9420": {
      "op": "POP"
    },
    "9421": {
      "op": "POP"
    },
    "9422": {
      "op": "POP"
    },
    "9423": {
      "jump": "o",
      "op": "JUMP"
    },
    "9424": {
      "op": "JUMPDEST"
    },
    "9425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9427": {
      "op": "DUP1"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9430": {
      "op": "DUP4"
    },
    "9431": {
      "op": "DUP6"
    },
    "9432": {
      "op": "SUB"
    },
    "9433": {
      "op": "SLT"
    },
    "9434": {
      "op": "ISZERO"
    },
    "9435": {
      "op": "PUSH2",
      "value": "0x24E3"
    },
    "9438": {
      "op": "JUMPI"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9441": {
      "op": "DUP1"
    },
    "9442": {
      "op": "REVERT"
    },
    "9443": {
      "op": "JUMPDEST"
    },
    "9444": {
      "op": "DUP3"
    },
    "9445": {
      "op": "CALLDATALOAD"
    },
    "9446": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9455": {
      "op": "DUP2"
    },
    "9456": {
      "op": "GT"
    },
    "9457": {
      "op": "ISZERO"
    },
    "9458": {
      "op": "PUSH2",
      "value": "0x24FA"
    },
    "9461": {
      "op": "JUMPI"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9464": {
      "op": "DUP1"
    },
    "9465": {
      "op": "REVERT"
    },
    "9466": {
      "op": "JUMPDEST"
    },
    "9467": {
      "op": "PUSH2",
      "value": "0x2506"
    },
    "9470": {
      "op": "DUP6"
    },
    "9471": {
      "op": "DUP3"
    },
    "9472": {
      "op": "DUP7"
    },
    "9473": {
      "op": "ADD"
    },
    "9474": {
      "op": "PUSH2",
      "value": "0x2458"
    },
    "9477": {
      "jump": "i",
      "op": "JUMP"
    },
    "9478": {
      "op": "JUMPDEST"
    },
    "9479": {
      "op": "SWAP3"
    },
    "9480": {
      "op": "POP"
    },
    "9481": {
      "op": "POP"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9484": {
      "op": "DUP4"
    },
    "9485": {
      "op": "ADD"
    },
    "9486": {
      "op": "CALLDATALOAD"
    },
    "9487": {
      "op": "PUSH2",
      "value": "0x2517"
    },
    "9490": {
      "op": "DUP2"
    },
    "9491": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "9494": {
      "jump": "i",
      "op": "JUMP"
    },
    "9495": {
      "op": "JUMPDEST"
    },
    "9496": {
      "op": "DUP1"
    },
    "9497": {
      "op": "SWAP2"
    },
    "9498": {
      "op": "POP"
    },
    "9499": {
      "op": "POP"
    },
    "9500": {
      "op": "SWAP3"
    },
    "9501": {
      "op": "POP"
    },
    "9502": {
      "op": "SWAP3"
    },
    "9503": {
      "op": "SWAP1"
    },
    "9504": {
      "op": "POP"
    },
    "9505": {
      "jump": "o",
      "op": "JUMP"
    },
    "9506": {
      "op": "JUMPDEST"
    },
    "9507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9509": {
      "op": "DUP2"
    },
    "9510": {
      "op": "MLOAD"
    },
    "9511": {
      "op": "DUP1"
    },
    "9512": {
      "op": "DUP5"
    },
    "9513": {
      "op": "MSTORE"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9516": {
      "op": "DUP1"
    },
    "9517": {
      "op": "DUP6"
    },
    "9518": {
      "op": "ADD"
    },
    "9519": {
      "op": "SWAP5"
    },
    "9520": {
      "op": "POP"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9523": {
      "op": "DUP5"
    },
    "9524": {
      "op": "ADD"
    },
    "9525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9527": {
      "op": "JUMPDEST"
    },
    "9528": {
      "op": "DUP4"
    },
    "9529": {
      "op": "DUP2"
    },
    "9530": {
      "op": "LT"
    },
    "9531": {
      "op": "ISZERO"
    },
    "9532": {
      "op": "PUSH2",
      "value": "0x255C"
    },
    "9535": {
      "op": "JUMPI"
    },
    "9536": {
      "op": "DUP2"
    },
    "9537": {
      "op": "MLOAD"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9544": {
      "op": "SHL"
    },
    "9545": {
      "op": "SUB"
    },
    "9546": {
      "op": "AND"
    },
    "9547": {
      "op": "DUP8"
    },
    "9548": {
      "op": "MSTORE"
    },
    "9549": {
      "op": "SWAP6"
    },
    "9550": {
      "op": "DUP3"
    },
    "9551": {
      "op": "ADD"
    },
    "9552": {
      "op": "SWAP6"
    },
    "9553": {
      "op": "SWAP1"
    },
    "9554": {
      "op": "DUP3"
    },
    "9555": {
      "op": "ADD"
    },
    "9556": {
      "op": "SWAP1"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9559": {
      "op": "ADD"
    },
    "9560": {
      "op": "PUSH2",
      "value": "0x2537"
    },
    "9563": {
      "op": "JUMP"
    },
    "9564": {
      "op": "JUMPDEST"
    },
    "9565": {
      "op": "POP"
    },
    "9566": {
      "op": "SWAP5"
    },
    "9567": {
      "op": "SWAP6"
    },
    "9568": {
      "op": "SWAP5"
    },
    "9569": {
      "op": "POP"
    },
    "9570": {
      "op": "POP"
    },
    "9571": {
      "op": "POP"
    },
    "9572": {
      "op": "POP"
    },
    "9573": {
      "op": "POP"
    },
    "9574": {
      "jump": "o",
      "op": "JUMP"
    },
    "9575": {
      "op": "JUMPDEST"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9578": {
      "op": "DUP2"
    },
    "9579": {
      "op": "MSTORE"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9582": {
      "op": "PUSH2",
      "value": "0x23E6"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9587": {
      "op": "DUP4"
    },
    "9588": {
      "op": "ADD"
    },
    "9589": {
      "op": "DUP5"
    },
    "9590": {
      "op": "PUSH2",
      "value": "0x2522"
    },
    "9593": {
      "jump": "i",
      "op": "JUMP"
    },
    "9594": {
      "op": "JUMPDEST"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9597": {
      "op": "DUP1"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9600": {
      "op": "DUP4"
    },
    "9601": {
      "op": "DUP6"
    },
    "9602": {
      "op": "SUB"
    },
    "9603": {
      "op": "SLT"
    },
    "9604": {
      "op": "ISZERO"
    },
    "9605": {
      "op": "PUSH2",
      "value": "0x258D"
    },
    "9608": {
      "op": "JUMPI"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9611": {
      "op": "DUP1"
    },
    "9612": {
      "op": "REVERT"
    },
    "9613": {
      "op": "JUMPDEST"
    },
    "9614": {
      "op": "POP"
    },
    "9615": {
      "op": "POP"
    },
    "9616": {
      "op": "DUP1"
    },
    "9617": {
      "op": "CALLDATALOAD"
    },
    "9618": {
      "op": "SWAP3"
    },
    "9619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9621": {
      "op": "SWAP1"
    },
    "9622": {
      "op": "SWAP2"
    },
    "9623": {
      "op": "ADD"
    },
    "9624": {
      "op": "CALLDATALOAD"
    },
    "9625": {
      "op": "SWAP2"
    },
    "9626": {
      "op": "POP"
    },
    "9627": {
      "jump": "o",
      "op": "JUMP"
    },
    "9628": {
      "op": "JUMPDEST"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9631": {
      "op": "DUP1"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9634": {
      "op": "DUP4"
    },
    "9635": {
      "op": "DUP6"
    },
    "9636": {
      "op": "SUB"
    },
    "9637": {
      "op": "SLT"
    },
    "9638": {
      "op": "ISZERO"
    },
    "9639": {
      "op": "PUSH2",
      "value": "0x25AF"
    },
    "9642": {
      "op": "JUMPI"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9645": {
      "op": "DUP1"
    },
    "9646": {
      "op": "REVERT"
    },
    "9647": {
      "op": "JUMPDEST"
    },
    "9648": {
      "op": "DUP3"
    },
    "9649": {
      "op": "CALLDATALOAD"
    },
    "9650": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9659": {
      "op": "DUP1"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "GT"
    },
    "9662": {
      "op": "ISZERO"
    },
    "9663": {
      "op": "PUSH2",
      "value": "0x25C7"
    },
    "9666": {
      "op": "JUMPI"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9669": {
      "op": "DUP1"
    },
    "9670": {
      "op": "REVERT"
    },
    "9671": {
      "op": "JUMPDEST"
    },
    "9672": {
      "op": "DUP2"
    },
    "9673": {
      "op": "DUP6"
    },
    "9674": {
      "op": "ADD"
    },
    "9675": {
      "op": "SWAP2"
    },
    "9676": {
      "op": "POP"
    },
    "9677": {
      "op": "DUP6"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9680": {
      "op": "DUP4"
    },
    "9681": {
      "op": "ADD"
    },
    "9682": {
      "op": "SLT"
    },
    "9683": {
      "op": "PUSH2",
      "value": "0x25DB"
    },
    "9686": {
      "op": "JUMPI"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9689": {
      "op": "DUP1"
    },
    "9690": {
      "op": "REVERT"
    },
    "9691": {
      "op": "JUMPDEST"
    },
    "9692": {
      "op": "DUP2"
    },
    "9693": {
      "op": "CALLDATALOAD"
    },
    "9694": {
      "op": "DUP2"
    },
    "9695": {
      "op": "DUP2"
    },
    "9696": {
      "op": "GT"
    },
    "9697": {
      "op": "ISZERO"
    },
    "9698": {
      "op": "PUSH2",
      "value": "0x25EA"
    },
    "9701": {
      "op": "JUMPI"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9704": {
      "op": "DUP1"
    },
    "9705": {
      "op": "REVERT"
    },
    "9706": {
      "op": "JUMPDEST"
    },
    "9707": {
      "op": "DUP7"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9710": {
      "op": "DUP3"
    },
    "9711": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9713": {
      "op": "SHL"
    },
    "9714": {
      "op": "DUP6"
    },
    "9715": {
      "op": "ADD"
    },
    "9716": {
      "op": "ADD"
    },
    "9717": {
      "op": "GT"
    },
    "9718": {
      "op": "ISZERO"
    },
    "9719": {
      "op": "PUSH2",
      "value": "0x25FF"
    },
    "9722": {
      "op": "JUMPI"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9725": {
      "op": "DUP1"
    },
    "9726": {
      "op": "REVERT"
    },
    "9727": {
      "op": "JUMPDEST"
    },
    "9728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9730": {
      "op": "SWAP3"
    },
    "9731": {
      "op": "SWAP1"
    },
    "9732": {
      "op": "SWAP3"
    },
    "9733": {
      "op": "ADD"
    },
    "9734": {
      "op": "SWAP7"
    },
    "9735": {
      "op": "SWAP2"
    },
    "9736": {
      "op": "SWAP6"
    },
    "9737": {
      "op": "POP"
    },
    "9738": {
      "op": "SWAP1"
    },
    "9739": {
      "op": "SWAP4"
    },
    "9740": {
      "op": "POP"
    },
    "9741": {
      "op": "POP"
    },
    "9742": {
      "op": "POP"
    },
    "9743": {
      "op": "POP"
    },
    "9744": {
      "jump": "o",
      "op": "JUMP"
    },
    "9745": {
      "op": "JUMPDEST"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9748": {
      "op": "DUP1"
    },
    "9749": {
      "op": "DUP3"
    },
    "9750": {
      "op": "MSTORE"
    },
    "9751": {
      "op": "DUP3"
    },
    "9752": {
      "op": "MLOAD"
    },
    "9753": {
      "op": "DUP3"
    },
    "9754": {
      "op": "DUP3"
    },
    "9755": {
      "op": "ADD"
    },
    "9756": {
      "op": "DUP2"
    },
    "9757": {
      "op": "SWAP1"
    },
    "9758": {
      "op": "MSTORE"
    },
    "9759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9761": {
      "op": "SWAP2"
    },
    "9762": {
      "op": "SWAP1"
    },
    "9763": {
      "op": "DUP5"
    },
    "9764": {
      "op": "DUP3"
    },
    "9765": {
      "op": "ADD"
    },
    "9766": {
      "op": "SWAP1"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9769": {
      "op": "DUP6"
    },
    "9770": {
      "op": "ADD"
    },
    "9771": {
      "op": "SWAP1"
    },
    "9772": {
      "op": "DUP5"
    },
    "9773": {
      "op": "JUMPDEST"
    },
    "9774": {
      "op": "DUP2"
    },
    "9775": {
      "op": "DUP2"
    },
    "9776": {
      "op": "LT"
    },
    "9777": {
      "op": "ISZERO"
    },
    "9778": {
      "op": "PUSH2",
      "value": "0x2649"
    },
    "9781": {
      "op": "JUMPI"
    },
    "9782": {
      "op": "DUP4"
    },
    "9783": {
      "op": "MLOAD"
    },
    "9784": {
      "op": "DUP4"
    },
    "9785": {
      "op": "MSTORE"
    },
    "9786": {
      "op": "SWAP3"
    },
    "9787": {
      "op": "DUP5"
    },
    "9788": {
      "op": "ADD"
    },
    "9789": {
      "op": "SWAP3"
    },
    "9790": {
      "op": "SWAP2"
    },
    "9791": {
      "op": "DUP5"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "SWAP2"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9796": {
      "op": "ADD"
    },
    "9797": {
      "op": "PUSH2",
      "value": "0x262D"
    },
    "9800": {
      "op": "JUMP"
    },
    "9801": {
      "op": "JUMPDEST"
    },
    "9802": {
      "op": "POP"
    },
    "9803": {
      "op": "SWAP1"
    },
    "9804": {
      "op": "SWAP7"
    },
    "9805": {
      "op": "SWAP6"
    },
    "9806": {
      "op": "POP"
    },
    "9807": {
      "op": "POP"
    },
    "9808": {
      "op": "POP"
    },
    "9809": {
      "op": "POP"
    },
    "9810": {
      "op": "POP"
    },
    "9811": {
      "op": "POP"
    },
    "9812": {
      "jump": "o",
      "op": "JUMP"
    },
    "9813": {
      "op": "JUMPDEST"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9816": {
      "op": "DUP1"
    },
    "9817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9819": {
      "op": "DUP1"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9822": {
      "op": "DUP6"
    },
    "9823": {
      "op": "DUP8"
    },
    "9824": {
      "op": "SUB"
    },
    "9825": {
      "op": "SLT"
    },
    "9826": {
      "op": "ISZERO"
    },
    "9827": {
      "op": "PUSH2",
      "value": "0x266B"
    },
    "9830": {
      "op": "JUMPI"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9833": {
      "op": "DUP1"
    },
    "9834": {
      "op": "REVERT"
    },
    "9835": {
      "op": "JUMPDEST"
    },
    "9836": {
      "op": "DUP5"
    },
    "9837": {
      "op": "CALLDATALOAD"
    },
    "9838": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9847": {
      "op": "DUP1"
    },
    "9848": {
      "op": "DUP3"
    },
    "9849": {
      "op": "GT"
    },
    "9850": {
      "op": "ISZERO"
    },
    "9851": {
      "op": "PUSH2",
      "value": "0x2683"
    },
    "9854": {
      "op": "JUMPI"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9857": {
      "op": "DUP1"
    },
    "9858": {
      "op": "REVERT"
    },
    "9859": {
      "op": "JUMPDEST"
    },
    "9860": {
      "op": "PUSH2",
      "value": "0x268F"
    },
    "9863": {
      "op": "DUP9"
    },
    "9864": {
      "op": "DUP4"
    },
    "9865": {
      "op": "DUP10"
    },
    "9866": {
      "op": "ADD"
    },
    "9867": {
      "op": "PUSH2",
      "value": "0x2458"
    },
    "9870": {
      "jump": "i",
      "op": "JUMP"
    },
    "9871": {
      "op": "JUMPDEST"
    },
    "9872": {
      "op": "SWAP6"
    },
    "9873": {
      "op": "POP"
    },
    "9874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9876": {
      "op": "SWAP2"
    },
    "9877": {
      "op": "POP"
    },
    "9878": {
      "op": "DUP2"
    },
    "9879": {
      "op": "DUP8"
    },
    "9880": {
      "op": "ADD"
    },
    "9881": {
      "op": "CALLDATALOAD"
    },
    "9882": {
      "op": "DUP2"
    },
    "9883": {
      "op": "DUP2"
    },
    "9884": {
      "op": "GT"
    },
    "9885": {
      "op": "ISZERO"
    },
    "9886": {
      "op": "PUSH2",
      "value": "0x26A6"
    },
    "9889": {
      "op": "JUMPI"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9892": {
      "op": "DUP1"
    },
    "9893": {
      "op": "REVERT"
    },
    "9894": {
      "op": "JUMPDEST"
    },
    "9895": {
      "op": "DUP8"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9899": {
      "op": "DUP2"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "op": "DUP10"
    },
    "9902": {
      "op": "SGT"
    },
    "9903": {
      "op": "PUSH2",
      "value": "0x26B7"
    },
    "9906": {
      "op": "JUMPI"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9909": {
      "op": "DUP1"
    },
    "9910": {
      "op": "REVERT"
    },
    "9911": {
      "op": "JUMPDEST"
    },
    "9912": {
      "op": "DUP1"
    },
    "9913": {
      "op": "CALLDATALOAD"
    },
    "9914": {
      "op": "PUSH2",
      "value": "0x26C5"
    },
    "9917": {
      "op": "PUSH2",
      "value": "0x2479"
    },
    "9920": {
      "op": "DUP3"
    },
    "9921": {
      "op": "PUSH2",
      "value": "0x2434"
    },
    "9924": {
      "jump": "i",
      "op": "JUMP"
    },
    "9925": {
      "op": "JUMPDEST"
    },
    "9926": {
      "op": "DUP2"
    },
    "9927": {
      "op": "DUP2"
    },
    "9928": {
      "op": "MSTORE"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9931": {
      "op": "SWAP2"
    },
    "9932": {
      "op": "SWAP1"
    },
    "9933": {
      "op": "SWAP2"
    },
    "9934": {
      "op": "SHL"
    },
    "9935": {
      "op": "DUP3"
    },
    "9936": {
      "op": "ADD"
    },
    "9937": {
      "op": "DUP5"
    },
    "9938": {
      "op": "ADD"
    },
    "9939": {
      "op": "SWAP1"
    },
    "9940": {
      "op": "DUP5"
    },
    "9941": {
      "op": "DUP2"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "SWAP1"
    },
    "9944": {
      "op": "DUP12"
    },
    "9945": {
      "op": "DUP4"
    },
    "9946": {
      "op": "GT"
    },
    "9947": {
      "op": "ISZERO"
    },
    "9948": {
      "op": "PUSH2",
      "value": "0x26E4"
    },
    "9951": {
      "op": "JUMPI"
    },
    "9952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9954": {
      "op": "DUP1"
    },
    "9955": {
      "op": "REVERT"
    },
    "9956": {
      "op": "JUMPDEST"
    },
    "9957": {
      "op": "SWAP3"
    },
    "9958": {
      "op": "DUP6"
    },
    "9959": {
      "op": "ADD"
    },
    "9960": {
      "op": "SWAP3"
    },
    "9961": {
      "op": "JUMPDEST"
    },
    "9962": {
      "op": "DUP3"
    },
    "9963": {
      "op": "DUP5"
    },
    "9964": {
      "op": "LT"
    },
    "9965": {
      "op": "ISZERO"
    },
    "9966": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "9969": {
      "op": "JUMPI"
    },
    "9970": {
      "op": "DUP4"
    },
    "9971": {
      "op": "CALLDATALOAD"
    },
    "9972": {
      "op": "DUP3"
    },
    "9973": {
      "op": "MSTORE"
    },
    "9974": {
      "op": "SWAP3"
    },
    "9975": {
      "op": "DUP6"
    },
    "9976": {
      "op": "ADD"
    },
    "9977": {
      "op": "SWAP3"
    },
    "9978": {
      "op": "SWAP1"
    },
    "9979": {
      "op": "DUP6"
    },
    "9980": {
      "op": "ADD"
    },
    "9981": {
      "op": "SWAP1"
    },
    "9982": {
      "op": "PUSH2",
      "value": "0x26E9"
    },
    "9985": {
      "op": "JUMP"
    },
    "9986": {
      "op": "JUMPDEST"
    },
    "9987": {
      "op": "SWAP8"
    },
    "9988": {
      "op": "POP"
    },
    "9989": {
      "op": "POP"
    },
    "9990": {
      "op": "POP"
    },
    "9991": {
      "op": "POP"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9994": {
      "op": "DUP8"
    },
    "9995": {
      "op": "ADD"
    },
    "9996": {
      "op": "CALLDATALOAD"
    },
    "9997": {
      "op": "SWAP4"
    },
    "9998": {
      "op": "POP"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10001": {
      "op": "DUP8"
    },
    "10002": {
      "op": "ADD"
    },
    "10003": {
      "op": "CALLDATALOAD"
    },
    "10004": {
      "op": "SWAP2"
    },
    "10005": {
      "op": "POP"
    },
    "10006": {
      "op": "DUP1"
    },
    "10007": {
      "op": "DUP3"
    },
    "10008": {
      "op": "GT"
    },
    "10009": {
      "op": "ISZERO"
    },
    "10010": {
      "op": "PUSH2",
      "value": "0x2722"
    },
    "10013": {
      "op": "JUMPI"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10016": {
      "op": "DUP1"
    },
    "10017": {
      "op": "REVERT"
    },
    "10018": {
      "op": "JUMPDEST"
    },
    "10019": {
      "op": "POP"
    },
    "10020": {
      "op": "PUSH2",
      "value": "0x272F"
    },
    "10023": {
      "op": "DUP8"
    },
    "10024": {
      "op": "DUP3"
    },
    "10025": {
      "op": "DUP9"
    },
    "10026": {
      "op": "ADD"
    },
    "10027": {
      "op": "PUSH2",
      "value": "0x2458"
    },
    "10030": {
      "jump": "i",
      "op": "JUMP"
    },
    "10031": {
      "op": "JUMPDEST"
    },
    "10032": {
      "op": "SWAP2"
    },
    "10033": {
      "op": "POP"
    },
    "10034": {
      "op": "POP"
    },
    "10035": {
      "op": "SWAP3"
    },
    "10036": {
      "op": "SWAP6"
    },
    "10037": {
      "op": "SWAP2"
    },
    "10038": {
      "op": "SWAP5"
    },
    "10039": {
      "op": "POP"
    },
    "10040": {
      "op": "SWAP3"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "jump": "o",
      "op": "JUMP"
    },
    "10043": {
      "op": "JUMPDEST"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10046": {
      "op": "DUP1"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10049": {
      "op": "DUP4"
    },
    "10050": {
      "op": "DUP6"
    },
    "10051": {
      "op": "SUB"
    },
    "10052": {
      "op": "SLT"
    },
    "10053": {
      "op": "ISZERO"
    },
    "10054": {
      "op": "PUSH2",
      "value": "0x274E"
    },
    "10057": {
      "op": "JUMPI"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10060": {
      "op": "DUP1"
    },
    "10061": {
      "op": "REVERT"
    },
    "10062": {
      "op": "JUMPDEST"
    },
    "10063": {
      "op": "DUP3"
    },
    "10064": {
      "op": "CALLDATALOAD"
    },
    "10065": {
      "op": "PUSH2",
      "value": "0x2759"
    },
    "10068": {
      "op": "DUP2"
    },
    "10069": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "10072": {
      "jump": "i",
      "op": "JUMP"
    },
    "10073": {
      "op": "JUMPDEST"
    },
    "10074": {
      "op": "SWAP2"
    },
    "10075": {
      "op": "POP"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10078": {
      "op": "DUP4"
    },
    "10079": {
      "op": "ADD"
    },
    "10080": {
      "op": "CALLDATALOAD"
    },
    "10081": {
      "op": "PUSH2",
      "value": "0x2517"
    },
    "10084": {
      "op": "DUP2"
    },
    "10085": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "10088": {
      "jump": "i",
      "op": "JUMP"
    },
    "10089": {
      "op": "JUMPDEST"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10092": {
      "op": "DUP1"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10095": {
      "op": "DUP4"
    },
    "10096": {
      "op": "DUP6"
    },
    "10097": {
      "op": "SUB"
    },
    "10098": {
      "op": "SLT"
    },
    "10099": {
      "op": "ISZERO"
    },
    "10100": {
      "op": "PUSH2",
      "value": "0x277C"
    },
    "10103": {
      "op": "JUMPI"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10106": {
      "op": "DUP1"
    },
    "10107": {
      "op": "REVERT"
    },
    "10108": {
      "op": "JUMPDEST"
    },
    "10109": {
      "op": "DUP3"
    },
    "10110": {
      "op": "CALLDATALOAD"
    },
    "10111": {
      "op": "SWAP2"
    },
    "10112": {
      "op": "POP"
    },
    "10113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10115": {
      "op": "DUP4"
    },
    "10116": {
      "op": "ADD"
    },
    "10117": {
      "op": "CALLDATALOAD"
    },
    "10118": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10127": {
      "op": "DUP2"
    },
    "10128": {
      "op": "GT"
    },
    "10129": {
      "op": "ISZERO"
    },
    "10130": {
      "op": "PUSH2",
      "value": "0x279A"
    },
    "10133": {
      "op": "JUMPI"
    },
    "10134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10136": {
      "op": "DUP1"
    },
    "10137": {
      "op": "REVERT"
    },
    "10138": {
      "op": "JUMPDEST"
    },
    "10139": {
      "op": "PUSH2",
      "value": "0x27A6"
    },
    "10142": {
      "op": "DUP6"
    },
    "10143": {
      "op": "DUP3"
    },
    "10144": {
      "op": "DUP7"
    },
    "10145": {
      "op": "ADD"
    },
    "10146": {
      "op": "PUSH2",
      "value": "0x2458"
    },
    "10149": {
      "jump": "i",
      "op": "JUMP"
    },
    "10150": {
      "op": "JUMPDEST"
    },
    "10151": {
      "op": "SWAP2"
    },
    "10152": {
      "op": "POP"
    },
    "10153": {
      "op": "POP"
    },
    "10154": {
      "op": "SWAP3"
    },
    "10155": {
      "op": "POP"
    },
    "10156": {
      "op": "SWAP3"
    },
    "10157": {
      "op": "SWAP1"
    },
    "10158": {
      "op": "POP"
    },
    "10159": {
      "jump": "o",
      "op": "JUMP"
    },
    "10160": {
      "op": "JUMPDEST"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10163": {
      "op": "DUP2"
    },
    "10164": {
      "op": "DUP2"
    },
    "10165": {
      "op": "SHR"
    },
    "10166": {
      "op": "SWAP1"
    },
    "10167": {
      "op": "DUP3"
    },
    "10168": {
      "op": "AND"
    },
    "10169": {
      "op": "DUP1"
    },
    "10170": {
      "op": "PUSH2",
      "value": "0x27C4"
    },
    "10173": {
      "op": "JUMPI"
    },
    "10174": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10176": {
      "op": "DUP3"
    },
    "10177": {
      "op": "AND"
    },
    "10178": {
      "op": "SWAP2"
    },
    "10179": {
      "op": "POP"
    },
    "10180": {
      "op": "JUMPDEST"
    },
    "10181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10183": {
      "op": "DUP3"
    },
    "10184": {
      "op": "LT"
    },
    "10185": {
      "op": "DUP2"
    },
    "10186": {
      "op": "SUB"
    },
    "10187": {
      "op": "PUSH2",
      "value": "0x27E4"
    },
    "10190": {
      "op": "JUMPI"
    },
    "10191": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10198": {
      "op": "SHL"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10201": {
      "op": "MSTORE"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10206": {
      "op": "MSTORE"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10211": {
      "op": "REVERT"
    },
    "10212": {
      "op": "JUMPDEST"
    },
    "10213": {
      "op": "POP"
    },
    "10214": {
      "op": "SWAP2"
    },
    "10215": {
      "op": "SWAP1"
    },
    "10216": {
      "op": "POP"
    },
    "10217": {
      "jump": "o",
      "op": "JUMP"
    },
    "10218": {
      "op": "JUMPDEST"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10223": {
      "op": "DUP3"
    },
    "10224": {
      "op": "DUP5"
    },
    "10225": {
      "op": "SUB"
    },
    "10226": {
      "op": "SLT"
    },
    "10227": {
      "op": "ISZERO"
    },
    "10228": {
      "op": "PUSH2",
      "value": "0x27FC"
    },
    "10231": {
      "op": "JUMPI"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10234": {
      "op": "DUP1"
    },
    "10235": {
      "op": "REVERT"
    },
    "10236": {
      "op": "JUMPDEST"
    },
    "10237": {
      "op": "POP"
    },
    "10238": {
      "op": "MLOAD"
    },
    "10239": {
      "op": "SWAP2"
    },
    "10240": {
      "op": "SWAP1"
    },
    "10241": {
      "op": "POP"
    },
    "10242": {
      "jump": "o",
      "op": "JUMP"
    },
    "10243": {
      "op": "JUMPDEST"
    },
    "10244": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10251": {
      "op": "SHL"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10254": {
      "op": "MSTORE"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10259": {
      "op": "MSTORE"
    },
    "10260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10264": {
      "op": "REVERT"
    },
    "10265": {
      "op": "JUMPDEST"
    },
    "10266": {
      "op": "DUP1"
    },
    "10267": {
      "op": "DUP3"
    },
    "10268": {
      "op": "ADD"
    },
    "10269": {
      "op": "DUP1"
    },
    "10270": {
      "op": "DUP3"
    },
    "10271": {
      "op": "GT"
    },
    "10272": {
      "op": "ISZERO"
    },
    "10273": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "10276": {
      "op": "JUMPI"
    },
    "10277": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "10280": {
      "op": "PUSH2",
      "value": "0x2803"
    },
    "10283": {
      "jump": "i",
      "op": "JUMP"
    },
    "10284": {
      "op": "JUMPDEST"
    },
    "10285": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10292": {
      "op": "SHL"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10295": {
      "op": "MSTORE"
    },
    "10296": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10300": {
      "op": "MSTORE"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10305": {
      "op": "REVERT"
    },
    "10306": {
      "op": "JUMPDEST"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10309": {
      "op": "DUP3"
    },
    "10310": {
      "op": "PUSH2",
      "value": "0x285F"
    },
    "10313": {
      "op": "JUMPI"
    },
    "10314": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10321": {
      "op": "SHL"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10324": {
      "op": "MSTORE"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10327": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10329": {
      "op": "MSTORE"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10334": {
      "op": "REVERT"
    },
    "10335": {
      "op": "JUMPDEST"
    },
    "10336": {
      "op": "POP"
    },
    "10337": {
      "op": "DIV"
    },
    "10338": {
      "op": "SWAP1"
    },
    "10339": {
      "jump": "o",
      "op": "JUMP"
    },
    "10340": {
      "op": "JUMPDEST"
    },
    "10341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10345": {
      "op": "DUP1"
    },
    "10346": {
      "op": "DUP4"
    },
    "10347": {
      "op": "DUP6"
    },
    "10348": {
      "op": "SUB"
    },
    "10349": {
      "op": "SLT"
    },
    "10350": {
      "op": "ISZERO"
    },
    "10351": {
      "op": "PUSH2",
      "value": "0x2877"
    },
    "10354": {
      "op": "JUMPI"
    },
    "10355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10357": {
      "op": "DUP1"
    },
    "10358": {
      "op": "REVERT"
    },
    "10359": {
      "op": "JUMPDEST"
    },
    "10360": {
      "op": "DUP3"
    },
    "10361": {
      "op": "MLOAD"
    },
    "10362": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10371": {
      "op": "DUP2"
    },
    "10372": {
      "op": "GT"
    },
    "10373": {
      "op": "ISZERO"
    },
    "10374": {
      "op": "PUSH2",
      "value": "0x288E"
    },
    "10377": {
      "op": "JUMPI"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10380": {
      "op": "DUP1"
    },
    "10381": {
      "op": "REVERT"
    },
    "10382": {
      "op": "JUMPDEST"
    },
    "10383": {
      "op": "DUP4"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10387": {
      "op": "DUP2"
    },
    "10388": {
      "op": "ADD"
    },
    "10389": {
      "op": "DUP6"
    },
    "10390": {
      "op": "SGT"
    },
    "10391": {
      "op": "PUSH2",
      "value": "0x289F"
    },
    "10394": {
      "op": "JUMPI"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10397": {
      "op": "DUP1"
    },
    "10398": {
      "op": "REVERT"
    },
    "10399": {
      "op": "JUMPDEST"
    },
    "10400": {
      "op": "DUP1"
    },
    "10401": {
      "op": "MLOAD"
    },
    "10402": {
      "op": "PUSH2",
      "value": "0x28AD"
    },
    "10405": {
      "op": "PUSH2",
      "value": "0x2479"
    },
    "10408": {
      "op": "DUP3"
    },
    "10409": {
      "op": "PUSH2",
      "value": "0x2434"
    },
    "10412": {
      "jump": "i",
      "op": "JUMP"
    },
    "10413": {
      "op": "JUMPDEST"
    },
    "10414": {
      "op": "DUP2"
    },
    "10415": {
      "op": "DUP2"
    },
    "10416": {
      "op": "MSTORE"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10419": {
      "op": "SWAP2"
    },
    "10420": {
      "op": "SWAP1"
    },
    "10421": {
      "op": "SWAP2"
    },
    "10422": {
      "op": "SHL"
    },
    "10423": {
      "op": "DUP3"
    },
    "10424": {
      "op": "ADD"
    },
    "10425": {
      "op": "DUP4"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "SWAP1"
    },
    "10428": {
      "op": "DUP4"
    },
    "10429": {
      "op": "DUP2"
    },
    "10430": {
      "op": "ADD"
    },
    "10431": {
      "op": "SWAP1"
    },
    "10432": {
      "op": "DUP8"
    },
    "10433": {
      "op": "DUP4"
    },
    "10434": {
      "op": "GT"
    },
    "10435": {
      "op": "ISZERO"
    },
    "10436": {
      "op": "PUSH2",
      "value": "0x28CC"
    },
    "10439": {
      "op": "JUMPI"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10442": {
      "op": "DUP1"
    },
    "10443": {
      "op": "REVERT"
    },
    "10444": {
      "op": "JUMPDEST"
    },
    "10445": {
      "op": "SWAP3"
    },
    "10446": {
      "op": "DUP5"
    },
    "10447": {
      "op": "ADD"
    },
    "10448": {
      "op": "SWAP3"
    },
    "10449": {
      "op": "JUMPDEST"
    },
    "10450": {
      "op": "DUP3"
    },
    "10451": {
      "op": "DUP5"
    },
    "10452": {
      "op": "LT"
    },
    "10453": {
      "op": "ISZERO"
    },
    "10454": {
      "op": "PUSH2",
      "value": "0x28F3"
    },
    "10457": {
      "op": "JUMPI"
    },
    "10458": {
      "op": "DUP4"
    },
    "10459": {
      "op": "MLOAD"
    },
    "10460": {
      "op": "PUSH2",
      "value": "0x28E4"
    },
    "10463": {
      "op": "DUP2"
    },
    "10464": {
      "op": "PUSH2",
      "value": "0x232E"
    },
    "10467": {
      "jump": "i",
      "op": "JUMP"
    },
    "10468": {
      "op": "JUMPDEST"
    },
    "10469": {
      "op": "DUP3"
    },
    "10470": {
      "op": "MSTORE"
    },
    "10471": {
      "op": "SWAP3"
    },
    "10472": {
      "op": "DUP5"
    },
    "10473": {
      "op": "ADD"
    },
    "10474": {
      "op": "SWAP3"
    },
    "10475": {
      "op": "SWAP1"
    },
    "10476": {
      "op": "DUP5"
    },
    "10477": {
      "op": "ADD"
    },
    "10478": {
      "op": "SWAP1"
    },
    "10479": {
      "op": "PUSH2",
      "value": "0x28D1"
    },
    "10482": {
      "op": "JUMP"
    },
    "10483": {
      "op": "JUMPDEST"
    },
    "10484": {
      "op": "SWAP8"
    },
    "10485": {
      "op": "SWAP7"
    },
    "10486": {
      "op": "POP"
    },
    "10487": {
      "op": "POP"
    },
    "10488": {
      "op": "POP"
    },
    "10489": {
      "op": "POP"
    },
    "10490": {
      "op": "POP"
    },
    "10491": {
      "op": "POP"
    },
    "10492": {
      "op": "POP"
    },
    "10493": {
      "jump": "o",
      "op": "JUMP"
    },
    "10494": {
      "op": "JUMPDEST"
    },
    "10495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10499": {
      "op": "DUP3"
    },
    "10500": {
      "op": "ADD"
    },
    "10501": {
      "op": "PUSH2",
      "value": "0x2910"
    },
    "10504": {
      "op": "JUMPI"
    },
    "10505": {
      "op": "PUSH2",
      "value": "0x2910"
    },
    "10508": {
      "op": "PUSH2",
      "value": "0x2803"
    },
    "10511": {
      "jump": "i",
      "op": "JUMP"
    },
    "10512": {
      "op": "JUMPDEST"
    },
    "10513": {
      "op": "POP"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10516": {
      "op": "ADD"
    },
    "10517": {
      "op": "SWAP1"
    },
    "10518": {
      "jump": "o",
      "op": "JUMP"
    },
    "10519": {
      "op": "JUMPDEST"
    },
    "10520": {
      "op": "DUP2"
    },
    "10521": {
      "op": "DUP2"
    },
    "10522": {
      "op": "SUB"
    },
    "10523": {
      "op": "DUP2"
    },
    "10524": {
      "op": "DUP2"
    },
    "10525": {
      "op": "GT"
    },
    "10526": {
      "op": "ISZERO"
    },
    "10527": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "10530": {
      "op": "JUMPI"
    },
    "10531": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "10534": {
      "op": "PUSH2",
      "value": "0x2803"
    },
    "10537": {
      "jump": "i",
      "op": "JUMP"
    },
    "10538": {
      "op": "JUMPDEST"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10541": {
      "op": "DUP1"
    },
    "10542": {
      "op": "DUP3"
    },
    "10543": {
      "op": "MSTORE"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10546": {
      "op": "SWAP1"
    },
    "10547": {
      "op": "DUP3"
    },
    "10548": {
      "op": "ADD"
    },
    "10549": {
      "op": "MSTORE"
    },
    "10550": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10585": {
      "op": "DUP3"
    },
    "10586": {
      "op": "ADD"
    },
    "10587": {
      "op": "MSTORE"
    },
    "10588": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10592": {
      "op": "SHL"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10595": {
      "op": "DUP3"
    },
    "10596": {
      "op": "ADD"
    },
    "10597": {
      "op": "MSTORE"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10600": {
      "op": "ADD"
    },
    "10601": {
      "op": "SWAP1"
    },
    "10602": {
      "jump": "o",
      "op": "JUMP"
    },
    "10603": {
      "op": "JUMPDEST"
    },
    "10604": {
      "op": "DUP3"
    },
    "10605": {
      "op": "DUP2"
    },
    "10606": {
      "op": "MSTORE"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10611": {
      "op": "DUP3"
    },
    "10612": {
      "op": "ADD"
    },
    "10613": {
      "op": "MSTORE"
    },
    "10614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10616": {
      "op": "PUSH2",
      "value": "0x2984"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10621": {
      "op": "DUP4"
    },
    "10622": {
      "op": "ADD"
    },
    "10623": {
      "op": "DUP5"
    },
    "10624": {
      "op": "PUSH2",
      "value": "0x2522"
    },
    "10627": {
      "jump": "i",
      "op": "JUMP"
    },
    "10628": {
      "op": "JUMPDEST"
    },
    "10629": {
      "op": "SWAP5"
    },
    "10630": {
      "op": "SWAP4"
    },
    "10631": {
      "op": "POP"
    },
    "10632": {
      "op": "POP"
    },
    "10633": {
      "op": "POP"
    },
    "10634": {
      "op": "POP"
    },
    "10635": {
      "jump": "o",
      "op": "JUMP"
    },
    "10636": {
      "op": "JUMPDEST"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10639": {
      "op": "DUP1"
    },
    "10640": {
      "op": "DUP3"
    },
    "10641": {
      "op": "MSTORE"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10644": {
      "op": "SWAP1"
    },
    "10645": {
      "op": "DUP3"
    },
    "10646": {
      "op": "ADD"
    },
    "10647": {
      "op": "MSTORE"
    },
    "10648": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10683": {
      "op": "DUP3"
    },
    "10684": {
      "op": "ADD"
    },
    "10685": {
      "op": "MSTORE"
    },
    "10686": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10695": {
      "op": "SHL"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10698": {
      "op": "DUP3"
    },
    "10699": {
      "op": "ADD"
    },
    "10700": {
      "op": "MSTORE"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10703": {
      "op": "ADD"
    },
    "10704": {
      "op": "SWAP1"
    },
    "10705": {
      "jump": "o",
      "op": "JUMP"
    },
    "10706": {
      "op": "JUMPDEST"
    },
    "10707": {
      "op": "DUP1"
    },
    "10708": {
      "op": "DUP3"
    },
    "10709": {
      "op": "MUL"
    },
    "10710": {
      "op": "DUP2"
    },
    "10711": {
      "op": "ISZERO"
    },
    "10712": {
      "op": "DUP3"
    },
    "10713": {
      "op": "DUP3"
    },
    "10714": {
      "op": "DIV"
    },
    "10715": {
      "op": "DUP5"
    },
    "10716": {
      "op": "EQ"
    },
    "10717": {
      "op": "OR"
    },
    "10718": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "10721": {
      "op": "JUMPI"
    },
    "10722": {
      "op": "PUSH2",
      "value": "0x85E"
    },
    "10725": {
      "op": "PUSH2",
      "value": "0x2803"
    },
    "10728": {
      "jump": "i",
      "op": "JUMP"
    },
    "10729": {
      "op": "JUMPDEST"
    },
    "10730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10734": {
      "op": "DUP3"
    },
    "10735": {
      "op": "DUP5"
    },
    "10736": {
      "op": "SUB"
    },
    "10737": {
      "op": "SLT"
    },
    "10738": {
      "op": "ISZERO"
    },
    "10739": {
      "op": "PUSH2",
      "value": "0x29FB"
    },
    "10742": {
      "op": "JUMPI"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10745": {
      "op": "DUP1"
    },
    "10746": {
      "op": "REVERT"
    },
    "10747": {
      "op": "JUMPDEST"
    },
    "10748": {
      "op": "DUP2"
    },
    "10749": {
      "op": "MLOAD"
    },
    "10750": {
      "op": "DUP1"
    },
    "10751": {
      "op": "ISZERO"
    },
    "10752": {
      "op": "ISZERO"
    },
    "10753": {
      "op": "DUP2"
    },
    "10754": {
      "op": "EQ"
    },
    "10755": {
      "op": "PUSH2",
      "value": "0x23E6"
    },
    "10758": {
      "op": "JUMPI"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10761": {
      "op": "DUP1"
    },
    "10762": {
      "op": "REVERT"
    },
    "10763": {
      "op": "JUMPDEST"
    },
    "10764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10766": {
      "op": "DUP1"
    },
    "10767": {
      "op": "DUP3"
    },
    "10768": {
      "op": "MSTORE"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10771": {
      "op": "SWAP1"
    },
    "10772": {
      "op": "DUP3"
    },
    "10773": {
      "op": "ADD"
    },
    "10774": {
      "op": "MSTORE"
    },
    "10775": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10810": {
      "op": "DUP3"
    },
    "10811": {
      "op": "ADD"
    },
    "10812": {
      "op": "MSTORE"
    },
    "10813": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10827": {
      "op": "SHL"
    },
    "10828": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10830": {
      "op": "DUP3"
    },
    "10831": {
      "op": "ADD"
    },
    "10832": {
      "op": "MSTORE"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10835": {
      "op": "ADD"
    },
    "10836": {
      "op": "SWAP1"
    },
    "10837": {
      "jump": "o",
      "op": "JUMP"
    },
    "10838": {
      "op": "JUMPDEST"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10841": {
      "op": "DUP3"
    },
    "10842": {
      "op": "GT"
    },
    "10843": {
      "op": "ISZERO"
    },
    "10844": {
      "op": "PUSH2",
      "value": "0xB02"
    },
    "10847": {
      "op": "JUMPI"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10850": {
      "op": "DUP2"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10853": {
      "op": "MSTORE"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10858": {
      "op": "KECCAK256"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10861": {
      "op": "DUP6"
    },
    "10862": {
      "op": "ADD"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10865": {
      "op": "SHR"
    },
    "10866": {
      "op": "DUP2"
    },
    "10867": {
      "op": "ADD"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10870": {
      "op": "DUP7"
    },
    "10871": {
      "op": "LT"
    },
    "10872": {
      "op": "ISZERO"
    },
    "10873": {
      "op": "PUSH2",
      "value": "0x2A7F"
    },
    "10876": {
      "op": "JUMPI"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "op": "DUP1"
    },
    "10879": {
      "op": "JUMPDEST"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10882": {
      "op": "DUP6"
    },
    "10883": {
      "op": "ADD"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10886": {
      "op": "SHR"
    },
    "10887": {
      "op": "DUP3"
    },
    "10888": {
      "op": "ADD"
    },
    "10889": {
      "op": "SWAP2"
    },
    "10890": {
      "op": "POP"
    },
    "10891": {
      "op": "JUMPDEST"
    },
    "10892": {
      "op": "DUP2"
    },
    "10893": {
      "op": "DUP2"
    },
    "10894": {
      "op": "LT"
    },
    "10895": {
      "op": "ISZERO"
    },
    "10896": {
      "op": "PUSH2",
      "value": "0x2A9E"
    },
    "10899": {
      "op": "JUMPI"
    },
    "10900": {
      "op": "DUP3"
    },
    "10901": {
      "op": "DUP2"
    },
    "10902": {
      "op": "SSTORE"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10905": {
      "op": "ADD"
    },
    "10906": {
      "op": "PUSH2",
      "value": "0x2A8B"
    },
    "10909": {
      "op": "JUMP"
    },
    "10910": {
      "op": "JUMPDEST"
    },
    "10911": {
      "op": "POP"
    },
    "10912": {
      "op": "POP"
    },
    "10913": {
      "op": "POP"
    },
    "10914": {
      "op": "POP"
    },
    "10915": {
      "op": "POP"
    },
    "10916": {
      "op": "POP"
    },
    "10917": {
      "jump": "o",
      "op": "JUMP"
    },
    "10918": {
      "op": "JUMPDEST"
    },
    "10919": {
      "op": "DUP2"
    },
    "10920": {
      "op": "MLOAD"
    },
    "10921": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10930": {
      "op": "DUP2"
    },
    "10931": {
      "op": "GT"
    },
    "10932": {
      "op": "ISZERO"
    },
    "10933": {
      "op": "PUSH2",
      "value": "0x2AC0"
    },
    "10936": {
      "op": "JUMPI"
    },
    "10937": {
      "op": "PUSH2",
      "value": "0x2AC0"
    },
    "10940": {
      "op": "PUSH2",
      "value": "0x23ED"
    },
    "10943": {
      "jump": "i",
      "op": "JUMP"
    },
    "10944": {
      "op": "JUMPDEST"
    },
    "10945": {
      "op": "PUSH2",
      "value": "0x2AD4"
    },
    "10948": {
      "op": "DUP2"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "10952": {
      "op": "DUP5"
    },
    "10953": {
      "op": "SLOAD"
    },
    "10954": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10957": {
      "jump": "i",
      "op": "JUMP"
    },
    "10958": {
      "op": "JUMPDEST"
    },
    "10959": {
      "op": "DUP5"
    },
    "10960": {
      "op": "PUSH2",
      "value": "0x2A56"
    },
    "10963": {
      "jump": "i",
      "op": "JUMP"
    },
    "10964": {
      "op": "JUMPDEST"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10967": {
      "op": "DUP1"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10970": {
      "op": "DUP4"
    },
    "10971": {
      "op": "GT"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10974": {
      "op": "DUP2"
    },
    "10975": {
      "op": "EQ"
    },
    "10976": {
      "op": "PUSH2",
      "value": "0x2B09"
    },
    "10979": {
      "op": "JUMPI"
    },
    "10980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10982": {
      "op": "DUP5"
    },
    "10983": {
      "op": "ISZERO"
    },
    "10984": {
      "op": "PUSH2",
      "value": "0x2AF1"
    },
    "10987": {
      "op": "JUMPI"
    },
    "10988": {
      "op": "POP"
    },
    "10989": {
      "op": "DUP6"
    },
    "10990": {
      "op": "DUP4"
    },
    "10991": {
      "op": "ADD"
    },
    "10992": {
      "op": "MLOAD"
    },
    "10993": {
      "op": "JUMPDEST"
    },
    "10994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10996": {
      "op": "NOT"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10999": {
      "op": "DUP7"
    },
    "11000": {
      "op": "SWAP1"
    },
    "11001": {
      "op": "SHL"
    },
    "11002": {
      "op": "SHR"
    },
    "11003": {
      "op": "NOT"
    },
    "11004": {
      "op": "AND"
    },
    "11005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11007": {
      "op": "DUP6"
    },
    "11008": {
      "op": "SWAP1"
    },
    "11009": {
      "op": "SHL"
    },
    "11010": {
      "op": "OR"
    },
    "11011": {
      "op": "DUP6"
    },
    "11012": {
      "op": "SSTORE"
    },
    "11013": {
      "op": "PUSH2",
      "value": "0x2A9E"
    },
    "11016": {
      "op": "JUMP"
    },
    "11017": {
      "op": "JUMPDEST"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11020": {
      "op": "DUP6"
    },
    "11021": {
      "op": "DUP2"
    },
    "11022": {
      "op": "MSTORE"
    },
    "11023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11025": {
      "op": "DUP2"
    },
    "11026": {
      "op": "KECCAK256"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11029": {
      "op": "NOT"
    },
    "11030": {
      "op": "DUP7"
    },
    "11031": {
      "op": "AND"
    },
    "11032": {
      "op": "SWAP2"
    },
    "11033": {
      "op": "JUMPDEST"
    },
    "11034": {
      "op": "DUP3"
    },
    "11035": {
      "op": "DUP2"
    },
    "11036": {
      "op": "LT"
    },
    "11037": {
      "op": "ISZERO"
    },
    "11038": {
      "op": "PUSH2",
      "value": "0x2B38"
    },
    "11041": {
      "op": "JUMPI"
    },
    "11042": {
      "op": "DUP9"
    },
    "11043": {
      "op": "DUP7"
    },
    "11044": {
      "op": "ADD"
    },
    "11045": {
      "op": "MLOAD"
    },
    "11046": {
      "op": "DUP3"
    },
    "11047": {
      "op": "SSTORE"
    },
    "11048": {
      "op": "SWAP5"
    },
    "11049": {
      "op": "DUP5"
    },
    "11050": {
      "op": "ADD"
    },
    "11051": {
      "op": "SWAP5"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11054": {
      "op": "SWAP1"
    },
    "11055": {
      "op": "SWAP2"
    },
    "11056": {
      "op": "ADD"
    },
    "11057": {
      "op": "SWAP1"
    },
    "11058": {
      "op": "DUP5"
    },
    "11059": {
      "op": "ADD"
    },
    "11060": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "11063": {
      "op": "JUMP"
    },
    "11064": {
      "op": "JUMPDEST"
    },
    "11065": {
      "op": "POP"
    },
    "11066": {
      "op": "DUP6"
    },
    "11067": {
      "op": "DUP3"
    },
    "11068": {
      "op": "LT"
    },
    "11069": {
      "op": "ISZERO"
    },
    "11070": {
      "op": "PUSH2",
      "value": "0x2B56"
    },
    "11073": {
      "op": "JUMPI"
    },
    "11074": {
      "op": "DUP8"
    },
    "11075": {
      "op": "DUP6"
    },
    "11076": {
      "op": "ADD"
    },
    "11077": {
      "op": "MLOAD"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11080": {
      "op": "NOT"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11083": {
      "op": "DUP9"
    },
    "11084": {
      "op": "SWAP1"
    },
    "11085": {
      "op": "SHL"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11088": {
      "op": "AND"
    },
    "11089": {
      "op": "SHR"
    },
    "11090": {
      "op": "NOT"
    },
    "11091": {
      "op": "AND"
    },
    "11092": {
      "op": "DUP2"
    },
    "11093": {
      "op": "SSTORE"
    },
    "11094": {
      "op": "JUMPDEST"
    },
    "11095": {
      "op": "POP"
    },
    "11096": {
      "op": "POP"
    },
    "11097": {
      "op": "POP"
    },
    "11098": {
      "op": "POP"
    },
    "11099": {
      "op": "POP"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11102": {
      "op": "SWAP1"
    },
    "11103": {
      "op": "DUP2"
    },
    "11104": {
      "op": "SHL"
    },
    "11105": {
      "op": "ADD"
    },
    "11106": {
      "op": "SWAP1"
    },
    "11107": {
      "op": "SSTORE"
    },
    "11108": {
      "op": "POP"
    },
    "11109": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5f844d55bab4248dbe5ec59c1abbe002692a3eb7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartnodesCore is ERC20Upgradeable {\n    // Validator multi-sig address\n    ISmartnodesMultiSig private _validatorContractInstance;\n    address public validatorContractAddress;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userIdCounter;\n    uint256 public jobCounter;\n    uint256 public activeValidators;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n\n    // Events\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(\n        uint256 indexed jobId,\n        uint256 timestamp,\n        address[] seedValidators\n    );\n    event JobCompleted(uint256 indexed jobId, uint256 timestamp);\n    event JobDisputed(uint256 indexed jobId, uint256 timestamp);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        uint256 id;\n        address userAddress;\n        bytes32 publicKeyHash;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        uint256 id;\n        address validatorAddress;\n        bytes32 publicKeyHash;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        uint256 id;\n        address author;\n        address[] seedValidators;\n        address[] workers;\n        uint256[] capacities;\n        bool activity;\n    }\n\n    // ERC20 token supply metrics\n    uint256 public constant MAX_SUPPLY = 21_000_000e18;\n    uint256 constant tailEmission = 1e18;\n\n    uint256 public halving = 2160; // number of state updates until next halving (~3 months)\n    uint256 public emissionRate = 2048e18; // amount of tokens to be emitted per state update\n    uint256 public lockAmount = 50_000e18; // minimum validator locked tokens required\n    uint256 public unlockPeriod = 50400;\n    uint256 public timeSinceLastHalving;\n\n    // Main datastructure mappings via id lookup\n    mapping(uint256 => User) public users;\n    mapping(uint256 => Validator) public validators;\n    mapping(uint256 => Job) public jobs;\n\n    // Helpful mappings\n    mapping(address => uint256) public userIdByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n    mapping(bytes32 => uint256) public jobIdByUserIdHash; // temporary for validator job creation?\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContractAddress,\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    function initialize(\n        address[] memory _leadDevelopers,\n        address _communityWallet\n    ) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        userIdCounter = 1;\n        jobCounter = 1;\n        validatorIdCounter = 1;\n\n        // Set ERC20 token parameters\n        emissionRate = 2048e18; // amount of tokens to be emitted per state update\n        lockAmount = 50_000e18; // minimum validator locked tokens required\n        halving = 2160;\n        unlockPeriod = 50400; // (seconds)\n        timeSinceLastHalving = 0;\n\n        uint256 devWallets = 2_341_280e18;\n        uint256 communityFunding = 2_000_000e18;\n        uint256 idoAmount = 3_500_000e18;\n        communityFunding += idoAmount; // We are sending the ido amount to the community wallet while we await an initial token sale\n\n        for (uint i = 0; i < _leadDevelopers.length; i++) {\n            _mint(_leadDevelopers[i], devWallets / _leadDevelopers.length);\n        }\n\n        _mint(_communityWallet, communityFunding);\n\n        // Other parameters\n        minValidators = 1;\n        maxValidators = 3;\n    }\n\n    function setValidatorContract(address validatorAddress) external {\n        require(\n            validatorContractAddress == address(0),\n            \"Validator address already set.\"\n        );\n        _validatorContractInstance = ISmartnodesMultiSig(validatorAddress);\n        validatorContractAddress = validatorAddress;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(bytes32 _publicKeyHash) external {\n        // Only one address & public key hash per user.\n        require(userIdByAddress[msg.sender] == 0, \"User already registered.\");\n\n        users[userIdCounter] = User({\n            id: userIdCounter,\n            userAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            reputation: 50\n        });\n\n        userIdByAddress[msg.sender] = userIdCounter;\n        userIdCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already exists.\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Create validator on SmartnodesCore\n        validators[validatorIdCounter] = Validator({\n            id: validatorIdCounter,\n            validatorAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 50\n        });\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n\n        // Lock token in contract\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting Via Chainlink VRF TODO\n    function requestJob(\n        uint256[] calldata _capacities\n    ) external returns (uint256[] memory validatorIds) {\n        uint256 uid = userIdByAddress[msg.sender];\n\n        require(uid != 0, \"User not registered.\");\n        require(_capacities[0] > 0, \"Capacity must be greater zero.\");\n        require(\n            validatorContractAddress != address(0),\n            \"Validator contract not set!\"\n        );\n\n        address[] memory _seedValidators = _validatorContractInstance\n            .generateValidatorCandidates();\n        uint256[] memory _validatorIds = new uint256[](_seedValidators.length);\n\n        for (uint256 i = 0; i < _seedValidators.length; i++) {\n            _validatorIds[i] = validatorIdByAddress[_seedValidators[i]];\n        }\n\n        // Store the job in the jobs mapping\n        jobs[jobCounter] = Job({\n            id: jobCounter,\n            author: msg.sender,\n            seedValidators: _seedValidators,\n            workers: new address[](_capacities.length),\n            capacities: _capacities,\n            activity: true\n        });\n\n        emit JobRequested(jobCounter, block.timestamp, _seedValidators);\n        jobCounter++;\n\n        return _validatorIds;\n    }\n\n    function completeJob(\n        uint256 jobId,\n        address[] memory _workers\n    ) external onlyValidatorMultiSig returns (uint256[] memory) {\n        require(_workers.length == jobs[jobId].capacities.length);\n\n        jobs[jobId].workers = _workers;\n        jobs[jobId].activity = false;\n        // jobIdByUserIdHash[userIdHash] = 0;\n\n        emit JobCompleted(jobId, block.timestamp);\n\n        return jobs[jobId].capacities;\n    }\n\n    function disputeJob(uint256 jobId) external onlyValidatorMultiSig {\n        Job storage job = jobs[jobId];\n        job.activity = false;\n        emit JobDisputed(jobId, block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to lock tokens, callable from other functions\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        uint256 totalLocked = validators[validatorId].locked;\n\n        _validatorContractInstance.updateLockedTokens(\n            sender,\n            totalLocked,\n            totalLocked >= lockAmount\n        );\n\n        emit TokensLocked(sender, amount);\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            uint256 totalLocked = validator.locked - amount;\n            _validatorContractInstance.updateLockedTokens(\n                msg.sender,\n                totalLocked,\n                totalLocked >= lockAmount\n            );\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n     * Updates the emission rate and halving accordingly\n     */\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _workerCapacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted\n    ) external onlyValidatorMultiSig {\n        require(\n            totalSupply() + emissionRate <= MAX_SUPPLY,\n            \"Maximum supply reached!\"\n        );\n\n        if (timeSinceLastHalving >= halving) {\n            if (emissionRate > 1e18) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorRewardTotal = (emissionRate * 40) / 100;\n        uint256 workerRewardTotal = (emissionRate * 60) / 100;\n\n        // Distribute rewards for validators equally\n        uint256 validatorReward = validatorRewardTotal /\n            _validatorsVoted.length;\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(_validatorsVoted[v], validatorReward);\n        }\n\n        // Distribute rewards for workers\n        for (uint256 w = 0; w < _workers.length; w++) {\n            uint256 reward = ((_workerCapacities[w] * workerRewardTotal) /\n                _totalCapacity);\n            _mint(_workers[w], reward);\n        }\n\n        timeSinceLastHalving++;\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        uint256 jobId\n    ) external view returns (address[] memory) {\n        require(jobId < jobCounter, \"Invalid job ID\");\n        if (jobs[jobId].id == jobId) {\n            address[] memory jobValidators = jobs[jobId].seedValidators;\n            return jobValidators;\n        } else {\n            revert(\"Job not found!\");\n        }\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32) {\n        require(_validatorId < validatorIdCounter, \"Invalid ID.\");\n        Validator storage _validator = validators[_validatorId];\n        bool isActive = _validatorContractInstance.isActiveValidator(\n            _validator.validatorAddress\n        );\n        return (isActive, _validator.publicKeyHash);\n    }\n\n    function getUserCount() external view returns (uint256) {\n        return userIdCounter - 1;\n    }\n\n    function getValidatorCount() external view returns (uint256) {\n        return validatorIdCounter - 1;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return _validatorContractInstance.getNumValidators();\n    }\n\n    function getEmissionRate() external view returns (uint256) {\n        return emissionRate;\n    }\n\n    function getSupply() external view returns (uint256) {\n        return this.totalSupply();\n    }\n\n    function isLocked(address validatorAddr) external view returns (bool) {\n        uint256 _id = validatorIdByAddress[validatorAddr];\n        return validators[_id].locked >= lockAmount;\n    }\n\n    function getProposees() external view returns (address[] memory) {\n        return _validatorContractInstance.getSelectedValidators();\n    }\n}\n",
  "sourceMap": "271:13345:24:-:0;;;2163:4;2138:29;;2261:7;2231:37;;2353:9;2325:37;;2442:5;2412:35;;271:13345;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}