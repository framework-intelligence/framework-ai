{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNLOCK_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "changeLockAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "doubleStateTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUnclaimedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halveStateTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halvingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_genesisNodes",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "additionalReward",
          "type": "uint256"
        }
      ],
      "name": "recordRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "statesSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tailEmission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unclaimedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContract",
      "outputs": [
        {
          "internalType": "contract ISmartnodesMultiSig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorCounter",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "24": "contracts/SmartnodesCore.sol",
    "28": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5154
      ],
      "ContextUpgradeable": [
        4911
      ],
      "ERC20Upgradeable": [
        3700
      ],
      "IERC20MetadataUpgradeable": [
        4869
      ],
      "IERC20Upgradeable": [
        4844
      ],
      "ISmartnodesMultiSig": [
        2956
      ],
      "Initializable": [
        3777
      ],
      "SmartnodesCore": [
        1285
      ]
    },
    "id": 1286,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 448,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:24"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1286,
        "sourceUnit": 3701,
        "src": "57:78:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 450,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1286,
        "sourceUnit": 2957,
        "src": "136:46:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 451,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "211:16:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3700,
              "src": "211:16:24"
            },
            "id": 452,
            "nodeType": "InheritanceSpecifier",
            "src": "211:16:24"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1285,
        "linearizedBaseContracts": [
          1285,
          3700,
          4869,
          4844,
          4911,
          3777
        ],
        "name": "SmartnodesCore",
        "nameLocation": "193:14:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "99439089",
            "id": 455,
            "mutability": "mutable",
            "name": "validatorContract",
            "nameLocation": "261:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "234:44:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 454,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 453,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "234:19:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2956,
                "src": "234:19:24"
              },
              "referencedDeclaration": 2956,
              "src": "234:19:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e47158c",
            "id": 457,
            "mutability": "mutable",
            "name": "proxyAdmin",
            "nameLocation": "299:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "284:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 456,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95b84bc2",
            "id": 460,
            "mutability": "mutable",
            "name": "tailEmission",
            "nameLocation": "331:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "316:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 458,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34653138",
              "id": 459,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "346:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4000000000000000000_by_1",
                "typeString": "int_const 4000000000000000000"
              },
              "value": "4e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "259a28cf",
            "id": 463,
            "mutability": "constant",
            "name": "UNLOCK_PERIOD",
            "nameLocation": "450:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "426:49:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 461,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "426:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f3230395f363030",
              "id": 462,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "466:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1209600_by_1",
                "typeString": "int_const 1209600"
              },
              "value": "1_209_600"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 465,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "519:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "504:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 464,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 467,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "552:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "537:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 466,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a3e251f",
            "id": 469,
            "mutability": "mutable",
            "name": "halvingPeriod",
            "nameLocation": "583:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "568:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "568:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ef046d",
            "id": 471,
            "mutability": "mutable",
            "name": "statesSinceLastHalving",
            "nameLocation": "617:22:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "602:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 470,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "602:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "56891412",
            "id": 473,
            "mutability": "mutable",
            "name": "totalLocked",
            "nameLocation": "660:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "645:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 472,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 475,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "692:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "677:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 474,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "677:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 482,
            "members": [
              {
                "constant": false,
                "id": 477,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "746:6:24",
                "nodeType": "VariableDeclaration",
                "scope": 482,
                "src": "738:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 476,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 479,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "770:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 482,
                "src": "762:18:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 478,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "762:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 481,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "798:13:24",
                "nodeType": "VariableDeclaration",
                "scope": 482,
                "src": "790:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 480,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "790:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "718:9:24",
            "nodeType": "StructDefinition",
            "scope": 1285,
            "src": "711:107:24",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 488,
            "members": [
              {
                "constant": false,
                "id": 485,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "855:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 488,
                "src": "845:20:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 484,
                  "nodeType": "ArrayTypeName",
                  "src": "845:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 487,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "883:7:24",
                "nodeType": "VariableDeclaration",
                "scope": 488,
                "src": "875:15:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 486,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "875:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "831:3:24",
            "nodeType": "StructDefinition",
            "scope": 1285,
            "src": "824:73:24",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38ed7cfc",
            "id": 493,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "934:4:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "903:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$488_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 492,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 489,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "911:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "903:23:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$488_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 491,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 490,
                  "name": "Job",
                  "nameLocations": [
                    "922:3:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 488,
                  "src": "922:3:24"
                },
                "referencedDeclaration": 488,
                "src": "922:3:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$488_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fa52c7d8",
            "id": 498,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "981:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "944:47:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
              "typeString": "mapping(address => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 497,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 494,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "952:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "944:29:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                "typeString": "mapping(address => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 496,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 495,
                  "name": "Validator",
                  "nameLocations": [
                    "963:9:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 482,
                  "src": "963:9:24"
                },
                "referencedDeclaration": 482,
                "src": "963:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "949813b8",
            "id": 502,
            "mutability": "mutable",
            "name": "unclaimedRewards",
            "nameLocation": "1032:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "997:51:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 501,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1005:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "997:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 500,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1016:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 504,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "1070:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "1055:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 503,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1055:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab051190",
            "id": 506,
            "mutability": "mutable",
            "name": "validatorCounter",
            "nameLocation": "1100:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "1086:30:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 505,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1086:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 508,
            "mutability": "mutable",
            "name": "userCounter",
            "nameLocation": "1137:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "1122:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 507,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a21bc3fb",
            "id": 510,
            "mutability": "mutable",
            "name": "availableCapacity",
            "nameLocation": "1169:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "1154:32:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 509,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1154:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 516,
            "name": "TokensLocked",
            "nameLocation": "1199:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1220:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "1212:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1239:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "1231:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:35:24"
            },
            "src": "1193:54:24"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 522,
            "name": "UnlockInitiated",
            "nameLocation": "1258:15:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1290:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1274:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "1309:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "1301:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:47:24"
            },
            "src": "1252:69:24"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 528,
            "name": "TokensUnlocked",
            "nameLocation": "1332:14:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1363:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "1347:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1382:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "1374:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1346:43:24"
            },
            "src": "1326:64:24"
          },
          {
            "anonymous": false,
            "eventSelector": "0ec7f3cde2339e340b67c36e948d72031c2973f5073a43b0fc2f16dfc2110550",
            "id": 534,
            "name": "JobRequested",
            "nameLocation": "1401:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1422:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "1414:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 532,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "1439:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "1431:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1413:35:24"
            },
            "src": "1395:54:24"
          },
          {
            "anonymous": false,
            "eventSelector": "2e1f6517128566f835909f0690741169a982d9b764725bede26fb30567f5a070",
            "id": 538,
            "name": "JobCompleted",
            "nameLocation": "1460:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1481:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1473:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:17:24"
            },
            "src": "1454:36:24"
          },
          {
            "anonymous": false,
            "eventSelector": "6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7",
            "id": 544,
            "name": "JobDisputed",
            "nameLocation": "1501:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1529:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "1513:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1546:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "1538:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1512:44:24"
            },
            "src": "1495:62:24"
          },
          {
            "anonymous": false,
            "eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
            "id": 550,
            "name": "RewardsClaimed",
            "nameLocation": "1568:14:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1599:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "1583:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1615:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "1607:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:40:24"
            },
            "src": "1562:61:24"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "1662:153:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 553,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1693:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1697:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1693:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 557,
                              "name": "validatorContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "1715:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            ],
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1707:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 555,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1707:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1707:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1693:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1672:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:125:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:125:24"
                },
                {
                  "id": 563,
                  "nodeType": "PlaceholderStatement",
                  "src": "1807:1:24"
                }
              ]
            },
            "id": 565,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "1638:21:24",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:2:24"
            },
            "src": "1629:186:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "1847:96:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 568,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1865:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1869:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1865:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 570,
                          "name": "proxyAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1879:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1865:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d757374206265207468652070726f78792061646d696e2e",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1891:33:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_449e7d9e0b4d413de840438a0fbffaf01b4884f2ed3bb2f1abf17f311517f6fa",
                          "typeString": "literal_string \"Caller must be the proxy admin.\""
                        },
                        "value": "Caller must be the proxy admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_449e7d9e0b4d413de840438a0fbffaf01b4884f2ed3bb2f1abf17f311517f6fa",
                          "typeString": "literal_string \"Caller must be the proxy admin.\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1857:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:68:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:68:24"
                },
                {
                  "id": 575,
                  "nodeType": "PlaceholderStatement",
                  "src": "1935:1:24"
                }
              ]
            },
            "id": 577,
            "name": "onlyProxyAdmin",
            "nameLocation": "1830:14:24",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1844:2:24"
            },
            "src": "1821:122:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "2020:524:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 585,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "2030:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2030:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "2030:33:24"
                },
                {
                  "expression": {
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "proxyAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "2073:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 591,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2086:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2090:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2086:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2073:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:23:24"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 595,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "2106:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303234653138",
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2121:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1024000000000000000000_by_1",
                        "typeString": "int_const 1024000000000000000000"
                      },
                      "value": "1024e18"
                    },
                    "src": "2106:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "2106:22:24"
                },
                {
                  "expression": {
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 599,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "2138:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3430305f303030653138",
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2151:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_400000000000000000000000_by_1",
                        "typeString": "int_const 400000000000000000000000"
                      },
                      "value": "400_000e18"
                    },
                    "src": "2138:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:23:24"
                },
                {
                  "expression": {
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 603,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "2171:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38373432",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2187:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8742_by_1",
                        "typeString": "int_const 8742"
                      },
                      "value": "8742"
                    },
                    "src": "2171:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:20:24"
                },
                {
                  "expression": {
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 607,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "2255:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2280:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2255:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:26:24"
                },
                {
                  "expression": {
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 611,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "2291:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f3230395f363030",
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2306:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1209600_by_1",
                        "typeString": "int_const 1209600"
                      },
                      "value": "1_209_600"
                    },
                    "src": "2291:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:24:24"
                },
                {
                  "expression": {
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 615,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "2350:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2363:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2350:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:14:24"
                },
                {
                  "expression": {
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 619,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "2374:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2393:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2374:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:20:24"
                },
                {
                  "expression": {
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 623,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "2404:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2418:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2404:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:15:24"
                },
                {
                  "body": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "2478:60:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 639,
                                "name": "_genesisNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "2498:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 641,
                              "indexExpression": {
                                "id": 640,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "2512:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2498:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 642,
                              "name": "lockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "2516:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 638,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3512,
                            "src": "2492:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:35:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "2492:35:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 631,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "2447:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 632,
                        "name": "_genesisNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "2451:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2465:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2451:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2447:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "initializationExpression": {
                    "assignments": [
                      628
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2440:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "2435:6:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2435:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 630,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2444:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2435:10:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2473:3:24",
                      "subExpression": {
                        "id": 635,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "2473:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 637,
                    "nodeType": "ExpressionStatement",
                    "src": "2473:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "2430:108:24"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 582,
                  "name": "initializer",
                  "nameLocations": [
                    "2008:11:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3751,
                  "src": "2008:11:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2008:11:24"
              }
            ],
            "name": "initialize",
            "nameLocation": "1958:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "_genesisNodes",
                  "nameLocation": "1986:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1969:30:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 578,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1969:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 579,
                    "nodeType": "ArrayTypeName",
                    "src": "1969:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:32:24"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:24"
            },
            "scope": 1285,
            "src": "1949:595:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "3943:423:24",
              "statements": [
                {
                  "assignments": [
                    659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 659,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "4008:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "3997:14:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$488_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 658,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 657,
                          "name": "Job",
                          "nameLocations": [
                            "3997:3:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 488,
                          "src": "3997:3:24"
                        },
                        "referencedDeclaration": 488,
                        "src": "3997:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$488_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 663,
                  "initialValue": {
                    "baseExpression": {
                      "id": 660,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "4014:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$488_storage_$",
                        "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "id": 661,
                      "name": "jobHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "4019:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4014:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$488_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3997:30:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 664,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "4105:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$488_memory_ptr",
                          "typeString": "struct SmartnodesCore.Job memory"
                        }
                      },
                      "id": 665,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4109:7:24",
                      "memberName": "payment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 487,
                      "src": "4105:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4120:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4105:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "IfStatement",
                  "src": "4101:121:24",
                  "trueBody": {
                    "id": 677,
                    "nodeType": "Block",
                    "src": "4123:99:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4137:12:24",
                          "subExpression": {
                            "id": 668,
                            "name": "jobCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "4137:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "4137:12:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 672,
                              "name": "jobHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "4181:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 671,
                            "name": "JobCompleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "4168:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4168:21:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 674,
                        "nodeType": "EmitStatement",
                        "src": "4163:26:24"
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4210:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 656,
                        "id": 676,
                        "nodeType": "Return",
                        "src": "4203:8:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "totalReward",
                      "nameLocation": "4240:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "4232:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4232:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 683,
                  "initialValue": {
                    "expression": {
                      "id": 681,
                      "name": "job",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "4254:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$488_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4258:7:24",
                    "memberName": "payment",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 487,
                    "src": "4254:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4232:33:24"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4275:20:24",
                    "subExpression": {
                      "baseExpression": {
                        "id": 684,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "4282:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$488_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 686,
                      "indexExpression": {
                        "id": 685,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "4287:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4282:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$488_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "4275:20:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 690,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "4323:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 689,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "4310:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:21:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "EmitStatement",
                  "src": "4305:26:24"
                },
                {
                  "expression": {
                    "id": 693,
                    "name": "totalReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 680,
                    "src": "4348:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "4341:18:24"
                }
              ]
            },
            "functionSelector": "991e0139",
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 652,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "3903:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 565,
                  "src": "3903:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3903:21:24"
              }
            ],
            "name": "completeJob",
            "nameLocation": "3851:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "3880:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "3872:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3862:31:24"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "3934:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3933:9:24"
            },
            "scope": 1285,
            "src": "3842:524:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 850,
              "nodeType": "Block",
              "src": "4721:1339:24",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 715,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "4735:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 716,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "4761:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4735:39:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 728,
                  "nodeType": "IfStatement",
                  "src": "4731:228:24",
                  "trueBody": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "4776:183:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 718,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "4870:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 719,
                            "name": "tailEmission",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "4885:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4870:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 726,
                        "nodeType": "IfStatement",
                        "src": "4866:83:24",
                        "trueBody": {
                          "id": 725,
                          "nodeType": "Block",
                          "src": "4899:50:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 721,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 465,
                                  "src": "4917:12:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4933:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "4917:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 724,
                              "nodeType": "ExpressionStatement",
                              "src": "4917:17:24"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 730,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "5049:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 850,
                      "src": "5041:23:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5041:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 731,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5041:23:24"
                },
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "workerReward",
                      "nameLocation": "5082:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 850,
                      "src": "5074:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5074:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5074:20:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 735,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "5109:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5118:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5109:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5128:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5109:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 774,
                    "nodeType": "Block",
                    "src": "5241:164:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 750,
                            "name": "validatorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "5255:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 753,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 751,
                                          "name": "emissionRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 465,
                                          "src": "5275:12:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 752,
                                          "name": "additionalReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 710,
                                          "src": "5290:16:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5275:31:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 754,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5274:33:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3230",
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5310:2:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    },
                                    "value": "20"
                                  },
                                  "src": "5274:38:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 757,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5273:40:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5316:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5273:46:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5255:64:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "5255:64:24"
                      },
                      {
                        "expression": {
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 762,
                            "name": "workerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "5333:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 765,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 763,
                                          "name": "emissionRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 465,
                                          "src": "5350:12:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 764,
                                          "name": "additionalReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 710,
                                          "src": "5365:16:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5350:31:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 766,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5349:33:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3830",
                                    "id": 767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5385:2:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_80_by_1",
                                      "typeString": "int_const 80"
                                    },
                                    "value": "80"
                                  },
                                  "src": "5349:38:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 769,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5348:40:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5391:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5348:46:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5333:61:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "5333:61:24"
                      }
                    ]
                  },
                  "id": 775,
                  "nodeType": "IfStatement",
                  "src": "5105:300:24",
                  "trueBody": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "5131:104:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 739,
                            "name": "validatorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "5145:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 740,
                              "name": "emissionRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 465,
                              "src": "5163:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 741,
                              "name": "additionalReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "5178:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5163:31:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5145:49:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 744,
                        "nodeType": "ExpressionStatement",
                        "src": "5145:49:24"
                      },
                      {
                        "expression": {
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 745,
                            "name": "workerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "5208:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5223:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5208:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 748,
                        "nodeType": "ExpressionStatement",
                        "src": "5208:16:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 777,
                      "mutability": "mutable",
                      "name": "validatorShare",
                      "nameLocation": "5459:14:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 850,
                      "src": "5451:22:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 776,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5451:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 778,
                      "name": "validatorReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "5476:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 779,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "5494:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5511:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5494:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5476:41:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5451:66:24"
                },
                {
                  "body": {
                    "id": 806,
                    "nodeType": "Block",
                    "src": "5581:123:24",
                    "statements": [
                      {
                        "assignments": [
                          795
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 795,
                            "mutability": "mutable",
                            "name": "validator",
                            "nameLocation": "5603:9:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 806,
                            "src": "5595:17:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 794,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5595:7:24",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 799,
                        "initialValue": {
                          "baseExpression": {
                            "id": 796,
                            "name": "_validatorsVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "5615:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 798,
                          "indexExpression": {
                            "id": 797,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "5632:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5615:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5595:39:24"
                      },
                      {
                        "expression": {
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 800,
                              "name": "unclaimedRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "5648:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 802,
                            "indexExpression": {
                              "id": 801,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "5665:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5648:27:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 803,
                            "name": "validatorShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "5679:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5648:45:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 805,
                        "nodeType": "ExpressionStatement",
                        "src": "5648:45:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 787,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "5547:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 788,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "5551:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5568:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5551:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5547:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 807,
                  "initializationExpression": {
                    "assignments": [
                      784
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "5540:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 807,
                        "src": "5532:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5532:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 786,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5544:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5532:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5576:3:24",
                      "subExpression": {
                        "id": 791,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "5576:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 793,
                    "nodeType": "ExpressionStatement",
                    "src": "5576:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "5527:177:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 808,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "5751:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5760:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5751:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5769:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5751:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 846,
                  "nodeType": "IfStatement",
                  "src": "5747:272:24",
                  "trueBody": {
                    "id": 845,
                    "nodeType": "Block",
                    "src": "5772:247:24",
                    "statements": [
                      {
                        "body": {
                          "id": 843,
                          "nodeType": "Block",
                          "src": "5832:177:24",
                          "statements": [
                            {
                              "assignments": [
                                824
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 824,
                                  "mutability": "mutable",
                                  "name": "reward",
                                  "nameLocation": "5858:6:24",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 843,
                                  "src": "5850:14:24",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 823,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5850:7:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 834,
                              "initialValue": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 832,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 829,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "baseExpression": {
                                              "id": 825,
                                              "name": "_capacities",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 703,
                                              "src": "5869:11:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 827,
                                            "indexExpression": {
                                              "id": 826,
                                              "name": "w",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 813,
                                              "src": "5881:1:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5869:14:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 828,
                                            "name": "workerReward",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 733,
                                            "src": "5886:12:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "5869:29:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 830,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5868:31:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 831,
                                      "name": "_totalCapacity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 705,
                                      "src": "5922:14:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5868:68:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 833,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5867:70:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5850:87:24"
                            },
                            {
                              "expression": {
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 835,
                                    "name": "unclaimedRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 502,
                                    "src": "5955:16:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 839,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 836,
                                      "name": "_workers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 700,
                                      "src": "5972:8:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 838,
                                    "indexExpression": {
                                      "id": 837,
                                      "name": "w",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "5981:1:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5972:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5955:29:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 840,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "5988:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5955:39:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 842,
                              "nodeType": "ExpressionStatement",
                              "src": "5955:39:24"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 816,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "5806:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 817,
                              "name": "_workers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "5810:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5819:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5810:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5806:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 844,
                        "initializationExpression": {
                          "assignments": [
                            813
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 813,
                              "mutability": "mutable",
                              "name": "w",
                              "nameLocation": "5799:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 844,
                              "src": "5791:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 812,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5791:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 815,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5803:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5791:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5827:3:24",
                            "subExpression": {
                              "id": 820,
                              "name": "w",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "5827:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 822,
                          "nodeType": "ExpressionStatement",
                          "src": "5827:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "5786:223:24"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6029:24:24",
                    "subExpression": {
                      "id": 847,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "6029:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "6029:24:24"
                }
              ]
            },
            "documentation": {
              "id": 697,
              "nodeType": "StructuredDocumentation",
              "src": "4372:102:24",
              "text": " @notice Records rewards for later claiming by workers/validators thru mint function"
            },
            "functionSelector": "dc4b1320",
            "id": 851,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 712,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "4699:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 565,
                  "src": "4699:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4699:21:24"
              }
            ],
            "name": "recordRewards",
            "nameLocation": "4488:13:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "4528:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4511:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 698,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4511:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 699,
                    "nodeType": "ArrayTypeName",
                    "src": "4511:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "4563:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4546:28:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 701,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4546:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 702,
                    "nodeType": "ArrayTypeName",
                    "src": "4546:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "4592:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4584:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4584:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "4633:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4616:33:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 706,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4616:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 707,
                    "nodeType": "ArrayTypeName",
                    "src": "4616:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "additionalReward",
                  "nameLocation": "4667:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "4659:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4659:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4501:188:24"
            },
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:0:24"
            },
            "scope": 1285,
            "src": "4479:1581:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "6178:242:24",
              "statements": [
                {
                  "assignments": [
                    856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 856,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6196:6:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 888,
                      "src": "6188:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6188:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 861,
                  "initialValue": {
                    "baseExpression": {
                      "id": 857,
                      "name": "unclaimedRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "6205:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 860,
                    "indexExpression": {
                      "expression": {
                        "id": 858,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6222:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6226:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6222:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6205:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6188:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 863,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "6251:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6260:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6251:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207265776172647320746f20636c61696d",
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6263:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
                          "typeString": "literal_string \"No rewards to claim\""
                        },
                        "value": "No rewards to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
                          "typeString": "literal_string \"No rewards to claim\""
                        }
                      ],
                      "id": 862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6243:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6243:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "6243:42:24"
                },
                {
                  "expression": {
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 869,
                        "name": "unclaimedRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "6296:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 872,
                      "indexExpression": {
                        "expression": {
                          "id": 870,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6313:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6317:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6313:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6296:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6327:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6296:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "6296:32:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 877,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6344:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6348:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6344:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 879,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "6356:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 876,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3512,
                      "src": "6338:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6338:25:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "6338:25:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 883,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6394:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6398:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6394:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 885,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "6406:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 882,
                      "name": "RewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "6379:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6379:34:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 887,
                  "nodeType": "EmitStatement",
                  "src": "6374:39:24"
                }
              ]
            },
            "documentation": {
              "id": 852,
              "nodeType": "StructuredDocumentation",
              "src": "6066:74:24",
              "text": " @notice Allows users to claim their accumulated rewards"
            },
            "functionSelector": "372500ab",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "6154:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6166:2:24"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6178:0:24"
            },
            "scope": 1285,
            "src": "6145:275:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 951,
              "nodeType": "Block",
              "src": "6569:446:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 898,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "6587:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6596:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6587:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6599:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6579:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6579:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "6579:56:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 906,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 892,
                              "src": "6663:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 905,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3206,
                            "src": "6653:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6653:17:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 908,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "6674:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6653:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6682:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6645:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6645:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "6645:61:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 914,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
                              "src": "6737:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                                "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                              }
                            },
                            "id": 916,
                            "indexExpression": {
                              "id": 915,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 892,
                              "src": "6748:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6737:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$482_storage",
                              "typeString": "struct SmartnodesCore.Validator storage ref"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6756:13:24",
                          "memberName": "publicKeyHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "6737:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6781:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6773:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 918,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6773:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6773:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6737:46:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6797:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6716:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6716:118:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "6716:118:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 927,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "6858:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 930,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6874:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1285",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1285",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6866:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6866:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6866:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 932,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "6881:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 926,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3307,
                      "src": "6845:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6845:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "6845:43:24"
                },
                {
                  "expression": {
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 935,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "6898:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                            "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 937,
                        "indexExpression": {
                          "id": 936,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "6909:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6898:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$482_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 938,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6917:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "6898:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 939,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "6927:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6898:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "6898:35:24"
                },
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 942,
                      "name": "totalLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "6943:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 943,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "6958:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6943:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "6943:21:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "6993:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 948,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "7001:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 946,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "6980:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6980:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "EmitStatement",
                  "src": "6975:33:24"
                }
              ]
            },
            "documentation": {
              "id": 890,
              "nodeType": "StructuredDocumentation",
              "src": "6426:76:24",
              "text": " @dev Validator token unlocking, 14 day withdrawal period."
            },
            "id": 952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "6516:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6536:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "6528:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6552:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "6544:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6544:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6527:32:24"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6569:0:24"
            },
            "scope": 1285,
            "src": "6507:508:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "7066:48:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 958,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7088:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7092:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7088:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 960,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "7100:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 957,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "7076:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7076:31:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "7076:31:24"
                }
              ]
            },
            "functionSelector": "6e27d889",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "7030:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7049:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "7041:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7041:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7040:16:24"
            },
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7066:0:24"
            },
            "scope": 1285,
            "src": "7021:93:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1077,
              "nodeType": "Block",
              "src": "7167:1341:24",
              "statements": [
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "7195:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1077,
                      "src": "7177:27:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 970,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 969,
                          "name": "Validator",
                          "nameLocations": [
                            "7177:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 482,
                          "src": "7177:9:24"
                        },
                        "referencedDeclaration": 482,
                        "src": "7177:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "baseExpression": {
                      "id": 972,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "7207:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                        "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 975,
                    "indexExpression": {
                      "expression": {
                        "id": 973,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7218:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7222:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7218:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7207:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$482_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7177:52:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 978,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
                              "src": "7260:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                                "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                              }
                            },
                            "id": 981,
                            "indexExpression": {
                              "expression": {
                                "id": 979,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7271:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7275:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7271:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7260:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$482_storage",
                              "typeString": "struct SmartnodesCore.Validator storage ref"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7283:13:24",
                          "memberName": "publicKeyHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "7260:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7308:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7300:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 983,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7300:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7300:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "7260:50:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7324:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7239:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7239:122:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "7239:122:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 992,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "7379:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 993,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "7389:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 994,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7399:6:24",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 477,
                          "src": "7389:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7379:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7407:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7371:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7371:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "7371:69:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1000,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "7458:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7467:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7458:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7470:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7450:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7450:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "7450:56:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1006,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "7592:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7602:10:24",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 479,
                      "src": "7592:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7616:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7592:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1075,
                    "nodeType": "Block",
                    "src": "8022:480:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1045,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8139:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8145:9:24",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8139:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1047,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 971,
                                  "src": "8158:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 1048,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8168:10:24",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 479,
                                "src": "8158:20:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8139:39:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8196:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 1044,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8114:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8114:122:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1052,
                        "nodeType": "ExpressionStatement",
                        "src": "8114:122:24"
                      },
                      {
                        "expression": {
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1053,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "8251:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 1055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8261:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 477,
                            "src": "8251:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1056,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "8271:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8251:26:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1058,
                        "nodeType": "ExpressionStatement",
                        "src": "8251:26:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1062,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8312:4:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SmartnodesCore_$1285",
                                    "typeString": "contract SmartnodesCore"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SmartnodesCore_$1285",
                                    "typeString": "contract SmartnodesCore"
                                  }
                                ],
                                "id": 1061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8304:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1060,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8304:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8304:13:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1064,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8319:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8323:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8319:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1066,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "8331:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1059,
                            "name": "transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3307,
                            "src": "8291:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8291:47:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1068,
                        "nodeType": "ExpressionStatement",
                        "src": "8291:47:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1070,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8420:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8424:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8420:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1072,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "8432:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1069,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "8405:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8405:34:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1074,
                        "nodeType": "EmitStatement",
                        "src": "8400:39:24"
                      }
                    ]
                  },
                  "id": 1076,
                  "nodeType": "IfStatement",
                  "src": "7588:914:24",
                  "trueBody": {
                    "id": 1043,
                    "nodeType": "Block",
                    "src": "7619:397:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1010,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "7637:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7647:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 477,
                            "src": "7637:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1012,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "7656:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7637:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1022,
                        "nodeType": "IfStatement",
                        "src": "7633:113:24",
                        "trueBody": {
                          "id": 1021,
                          "nodeType": "Block",
                          "src": "7668:78:24",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1017,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7720:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7724:6:24",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7720:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1014,
                                    "name": "validatorContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 455,
                                    "src": "7686:17:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                                      "typeString": "contract ISmartnodesMultiSig"
                                    }
                                  },
                                  "id": 1016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7704:15:24",
                                  "memberName": "removeValidator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2869,
                                  "src": "7686:33:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7686:45:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1020,
                              "nodeType": "ExpressionStatement",
                              "src": "7686:45:24"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1023,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "7759:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7769:10:24",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 479,
                            "src": "7759:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1026,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7782:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7788:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7782:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1028,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "7800:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7782:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7759:53:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1031,
                        "nodeType": "ExpressionStatement",
                        "src": "7759:53:24"
                      },
                      {
                        "expression": {
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1032,
                            "name": "totalLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "7888:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1033,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "7903:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7888:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1035,
                        "nodeType": "ExpressionStatement",
                        "src": "7888:21:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1037,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7945:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7949:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7945:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1039,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "7957:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7967:10:24",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 479,
                              "src": "7957:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1036,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "7929:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7929:49:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1042,
                        "nodeType": "EmitStatement",
                        "src": "7924:54:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 1078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "7129:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7150:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "7142:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7142:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7141:16:24"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7167:0:24"
            },
            "scope": 1285,
            "src": "7120:1388:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1133,
              "nodeType": "Block",
              "src": "8615:531:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1087,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8656:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8660:6:24",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8656:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1086,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3206,
                              "src": "8646:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8646:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1090,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "8671:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8646:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1092,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "8686:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1093,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "8701:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8686:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8646:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8725:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8625:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8625:139:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "8625:139:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1100,
                              "name": "validators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
                              "src": "8795:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                                "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                              }
                            },
                            "id": 1103,
                            "indexExpression": {
                              "expression": {
                                "id": 1101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8806:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8810:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8806:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8795:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$482_storage",
                              "typeString": "struct SmartnodesCore.Validator storage ref"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8818:13:24",
                          "memberName": "publicKeyHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "8795:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8843:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8835:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1105,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8835:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8835:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8795:50:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206372656174656420776974682074686973206163636f756e7421",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8859:46:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5cb8254c49a9072d26899a72079b0b3633f237aaea03d1c6ff784e26447f64",
                          "typeString": "literal_string \"Validator already created with this account!\""
                        },
                        "value": "Validator already created with this account!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5cb8254c49a9072d26899a72079b0b3633f237aaea03d1c6ff784e26447f64",
                          "typeString": "literal_string \"Validator already created with this account!\""
                        }
                      ],
                      "id": 1099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8774:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8774:141:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "8774:141:24"
                },
                {
                  "expression": {
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1113,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "8926:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                          "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 1116,
                      "indexExpression": {
                        "expression": {
                          "id": 1114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8937:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8941:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8937:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8926:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$482_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8983:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9010:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 1120,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "9040:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1117,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "8951:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$482_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8975:6:24",
                        "8998:10:24",
                        "9025:13:24"
                      ],
                      "names": [
                        "locked",
                        "unlockTime",
                        "publicKeyHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8951:114:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$482_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "8926:139:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$482_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "8926:139:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1125,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9088:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9092:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9088:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1127,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "9100:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1124,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "9076:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9076:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "9076:35:24"
                },
                {
                  "expression": {
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "9121:18:24",
                    "subExpression": {
                      "id": 1130,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "9121:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "9121:18:24"
                }
              ]
            },
            "functionSelector": "497dfe63",
            "id": 1134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "8523:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "8556:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "8548:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8548:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "8588:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1134,
                  "src": "8580:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8580:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8538:67:24"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8615:0:24"
            },
            "scope": 1285,
            "src": "8514:632:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "9225:73:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1141,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "9242:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                            "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 1143,
                        "indexExpression": {
                          "id": 1142,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1136,
                          "src": "9253:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9242:28:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$482_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9271:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 477,
                      "src": "9242:35:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1145,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "9281:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9242:49:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1140,
                  "id": 1147,
                  "nodeType": "Return",
                  "src": "9235:56:24"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "9161:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "9178:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "9170:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9170:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9169:26:24"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "9219:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9219:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9218:6:24"
            },
            "scope": 1285,
            "src": "9152:146:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "9451:46:24",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1157,
                      "name": "unclaimedRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "9468:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1159,
                    "indexExpression": {
                      "id": 1158,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "9485:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9468:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1156,
                  "id": 1160,
                  "nodeType": "Return",
                  "src": "9461:29:24"
                }
              ]
            },
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "9304:67:24",
              "text": " @notice View function to check unclaimed rewards"
            },
            "functionSelector": "69a69e29",
            "id": 1162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnclaimedRewards",
            "nameLocation": "9385:19:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9413:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "9405:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9405:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9404:14:24"
            },
            "returnParameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "9442:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9442:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9441:9:24"
            },
            "scope": 1285,
            "src": "9376:121:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "9570:60:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1167,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9587:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9605:16:24",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2899,
                      "src": "9587:34:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1166,
                  "id": 1170,
                  "nodeType": "Return",
                  "src": "9580:43:24"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "9512:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9535:2:24"
            },
            "returnParameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "9561:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9561:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9560:9:24"
            },
            "scope": 1285,
            "src": "9503:127:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1200,
              "nodeType": "Block",
              "src": "9740:207:24",
              "statements": [
                {
                  "assignments": [
                    1183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "9767:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "9750:27:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$482_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 1182,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1181,
                          "name": "Validator",
                          "nameLocations": [
                            "9750:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 482,
                          "src": "9750:9:24"
                        },
                        "referencedDeclaration": 482,
                        "src": "9750:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$482_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1187,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1184,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "9780:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Validator_$482_storage_$",
                        "typeString": "mapping(address => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 1186,
                    "indexExpression": {
                      "id": 1185,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1174,
                      "src": "9791:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9780:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$482_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9750:58:24"
                },
                {
                  "assignments": [
                    1189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1189,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "9823:8:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 1200,
                      "src": "9818:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9818:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1194,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1192,
                        "name": "validatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "9870:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1190,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "9834:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9852:17:24",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2937,
                      "src": "9834:35:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9834:53:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9818:69:24"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1195,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "9905:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1196,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "9915:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$482_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9926:13:24",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 481,
                        "src": "9915:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 1198,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9904:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "functionReturnParameters": 1180,
                  "id": 1199,
                  "nodeType": "Return",
                  "src": "9897:43:24"
                }
              ]
            },
            "functionSelector": "8a11d7c9",
            "id": 1201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "9645:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "9679:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "9671:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9661:40:24"
            },
            "returnParameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "9725:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9725:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "9731:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9731:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9724:15:24"
            },
            "scope": 1285,
            "src": "9636:311:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "10019:202:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1209,
                              "name": "validatorContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "10058:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            ],
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10050:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10050:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10050:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10088:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10080:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10080:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10080:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10050:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10104:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 1206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10029:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10029:117:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "10029:117:24"
                },
                {
                  "expression": {
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1219,
                      "name": "validatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "10156:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1221,
                          "name": "_validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "10196:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1220,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2956,
                        "src": "10176:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$2956_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10176:38:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "10156:58:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "10156:58:24"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "9962:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "_validatorAddress",
                  "nameLocation": "9991:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "9983:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9983:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9982:27:24"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10019:0:24"
            },
            "scope": 1285,
            "src": "9953:268:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "10277:377:24",
              "statements": [
                {
                  "expression": {
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1231,
                      "name": "tailEmission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "10432:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10448:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "10432:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1234,
                  "nodeType": "ExpressionStatement",
                  "src": "10432:17:24"
                },
                {
                  "expression": {
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1235,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "10459:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10475:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "10459:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1238,
                  "nodeType": "ExpressionStatement",
                  "src": "10459:17:24"
                },
                {
                  "expression": {
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1239,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "10486:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10503:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "10486:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "10486:18:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1243,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "10567:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10585:11:24",
                      "memberName": "halvePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2927,
                      "src": "10567:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10567:31:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "10567:31:24"
                }
              ]
            },
            "functionSelector": "eabd4bd7",
            "id": 1249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1228,
                  "name": "onlyProxyAdmin",
                  "nameLocations": [
                    "10262:14:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 577,
                  "src": "10262:14:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "10262:14:24"
              }
            ],
            "name": "halveStateTime",
            "nameLocation": "10236:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10250:2:24"
            },
            "returnParameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10277:0:24"
            },
            "scope": 1285,
            "src": "10227:427:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "10711:233:24",
              "statements": [
                {
                  "expression": {
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1254,
                      "name": "tailEmission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "10721:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10737:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "10721:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "10721:17:24"
                },
                {
                  "expression": {
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1258,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "10748:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10764:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "10748:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "10748:17:24"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1262,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "10775:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10792:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "10775:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "10775:18:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1266,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "10856:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2956",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10874:12:24",
                      "memberName": "doublePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2930,
                      "src": "10856:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:32:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "10856:32:24"
                }
              ]
            },
            "functionSelector": "a00fabdd",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1252,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1251,
                  "name": "onlyProxyAdmin",
                  "nameLocations": [
                    "10696:14:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 577,
                  "src": "10696:14:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "10696:14:24"
              }
            ],
            "name": "doubleStateTime",
            "nameLocation": "10669:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10684:2:24"
            },
            "returnParameters": {
              "id": 1253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10711:0:24"
            },
            "scope": 1285,
            "src": "10660:284:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1283,
              "nodeType": "Block",
              "src": "11016:36:24",
              "statements": [
                {
                  "expression": {
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1279,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "11026:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1280,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "11039:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11026:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1282,
                  "nodeType": "ExpressionStatement",
                  "src": "11026:19:24"
                }
              ]
            },
            "functionSelector": "c1873850",
            "id": 1284,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1276,
                  "name": "onlyProxyAdmin",
                  "nameLocations": [
                    "11001:14:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 577,
                  "src": "11001:14:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "11001:14:24"
              }
            ],
            "name": "changeLockAmount",
            "nameLocation": "10959:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10984:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "10976:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10976:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10975:16:24"
            },
            "returnParameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11016:0:24"
            },
            "scope": 1285,
            "src": "10950:102:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1286,
        "src": "184:10870:24",
        "usedErrors": [],
        "usedEvents": [
          516,
          522,
          528,
          534,
          538,
          544,
          550,
          4834,
          4843
        ]
      }
    ],
    "src": "32:11023:24"
  },
  "bytecode": "6080604052673782dace9d900000606755348015601b57600080fd5b506122308061002b6000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c806388ef046d11610151578063a457c2d7116100c3578063d8df5dc111610087578063d8df5dc114610565578063dc4b13201461056e578063dd62ed3e14610581578063eabd4bd7146105ba578063f0c37a59146105c2578063fa52c7d8146105cb57600080fd5b8063a457c2d7146104f6578063a9059cbb14610509578063ab0511901461051c578063c18738501461053f578063cdf64a761461055257600080fd5b806396afc4501161011557806396afc450146104a3578063991e0139146104ac57806399439089146104bf578063a00fabdd146104d2578063a21bc3fb146104da578063a224cee7146104e357600080fd5b806388ef046d1461043f5780638a11d7c914610448578063949813b81461047257806395b84bc21461049257806395d89b411461049b57600080fd5b806339509351116101ea57806356891412116101ae57806356891412146103b55780635a3e251f146103be57806369a69e29146103c75780636e27d889146103f057806370a08231146104035780637c4053251461042c57600080fd5b8063395093511461032b5780633e47158c1461033e578063497dfe63146103695780634a4fbeec1461037c57806350355d76146103ac57600080fd5b8063259a28cf11610231578063259a28cf146102dd578063313ce567146102e7578063372500ab146102f657806337deea701461030057806338ed7cfc1461030857600080fd5b806306fdde031461026e578063095ea7b31461028c57806318160ddd146102af57806320d3a0b4146102c157806323b872dd146102ca575b600080fd5b610276610615565b6040516102839190611b3e565b60405180910390f35b61029f61029a366004611ba4565b6106a7565b6040519015158152602001610283565b6035545b604051908152602001610283565b6102b3606d5481565b61029f6102d8366004611bce565b6106c1565b6102b36212750081565b60405160128152602001610283565b6102fe6106e5565b005b6102b361078f565b6102b3610316366004611c0a565b606e6020526000908152604090206001015481565b61029f610339366004611ba4565b610802565b606654610351906001600160a01b031681565b6040516001600160a01b039091168152602001610283565b6102fe610377366004611c23565b610841565b61029f61038a366004611c45565b6069546001600160a01b039091166000908152606f6020526040902054101590565b6102b360715481565b6102b3606c5481565b6102b3606a5481565b6102b36103d5366004611c45565b6001600160a01b031660009081526070602052604090205490565b6102fe6103fe366004611c0a565b6109a3565b6102b3610411366004611c45565b6001600160a01b031660009081526033602052604090205490565b6102fe61043a366004611c0a565b6109b0565b6102b3606b5481565b61045b610456366004611c45565b610c0d565b604080519215158352602083019190915201610283565b6102b3610480366004611c45565b60706020526000908152604090205481565b6102b360675481565b610276610cc7565b6102b360685481565b6102b36104ba366004611c0a565b610cd6565b606554610351906001600160a01b031681565b6102fe610e39565b6102b360745481565b6102fe6104f1366004611d48565b610f0f565b61029f610504366004611ba4565b6110a0565b61029f610517366004611ba4565b611132565b60725461052b9062ffffff1681565b60405162ffffff9091168152602001610283565b6102fe61054d366004611c0a565b611140565b6102fe610560366004611c45565b61116f565b6102b360695481565b6102fe61057c366004611d85565b6111ea565b6102b361058f366004611e73565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6102fe6113fb565b6102b360735481565b6105fa6105d9366004611c45565b606f6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610283565b60606036805461062490611ea6565b80601f016020809104026020016040519081016040528092919081815260200182805461065090611ea6565b801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b6000336106b58185856114b7565b60019150505b92915050565b6000336106cf8582856115db565b6106da858585611667565b506001949350505050565b336000908152607060205260409020548061073d5760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b60448201526064015b60405180910390fd5b336000818152607060205260408120556107579082611835565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b606554604080516348f1712960e11b815290516000926001600160a01b0316916391e2e2529160048083019260209291908290030181865afa1580156107d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fd9190611ee0565b905090565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906106b5908290869061083c908790611f0f565b6114b7565b33600090815260336020526040902054811115801561086257506069548110155b6108ae5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e00000000006044820152606401610734565b336000908152606f6020526040902060020154156109235760405162461bcd60e51b815260206004820152602c60248201527f56616c696461746f7220616c726561647920637265617465642077697468207460448201526b686973206163636f756e742160a01b6064820152608401610734565b604080516060810182526000808252602080830182815283850187815233808552606f909352949092209251835590516001830155915160029091015560695461096d9190611914565b6072805462ffffff1690600061098283611f22565b91906101000a81548162ffffff021916908362ffffff160217905550505050565b6109ad3382611914565b50565b336000908152606f602052604090206002810154610a0c5760405162461bcd60e51b81526020600482015260196024820152782b30b634b230ba37b9103237b2b9903737ba1032bc34b9ba1760391b6044820152606401610734565b8054821115610a5d5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e00006044820152606401610734565b60008211610a7d5760405162461bcd60e51b815260040161073490611f44565b8060010154600003610b5d5760695481541015610af2576065546040516340a141ff60e01b81523360048201526001600160a01b03909116906340a141ff90602401600060405180830381600087803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b505050505b606d54610aff9042611f0f565b816001018190555081606c6000828254610b199190611f85565b9091555050600181015460405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a25050565b8060010154421015610bb15760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e00000000000000006044820152606401610734565b81816000016000828254610bc59190611f85565b90915550610bd690503033846106c1565b5060405182815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e119588890602001610b51565b5050565b6001600160a01b038181166000818152606f6020908152604080832081516060810183528154815260018201549381019390935260020154828201526065549051631015428760e21b8152600481019490945291938493919284929116906340550a1c90602401602060405180830381865afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190611f98565b60409092015191959194509092505050565b60606037805461062490611ea6565b6065546000906001600160a01b03163314610d035760405162461bcd60e51b815260040161073490611fba565b6000828152606e60209081526040808320815181546060948102820185018452928101838152909391928492849190840182828015610d6157602002820191906000526020600020905b815481526020019060010190808311610d4d575b5050505050815260200160018201548152505090508060200151600003610dd35760718054906000610d9283612000565b90915550506040518381527f2e1f6517128566f835909f0690741169a982d9b764725bede26fb30567f5a0709060200160405180910390a150600092915050565b6020808201516000858152606e909252604082209091610df38282611b0c565b506000600191909101556040518481527f2e1f6517128566f835909f0690741169a982d9b764725bede26fb30567f5a0709060200160405180910390a19150505b919050565b6066546001600160a01b03163314610e635760405162461bcd60e51b815260040161073490612019565b600260676000828254610e769190612050565b92505081905550600260686000828254610e909190612050565b925050819055506002606a6000828254610eaa9190612067565b90915550506065546040805163738e719760e11b815290516001600160a01b039092169163e71ce32e9160048082019260009290919082900301818387803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b50505050565b600054610100900460ff16610f2a5760005460ff1615610f2e565b303b155b610f915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610734565b600054610100900460ff16158015610fb3576000805461ffff19166101011790555b610ffa6040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611a96565b606680546001600160a01b03191633179055683782dace9d900000006068556954b40b1f852bda000000606955612226606a556000606b81905562127500606d55600160718190556072805462ffffff1916821790556073555b825181101561108a5761108283828151811061107257611072612089565b6020026020010151606954611835565b600101611054565b508015610c09576000805461ff00191690555050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156111255760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610734565b6106da82868684036114b7565b6000336106b5818585611667565b6066546001600160a01b0316331461116a5760405162461bcd60e51b815260040161073490612019565b606955565b6065546001600160a01b0316156111c85760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e00006044820152606401610734565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146112145760405162461bcd60e51b815260040161073490611fba565b606a54606b54106112445760675460685411156112445760026068600082825461123e9190612067565b90915550505b6000808651600003611269578260685461125e9190611f0f565b9150600090506112b8565b6064836068546112799190611f0f565b611284906014612050565b61128e9190612067565b91506064836068546112a09190611f0f565b6112ab906050612050565b6112b59190612067565b90505b60008451836112c79190612067565b905060005b85518110156113365760008682815181106112e9576112e9612089565b602002602001015190508260706000836001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113289190611f0f565b9091555050506001016112cc565b508751156113dc5760005b88518110156113da57600087848a848151811061136057611360612089565b60200260200101516113729190612050565b61137c9190612067565b905080607060008c858151811061139557611395612089565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113cc9190611f0f565b909155505050600101611341565b505b606b80549060006113ec83612000565b91905055505050505050505050565b6066546001600160a01b031633146114255760405162461bcd60e51b815260040161073490612019565b6002606760008282546114389190612067565b925050819055506002606860008282546114529190612067565b925050819055506002606a600082825461146c9190612050565b90915550506065546040805163762193b960e11b815290516001600160a01b039092169163ec4327729160048082019260009290919082900301818387803b158015610ef557600080fd5b6001600160a01b0383166115195760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610734565b6001600160a01b03821661157a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610734565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610f09578181101561165a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610734565b610f0984848484036114b7565b6001600160a01b0383166116cb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610734565b6001600160a01b03821661172d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610734565b6001600160a01b038316600090815260336020526040902054818110156117a55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610734565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906117dc908490611f0f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182891815260200190565b60405180910390a3610f09565b6001600160a01b03821661188b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610734565b806035600082825461189d9190611f0f565b90915550506001600160a01b038216600090815260336020526040812080548392906118ca908490611f0f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600081116119345760405162461bcd60e51b815260040161073490611f44565b80611954836001600160a01b031660009081526033602052604090205490565b101561199a5760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610734565b6001600160a01b0382166000908152606f60205260409020600201546119fe5760405162461bcd60e51b81526020600482015260196024820152782b30b634b230ba37b9103237b2b9903737ba1032bc34b9ba1760391b6044820152606401610734565b611a098230836106c1565b506001600160a01b0382166000908152606f602052604081208054839290611a32908490611f0f565b9250508190555080606c6000828254611a4b9190611f0f565b9091555050604080516001600160a01b0384168152602081018390527fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c910160405180910390a15050565b600054610100900460ff16611abd5760405162461bcd60e51b81526004016107349061209f565b610c098282611acc565b505050565b600054610100900460ff16611af35760405162461bcd60e51b81526004016107349061209f565b6036611aff838261213a565b506037611ac7828261213a565b50805460008255906000526020600020908101906109ad91905b80821115611b3a5760008155600101611b26565b5090565b60006020808352835180602085015260005b81811015611b6c57858101830151858201604001528201611b50565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610e3457600080fd5b60008060408385031215611bb757600080fd5b611bc083611b8d565b946020939093013593505050565b600080600060608486031215611be357600080fd5b611bec84611b8d565b9250611bfa60208501611b8d565b9150604084013590509250925092565b600060208284031215611c1c57600080fd5b5035919050565b60008060408385031215611c3657600080fd5b50508035926020909101359150565b600060208284031215611c5757600080fd5b611c6082611b8d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ca657611ca6611c67565b604052919050565b600067ffffffffffffffff821115611cc857611cc8611c67565b5060051b60200190565b600082601f830112611ce357600080fd5b81356020611cf8611cf383611cae565b611c7d565b8083825260208201915060208460051b870101935086841115611d1a57600080fd5b602086015b84811015611d3d57611d3081611b8d565b8352918301918301611d1f565b509695505050505050565b600060208284031215611d5a57600080fd5b813567ffffffffffffffff811115611d7157600080fd5b611d7d84828501611cd2565b949350505050565b600080600080600060a08688031215611d9d57600080fd5b853567ffffffffffffffff80821115611db557600080fd5b611dc189838a01611cd2565b9650602091508188013581811115611dd857600080fd5b8801601f81018a13611de957600080fd5b8035611df7611cf382611cae565b81815260059190911b8201840190848101908c831115611e1657600080fd5b928501925b82841015611e3457833582529285019290850190611e1b565b9850505050604088013594506060880135915080821115611e5457600080fd5b50611e6188828901611cd2565b95989497509295608001359392505050565b60008060408385031215611e8657600080fd5b611e8f83611b8d565b9150611e9d60208401611b8d565b90509250929050565b600181811c90821680611eba57607f821691505b602082108103611eda57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611ef257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106bb576106bb611ef9565b600062ffffff808316818103611f3a57611f3a611ef9565b6001019392505050565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b818103818111156106bb576106bb611ef9565b600060208284031215611faa57600080fd5b81518015158114611c6057600080fd5b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b60006001820161201257612012611ef9565b5060010190565b6020808252601f908201527f43616c6c6572206d757374206265207468652070726f78792061646d696e2e00604082015260600190565b80820281158282048414176106bb576106bb611ef9565b60008261208457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611ac7576000816000526020600020601f850160051c810160208610156121135750805b601f850160051c820191505b818110156121325782815560010161211f565b505050505050565b815167ffffffffffffffff81111561215457612154611c67565b612168816121628454611ea6565b846120ea565b602080601f83116001811461219d57600084156121855750858301515b600019600386901b1c1916600185901b178555612132565b600085815260208120601f198616915b828110156121cc578886015182559484019460019091019084016121ad565b50858210156121ea5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212205efb1475c5a2d6924fdd190e35b63e17f7389067c7cb6174c9eb1b2faba14e9264736f6c63430008190033",
  "bytecodeSha1": "19aa7de818714f0771b4108b080d66e58697ff11",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "136": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "134": [
            2369,
            2382,
            true
          ],
          "135": [
            2369,
            2417,
            true
          ]
        }
      },
      "2": {
        "ERC20Upgradeable._approve": {
          "126": [
            10591,
            10610,
            true
          ],
          "127": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "133": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "128": [
            11303,
            11340,
            false
          ],
          "129": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "130": [
            7951,
            7969,
            true
          ],
          "131": [
            8029,
            8045,
            true
          ],
          "132": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "125": [
            7152,
            7187,
            true
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "123": [
            6587,
            6597,
            true
          ],
          "124": [
            6653,
            6680,
            true
          ]
        },
        "SmartnodesCore.claimRewards": {
          "108": [
            6251,
            6261,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "117": [
            4105,
            4121,
            false
          ]
        },
        "SmartnodesCore.createValidator": {
          "109": [
            8646,
            8682,
            false
          ],
          "110": [
            8686,
            8711,
            true
          ],
          "111": [
            8795,
            8845,
            true
          ]
        },
        "SmartnodesCore.recordRewards": {
          "119": [
            4735,
            4774,
            false
          ],
          "120": [
            4870,
            4897,
            false
          ],
          "121": [
            5109,
            5129,
            false
          ],
          "122": [
            5751,
            5770,
            false
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "118": [
            10050,
            10090,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "112": [
            7379,
            7405,
            true
          ],
          "113": [
            7458,
            7468,
            true
          ],
          "114": [
            7592,
            7617,
            false
          ],
          "115": [
            7637,
            7666,
            false
          ],
          "116": [
            8139,
            8178,
            true
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "48": [
            3101,
            3153
          ]
        }
      },
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "105": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "106": [
            2381,
            2394
          ],
          "107": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "81": [
            10583,
            10651
          ],
          "82": [
            10661,
            10729
          ],
          "83": [
            10740,
            10776
          ],
          "84": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "94": [
            8827,
            8892
          ],
          "95": [
            8963,
            8985
          ],
          "96": [
            8995,
            9023
          ],
          "97": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "85": [
            11356,
            11424
          ],
          "86": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "87": [
            7943,
            8011
          ],
          "88": [
            8021,
            8085
          ],
          "89": [
            8192,
            8264
          ],
          "90": [
            8298,
            8336
          ],
          "91": [
            8356,
            8379
          ],
          "92": [
            8390,
            8421
          ],
          "93": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "5": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "8": [
            4907,
            4939
          ],
          "9": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "4": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "61": [
            7144,
            7229
          ],
          "62": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "18": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "6": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "37": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "63": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "10": [
            5712,
            5750
          ],
          "11": [
            5760,
            5787
          ],
          "12": [
            5797,
            5808
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "98": [
            6579,
            6635
          ],
          "99": [
            6645,
            6706
          ],
          "100": [
            6716,
            6834
          ],
          "101": [
            6845,
            6888
          ],
          "102": [
            6898,
            6933
          ],
          "103": [
            6943,
            6964
          ],
          "104": [
            6975,
            7008
          ]
        },
        "SmartnodesCore.changeLockAmount": {
          "64": [
            11026,
            11045
          ]
        },
        "SmartnodesCore.claimRewards": {
          "13": [
            6243,
            6285
          ],
          "14": [
            6296,
            6328
          ],
          "15": [
            6338,
            6363
          ],
          "16": [
            6374,
            6413
          ]
        },
        "SmartnodesCore.completeJob": {
          "38": [
            4137,
            4149
          ],
          "39": [
            4163,
            4189
          ],
          "40": [
            4203,
            4211
          ],
          "41": [
            4275,
            4295
          ],
          "42": [
            4305,
            4331
          ],
          "43": [
            4341,
            4359
          ]
        },
        "SmartnodesCore.createValidator": {
          "19": [
            8625,
            8764
          ],
          "20": [
            8774,
            8915
          ],
          "21": [
            8926,
            9065
          ],
          "22": [
            9076,
            9111
          ],
          "23": [
            9121,
            9139
          ]
        },
        "SmartnodesCore.doubleStateTime": {
          "44": [
            10721,
            10738
          ],
          "45": [
            10748,
            10765
          ],
          "46": [
            10775,
            10793
          ],
          "47": [
            10856,
            10888
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "17": [
            9580,
            9623
          ]
        },
        "SmartnodesCore.getUnclaimedRewards": {
          "3": [
            9461,
            9490
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "36": [
            9897,
            9940
          ]
        },
        "SmartnodesCore.halveStateTime": {
          "77": [
            10432,
            10449
          ],
          "78": [
            10459,
            10476
          ],
          "79": [
            10486,
            10504
          ],
          "80": [
            10567,
            10598
          ]
        },
        "SmartnodesCore.initialize": {
          "49": [
            2030,
            2063
          ],
          "50": [
            2073,
            2096
          ],
          "51": [
            2106,
            2128
          ],
          "52": [
            2138,
            2161
          ],
          "53": [
            2171,
            2191
          ],
          "54": [
            2255,
            2281
          ],
          "55": [
            2291,
            2315
          ],
          "56": [
            2350,
            2364
          ],
          "57": [
            2374,
            2394
          ],
          "58": [
            2404,
            2419
          ],
          "59": [
            2492,
            2527
          ],
          "60": [
            2473,
            2476
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            9235,
            9291
          ]
        },
        "SmartnodesCore.lockTokens": {
          "24": [
            7076,
            7107
          ]
        },
        "SmartnodesCore.recordRewards": {
          "67": [
            4917,
            4934
          ],
          "68": [
            5145,
            5194
          ],
          "69": [
            5208,
            5224
          ],
          "70": [
            5255,
            5319
          ],
          "71": [
            5333,
            5394
          ],
          "72": [
            5648,
            5693
          ],
          "73": [
            5576,
            5579
          ],
          "74": [
            5955,
            5994
          ],
          "75": [
            5827,
            5830
          ],
          "76": [
            6029,
            6053
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "65": [
            10029,
            10146
          ],
          "66": [
            10156,
            10214
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "25": [
            7239,
            7361
          ],
          "26": [
            7371,
            7440
          ],
          "27": [
            7450,
            7506
          ],
          "28": [
            7686,
            7731
          ],
          "29": [
            7759,
            7812
          ],
          "30": [
            7888,
            7909
          ],
          "31": [
            7924,
            7978
          ],
          "32": [
            8114,
            8236
          ],
          "33": [
            8251,
            8277
          ],
          "34": [
            8291,
            8338
          ],
          "35": [
            8400,
            8439
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "7": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102695760003560e01c806388ef046d11610151578063a457c2d7116100c3578063d8df5dc111610087578063d8df5dc114610565578063dc4b13201461056e578063dd62ed3e14610581578063eabd4bd7146105ba578063f0c37a59146105c2578063fa52c7d8146105cb57600080fd5b8063a457c2d7146104f6578063a9059cbb14610509578063ab0511901461051c578063c18738501461053f578063cdf64a761461055257600080fd5b806396afc4501161011557806396afc450146104a3578063991e0139146104ac57806399439089146104bf578063a00fabdd146104d2578063a21bc3fb146104da578063a224cee7146104e357600080fd5b806388ef046d1461043f5780638a11d7c914610448578063949813b81461047257806395b84bc21461049257806395d89b411461049b57600080fd5b806339509351116101ea57806356891412116101ae57806356891412146103b55780635a3e251f146103be57806369a69e29146103c75780636e27d889146103f057806370a08231146104035780637c4053251461042c57600080fd5b8063395093511461032b5780633e47158c1461033e578063497dfe63146103695780634a4fbeec1461037c57806350355d76146103ac57600080fd5b8063259a28cf11610231578063259a28cf146102dd578063313ce567146102e7578063372500ab146102f657806337deea701461030057806338ed7cfc1461030857600080fd5b806306fdde031461026e578063095ea7b31461028c57806318160ddd146102af57806320d3a0b4146102c157806323b872dd146102ca575b600080fd5b610276610615565b6040516102839190611b3e565b60405180910390f35b61029f61029a366004611ba4565b6106a7565b6040519015158152602001610283565b6035545b604051908152602001610283565b6102b3606d5481565b61029f6102d8366004611bce565b6106c1565b6102b36212750081565b60405160128152602001610283565b6102fe6106e5565b005b6102b361078f565b6102b3610316366004611c0a565b606e6020526000908152604090206001015481565b61029f610339366004611ba4565b610802565b606654610351906001600160a01b031681565b6040516001600160a01b039091168152602001610283565b6102fe610377366004611c23565b610841565b61029f61038a366004611c45565b6069546001600160a01b039091166000908152606f6020526040902054101590565b6102b360715481565b6102b3606c5481565b6102b3606a5481565b6102b36103d5366004611c45565b6001600160a01b031660009081526070602052604090205490565b6102fe6103fe366004611c0a565b6109a3565b6102b3610411366004611c45565b6001600160a01b031660009081526033602052604090205490565b6102fe61043a366004611c0a565b6109b0565b6102b3606b5481565b61045b610456366004611c45565b610c0d565b604080519215158352602083019190915201610283565b6102b3610480366004611c45565b60706020526000908152604090205481565b6102b360675481565b610276610cc7565b6102b360685481565b6102b36104ba366004611c0a565b610cd6565b606554610351906001600160a01b031681565b6102fe610e39565b6102b360745481565b6102fe6104f1366004611d48565b610f0f565b61029f610504366004611ba4565b6110a0565b61029f610517366004611ba4565b611132565b60725461052b9062ffffff1681565b60405162ffffff9091168152602001610283565b6102fe61054d366004611c0a565b611140565b6102fe610560366004611c45565b61116f565b6102b360695481565b6102fe61057c366004611d85565b6111ea565b6102b361058f366004611e73565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6102fe6113fb565b6102b360735481565b6105fa6105d9366004611c45565b606f6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610283565b60606036805461062490611ea6565b80601f016020809104026020016040519081016040528092919081815260200182805461065090611ea6565b801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b5050505050905090565b6000336106b58185856114b7565b60019150505b92915050565b6000336106cf8582856115db565b6106da858585611667565b506001949350505050565b336000908152607060205260409020548061073d5760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b60448201526064015b60405180910390fd5b336000818152607060205260408120556107579082611835565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250565b606554604080516348f1712960e11b815290516000926001600160a01b0316916391e2e2529160048083019260209291908290030181865afa1580156107d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fd9190611ee0565b905090565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906106b5908290869061083c908790611f0f565b6114b7565b33600090815260336020526040902054811115801561086257506069548110155b6108ae5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652e00000000006044820152606401610734565b336000908152606f6020526040902060020154156109235760405162461bcd60e51b815260206004820152602c60248201527f56616c696461746f7220616c726561647920637265617465642077697468207460448201526b686973206163636f756e742160a01b6064820152608401610734565b604080516060810182526000808252602080830182815283850187815233808552606f909352949092209251835590516001830155915160029091015560695461096d9190611914565b6072805462ffffff1690600061098283611f22565b91906101000a81548162ffffff021916908362ffffff160217905550505050565b6109ad3382611914565b50565b336000908152606f602052604090206002810154610a0c5760405162461bcd60e51b81526020600482015260196024820152782b30b634b230ba37b9103237b2b9903737ba1032bc34b9ba1760391b6044820152606401610734565b8054821115610a5d5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e742065786365656473206c6f636b65642062616c616e63652e00006044820152606401610734565b60008211610a7d5760405162461bcd60e51b815260040161073490611f44565b8060010154600003610b5d5760695481541015610af2576065546040516340a141ff60e01b81523360048201526001600160a01b03909116906340a141ff90602401600060405180830381600087803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b505050505b606d54610aff9042611f0f565b816001018190555081606c6000828254610b199190611f85565b9091555050600181015460405190815233907f77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2906020015b60405180910390a25050565b8060010154421015610bb15760405162461bcd60e51b815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e00000000000000006044820152606401610734565b81816000016000828254610bc59190611f85565b90915550610bd690503033846106c1565b5060405182815233907fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e119588890602001610b51565b5050565b6001600160a01b038181166000818152606f6020908152604080832081516060810183528154815260018201549381019390935260020154828201526065549051631015428760e21b8152600481019490945291938493919284929116906340550a1c90602401602060405180830381865afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190611f98565b60409092015191959194509092505050565b60606037805461062490611ea6565b6065546000906001600160a01b03163314610d035760405162461bcd60e51b815260040161073490611fba565b6000828152606e60209081526040808320815181546060948102820185018452928101838152909391928492849190840182828015610d6157602002820191906000526020600020905b815481526020019060010190808311610d4d575b5050505050815260200160018201548152505090508060200151600003610dd35760718054906000610d9283612000565b90915550506040518381527f2e1f6517128566f835909f0690741169a982d9b764725bede26fb30567f5a0709060200160405180910390a150600092915050565b6020808201516000858152606e909252604082209091610df38282611b0c565b506000600191909101556040518481527f2e1f6517128566f835909f0690741169a982d9b764725bede26fb30567f5a0709060200160405180910390a19150505b919050565b6066546001600160a01b03163314610e635760405162461bcd60e51b815260040161073490612019565b600260676000828254610e769190612050565b92505081905550600260686000828254610e909190612050565b925050819055506002606a6000828254610eaa9190612067565b90915550506065546040805163738e719760e11b815290516001600160a01b039092169163e71ce32e9160048082019260009290919082900301818387803b158015610ef557600080fd5b505af1158015610f09573d6000803e3d6000fd5b50505050565b600054610100900460ff16610f2a5760005460ff1615610f2e565b303b155b610f915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610734565b600054610100900460ff16158015610fb3576000805461ffff19166101011790555b610ffa6040518060400160405280600a815260200169536d6172746e6f64657360b01b81525060405180604001604052806003815260200162534e4f60e81b815250611a96565b606680546001600160a01b03191633179055683782dace9d900000006068556954b40b1f852bda000000606955612226606a556000606b81905562127500606d55600160718190556072805462ffffff1916821790556073555b825181101561108a5761108283828151811061107257611072612089565b6020026020010151606954611835565b600101611054565b508015610c09576000805461ff00191690555050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156111255760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610734565b6106da82868684036114b7565b6000336106b5818585611667565b6066546001600160a01b0316331461116a5760405162461bcd60e51b815260040161073490612019565b606955565b6065546001600160a01b0316156111c85760405162461bcd60e51b815260206004820152601e60248201527f56616c696461746f72206164647265737320616c7265616479207365742e00006044820152606401610734565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146112145760405162461bcd60e51b815260040161073490611fba565b606a54606b54106112445760675460685411156112445760026068600082825461123e9190612067565b90915550505b6000808651600003611269578260685461125e9190611f0f565b9150600090506112b8565b6064836068546112799190611f0f565b611284906014612050565b61128e9190612067565b91506064836068546112a09190611f0f565b6112ab906050612050565b6112b59190612067565b90505b60008451836112c79190612067565b905060005b85518110156113365760008682815181106112e9576112e9612089565b602002602001015190508260706000836001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113289190611f0f565b9091555050506001016112cc565b508751156113dc5760005b88518110156113da57600087848a848151811061136057611360612089565b60200260200101516113729190612050565b61137c9190612067565b905080607060008c858151811061139557611395612089565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113cc9190611f0f565b909155505050600101611341565b505b606b80549060006113ec83612000565b91905055505050505050505050565b6066546001600160a01b031633146114255760405162461bcd60e51b815260040161073490612019565b6002606760008282546114389190612067565b925050819055506002606860008282546114529190612067565b925050819055506002606a600082825461146c9190612050565b90915550506065546040805163762193b960e11b815290516001600160a01b039092169163ec4327729160048082019260009290919082900301818387803b158015610ef557600080fd5b6001600160a01b0383166115195760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610734565b6001600160a01b03821661157a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610734565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610f09578181101561165a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610734565b610f0984848484036114b7565b6001600160a01b0383166116cb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610734565b6001600160a01b03821661172d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610734565b6001600160a01b038316600090815260336020526040902054818110156117a55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610734565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906117dc908490611f0f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182891815260200190565b60405180910390a3610f09565b6001600160a01b03821661188b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610734565b806035600082825461189d9190611f0f565b90915550506001600160a01b038216600090815260336020526040812080548392906118ca908490611f0f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600081116119345760405162461bcd60e51b815260040161073490611f44565b80611954836001600160a01b031660009081526033602052604090205490565b101561199a5760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b6044820152606401610734565b6001600160a01b0382166000908152606f60205260409020600201546119fe5760405162461bcd60e51b81526020600482015260196024820152782b30b634b230ba37b9103237b2b9903737ba1032bc34b9ba1760391b6044820152606401610734565b611a098230836106c1565b506001600160a01b0382166000908152606f602052604081208054839290611a32908490611f0f565b9250508190555080606c6000828254611a4b9190611f0f565b9091555050604080516001600160a01b0384168152602081018390527fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c910160405180910390a15050565b600054610100900460ff16611abd5760405162461bcd60e51b81526004016107349061209f565b610c098282611acc565b505050565b600054610100900460ff16611af35760405162461bcd60e51b81526004016107349061209f565b6036611aff838261213a565b506037611ac7828261213a565b50805460008255906000526020600020908101906109ad91905b80821115611b3a5760008155600101611b26565b5090565b60006020808352835180602085015260005b81811015611b6c57858101830151858201604001528201611b50565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610e3457600080fd5b60008060408385031215611bb757600080fd5b611bc083611b8d565b946020939093013593505050565b600080600060608486031215611be357600080fd5b611bec84611b8d565b9250611bfa60208501611b8d565b9150604084013590509250925092565b600060208284031215611c1c57600080fd5b5035919050565b60008060408385031215611c3657600080fd5b50508035926020909101359150565b600060208284031215611c5757600080fd5b611c6082611b8d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ca657611ca6611c67565b604052919050565b600067ffffffffffffffff821115611cc857611cc8611c67565b5060051b60200190565b600082601f830112611ce357600080fd5b81356020611cf8611cf383611cae565b611c7d565b8083825260208201915060208460051b870101935086841115611d1a57600080fd5b602086015b84811015611d3d57611d3081611b8d565b8352918301918301611d1f565b509695505050505050565b600060208284031215611d5a57600080fd5b813567ffffffffffffffff811115611d7157600080fd5b611d7d84828501611cd2565b949350505050565b600080600080600060a08688031215611d9d57600080fd5b853567ffffffffffffffff80821115611db557600080fd5b611dc189838a01611cd2565b9650602091508188013581811115611dd857600080fd5b8801601f81018a13611de957600080fd5b8035611df7611cf382611cae565b81815260059190911b8201840190848101908c831115611e1657600080fd5b928501925b82841015611e3457833582529285019290850190611e1b565b9850505050604088013594506060880135915080821115611e5457600080fd5b50611e6188828901611cd2565b95989497509295608001359392505050565b60008060408385031215611e8657600080fd5b611e8f83611b8d565b9150611e9d60208401611b8d565b90509250929050565b600181811c90821680611eba57607f821691505b602082108103611eda57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611ef257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106bb576106bb611ef9565b600062ffffff808316818103611f3a57611f3a611ef9565b6001019392505050565b60208082526021908201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6040820152601760f91b606082015260800190565b818103818111156106bb576106bb611ef9565b600060208284031215611faa57600080fd5b81518015158114611c6057600080fd5b60208082526026908201527f43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c6040820152653a34a9b4b39760d11b606082015260800190565b60006001820161201257612012611ef9565b5060010190565b6020808252601f908201527f43616c6c6572206d757374206265207468652070726f78792061646d696e2e00604082015260600190565b80820281158282048414176106bb576106bb611ef9565b60008261208457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115611ac7576000816000526020600020601f850160051c810160208610156121135750805b601f850160051c820191505b818110156121325782815560010161211f565b505050505050565b815167ffffffffffffffff81111561215457612154611c67565b612168816121628454611ea6565b846120ea565b602080601f83116001811461219d57600084156121855750858301515b600019600386901b1c1916600185901b178555612132565b600085815260208120601f198616915b828110156121cc578886015182559484019460019091019084016121ad565b50858210156121ea5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212205efb1475c5a2d6924fdd190e35b63e17f7389067c7cb6174c9eb1b2faba14e9264736f6c63430008190033",
  "deployedSourceMap": "184:10870:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:30;;1162:22;1144:41;;1132:2;1117:18;4770:197:2;1004:187:30;3581:106:2;3668:12;;3581:106;;;1342:25:30;;;1330:2;1315:18;3581:106:2;1196:177:30;677:27:24;;;;;;5529:286:2;;;;;;:::i;:::-;;:::i;426:49:24:-;;466:9;426:49;;3430:91:2;;;3512:2;1853:36:30;;1841:2;1826:18;3430:91:2;1711:184:30;6145:275:24;;;:::i;:::-;;9503:127;;;:::i;903:35::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6210:236:2;;;;;;:::i;:::-;;:::i;284:25:24:-;;;;;-1:-1:-1;;;;;284:25:24;;;;;;-1:-1:-1;;;;;2249:32:30;;;2231:51;;2219:2;2204:18;284:25:24;2085:203:30;8514:632:24;;;;;;:::i;:::-;;:::i;9152:146::-;;;;;;:::i;:::-;9281:10;;-1:-1:-1;;;;;9242:28:24;;;9219:4;9242:28;;;:10;:28;;;;;:35;:49;;;9152:146;1055:25;;;;;;645:26;;;;;;568:28;;;;;;9376:121;;;;;;:::i;:::-;-1:-1:-1;;;;;9468:22:24;9442:7;9468:22;;;:16;:22;;;;;;;9376:121;7021:93;;;;;;:::i;:::-;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;7120:1388:24;;;;;;:::i;:::-;;:::i;602:37::-;;;;;;9636:311;;;;;;:::i;:::-;;:::i;:::-;;;;3115:14:30;;3108:22;3090:41;;3162:2;3147:18;;3140:34;;;;3063:18;9636:311:24;2922:258:30;997:51:24;;;;;;:::i;:::-;;;;;;;;;;;;;;316:34;;;;;;2704:102:2;;;:::i;504:27:24:-;;;;;;3842:524;;;;;;:::i;:::-;;:::i;234:44::-;;;;;-1:-1:-1;;;;;234:44:24;;;10660:284;;;:::i;1154:32::-;;;;;;1949:595;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1086:30:24:-;;;;;;;;;;;;5227:8:30;5215:21;;;5197:40;;5185:2;5170:18;1086:30:24;5053:190:30;10950:102:24;;;;;;:::i;:::-;;:::i;9953:268::-;;;;;;:::i;:::-;;:::i;537:25::-;;;;;;4479:1581;;;;;;:::i;:::-;;:::i;4313:149:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;10227:427:24;;;:::i;1122:26::-;;;;;;944:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7222:25:30;;;7278:2;7263:18;;7256:34;;;;7306:18;;;7299:34;7210:2;7195:18;944:47:24;7020:319:30;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;6145:275:24:-;6222:10;6188:14;6205:28;;;:16;:28;;;;;;6251:10;6243:42;;;;-1:-1:-1;;;6243:42:24;;7931:2:30;6243:42:24;;;7913:21:30;7970:2;7950:18;;;7943:30;-1:-1:-1;;;7989:18:30;;;7982:49;8048:18;;6243:42:24;;;;;;;;;6313:10;6327:1;6296:28;;;:16;:28;;;;;:32;6338:25;;6356:6;6338:5;:25::i;:::-;6379:34;;1342:25:30;;;6394:10:24;;6379:34;;1330:2:30;1315:18;6379:34:24;;;;;;;6178:242;6145:275::o;9503:127::-;9587:17;;:36;;;-1:-1:-1;;;9587:36:24;;;;9561:7;;-1:-1:-1;;;;;9587:17:24;;:34;;:36;;;;;;;;;;;;;;:17;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9580:43;;9503:127;:::o;6210:236:2:-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;8514:632:24:-;8656:10;3819:7:2;3845:18;;;:9;:18;;;;;;8671:11:24;-1:-1:-1;8646:36:24;:65;;;;;8701:10;;8686:11;:25;;8646:65;8625:139;;;;-1:-1:-1;;;8625:139:24;;8730:2:30;8625:139:24;;;8712:21:30;8769:2;8749:18;;;8742:30;8808:29;8788:18;;;8781:57;8855:18;;8625:139:24;8528:351:30;8625:139:24;8806:10;8843:1;8795:22;;;:10;:22;;;;;:36;;;:50;8774:141;;;;-1:-1:-1;;;8774:141:24;;9086:2:30;8774:141:24;;;9068:21:30;9125:2;9105:18;;;9098:30;9164:34;9144:18;;;9137:62;-1:-1:-1;;;9215:18:30;;;9208:42;9267:19;;8774:141:24;8884:408:30;8774:141:24;8951:114;;;;;;;;-1:-1:-1;8951:114:24;;;;;;;;;;;;;;;;8937:10;8926:22;;;:10;:22;;;;;;;:139;;;;;;;;;;;;;;;;;9100:10;;9076:35;;8937:10;9076:11;:35::i;:::-;9121:16;:18;;;;;:16;:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;8514:632;;:::o;7021:93::-;7076:31;7088:10;7100:6;7076:11;:31::i;:::-;7021:93;:::o;7120:1388::-;7218:10;7177:27;7207:22;;;:10;:22;;;;;7260:36;;;;7239:122;;;;-1:-1:-1;;;7239:122:24;;9703:2:30;7239:122:24;;;9685:21:30;9742:2;9722:18;;;9715:30;-1:-1:-1;;;9761:18:30;;;9754:55;9826:18;;7239:122:24;9501:349:30;7239:122:24;7389:16;;7379:26;;;7371:69;;;;-1:-1:-1;;;7371:69:24;;10057:2:30;7371:69:24;;;10039:21:30;10096:2;10076:18;;;10069:30;10135:32;10115:18;;;10108:60;10185:18;;7371:69:24;9855:354:30;7371:69:24;7467:1;7458:6;:10;7450:56;;;;-1:-1:-1;;;7450:56:24;;;;;;;:::i;:::-;7592:9;:20;;;7616:1;7592:25;7588:914;;7656:10;;7637:16;;:29;7633:113;;;7686:17;;:45;;-1:-1:-1;;;7686:45:24;;7720:10;7686:45;;;2231:51:30;-1:-1:-1;;;;;7686:17:24;;;;:33;;2204:18:30;;7686:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7633:113;7800:12;;7782:30;;:15;:30;:::i;:::-;7759:9;:20;;:53;;;;7903:6;7888:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;7957:20:24;;;;7929:49;;1342:25:30;;;7945:10:24;;7929:49;;1330:2:30;1315:18;7929:49:24;;;;;;;;7167:1341;7120:1388;:::o;7588:914::-;8158:9;:20;;;8139:15;:39;;8114:122;;;;-1:-1:-1;;;8114:122:24;;10951:2:30;8114:122:24;;;10933:21:30;10990:2;10970:18;;;10963:30;11029:26;11009:18;;;11002:54;11073:18;;8114:122:24;10749:348:30;8114:122:24;8271:6;8251:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;8291:47:24;;-1:-1:-1;8312:4:24;8319:10;8331:6;8291:12;:47::i;:::-;-1:-1:-1;8405:34:24;;1342:25:30;;;8420:10:24;;8405:34;;1330:2:30;1315:18;8405:34:24;1196:177:30;7588:914:24;7167:1341;7120:1388;:::o;9636:311::-;-1:-1:-1;;;;;9780:28:24;;;9725:4;9780:28;;;:10;:28;;;;;;;;9750:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9834:17;;:53;;-1:-1:-1;;;9834:53:24;;;;;2231:51:30;;;;9725:4:24;;;;9750:58;;9725:4;;9834:17;;;:35;;2204:18:30;;9834:53:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9915:24;;;;;9818:69;;9915:24;;-1:-1:-1;9636:311:24;;-1:-1:-1;;;9636:311:24:o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;3842:524:24:-;1715:17;;3934:7;;-1:-1:-1;;;;;1715:17:24;1693:10;:40;1672:125;;;;-1:-1:-1;;;1672:125:24;;;;;;;:::i;:::-;3997:14:::1;4014:13:::0;;;:4:::1;:13;::::0;;;;;;;3997:30;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;4014:13;;3997:30;;4014:13;;3997:30;;;4014:13;3997:30;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4105:3;:11;;;4120:1;4105:16:::0;4101:121:::1;;4137:10;:12:::0;;;:10:::1;:12;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4168:21:24::1;::::0;1342:25:30;;;4168:21:24::1;::::0;1330:2:30;1315:18;4168:21:24::1;;;;;;;-1:-1:-1::0;4210:1:24::1;::::0;3842:524;-1:-1:-1;;3842:524:24:o;4101:121::-:1;4254:11;::::0;;::::1;::::0;4232:19:::1;4282:13:::0;;;:4:::1;:13:::0;;;;;;4254:11;;4275:20:::1;4282:13:::0;4232:19;4275:20:::1;:::i;:::-;-1:-1:-1::0;4275:20:24::1;;::::0;;;::::1;::::0;4310:21:::1;::::0;1342:25:30;;;4310:21:24::1;::::0;1330:2:30;1315:18;4310:21:24::1;;;;;;;4348:11:::0;-1:-1:-1;;1807:1:24::1;3842:524:::0;;;:::o;10660:284::-;1879:10;;-1:-1:-1;;;;;1879:10:24;1865;:24;1857:68;;;;-1:-1:-1;;;1857:68:24;;;;;;;:::i;:::-;10737:1:::1;10721:12;;:17;;;;;;;:::i;:::-;;;;;;;;10764:1;10748:12;;:17;;;;;;;:::i;:::-;;;;;;;;10792:1;10775:13;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10856:17:24::1;::::0;:32:::1;::::0;;-1:-1:-1;;;10856:32:24;;;;-1:-1:-1;;;;;10856:17:24;;::::1;::::0;:30:::1;::::0;:32:::1;::::0;;::::1;::::0;:17:::1;::::0;:32;;;;;;;;:17;;:32;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10660:284::o:0;1949:595::-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;13070:2:30;2361:107:1;;;13052:21:30;13109:2;13089:18;;;13082:30;13148:34;13128:18;;;13121:62;-1:-1:-1;;;13199:18:30;;;13192:44;13253:19;;2361:107:1;12868:410:30;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;2030:33:24::1;;;;;;;;;;;;;;-1:-1:-1::0;;;2030:33:24::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2030:33:24::1;;::::0;:12:::1;:33::i;:::-;2073:10;:23:::0;;-1:-1:-1;;;;;;2073:23:24::1;2086:10;2073:23;::::0;;2121:7:::1;2106:12;:22:::0;2151:10:::1;2138;:23:::0;2187:4:::1;2171:13;:20:::0;2073:10:::1;2255:22;:26:::0;;;2306:9:::1;2291:12;:24:::0;2073:23;2350:10:::1;:14:::0;;;2374:16:::1;:20:::0;;-1:-1:-1;;2374:20:24::1;::::0;::::1;::::0;;2404:11:::1;:15:::0;2430:108:::1;2451:13;:20;2447:1;:24;2430:108;;;2492:35;2498:13;2512:1;2498:16;;;;;;;;:::i;:::-;;;;;;;2516:10;;2492:5;:35::i;:::-;2473:3;;2430:108;;;;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2080:637;1949:595:24;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;13617:2:30;7144:85:2;;;13599:21:30;13656:2;13636:18;;;13629:30;13695:34;13675:18;;;13668:62;-1:-1:-1;;;13746:18:30;;;13739:35;13791:19;;7144:85:2;13415:401:30;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;10950:102:24:-;1879:10;;-1:-1:-1;;;;;1879:10:24;1865;:24;1857:68;;;;-1:-1:-1;;;1857:68:24;;;;;;;:::i;:::-;11026:10:::1;:19:::0;10950:102::o;9953:268::-;10058:17;;-1:-1:-1;;;;;10058:17:24;10050:40;10029:117;;;;-1:-1:-1;;;10029:117:24;;14023:2:30;10029:117:24;;;14005:21:30;14062:2;14042:18;;;14035:30;14101:32;14081:18;;;14074:60;14151:18;;10029:117:24;13821:354:30;10029:117:24;10156:17;:58;;-1:-1:-1;;;;;;10156:58:24;-1:-1:-1;;;;;10156:58:24;;;;;;;;;;9953:268::o;4479:1581::-;1715:17;;-1:-1:-1;;;;;1715:17:24;1693:10;:40;1672:125;;;;-1:-1:-1;;;1672:125:24;;;;;;;:::i;:::-;4761:13:::1;;4735:22;;:39;4731:228;;4885:12;;4870;;:27;4866:83;;;4933:1;4917:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4866:83:24::1;5041:23;5074:20:::0;5109:8:::1;:15;5128:1;5109:20:::0;5105:300:::1;;5178:16;5163:12;;:31;;;;:::i;:::-;5145:49;;5223:1;5208:16;;5105:300;;;5316:3;5290:16;5275:12;;:31;;;;:::i;:::-;5274:38;::::0;5310:2:::1;5274:38;:::i;:::-;5273:46;;;;:::i;:::-;5255:64;;5391:3;5365:16;5350:12;;:31;;;;:::i;:::-;5349:38;::::0;5385:2:::1;5349:38;:::i;:::-;5348:46;;;;:::i;:::-;5333:61;;5105:300;5451:22;5494:16;:23;5476:15;:41;;;;:::i;:::-;5451:66;;5532:9;5527:177;5551:16;:23;5547:1;:27;5527:177;;;5595:17;5615:16;5632:1;5615:19;;;;;;;;:::i;:::-;;;;;;;5595:39;;5679:14;5648:16;:27;5665:9;-1:-1:-1::0;;;;;5648:27:24::1;-1:-1:-1::0;;;;;5648:27:24::1;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;5576:3:24::1;;5527:177;;;-1:-1:-1::0;5751:15:24;;:19;5747:272:::1;;5791:9;5786:223;5810:8;:15;5806:1;:19;5786:223;;;5850:14;5922;5886:12;5869:11;5881:1;5869:14;;;;;;;;:::i;:::-;;;;;;;:29;;;;:::i;:::-;5868:68;;;;:::i;:::-;5850:87;;5988:6;5955:16;:29;5972:8;5981:1;5972:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5955:29:24::1;-1:-1:-1::0;;;;;5955:29:24::1;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;5827:3:24::1;;5786:223;;;;5747:272;6029:22;:24:::0;;;:22:::1;:24;::::0;::::1;:::i;:::-;;;;;;4721:1339;;;4479:1581:::0;;;;;:::o;10227:427::-;1879:10;;-1:-1:-1;;;;;1879:10:24;1865;:24;1857:68;;;;-1:-1:-1;;;1857:68:24;;;;;;;:::i;:::-;10448:1:::1;10432:12;;:17;;;;;;;:::i;:::-;;;;;;;;10475:1;10459:12;;:17;;;;;;;:::i;:::-;;;;;;;;10503:1;10486:13;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10567:17:24::1;::::0;:31:::1;::::0;;-1:-1:-1;;;10567:31:24;;;;-1:-1:-1;;;;;10567:17:24;;::::1;::::0;:29:::1;::::0;:31:::1;::::0;;::::1;::::0;:17:::1;::::0;:31;;;;;;;;:17;;:31;::::1;;::::0;::::1;;;;::::0;::::1;10460:370:2::0;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;14382:2:30;10583:68:2;;;14364:21:30;14421:2;14401:18;;;14394:30;14460:34;14440:18;;;14433:62;-1:-1:-1;;;14511:18:30;;;14504:34;14555:19;;10583:68:2;14180:400:30;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;14787:2:30;10661:68:2;;;14769:21:30;14826:2;14806:18;;;14799:30;14865:34;14845:18;;;14838:62;-1:-1:-1;;;14916:18:30;;;14909:32;14958:19;;10661:68:2;14585:398:30;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1342:25:30;;;10791:32:2;;1315:18:30;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;15190:2:30;11356:68:2;;;15172:21:30;15229:2;15209:18;;;15202:30;15268:31;15248:18;;;15241:59;15317:18;;11356:68:2;14988:353:30;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;15548:2:30;7943:68:2;;;15530:21:30;15587:2;15567:18;;;15560:30;15626:34;15606:18;;;15599:62;-1:-1:-1;;;15677:18:30;;;15670:35;15722:19;;7943:68:2;15346:401:30;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;15954:2:30;8021:64:2;;;15936:21:30;15993:2;15973:18;;;15966:30;16032:34;16012:18;;;16005:62;-1:-1:-1;;;16083:18:30;;;16076:33;16126:19;;8021:64:2;15752:399:30;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;16358:2:30;8192:72:2;;;16340:21:30;16397:2;16377:18;;;16370:30;16436:34;16416:18;;;16409:62;-1:-1:-1;;;16487:18:30;;;16480:36;16533:19;;8192:72:2;16156:402:30;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;1342:25:30;;1330:2;1315:18;;1196:177;8395:26:2;;;;;;;;8432:37;12132:121;8752:389;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;16765:2:30;8827:65:2;;;16747:21:30;16804:2;16784:18;;;16777:30;16843:33;16823:18;;;16816:61;16894:18;;8827:65:2;16563:355:30;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;1342:25:30;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;1330:2:30;1315:18;9038:37:2;;;;;;;7167:1341:24;7120:1388;:::o;6507:508::-;6596:1;6587:6;:10;6579:56;;;;-1:-1:-1;;;6579:56:24;;;;;;;:::i;:::-;6674:6;6653:17;6663:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;6653:17:24;:27;;6645:61;;;;-1:-1:-1;;;6645:61:24;;17125:2:30;6645:61:24;;;17107:21:30;17164:2;17144:18;;;17137:30;-1:-1:-1;;;17183:18:30;;;17176:51;17244:18;;6645:61:24;16923:345:30;6645:61:24;-1:-1:-1;;;;;6737:18:24;;6781:1;6737:18;;;:10;:18;;;;;:32;;;6716:118;;;;-1:-1:-1;;;6716:118:24;;9703:2:30;6716:118:24;;;9685:21:30;9742:2;9722:18;;;9715:30;-1:-1:-1;;;9761:18:30;;;9754:55;9826:18;;6716:118:24;9501:349:30;6716:118:24;6845:43;6858:6;6874:4;6881:6;6845:12;:43::i;:::-;-1:-1:-1;;;;;;6898:18:24;;;;;;:10;:18;;;;;:35;;6927:6;;6898:18;:35;;6927:6;;6898:35;:::i;:::-;;;;;;;;6958:6;6943:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6980:28:24;;;-1:-1:-1;;;;;17465:32:30;;17447:51;;17529:2;17514:18;;17507:34;;;6980:28:24;;17420:18:30;6980:28:24;;;;;;;6507:508;;:::o;2116:147:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2218:22;:38::i;12132:121::-:0;;;;:::o;2269:159::-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:548:30:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:30;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:30:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:30;;1900:180;-1:-1:-1;1900:180:30:o;2293:248::-;2361:6;2369;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;-1:-1:-1;;2461:23:30;;;2531:2;2516:18;;;2503:32;;-1:-1:-1;2293:248:30:o;2546:186::-;2605:6;2658:2;2646:9;2637:7;2633:23;2629:32;2626:52;;;2674:1;2671;2664:12;2626:52;2697:29;2716:9;2697:29;:::i;:::-;2687:39;2546:186;-1:-1:-1;;;2546:186:30:o;3421:127::-;3482:10;3477:3;3473:20;3470:1;3463:31;3513:4;3510:1;3503:15;3537:4;3534:1;3527:15;3553:275;3624:2;3618:9;3689:2;3670:13;;-1:-1:-1;;3666:27:30;3654:40;;3724:18;3709:34;;3745:22;;;3706:62;3703:88;;;3771:18;;:::i;:::-;3807:2;3800:22;3553:275;;-1:-1:-1;3553:275:30:o;3833:183::-;3893:4;3926:18;3918:6;3915:30;3912:56;;;3948:18;;:::i;:::-;-1:-1:-1;3993:1:30;3989:14;4005:4;3985:25;;3833:183::o;4021:674::-;4075:5;4128:3;4121:4;4113:6;4109:17;4105:27;4095:55;;4146:1;4143;4136:12;4095:55;4182:6;4169:20;4208:4;4232:60;4248:43;4288:2;4248:43;:::i;:::-;4232:60;:::i;:::-;4314:3;4338:2;4333:3;4326:15;4366:4;4361:3;4357:14;4350:21;;4423:4;4417:2;4414:1;4410:10;4402:6;4398:23;4394:34;4380:48;;4451:3;4443:6;4440:15;4437:35;;;4468:1;4465;4458:12;4437:35;4504:4;4496:6;4492:17;4518:148;4534:6;4529:3;4526:15;4518:148;;;4600:23;4619:3;4600:23;:::i;:::-;4588:36;;4644:12;;;;4551;;4518:148;;;-1:-1:-1;4684:5:30;4021:674;-1:-1:-1;;;;;;4021:674:30:o;4700:348::-;4784:6;4837:2;4825:9;4816:7;4812:23;4808:32;4805:52;;;4853:1;4850;4843:12;4805:52;4893:9;4880:23;4926:18;4918:6;4915:30;4912:50;;;4958:1;4955;4948:12;4912:50;4981:61;5034:7;5025:6;5014:9;5010:22;4981:61;:::i;:::-;4971:71;4700:348;-1:-1:-1;;;;4700:348:30:o;5248:1502::-;5418:6;5426;5434;5442;5450;5503:3;5491:9;5482:7;5478:23;5474:33;5471:53;;;5520:1;5517;5510:12;5471:53;5560:9;5547:23;5589:18;5630:2;5622:6;5619:14;5616:34;;;5646:1;5643;5636:12;5616:34;5669:61;5722:7;5713:6;5702:9;5698:22;5669:61;:::i;:::-;5659:71;;5749:2;5739:12;;5804:2;5793:9;5789:18;5776:32;5833:2;5823:8;5820:16;5817:36;;;5849:1;5846;5839:12;5817:36;5872:24;;5927:4;5919:13;;5915:27;-1:-1:-1;5905:55:30;;5956:1;5953;5946:12;5905:55;5992:2;5979:16;6015:60;6031:43;6071:2;6031:43;:::i;6015:60::-;6109:15;;;6191:1;6187:10;;;;6179:19;;6175:28;;;6140:12;;;;6215:19;;;6212:39;;;6247:1;6244;6237:12;6212:39;6271:11;;;;6291:142;6307:6;6302:3;6299:15;6291:142;;;6373:17;;6361:30;;6324:12;;;;6411;;;;6291:142;;;6452:5;-1:-1:-1;;;;6504:2:30;6489:18;;6476:32;;-1:-1:-1;6561:2:30;6546:18;;6533:32;;-1:-1:-1;6577:16:30;;;6574:36;;;6606:1;6603;6596:12;6574:36;;6629:63;6684:7;6673:8;6662:9;6658:24;6629:63;:::i;:::-;5248:1502;;;;-1:-1:-1;5248:1502:30;;6739:3;6724:19;6711:33;;5248:1502;-1:-1:-1;;;5248:1502:30:o;6755:260::-;6823:6;6831;6884:2;6872:9;6863:7;6859:23;6855:32;6852:52;;;6900:1;6897;6890:12;6852:52;6923:29;6942:9;6923:29;:::i;:::-;6913:39;;6971:38;7005:2;6994:9;6990:18;6971:38;:::i;:::-;6961:48;;6755:260;;;;;:::o;7344:380::-;7423:1;7419:12;;;;7466;;;7487:61;;7541:4;7533:6;7529:17;7519:27;;7487:61;7594:2;7586:6;7583:14;7563:18;7560:38;7557:161;;7640:10;7635:3;7631:20;7628:1;7621:31;7675:4;7672:1;7665:15;7703:4;7700:1;7693:15;7557:161;;7344:380;;;:::o;8077:184::-;8147:6;8200:2;8188:9;8179:7;8175:23;8171:32;8168:52;;;8216:1;8213;8206:12;8168:52;-1:-1:-1;8239:16:30;;8077:184;-1:-1:-1;8077:184:30:o;8266:127::-;8327:10;8322:3;8318:20;8315:1;8308:31;8358:4;8355:1;8348:15;8382:4;8379:1;8372:15;8398:125;8463:9;;;8484:10;;;8481:36;;;8497:18;;:::i;9297:199::-;9335:3;9363:8;9406:2;9399:5;9395:14;9433:2;9424:7;9421:15;9418:41;;9439:18;;:::i;:::-;9488:1;9475:15;;9297:199;-1:-1:-1;;;9297:199:30:o;10214:397::-;10416:2;10398:21;;;10455:2;10435:18;;;10428:30;10494:34;10489:2;10474:18;;10467:62;-1:-1:-1;;;10560:2:30;10545:18;;10538:31;10601:3;10586:19;;10214:397::o;10616:128::-;10683:9;;;10704:11;;;10701:37;;;10718:18;;:::i;11102:277::-;11169:6;11222:2;11210:9;11201:7;11197:23;11193:32;11190:52;;;11238:1;11235;11228:12;11190:52;11270:9;11264:16;11323:5;11316:13;11309:21;11302:5;11299:32;11289:60;;11345:1;11342;11335:12;11384:402;11586:2;11568:21;;;11625:2;11605:18;;;11598:30;11664:34;11659:2;11644:18;;11637:62;-1:-1:-1;;;11730:2:30;11715:18;;11708:36;11776:3;11761:19;;11384:402::o;11791:135::-;11830:3;11851:17;;;11848:43;;11871:18;;:::i;:::-;-1:-1:-1;11918:1:30;11907:13;;11791:135::o;12113:355::-;12315:2;12297:21;;;12354:2;12334:18;;;12327:30;12393:33;12388:2;12373:18;;12366:61;12459:2;12444:18;;12113:355::o;12473:168::-;12546:9;;;12577;;12594:15;;;12588:22;;12574:37;12564:71;;12615:18;;:::i;12646:217::-;12686:1;12712;12702:132;;12756:10;12751:3;12747:20;12744:1;12737:31;12791:4;12788:1;12781:15;12819:4;12816:1;12809:15;12702:132;-1:-1:-1;12848:9:30;;12646:217::o;13283:127::-;13344:10;13339:3;13335:20;13332:1;13325:31;13375:4;13372:1;13365:15;13399:4;13396:1;13389:15;17552:407;17754:2;17736:21;;;17793:2;17773:18;;;17766:30;17832:34;17827:2;17812:18;;17805:62;-1:-1:-1;;;17898:2:30;17883:18;;17876:41;17949:3;17934:19;;17552:407::o;18090:543::-;18192:2;18187:3;18184:11;18181:446;;;18228:1;18252:5;18249:1;18242:16;18296:4;18293:1;18283:18;18366:2;18354:10;18350:19;18347:1;18343:27;18337:4;18333:38;18402:4;18390:10;18387:20;18384:47;;;-1:-1:-1;18425:4:30;18384:47;18480:2;18475:3;18471:12;18468:1;18464:20;18458:4;18454:31;18444:41;;18535:82;18553:2;18546:5;18543:13;18535:82;;;18598:17;;;18579:1;18568:13;18535:82;;;18539:3;;;18090:543;;;:::o;18809:1345::-;18935:3;18929:10;18962:18;18954:6;18951:30;18948:56;;;18984:18;;:::i;:::-;19013:97;19103:6;19063:38;19095:4;19089:11;19063:38;:::i;:::-;19057:4;19013:97;:::i;:::-;19165:4;;19222:2;19211:14;;19239:1;19234:663;;;;19941:1;19958:6;19955:89;;;-1:-1:-1;20010:19:30;;;20004:26;19955:89;-1:-1:-1;;18766:1:30;18762:11;;;18758:24;18754:29;18744:40;18790:1;18786:11;;;18741:57;20057:81;;19204:944;;19234:663;18037:1;18030:14;;;18074:4;18061:18;;-1:-1:-1;;19270:20:30;;;19388:236;19402:7;19399:1;19396:14;19388:236;;;19491:19;;;19485:26;19470:42;;19583:27;;;;19551:1;19539:14;;;;19418:19;;19388:236;;;19392:3;19652:6;19643:7;19640:19;19637:201;;;19713:19;;;19707:26;-1:-1:-1;;19796:1:30;19792:14;;;19808:3;19788:24;19784:37;19780:42;19765:58;19750:74;;19637:201;-1:-1:-1;;;;;19884:1:30;19868:14;;;19864:22;19851:36;;-1:-1:-1;18809:1345:30:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "claimRewards()": {
        "notice": "Allows users to claim their accumulated rewards"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getUnclaimedRewards(address)": {
        "notice": "View function to check unclaimed rewards"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "recordRewards(address[],uint256[],uint256,address[],uint256)": {
        "notice": "Records rewards for later claiming by workers/validators thru mint function"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    184,
    11054
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88EF046D GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD8DF5DC1 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xDC4B1320 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xEABD4BD7 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xFA52C7D8 EQ PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xAB051190 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xC1873850 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96AFC450 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x991E0139 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xA00FABDD EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xA21BC3FB EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88EF046D EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x8A11D7C9 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x949813B8 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x95B84BC2 EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x56891412 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x56891412 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x5A3E251F EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x69A69E29 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x3E47158C EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259A28CF GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x259A28CF EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x38ED7CFC EQ PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x2B3 PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x351 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x480 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x276 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x351 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x74 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D48 JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST PUSH2 0x29F PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x517 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x52B SWAP1 PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x54D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x560 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x116F JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x11EA JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5FA PUSH2 0x5D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x650 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x672 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x680 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6B5 DUP2 DUP6 DUP6 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6CF DUP6 DUP3 DUP6 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x6DA DUP6 DUP6 DUP6 PUSH2 0x1667 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x757 SWAP1 DUP3 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x6B5 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x83C SWAP1 DUP8 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH2 0x14B7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x862 JUMPI POP PUSH1 0x69 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x8AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206372656174656420776974682074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x686973206163636F756E7421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP8 DUP2 MSTORE CALLER DUP1 DUP6 MSTORE PUSH1 0x6F SWAP1 SWAP4 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x69 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH3 0xFFFFFF AND SWAP1 PUSH1 0x0 PUSH2 0x982 DUP4 PUSH2 0x1F22 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x9AD CALLER DUP3 PUSH2 0x1914 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xB5D JUMPI PUSH1 0x69 SLOAD DUP2 SLOAD LT ISZERO PUSH2 0xAF2 JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A141FF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40A141FF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x6D SLOAD PUSH2 0xAFF SWAP1 TIMESTAMP PUSH2 0x1F0F JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6C PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBC5 SWAP2 SWAP1 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xBD6 SWAP1 POP ADDRESS CALLER DUP5 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0xB51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x65 SLOAD SWAP1 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 SWAP2 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD SWAP2 SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD61 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD4D JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 SUB PUSH2 0xDD3 JUMPI PUSH1 0x71 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD92 DUP4 PUSH2 0x2000 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0x2E1F6517128566F835909F0690741169A982D9B764725BEDE26FB30567F5A070 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6E SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 SWAP2 PUSH2 0xDF3 DUP3 DUP3 PUSH2 0x1B0C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0x2E1F6517128566F835909F0690741169A982D9B764725BEDE26FB30567F5A070 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x67 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE76 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x738E7197 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xE71CE32E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF2A JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF2E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xFFA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH9 0x3782DACE9D90000000 PUSH1 0x68 SSTORE PUSH10 0x54B40B1F852BDA000000 PUSH1 0x69 SSTORE PUSH2 0x2226 PUSH1 0x6A SSTORE PUSH1 0x0 PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH3 0x127500 PUSH1 0x6D SSTORE PUSH1 0x1 PUSH1 0x71 DUP2 SWAP1 SSTORE PUSH1 0x72 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x73 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x108A JUMPI PUSH2 0x1082 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1072 JUMPI PUSH2 0x1072 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x69 SLOAD PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1054 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x1125 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x6DA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6B5 DUP2 DUP6 DUP6 PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x69 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x6B SLOAD LT PUSH2 0x1244 JUMPI PUSH1 0x67 SLOAD PUSH1 0x68 SLOAD GT ISZERO PUSH2 0x1244 JUMPI PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x123E SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD PUSH1 0x0 SUB PUSH2 0x1269 JUMPI DUP3 PUSH1 0x68 SLOAD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x68 SLOAD PUSH2 0x1279 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH2 0x1284 SWAP1 PUSH1 0x14 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP2 POP PUSH1 0x64 DUP4 PUSH1 0x68 SLOAD PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH2 0x12AB SWAP1 PUSH1 0x50 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x12B5 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 MLOAD DUP4 PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1336 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E9 JUMPI PUSH2 0x12E9 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP3 PUSH1 0x70 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1328 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x12CC JUMP JUMPDEST POP DUP8 MLOAD ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x13DA JUMPI PUSH1 0x0 DUP8 DUP5 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1360 JUMPI PUSH2 0x1360 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1372 SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x70 PUSH1 0x0 DUP13 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1395 JUMPI PUSH2 0x1395 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x1341 JUMP JUMPDEST POP JUMPDEST PUSH1 0x6B DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x13EC DUP4 PUSH2 0x2000 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x67 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1452 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x146C SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x762193B9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xEC432772 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x157A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF09 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST PUSH2 0xF09 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x172D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x17DC SWAP1 DUP5 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1828 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x188B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x189D SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x18CA SWAP1 DUP5 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST DUP1 PUSH2 0x1954 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x199A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x19FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x1A09 DUP3 ADDRESS DUP4 PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1A32 SWAP1 DUP5 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6C PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A4B SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x209F JUMP JUMPDEST PUSH2 0xC09 DUP3 DUP3 PUSH2 0x1ACC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x209F JUMP JUMPDEST PUSH1 0x36 PUSH2 0x1AFF DUP4 DUP3 PUSH2 0x213A JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x1AC7 DUP3 DUP3 PUSH2 0x213A JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B3A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B6C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1B50 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC0 DUP4 PUSH2 0x1B8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BEC DUP5 PUSH2 0x1B8D JUMP JUMPDEST SWAP3 POP PUSH2 0x1BFA PUSH1 0x20 DUP6 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C60 DUP3 PUSH2 0x1B8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1CA6 JUMPI PUSH2 0x1CA6 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC8 PUSH2 0x1C67 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1CF8 PUSH2 0x1CF3 DUP4 PUSH2 0x1CAE JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI PUSH2 0x1D30 DUP2 PUSH2 0x1B8D JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1D1F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D7D DUP5 DUP3 DUP6 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC1 DUP10 DUP4 DUP11 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 SWAP2 POP DUP2 DUP9 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 ADD PUSH1 0x1F DUP2 ADD DUP11 SGT PUSH2 0x1DE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1DF7 PUSH2 0x1CF3 DUP3 PUSH2 0x1CAE JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0x1E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1E34 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1E1B JUMP JUMPDEST SWAP9 POP POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E61 DUP9 DUP3 DUP10 ADD PUSH2 0x1CD2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E8F DUP4 PUSH2 0x1B8D JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9D PUSH1 0x20 DUP5 ADD PUSH2 0x1B8D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EBA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EDA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6BB PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x1F3A JUMPI PUSH2 0x1F3A PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6BB PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1C60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2012 JUMPI PUSH2 0x2012 PUSH2 0x1EF9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207468652070726F78792061646D696E2E00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6BB JUMPI PUSH2 0x6BB PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2084 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1AC7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2113 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2132 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x211F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2154 JUMPI PUSH2 0x2154 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x2168 DUP2 PUSH2 0x2162 DUP5 SLOAD PUSH2 0x1EA6 JUMP JUMPDEST DUP5 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x219D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2185 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21CC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x21AD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x21EA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xFB EQ PUSH22 0xC5A2D6924FDD190E35B63E17F7389067C7CB6174C9EB SHL 0x2F 0xAB LOG1 0x4E SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x269"
    },
    "25": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x88EF046D"
    },
    "38": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x151"
    },
    "42": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8DF5DC1"
    },
    "60": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8DF5DC1"
    },
    "71": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x565"
    },
    "75": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDC4B1320"
    },
    "82": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x56E"
    },
    "86": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x581"
    },
    "97": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xEABD4BD7"
    },
    "104": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5BA"
    },
    "108": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "110": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF0C37A59"
    },
    "115": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "116": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5C2"
    },
    "119": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "120": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "121": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFA52C7D8"
    },
    "126": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "127": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5CB"
    },
    "130": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "131": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "134": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "135": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "136": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "137": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "142": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4F6"
    },
    "146": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "147": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "148": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x509"
    },
    "157": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "158": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "159": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xAB051190"
    },
    "164": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "165": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x51C"
    },
    "168": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "169": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "170": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC1873850"
    },
    "175": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "176": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x53F"
    },
    "179": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "180": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "181": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCDF64A76"
    },
    "186": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "187": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x552"
    },
    "190": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "191": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "194": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "195": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "196": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "197": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "202": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "203": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "207": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "208": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "213": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "214": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4A3"
    },
    "217": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "218": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "219": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x991E0139"
    },
    "224": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "225": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4AC"
    },
    "228": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "229": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "230": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x99439089"
    },
    "235": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "236": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4BF"
    },
    "239": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "240": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "241": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA00FABDD"
    },
    "246": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "247": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4D2"
    },
    "250": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "251": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "252": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA21BC3FB"
    },
    "257": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "258": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DA"
    },
    "261": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "262": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "263": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA224CEE7"
    },
    "268": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "269": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E3"
    },
    "272": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "273": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "276": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "277": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "278": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "279": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x88EF046D"
    },
    "284": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "285": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x43F"
    },
    "288": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "289": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "290": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8A11D7C9"
    },
    "295": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "296": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x448"
    },
    "299": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "300": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "301": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x949813B8"
    },
    "306": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "307": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x472"
    },
    "310": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "311": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "312": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95B84BC2"
    },
    "317": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "318": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x492"
    },
    "321": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "322": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "323": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95D89B41"
    },
    "328": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "329": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x49B"
    },
    "332": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "333": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "336": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "337": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "338": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "339": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x39509351"
    },
    "344": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "345": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EA"
    },
    "348": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "349": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "350": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x56891412"
    },
    "355": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "356": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AE"
    },
    "359": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "360": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "361": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x56891412"
    },
    "366": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "367": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3B5"
    },
    "370": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "371": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "372": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5A3E251F"
    },
    "377": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "378": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3BE"
    },
    "381": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "382": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "383": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x69A69E29"
    },
    "388": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "389": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3C7"
    },
    "392": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "393": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "394": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6E27D889"
    },
    "399": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "400": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3F0"
    },
    "403": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "404": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "405": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "410": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "411": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x403"
    },
    "414": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "415": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "416": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7C405325"
    },
    "421": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "422": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x42C"
    },
    "425": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "426": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "428": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "429": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "430": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "431": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "432": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x39509351"
    },
    "437": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "438": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x32B"
    },
    "441": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "442": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "443": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x3E47158C"
    },
    "448": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "449": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x33E"
    },
    "452": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "453": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "454": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x497DFE63"
    },
    "459": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "460": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x369"
    },
    "463": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "464": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "465": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4A4FBEEC"
    },
    "470": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "471": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x37C"
    },
    "474": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "475": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "476": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x50355D76"
    },
    "481": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "482": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3AC"
    },
    "485": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "486": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "488": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "489": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "490": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "491": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "492": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x259A28CF"
    },
    "497": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "GT",
      "path": "24"
    },
    "498": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x231"
    },
    "501": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "502": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "503": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x259A28CF"
    },
    "508": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "509": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2DD"
    },
    "512": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "513": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "514": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x313CE567"
    },
    "519": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "520": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E7"
    },
    "523": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "524": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "525": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x372500AB"
    },
    "530": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "531": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2F6"
    },
    "534": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "535": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "536": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x37DEEA70"
    },
    "541": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "542": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x300"
    },
    "545": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "546": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "547": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x38ED7CFC"
    },
    "552": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "553": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x308"
    },
    "556": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "557": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "559": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "560": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "561": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "562": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "563": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6FDDE03"
    },
    "568": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "569": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26E"
    },
    "572": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "573": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "574": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95EA7B3"
    },
    "579": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "580": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28C"
    },
    "583": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "584": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "585": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18160DDD"
    },
    "590": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "591": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2AF"
    },
    "594": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "595": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "596": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x20D3A0B4"
    },
    "601": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "602": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C1"
    },
    "605": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "606": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "607": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "612": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "EQ",
      "path": "24"
    },
    "613": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2CA"
    },
    "616": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "617": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "618": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "620": {
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "DUP1",
      "path": "24"
    },
    "621": {
      "first_revert": true,
      "fn": null,
      "offset": [
        184,
        11054
      ],
      "op": "REVERT",
      "path": "24"
    },
    "622": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "623": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "626": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x615"
    },
    "629": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "630": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "631": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "633": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "634": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "638": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "639": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3E"
    },
    "642": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "643": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "644": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "646": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "647": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "648": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "649": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "650": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "651": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "652": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "653": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "656": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A"
    },
    "659": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "660": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "662": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA4"
    },
    "665": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "666": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "667": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A7"
    },
    "670": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "671": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "672": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "674": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "675": {
      "op": "SWAP1"
    },
    "676": {
      "op": "ISZERO"
    },
    "677": {
      "op": "ISZERO"
    },
    "678": {
      "op": "DUP2"
    },
    "679": {
      "op": "MSTORE"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "686": {
      "op": "JUMP"
    },
    "687": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "688": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "690": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "691": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "692": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "694": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "DUP2"
    },
    "697": {
      "op": "MSTORE"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "704": {
      "op": "JUMP"
    },
    "705": {
      "offset": [
        677,
        704
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "706": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "709": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "711": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "712": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "DUP2",
      "path": "24"
    },
    "713": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "JUMP",
      "path": "24"
    },
    "714": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "715": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "718": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D8"
    },
    "721": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "722": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "724": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BCE"
    },
    "727": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "728": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "729": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C1"
    },
    "732": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "733": {
      "offset": [
        426,
        475
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "734": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        426,
        475
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "737": {
      "offset": [
        466,
        475
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0x127500"
    },
    "741": {
      "offset": [
        426,
        475
      ],
      "op": "DUP2",
      "path": "24"
    },
    "742": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        426,
        475
      ],
      "op": "JUMP",
      "path": "24"
    },
    "743": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "744": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "746": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "747": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "749": {
      "op": "DUP2"
    },
    "750": {
      "op": "MSTORE"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "op": "ADD"
    },
    "754": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "757": {
      "op": "JUMP"
    },
    "758": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6145,
        6420
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "759": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6145,
        6420
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "762": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6145,
        6420
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6E5"
    },
    "765": {
      "fn": "SmartnodesCore.claimRewards",
      "jump": "i",
      "offset": [
        6145,
        6420
      ],
      "op": "JUMP",
      "path": "24"
    },
    "766": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6145,
        6420
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "767": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6145,
        6420
      ],
      "op": "STOP",
      "path": "24"
    },
    "768": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9503,
        9630
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "769": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9503,
        9630
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "772": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9503,
        9630
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x78F"
    },
    "775": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        9503,
        9630
      ],
      "op": "JUMP",
      "path": "24"
    },
    "776": {
      "offset": [
        903,
        938
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "777": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "780": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x316"
    },
    "783": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "784": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "786": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C0A"
    },
    "789": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        903,
        938
      ],
      "op": "JUMP",
      "path": "24"
    },
    "790": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "791": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "793": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "795": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "796": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "798": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "799": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "DUP2",
      "path": "24"
    },
    "800": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "801": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "803": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "804": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "805": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "807": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "ADD",
      "path": "24"
    },
    "808": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "809": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "DUP2",
      "path": "24"
    },
    "810": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        903,
        938
      ],
      "op": "JUMP",
      "path": "24"
    },
    "811": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "812": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "815": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x339"
    },
    "818": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "819": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "821": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA4"
    },
    "824": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "825": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "826": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x802"
    },
    "829": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "830": {
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "831": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "833": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "834": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x351"
    },
    "837": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "offset": [
        284,
        309
      ],
      "op": "AND",
      "path": "24"
    },
    "847": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "DUP2",
      "path": "24"
    },
    "848": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "JUMP",
      "path": "24"
    },
    "849": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "850": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "852": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "op": "SWAP1"
    },
    "862": {
      "op": "SWAP2"
    },
    "863": {
      "op": "AND"
    },
    "864": {
      "op": "DUP2"
    },
    "865": {
      "op": "MSTORE"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x283"
    },
    "872": {
      "op": "JUMP"
    },
    "873": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "874": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "877": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x377"
    },
    "880": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "881": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "883": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C23"
    },
    "886": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        8514,
        9146
      ],
      "op": "JUMP",
      "path": "24"
    },
    "887": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "888": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x841"
    },
    "891": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        8514,
        9146
      ],
      "op": "JUMP",
      "path": "24"
    },
    "892": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "893": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29F"
    },
    "896": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x38A"
    },
    "899": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "900": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "902": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C45"
    },
    "905": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        9152,
        9298
      ],
      "op": "JUMP",
      "path": "24"
    },
    "906": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "907": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 2,
      "value": "0x69"
    },
    "909": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9281,
        9291
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "919": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "920": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "AND",
      "path": "24"
    },
    "921": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9219,
        9223
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "923": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "924": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "DUP2",
      "path": "24"
    },
    "925": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "926": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9252
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "928": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "930": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "931": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "933": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "934": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9270
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "935": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9277
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "936": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9291
      ],
      "op": "LT",
      "path": "24"
    },
    "937": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9291
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "938": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9242,
        9291
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "939": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9152,
        9298
      ],
      "op": "JUMP",
      "path": "24"
    },
    "940": {
      "offset": [
        1055,
        1080
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "941": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1055,
        1080
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "944": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1055,
        1080
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "946": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1055,
        1080
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "947": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1055,
        1080
      ],
      "op": "DUP2",
      "path": "24"
    },
    "948": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1055,
        1080
      ],
      "op": "JUMP",
      "path": "24"
    },
    "949": {
      "offset": [
        645,
        671
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "950": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "953": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "955": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "956": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "DUP2",
      "path": "24"
    },
    "957": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "JUMP",
      "path": "24"
    },
    "958": {
      "offset": [
        568,
        596
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "959": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "962": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "964": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "965": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "DUP2",
      "path": "24"
    },
    "966": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "JUMP",
      "path": "24"
    },
    "967": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "968": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "971": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3D5"
    },
    "974": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "975": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "977": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C45"
    },
    "980": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "jump": "i",
      "offset": [
        9376,
        9497
      ],
      "op": "JUMP",
      "path": "24"
    },
    "981": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "SUB"
    },
    "990": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "AND",
      "path": "24",
      "statement": 3
    },
    "991": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9442,
        9449
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "993": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "994": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "DUP2",
      "path": "24"
    },
    "995": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "996": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9484
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "998": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1000": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1001": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1003": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1004": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1005": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1006": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9468,
        9490
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1007": {
      "fn": "SmartnodesCore.getUnclaimedRewards",
      "offset": [
        9376,
        9497
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1008": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1009": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1012": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3FE"
    },
    "1015": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1016": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1018": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C0A"
    },
    "1021": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7021,
        7114
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1022": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1023": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9A3"
    },
    "1026": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7021,
        7114
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1027": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "1031": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411"
    },
    "1034": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1035": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1037": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C45"
    },
    "1040": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1041": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 4
    },
    "1051": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1053": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1054": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1055": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1056": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1058": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1060": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1061": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1063": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1064": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1065": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1066": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1067": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1068": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1069": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1072": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x43A"
    },
    "1075": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1076": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1078": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C0A"
    },
    "1081": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1082": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1083": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B0"
    },
    "1086": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1087": {
      "offset": [
        602,
        639
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1088": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1091": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "1093": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1094": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1096": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1097": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x45B"
    },
    "1100": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x456"
    },
    "1103": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1104": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1106": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C45"
    },
    "1109": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1110": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1111": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC0D"
    },
    "1114": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1115": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1116": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1118": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1119": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1120": {
      "op": "SWAP3"
    },
    "1121": {
      "op": "ISZERO"
    },
    "1122": {
      "op": "ISZERO"
    },
    "1123": {
      "op": "DUP4"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1127": {
      "op": "DUP4"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "SWAP2"
    },
    "1130": {
      "op": "SWAP1"
    },
    "1131": {
      "op": "SWAP2"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x283"
    },
    "1137": {
      "op": "JUMP"
    },
    "1138": {
      "offset": [
        997,
        1048
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1139": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1142": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x480"
    },
    "1145": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1146": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1148": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C45"
    },
    "1151": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        997,
        1048
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1152": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1153": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "1155": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1157": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1158": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1160": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1161": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1162": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1163": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1165": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1166": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1167": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1168": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1169": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        997,
        1048
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1170": {
      "offset": [
        316,
        350
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1171": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        316,
        350
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1174": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        316,
        350
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "1176": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        316,
        350
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1177": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        316,
        350
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1178": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        316,
        350
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1179": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1180": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "1183": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC7"
    },
    "1186": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1187": {
      "offset": [
        504,
        531
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1188": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1191": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "1193": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1194": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1195": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1196": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1197": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1200": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4BA"
    },
    "1203": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1204": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1206": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C0A"
    },
    "1209": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1210": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1211": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCD6"
    },
    "1214": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1215": {
      "offset": [
        234,
        278
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1216": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "1218": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1219": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x351"
    },
    "1222": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "offset": [
        234,
        278
      ],
      "op": "AND",
      "path": "24"
    },
    "1232": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1233": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1234": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10660,
        10944
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1235": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10660,
        10944
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1238": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10660,
        10944
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE39"
    },
    "1241": {
      "fn": "SmartnodesCore.doubleStateTime",
      "jump": "i",
      "offset": [
        10660,
        10944
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1242": {
      "offset": [
        1154,
        1186
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1243": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1154,
        1186
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1246": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1154,
        1186
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "1248": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1154,
        1186
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1249": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1154,
        1186
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1250": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1154,
        1186
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1251": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1252": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1255": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4F1"
    },
    "1258": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1259": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1261": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D48"
    },
    "1264": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        1949,
        2544
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1265": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1266": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF0F"
    },
    "1269": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        1949,
        2544
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1270": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1271": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "1274": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x504"
    },
    "1277": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1278": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1280": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA4"
    },
    "1283": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1284": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1285": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A0"
    },
    "1288": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1289": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1290": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "1293": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x517"
    },
    "1296": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1297": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1299": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA4"
    },
    "1302": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1303": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1304": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1132"
    },
    "1307": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1308": {
      "offset": [
        1086,
        1116
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1309": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x72"
    },
    "1311": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1312": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x52B"
    },
    "1315": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1316": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "1320": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "AND",
      "path": "24"
    },
    "1321": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1322": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1323": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1324": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1326": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1086,
        1116
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1327": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "1331": {
      "op": "SWAP1"
    },
    "1332": {
      "op": "SWAP2"
    },
    "1333": {
      "op": "AND"
    },
    "1334": {
      "op": "DUP2"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "offset": [
        1086,
        1116
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x283"
    },
    "1342": {
      "op": "JUMP"
    },
    "1343": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1344": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1347": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x54D"
    },
    "1350": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1351": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1353": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C0A"
    },
    "1356": {
      "fn": "SmartnodesCore.changeLockAmount",
      "jump": "i",
      "offset": [
        10950,
        11052
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1357": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1358": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1140"
    },
    "1361": {
      "fn": "SmartnodesCore.changeLockAmount",
      "jump": "i",
      "offset": [
        10950,
        11052
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1362": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1363": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1366": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x560"
    },
    "1369": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1370": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1372": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C45"
    },
    "1375": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        9953,
        10221
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1376": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1377": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116F"
    },
    "1380": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        9953,
        10221
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1381": {
      "offset": [
        537,
        562
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1382": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1385": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "1387": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1388": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1389": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1390": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1391": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1394": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x57C"
    },
    "1397": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1398": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1400": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D85"
    },
    "1403": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        4479,
        6060
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1404": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1405": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11EA"
    },
    "1408": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        4479,
        6060
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1409": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1410": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B3"
    },
    "1413": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58F"
    },
    "1416": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1417": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1419": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E73"
    },
    "1422": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1423": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "1433": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1434": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "1435": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1437": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1438": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1439": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1440": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "1442": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1444": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1445": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1446": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1447": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1449": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1450": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1451": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1452": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1453": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1454": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1455": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "1456": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1457": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1458": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1459": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1460": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1461": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1462": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1463": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1464": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1465": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1466": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10227,
        10654
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1467": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10227,
        10654
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FE"
    },
    "1470": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10227,
        10654
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13FB"
    },
    "1473": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        10227,
        10654
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1474": {
      "offset": [
        1122,
        1148
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1475": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1122,
        1148
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B3"
    },
    "1478": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1122,
        1148
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "1480": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1122,
        1148
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1481": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1122,
        1148
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1482": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1122,
        1148
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1483": {
      "offset": [
        944,
        991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1484": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5FA"
    },
    "1487": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5D9"
    },
    "1490": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1491": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1493": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C45"
    },
    "1496": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        944,
        991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1497": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1498": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "1500": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1502": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1503": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1505": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1506": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1507": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1508": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1510": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1511": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1512": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1513": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1514": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1516": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1517": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "ADD",
      "path": "24"
    },
    "1518": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1519": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1521": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1522": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1523": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "ADD",
      "path": "24"
    },
    "1524": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1525": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1526": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1527": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1528": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1529": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1530": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1531": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1533": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1534": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        944,
        991
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1535": {
      "op": "SWAP4"
    },
    "1536": {
      "op": "DUP5"
    },
    "1537": {
      "op": "MSTORE"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1540": {
      "op": "DUP5"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "op": "SWAP3"
    },
    "1543": {
      "op": "SWAP1"
    },
    "1544": {
      "op": "SWAP3"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "SWAP1"
    },
    "1547": {
      "op": "DUP3"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "op": "MSTORE"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1552": {
      "op": "ADD"
    },
    "1553": {
      "offset": [
        944,
        991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x283"
    },
    "1556": {
      "op": "JUMP"
    },
    "1557": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1558": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1560": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x36"
    },
    "1562": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1563": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1564": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x624"
    },
    "1567": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1568": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA6"
    },
    "1571": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1572": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1573": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1574": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1576": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1577": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1579": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1580": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1581": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "1582": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "1583": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1585": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1586": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1589": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1590": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1591": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1592": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1594": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1595": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1596": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1597": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1598": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1602": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1604": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1605": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1606": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1607": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1608": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x650"
    },
    "1611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA6"
    },
    "1615": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1616": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1618": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1619": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69D"
    },
    "1622": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1623": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1624": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1626": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "1627": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x672"
    },
    "1630": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1631": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1634": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1635": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1636": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "1638": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "1639": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1640": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1641": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1642": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1644": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1645": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1646": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69D"
    },
    "1649": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1650": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1651": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1652": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1653": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1654": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1655": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1657": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1658": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1660": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1662": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1663": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1664": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1665": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1666": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1667": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1668": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1669": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1670": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1672": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1673": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1674": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1676": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1677": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1678": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1679": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "1680": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x680"
    },
    "1683": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1684": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1685": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1686": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "1687": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1689": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "1690": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1691": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1692": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1693": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1694": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1695": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1696": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1697": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1698": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1699": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1700": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1701": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1702": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1703": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1704": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1706": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "1707": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x6B5"
    },
    "1710": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1711": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1712": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1713": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B7"
    },
    "1716": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1717": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1718": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1720": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1721": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "1722": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "1723": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1724": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1725": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1726": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "1727": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "1728": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1729": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1730": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1732": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1733": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x6CF"
    },
    "1736": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1737": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1738": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1739": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15DB"
    },
    "1742": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1743": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1744": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x6DA"
    },
    "1747": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1748": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1749": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1750": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1667"
    },
    "1753": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1754": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1755": {
      "op": "POP"
    },
    "1756": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "1758": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1759": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "op": "POP"
    },
    "1764": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1765": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6145,
        6420
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1766": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6222,
        6232
      ],
      "op": "CALLER",
      "path": "24"
    },
    "1767": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6188,
        6202
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1769": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1770": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1771": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1772": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6221
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "1774": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1776": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1777": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1779": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1780": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1781": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6205,
        6233
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1782": {
      "branch": 108,
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6251,
        6261
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 13
    },
    "1783": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x73D"
    },
    "1786": {
      "branch": 108,
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1787": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1789": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1798": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1801": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1803": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1804": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "ADD",
      "path": "24"
    },
    "1805": {
      "op": "MSTORE"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "PUSH19",
      "value": "0x4E6F207265776172647320746F20636C61696D"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1838": {
      "op": "DUP3"
    },
    "1839": {
      "op": "ADD"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1845": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1847": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1848": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1849": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1850": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "SUB",
      "path": "24"
    },
    "1851": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1852": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "24"
    },
    "1853": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6243,
        6285
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1854": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6313,
        6323
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 14
    },
    "1855": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6327,
        6328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1857": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1858": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1859": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1860": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6312
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "1862": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1864": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1865": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1867": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1868": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6324
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1869": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6296,
        6328
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1870": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6338,
        6363
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 15,
      "value": "0x757"
    },
    "1873": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6338,
        6363
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1874": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6356,
        6362
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1875": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6338,
        6343
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1835"
    },
    "1878": {
      "fn": "SmartnodesCore.claimRewards",
      "jump": "i",
      "offset": [
        6338,
        6363
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1879": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6338,
        6363
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1880": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 16,
      "value": "0x40"
    },
    "1882": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1883": {
      "op": "DUP2"
    },
    "1884": {
      "op": "DUP2"
    },
    "1885": {
      "op": "MSTORE"
    },
    "1886": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6394,
        6404
      ],
      "op": "CALLER",
      "path": "24"
    },
    "1887": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6394,
        6404
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1888": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
    },
    "1921": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1927": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1928": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1929": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1930": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "SUB",
      "path": "24"
    },
    "1931": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1932": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6379,
        6413
      ],
      "op": "LOG2",
      "path": "24"
    },
    "1933": {
      "fn": "SmartnodesCore.claimRewards",
      "offset": [
        6178,
        6420
      ],
      "op": "POP",
      "path": "24"
    },
    "1934": {
      "fn": "SmartnodesCore.claimRewards",
      "jump": "o",
      "offset": [
        6145,
        6420
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1935": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9503,
        9630
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1936": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9604
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0x65"
    },
    "1938": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9604
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1939": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1941": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1942": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1943": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1950": {
      "op": "SHL"
    },
    "1951": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1952": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1953": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1954": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1955": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9561,
        9568
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1957": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9561,
        9568
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9604
      ],
      "op": "AND",
      "path": "24"
    },
    "1967": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9604
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1968": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9621
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x91E2E252"
    },
    "1973": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9621
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1974": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1976": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1977": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1978": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ADD",
      "path": "24"
    },
    "1979": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1980": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1982": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1983": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1984": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1985": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1986": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1987": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SUB",
      "path": "24"
    },
    "1988": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ADD",
      "path": "24"
    },
    "1989": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1990": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9604
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1991": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "GAS",
      "path": "24"
    },
    "1992": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "1993": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1994": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1995": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1996": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7D9"
    },
    "1999": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2000": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2001": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2003": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2004": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2005": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2006": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2008": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2009": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2010": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "POP",
      "path": "24"
    },
    "2011": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "POP",
      "path": "24"
    },
    "2012": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "POP",
      "path": "24"
    },
    "2013": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "POP",
      "path": "24"
    },
    "2014": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2016": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2017": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2018": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2020": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "NOT",
      "path": "24"
    },
    "2021": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2023": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2024": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ADD",
      "path": "24"
    },
    "2025": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "AND",
      "path": "24"
    },
    "2026": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2027": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ADD",
      "path": "24"
    },
    "2028": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2029": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2031": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2032": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "POP",
      "path": "24"
    },
    "2033": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2034": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "ADD",
      "path": "24"
    },
    "2035": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2036": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7FD"
    },
    "2039": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2040": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2041": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EE0"
    },
    "2044": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        9587,
        9623
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2045": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9587,
        9623
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2046": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9580,
        9623
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2047": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9580,
        9623
      ],
      "op": "POP",
      "path": "24"
    },
    "2048": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9503,
        9630
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2049": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        9503,
        9630
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2050": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2051": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2052": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2054": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 18
    },
    "2055": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2056": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2057": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "2059": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2061": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2062": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2063": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2064": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2066": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2067": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2068": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2078": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "2079": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2080": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2081": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2082": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2083": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2084": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2085": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2086": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2087": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2088": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2089": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2090": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B5"
    },
    "2093": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2094": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2095": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2096": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2097": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2098": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83C"
    },
    "2101": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2102": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2103": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2104": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0F"
    },
    "2107": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2108": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2109": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B7"
    },
    "2112": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2113": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2114": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8656,
        8666
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 19
    },
    "2115": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2117": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2118": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2119": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2120": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "2122": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2124": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2125": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2127": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2128": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2129": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2130": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8671,
        8682
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2131": {
      "op": "GT"
    },
    "2132": {
      "branch": 109,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8682
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2133": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8711
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2134": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8711
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2135": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8711
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x862"
    },
    "2138": {
      "branch": 109,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8711
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2139": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8711
      ],
      "op": "POP",
      "path": "24"
    },
    "2140": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8701,
        8711
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "2142": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8701,
        8711
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2143": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8686,
        8697
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2144": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8686,
        8711
      ],
      "op": "LT",
      "path": "24"
    },
    "2145": {
      "branch": 110,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8686,
        8711
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2146": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8646,
        8711
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2147": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8AE"
    },
    "2150": {
      "branch": 110,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2151": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2153": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2162": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2165": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2167": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2168": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "ADD",
      "path": "24"
    },
    "2169": {
      "op": "MSTORE"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2174": {
      "op": "DUP3"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "op": "MSTORE"
    },
    "2177": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2212": {
      "op": "DUP3"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2217": {
      "op": "ADD"
    },
    "2218": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "2221": {
      "op": "JUMP"
    },
    "2222": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8625,
        8764
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2223": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8806,
        8816
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 20
    },
    "2224": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8843,
        8844
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2226": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2227": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2228": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2229": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8805
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2231": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2233": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2234": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2236": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2237": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8817
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2238": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8831
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2240": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8831
      ],
      "op": "ADD",
      "path": "24"
    },
    "2241": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8831
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2242": {
      "branch": 111,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8795,
        8845
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2243": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x923"
    },
    "2246": {
      "branch": 111,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2247": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2249": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2258": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2261": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2263": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "ADD",
      "path": "24"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2270": {
      "op": "DUP3"
    },
    "2271": {
      "op": "ADD"
    },
    "2272": {
      "op": "MSTORE"
    },
    "2273": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206372656174656420776974682074"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2308": {
      "op": "DUP3"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "MSTORE"
    },
    "2311": {
      "op": "PUSH12",
      "value": "0x686973206163636F756E7421"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "2338": {
      "op": "JUMP"
    },
    "2339": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8774,
        8915
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2340": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 21,
      "value": "0x40"
    },
    "2342": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2343": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2344": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2346": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2347": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2348": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2349": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2352": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2353": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2354": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2355": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2357": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2358": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2359": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2360": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2361": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2362": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2363": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2364": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2365": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2366": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2367": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2368": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8951,
        9065
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2369": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8937,
        8947
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2370": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2371": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2372": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2373": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8936
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2375": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2376": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2377": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2378": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2379": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2380": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2381": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        8948
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2382": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2383": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2384": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2385": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2386": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2387": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2388": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2390": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2391": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2392": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2393": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2394": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2395": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2397": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2398": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2399": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "ADD",
      "path": "24"
    },
    "2400": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8926,
        9065
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2401": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9100,
        9110
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 22,
      "value": "0x69"
    },
    "2403": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9100,
        9110
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2404": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9076,
        9111
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x96D"
    },
    "2407": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9076,
        9111
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2408": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8937,
        8947
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2409": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9076,
        9087
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1914"
    },
    "2412": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        9076,
        9111
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2413": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9076,
        9111
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2414": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9137
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 23,
      "value": "0x72"
    },
    "2416": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2417": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2418": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "2422": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "AND",
      "path": "24"
    },
    "2423": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2424": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9137
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2426": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x982"
    },
    "2429": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2430": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F22"
    },
    "2433": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        9121,
        9139
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2434": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2435": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2436": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2437": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "2440": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "EXP",
      "path": "24"
    },
    "2441": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2442": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2443": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2444": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "2448": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "MUL",
      "path": "24"
    },
    "2449": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "NOT",
      "path": "24"
    },
    "2450": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "AND",
      "path": "24"
    },
    "2451": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2452": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2453": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "2457": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "AND",
      "path": "24"
    },
    "2458": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "MUL",
      "path": "24"
    },
    "2459": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "OR",
      "path": "24"
    },
    "2460": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2461": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2462": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "POP",
      "path": "24"
    },
    "2463": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9121,
        9139
      ],
      "op": "POP",
      "path": "24"
    },
    "2464": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "POP",
      "path": "24"
    },
    "2465": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8514,
        9146
      ],
      "op": "POP",
      "path": "24"
    },
    "2466": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        8514,
        9146
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2467": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2468": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7076,
        7107
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 24,
      "value": "0x9AD"
    },
    "2471": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7088,
        7098
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2472": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7100,
        7106
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2473": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7076,
        7087
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1914"
    },
    "2476": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7076,
        7107
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2477": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7076,
        7107
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2478": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7021,
        7114
      ],
      "op": "POP",
      "path": "24"
    },
    "2479": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        7021,
        7114
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2480": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2481": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7218,
        7228
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2482": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7177,
        7204
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2484": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2485": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2486": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2487": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7217
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "2489": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2491": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2492": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2494": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2495": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7207,
        7229
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2496": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        7296
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 25,
      "value": "0x2"
    },
    "2498": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        7296
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2499": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        7296
      ],
      "op": "ADD",
      "path": "24"
    },
    "2500": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        7296
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2501": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA0C"
    },
    "2504": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2505": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2507": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2516": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2519": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2521": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2522": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "ADD",
      "path": "24"
    },
    "2523": {
      "op": "MSTORE"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2528": {
      "op": "DUP3"
    },
    "2529": {
      "op": "ADD"
    },
    "2530": {
      "op": "MSTORE"
    },
    "2531": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2559": {
      "op": "SHL"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2562": {
      "op": "DUP3"
    },
    "2563": {
      "op": "ADD"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "2571": {
      "op": "JUMP"
    },
    "2572": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7239,
        7361
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2573": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7389,
        7405
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 26
    },
    "2574": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7389,
        7405
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2575": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7379,
        7405
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2576": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7379,
        7405
      ],
      "op": "GT",
      "path": "24"
    },
    "2577": {
      "branch": 112,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7379,
        7405
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2578": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA5D"
    },
    "2581": {
      "branch": 112,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2582": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2584": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2591": {
      "op": "SHL"
    },
    "2592": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2593": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2596": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2598": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2599": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "ADD",
      "path": "24"
    },
    "2600": {
      "op": "MSTORE"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2605": {
      "op": "DUP3"
    },
    "2606": {
      "op": "ADD"
    },
    "2607": {
      "op": "MSTORE"
    },
    "2608": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2643": {
      "op": "DUP3"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2648": {
      "op": "ADD"
    },
    "2649": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "2652": {
      "op": "JUMP"
    },
    "2653": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7371,
        7440
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2654": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7467,
        7468
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 27,
      "value": "0x0"
    },
    "2656": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7458,
        7464
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2657": {
      "branch": 113,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7458,
        7468
      ],
      "op": "GT",
      "path": "24"
    },
    "2658": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA7D"
    },
    "2661": {
      "branch": 113,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2662": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2664": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2665": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2673": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2674": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2676": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "ADD",
      "path": "24"
    },
    "2677": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "2680": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2681": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F44"
    },
    "2684": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7450,
        7506
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2685": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7450,
        7506
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2686": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7592,
        7601
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2687": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7592,
        7612
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2689": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7592,
        7612
      ],
      "op": "ADD",
      "path": "24"
    },
    "2690": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7592,
        7612
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2691": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7616,
        7617
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2693": {
      "branch": 114,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7592,
        7617
      ],
      "op": "SUB",
      "path": "24"
    },
    "2694": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7588,
        8502
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB5D"
    },
    "2697": {
      "branch": 114,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7588,
        8502
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2698": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7656,
        7666
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "2700": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7656,
        7666
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2701": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7637,
        7653
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2702": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7637,
        7653
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2703": {
      "branch": 115,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7637,
        7666
      ],
      "op": "LT",
      "path": "24"
    },
    "2704": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7633,
        7746
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2705": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7633,
        7746
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAF2"
    },
    "2708": {
      "branch": 115,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7633,
        7746
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2709": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7703
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 28,
      "value": "0x65"
    },
    "2711": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7703
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2712": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2714": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2715": {
      "op": "PUSH4",
      "value": "0x40A141FF"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2724": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2725": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7720,
        7730
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2726": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2728": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2729": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "ADD",
      "path": "24"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2737": {
      "op": "SHL"
    },
    "2738": {
      "op": "SUB"
    },
    "2739": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7703
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2740": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7703
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2741": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7703
      ],
      "op": "AND",
      "path": "24"
    },
    "2742": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7703
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2743": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7719
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40A141FF"
    },
    "2748": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2754": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2756": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2757": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2758": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2759": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "SUB",
      "path": "24"
    },
    "2760": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2761": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2763": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2764": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2765": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "2766": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2767": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2768": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2769": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAD9"
    },
    "2772": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2773": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2775": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2776": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2777": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2778": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "POP",
      "path": "24"
    },
    "2779": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "GAS",
      "path": "24"
    },
    "2780": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "CALL",
      "path": "24"
    },
    "2781": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2782": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2783": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2784": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAED"
    },
    "2787": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2788": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2789": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2791": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2792": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2793": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2794": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2796": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2797": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2798": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "POP",
      "path": "24"
    },
    "2799": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "POP",
      "path": "24"
    },
    "2800": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "POP",
      "path": "24"
    },
    "2801": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7686,
        7731
      ],
      "op": "POP",
      "path": "24"
    },
    "2802": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7633,
        7746
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2803": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7800,
        7812
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 29,
      "value": "0x6D"
    },
    "2805": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7800,
        7812
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2806": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7782,
        7812
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAFF"
    },
    "2809": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7782,
        7812
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2810": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7782,
        7797
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "2811": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7782,
        7812
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "2814": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7782,
        7812
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2815": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7782,
        7812
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2816": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7768
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2817": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7779
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2819": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7779
      ],
      "op": "ADD",
      "path": "24"
    },
    "2820": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7812
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2821": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7812
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2822": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7812
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2823": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7759,
        7812
      ],
      "op": "POP",
      "path": "24"
    },
    "2824": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7903,
        7909
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 30
    },
    "2825": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7899
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "2827": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7899
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2829": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2830": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2831": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2832": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB19"
    },
    "2835": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2836": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2837": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F85"
    },
    "2840": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7888,
        7909
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2841": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2842": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2843": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2844": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7888,
        7909
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2845": {
      "op": "POP"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7957,
        7977
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 31,
      "value": "0x1"
    },
    "2849": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7957,
        7977
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2850": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7957,
        7977
      ],
      "op": "ADD",
      "path": "24"
    },
    "2851": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7957,
        7977
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2852": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2854": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2855": {
      "op": "SWAP1"
    },
    "2856": {
      "op": "DUP2"
    },
    "2857": {
      "op": "MSTORE"
    },
    "2858": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7945,
        7955
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2859": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7945,
        7955
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2860": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "2893": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2898": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2900": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2901": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2902": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2903": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "SUB",
      "path": "24"
    },
    "2904": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2905": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7929,
        7978
      ],
      "op": "LOG2",
      "path": "24"
    },
    "2906": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7167,
        8508
      ],
      "op": "POP",
      "path": "24"
    },
    "2907": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "POP",
      "path": "24"
    },
    "2908": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2909": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7588,
        8502
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2910": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8158,
        8167
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 32
    },
    "2911": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8158,
        8178
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2913": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8158,
        8178
      ],
      "op": "ADD",
      "path": "24"
    },
    "2914": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8158,
        8178
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2915": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8139,
        8154
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "2916": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8139,
        8178
      ],
      "op": "LT",
      "path": "24"
    },
    "2917": {
      "branch": 116,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8139,
        8178
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2918": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBB1"
    },
    "2921": {
      "branch": 116,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2922": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2924": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2925": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2931": {
      "op": "SHL"
    },
    "2932": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2933": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2936": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2938": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2939": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "ADD",
      "path": "24"
    },
    "2940": {
      "op": "MSTORE"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2945": {
      "op": "DUP3"
    },
    "2946": {
      "op": "ADD"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2983": {
      "op": "DUP3"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "op": "MSTORE"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "2992": {
      "op": "JUMP"
    },
    "2993": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8114,
        8236
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2994": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8271,
        8277
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 33
    },
    "2995": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8260
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2996": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2998": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8267
      ],
      "op": "ADD",
      "path": "24"
    },
    "2999": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8267
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3001": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3002": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3003": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3004": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBC5"
    },
    "3007": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3008": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3009": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F85"
    },
    "3012": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8251,
        8277
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3013": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3014": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3015": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3016": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8277
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8291,
        8338
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 34,
      "value": "0xBD6"
    },
    "3021": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8291,
        8338
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3022": {
      "op": "POP"
    },
    "3023": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8312,
        8316
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "3024": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8319,
        8329
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3025": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8331,
        8337
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3026": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8291,
        8303
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6C1"
    },
    "3029": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8291,
        8338
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3030": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8291,
        8338
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8405,
        8439
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 35,
      "value": "0x40"
    },
    "3034": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8405,
        8439
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3035": {
      "op": "DUP3"
    },
    "3036": {
      "op": "DUP2"
    },
    "3037": {
      "op": "MSTORE"
    },
    "3038": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8420,
        8430
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3039": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8420,
        8430
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3040": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8405,
        8439
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "3073": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8405,
        8439
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8405,
        8439
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB51"
    },
    "3080": {
      "op": "JUMP"
    },
    "3081": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7588,
        8502
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3082": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7167,
        8508
      ],
      "op": "POP",
      "path": "24"
    },
    "3083": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "POP",
      "path": "24"
    },
    "3084": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3085": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3092": {
      "op": "SHL"
    },
    "3093": {
      "op": "SUB"
    },
    "3094": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3095": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3096": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "AND",
      "path": "24"
    },
    "3097": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3099": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3100": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3101": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3102": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9790
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3104": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3106": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3107": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3108": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3109": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3111": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3112": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3113": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9780,
        9808
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3114": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3115": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3116": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3118": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3119": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "ADD",
      "path": "24"
    },
    "3120": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3121": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3122": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3123": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3124": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3125": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3126": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3128": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3129": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "ADD",
      "path": "24"
    },
    "3130": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3131": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3132": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3133": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "ADD",
      "path": "24"
    },
    "3134": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3135": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3136": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3137": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3138": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3140": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "ADD",
      "path": "24"
    },
    "3141": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3142": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3143": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3144": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "ADD",
      "path": "24"
    },
    "3145": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3146": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "3148": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9851
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3149": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3150": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3151": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3160": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3161": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3163": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3164": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "ADD",
      "path": "24"
    },
    "3165": {
      "op": "SWAP5"
    },
    "3166": {
      "op": "SWAP1"
    },
    "3167": {
      "op": "SWAP5"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3170": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3171": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3172": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3173": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3174": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9750,
        9808
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3175": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3176": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9725,
        9729
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3177": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9851
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3178": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9851
      ],
      "op": "AND",
      "path": "24"
    },
    "3179": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9851
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3180": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9869
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40550A1C"
    },
    "3185": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9869
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3191": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3193": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3194": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3195": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3196": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "SUB",
      "path": "24"
    },
    "3197": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3198": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP7",
      "path": "24"
    },
    "3199": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "GAS",
      "path": "24"
    },
    "3200": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "3201": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3202": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3203": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3204": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC91"
    },
    "3207": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3208": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3209": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3211": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3212": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3213": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3214": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3216": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3217": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3218": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "POP",
      "path": "24"
    },
    "3219": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "POP",
      "path": "24"
    },
    "3220": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "POP",
      "path": "24"
    },
    "3221": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "POP",
      "path": "24"
    },
    "3222": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3224": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3225": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3226": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "3228": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "NOT",
      "path": "24"
    },
    "3229": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "3231": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3232": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "ADD",
      "path": "24"
    },
    "3233": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "AND",
      "path": "24"
    },
    "3234": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3235": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "ADD",
      "path": "24"
    },
    "3236": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3237": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3239": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3240": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "POP",
      "path": "24"
    },
    "3241": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3242": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "ADD",
      "path": "24"
    },
    "3243": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3244": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCB5"
    },
    "3247": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3248": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3249": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F98"
    },
    "3252": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9834,
        9887
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3253": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9834,
        9887
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3254": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 36,
      "value": "0x40"
    },
    "3256": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3257": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3258": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "ADD",
      "path": "24"
    },
    "3259": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3260": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9818,
        9887
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3261": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9818,
        9887
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "3262": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3263": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9915,
        9939
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3266": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9636,
        9947
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        9636,
        9947
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3271": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3272": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3274": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x37"
    },
    "3276": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3277": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3278": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x624"
    },
    "3281": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3282": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA6"
    },
    "3285": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3286": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3287": {
      "offset": [
        1715,
        1732
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "3289": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1715,
        1732
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3290": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3934,
        3941
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3292": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3934,
        3941
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "op": "SUB"
    },
    "3301": {
      "offset": [
        1715,
        1732
      ],
      "op": "AND",
      "path": "24"
    },
    "3302": {
      "offset": [
        1693,
        1703
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3303": {
      "offset": [
        1693,
        1733
      ],
      "op": "EQ",
      "path": "24"
    },
    "3304": {
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD03"
    },
    "3307": {
      "offset": [
        1672,
        1797
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3308": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3310": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "offset": [
        1672,
        1797
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3319": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3320": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3322": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "ADD",
      "path": "24"
    },
    "3323": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "3326": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3327": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1FBA"
    },
    "3330": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        1672,
        1797
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3331": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1672,
        1797
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3332": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4011
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3334": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3335": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3336": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3337": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4018
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "3339": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3341": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3342": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3343": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3344": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3346": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3347": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3348": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3349": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3350": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3351": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3352": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3353": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3355": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "3356": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3357": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MUL",
      "path": "24"
    },
    "3358": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3359": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3360": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3361": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3362": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3363": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3364": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3365": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3366": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3367": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3368": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3369": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3370": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3371": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3372": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3373": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3374": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3375": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3376": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3377": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3378": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3379": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3380": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3381": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4014,
        4027
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3382": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3383": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3384": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3385": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD61"
    },
    "3388": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3389": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3391": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MUL",
      "path": "24"
    },
    "3392": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3393": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3394": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3395": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3396": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3398": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3399": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3401": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3403": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3404": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3405": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3406": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3407": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3408": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3409": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3410": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3412": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3413": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3414": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3416": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3417": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3418": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3419": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3420": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "GT",
      "path": "24"
    },
    "3421": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD4D"
    },
    "3424": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3425": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3426": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3427": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3428": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3429": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3430": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3431": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3432": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3433": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3435": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3436": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3438": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3439": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "ADD",
      "path": "24"
    },
    "3440": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3441": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3442": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3443": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3444": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3445": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3446": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3997,
        4027
      ],
      "op": "POP",
      "path": "24"
    },
    "3447": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4105,
        4108
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3448": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4105,
        4116
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3450": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4105,
        4116
      ],
      "op": "ADD",
      "path": "24"
    },
    "3451": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4105,
        4116
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3452": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4120,
        4121
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3454": {
      "branch": 117,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4105,
        4121
      ],
      "op": "SUB",
      "path": "24"
    },
    "3455": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4101,
        4222
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDD3"
    },
    "3458": {
      "branch": 117,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4101,
        4222
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3459": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4147
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 38,
      "value": "0x71"
    },
    "3461": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3462": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3463": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3464": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4147
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3466": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD92"
    },
    "3469": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3470": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2000"
    },
    "3473": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4137,
        4149
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3474": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3475": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3476": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3477": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4137,
        4149
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3478": {
      "op": "POP"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 39,
      "value": "0x40"
    },
    "3482": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3483": {
      "op": "DUP4"
    },
    "3484": {
      "op": "DUP2"
    },
    "3485": {
      "op": "MSTORE"
    },
    "3486": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x2E1F6517128566F835909F0690741169A982D9B764725BEDE26FB30567F5A070"
    },
    "3519": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3525": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3526": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3527": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3528": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "SUB",
      "path": "24"
    },
    "3529": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3530": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4168,
        4189
      ],
      "op": "LOG1",
      "path": "24"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4210,
        4211
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 40,
      "value": "0x0"
    },
    "3534": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4210,
        4211
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3535": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "op": "POP"
    },
    "3538": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3539": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4101,
        4222
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3540": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3542": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3543": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3544": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "ADD",
      "path": "24"
    },
    "3545": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3546": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4232,
        4251
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3548": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "DUP6",
      "path": "24",
      "statement": 41
    },
    "3549": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3550": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3551": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4286
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "3553": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3554": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3555": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3556": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3558": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3559": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3560": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3561": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4254,
        4265
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3562": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDF3"
    },
    "3565": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4282,
        4295
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3566": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4232,
        4251
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3567": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B0C"
    },
    "3570": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4275,
        4295
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3571": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3572": {
      "op": "POP"
    },
    "3573": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3575": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3577": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3578": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3579": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3580": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "ADD",
      "path": "24"
    },
    "3581": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4275,
        4295
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3582": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 42,
      "value": "0x40"
    },
    "3584": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3585": {
      "op": "DUP5"
    },
    "3586": {
      "op": "DUP2"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x2E1F6517128566F835909F0690741169A982D9B764725BEDE26FB30567F5A070"
    },
    "3621": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3624": {
      "op": "ADD"
    },
    "3625": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3627": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3628": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3629": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3630": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "SUB",
      "path": "24"
    },
    "3631": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3632": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4310,
        4331
      ],
      "op": "LOG1",
      "path": "24"
    },
    "3633": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4348,
        4359
      ],
      "op": "SWAP2",
      "path": "24",
      "statement": 43
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "op": "POP"
    },
    "3636": {
      "offset": [
        1807,
        1808
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3637": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3638": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3639": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        3842,
        4366
      ],
      "op": "POP",
      "path": "24"
    },
    "3640": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        3842,
        4366
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3641": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10660,
        10944
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3642": {
      "offset": [
        1879,
        1889
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "3644": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1879,
        1889
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "op": "SUB"
    },
    "3653": {
      "offset": [
        1879,
        1889
      ],
      "op": "AND",
      "path": "24"
    },
    "3654": {
      "offset": [
        1865,
        1875
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3655": {
      "offset": [
        1865,
        1889
      ],
      "op": "EQ",
      "path": "24"
    },
    "3656": {
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE63"
    },
    "3659": {
      "offset": [
        1857,
        1925
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3660": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3662": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "offset": [
        1857,
        1925
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3671": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3672": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3674": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "ADD",
      "path": "24"
    },
    "3675": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "3678": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3679": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2019"
    },
    "3682": {
      "fn": "SmartnodesCore.doubleStateTime",
      "jump": "i",
      "offset": [
        1857,
        1925
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3683": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3684": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10737,
        10738
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 44,
      "value": "0x2"
    },
    "3686": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10733
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "3688": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10733
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3690": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3691": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3692": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3693": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE76"
    },
    "3696": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3697": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3698": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2050"
    },
    "3701": {
      "fn": "SmartnodesCore.doubleStateTime",
      "jump": "i",
      "offset": [
        10721,
        10738
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3702": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3703": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3704": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "POP",
      "path": "24"
    },
    "3705": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "POP",
      "path": "24"
    },
    "3706": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3707": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3708": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3709": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10721,
        10738
      ],
      "op": "POP",
      "path": "24"
    },
    "3710": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10764,
        10765
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 45,
      "value": "0x2"
    },
    "3712": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10760
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "3714": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10760
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3716": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3717": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3718": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3719": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE90"
    },
    "3722": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3723": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3724": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2050"
    },
    "3727": {
      "fn": "SmartnodesCore.doubleStateTime",
      "jump": "i",
      "offset": [
        10748,
        10765
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3728": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3729": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3730": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "POP",
      "path": "24"
    },
    "3731": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "POP",
      "path": "24"
    },
    "3732": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3733": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3734": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3735": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10748,
        10765
      ],
      "op": "POP",
      "path": "24"
    },
    "3736": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10792,
        10793
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 46,
      "value": "0x2"
    },
    "3738": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10788
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "3740": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10788
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3742": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3743": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3744": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3745": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEAA"
    },
    "3748": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3749": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3750": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "3753": {
      "fn": "SmartnodesCore.doubleStateTime",
      "jump": "i",
      "offset": [
        10775,
        10793
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3754": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3755": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3756": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3757": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10775,
        10793
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 47,
      "value": "0x65"
    },
    "3762": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3763": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3765": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3766": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3767": {
      "op": "PUSH4",
      "value": "0x738E7197"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3774": {
      "op": "SHL"
    },
    "3775": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3776": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3777": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3778": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "SUB"
    },
    "3787": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3788": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3789": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "AND",
      "path": "24"
    },
    "3790": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3791": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10886
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xE71CE32E"
    },
    "3796": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10886
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3797": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3799": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3800": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3801": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "ADD",
      "path": "24"
    },
    "3802": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3803": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3805": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3806": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3807": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3808": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3809": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3810": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3811": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "SUB",
      "path": "24"
    },
    "3812": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "ADD",
      "path": "24"
    },
    "3813": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3814": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3815": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10873
      ],
      "op": "DUP8",
      "path": "24"
    },
    "3816": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3817": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "3818": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3819": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3820": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3821": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEF5"
    },
    "3824": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3825": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3827": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3828": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3829": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3830": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "POP",
      "path": "24"
    },
    "3831": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "GAS",
      "path": "24"
    },
    "3832": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "CALL",
      "path": "24"
    },
    "3833": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3834": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3835": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3836": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF09"
    },
    "3839": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3840": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3841": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3843": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3844": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3845": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3846": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3848": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3849": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3850": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "POP",
      "path": "24"
    },
    "3851": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "POP",
      "path": "24"
    },
    "3852": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "POP",
      "path": "24"
    },
    "3853": {
      "fn": "SmartnodesCore.doubleStateTime",
      "offset": [
        10856,
        10888
      ],
      "op": "POP",
      "path": "24"
    },
    "3854": {
      "fn": "SmartnodesCore.doubleStateTime",
      "jump": "o",
      "offset": [
        10660,
        10944
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3855": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3856": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3858": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3859": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3862": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3863": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "3864": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3866": {
      "branch": 134,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "3867": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2A"
    },
    "3870": {
      "branch": 134,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3871": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3873": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3874": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3876": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "3877": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3878": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2E"
    },
    "3881": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3882": {
      "branch": 135,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3883": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 48
    },
    "3884": {
      "op": "EXTCODESIZE"
    },
    "3885": {
      "op": "ISZERO"
    },
    "3886": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3887": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF91"
    },
    "3890": {
      "branch": 135,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3891": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3893": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3902": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3905": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3907": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3908": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3909": {
      "op": "MSTORE"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "op": "MSTORE"
    },
    "3955": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3972": {
      "op": "SHL"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3975": {
      "op": "DUP3"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x734"
    },
    "3984": {
      "op": "JUMP"
    },
    "3985": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3986": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3988": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3989": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3992": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3993": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "3994": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3996": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "3997": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3998": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3999": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4000": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB3"
    },
    "4003": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4004": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4006": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4007": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4008": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4011": {
      "op": "NOT"
    },
    "4012": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "4013": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "4016": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "4017": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4018": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4019": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4020": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 49,
      "value": "0xFFA"
    },
    "4023": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4025": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4026": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4027": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4029": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "ADD",
      "path": "24"
    },
    "4030": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4032": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4033": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4034": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "4036": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4037": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4038": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4040": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "ADD",
      "path": "24"
    },
    "4041": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4054": {
      "op": "SHL"
    },
    "4055": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4056": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4057": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "POP",
      "path": "24"
    },
    "4058": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4060": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4061": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4062": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4064": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "ADD",
      "path": "24"
    },
    "4065": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4067": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4068": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4069": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4071": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4072": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4073": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4075": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "ADD",
      "path": "24"
    },
    "4076": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4082": {
      "op": "SHL"
    },
    "4083": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4084": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4085": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "POP",
      "path": "24"
    },
    "4086": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2042
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A96"
    },
    "4089": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2030,
        2063
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4090": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2030,
        2063
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4091": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2083
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 50,
      "value": "0x66"
    },
    "4093": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4094": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4101": {
      "op": "SHL"
    },
    "4102": {
      "op": "SUB"
    },
    "4103": {
      "op": "NOT"
    },
    "4104": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "AND",
      "path": "24"
    },
    "4105": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2086,
        2096
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4106": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "OR",
      "path": "24"
    },
    "4107": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4108": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4109": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2121,
        2128
      ],
      "op": "PUSH9",
      "path": "24",
      "statement": 51,
      "value": "0x3782DACE9D90000000"
    },
    "4119": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2106,
        2118
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4121": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2106,
        2128
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4122": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2151,
        2161
      ],
      "op": "PUSH10",
      "path": "24",
      "statement": 52,
      "value": "0x54B40B1F852BDA000000"
    },
    "4133": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2138,
        2148
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "4135": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2138,
        2161
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4136": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2187,
        2191
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 53,
      "value": "0x2226"
    },
    "4139": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2171,
        2184
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "4141": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2171,
        2191
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4142": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2083
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4144": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2255,
        2277
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 54,
      "value": "0x6B"
    },
    "4146": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2255,
        2281
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4147": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2255,
        2281
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4148": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2255,
        2281
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4149": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2306,
        2315
      ],
      "op": "PUSH3",
      "path": "24",
      "statement": 55,
      "value": "0x127500"
    },
    "4153": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2291,
        2303
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "4155": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2291,
        2315
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4156": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2073,
        2096
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "4158": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2350,
        2360
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 56,
      "value": "0x71"
    },
    "4160": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2350,
        2364
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4161": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2350,
        2364
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4162": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2350,
        2364
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4163": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2390
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 57,
      "value": "0x72"
    },
    "4165": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4166": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4167": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "4171": {
      "op": "NOT"
    },
    "4172": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "AND",
      "path": "24"
    },
    "4173": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4174": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "OR",
      "path": "24"
    },
    "4175": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4176": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2374,
        2394
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4177": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2404,
        2415
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 58,
      "value": "0x73"
    },
    "4179": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2404,
        2419
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4180": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4181": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2451,
        2464
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4182": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2451,
        2471
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4183": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2447,
        2448
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4184": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2447,
        2471
      ],
      "op": "LT",
      "path": "24"
    },
    "4185": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4186": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x108A"
    },
    "4189": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4190": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2492,
        2527
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 59,
      "value": "0x1082"
    },
    "4193": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2511
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4194": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2512,
        2513
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4195": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4196": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4197": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4198": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "LT",
      "path": "24"
    },
    "4199": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1072"
    },
    "4202": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4203": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1072"
    },
    "4206": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2089"
    },
    "4209": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4210": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4211": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4213": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "MUL",
      "path": "24"
    },
    "4214": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4216": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "ADD",
      "path": "24"
    },
    "4217": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "ADD",
      "path": "24"
    },
    "4218": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2514
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4219": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2516,
        2526
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "4221": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2516,
        2526
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4222": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2492,
        2497
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1835"
    },
    "4225": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2492,
        2527
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4226": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2492,
        2527
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4227": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2473,
        2476
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 60,
      "value": "0x1"
    },
    "4229": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2473,
        2476
      ],
      "op": "ADD",
      "path": "24"
    },
    "4230": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1054"
    },
    "4233": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4234": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4235": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2430,
        2538
      ],
      "op": "POP",
      "path": "24"
    },
    "4236": {
      "offset": [
        2649,
        2663
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4237": {
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4238": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC09"
    },
    "4241": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4242": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4244": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4245": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4246": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4249": {
      "op": "NOT"
    },
    "4250": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "4251": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4252": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4253": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "4254": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1949,
        2544
      ],
      "op": "POP",
      "path": "24"
    },
    "4255": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        1949,
        2544
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4256": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4257": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4258": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4260": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4261": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4262": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4263": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "4265": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4267": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4268": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4269": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4270": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4272": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4273": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4274": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "op": "SUB"
    },
    "4283": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4284": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "4285": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4286": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4287": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4288": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4289": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4290": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4291": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4292": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4293": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4294": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4295": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4296": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 61
    },
    "4297": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4298": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "4299": {
      "branch": 125,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4300": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1125"
    },
    "4303": {
      "branch": 125,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4304": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4306": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4313": {
      "op": "SHL"
    },
    "4314": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4315": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4318": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4320": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4321": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4327": {
      "op": "DUP3"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "op": "MSTORE"
    },
    "4330": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4365": {
      "op": "DUP3"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "op": "MSTORE"
    },
    "4368": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4379": {
      "op": "DUP3"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "MSTORE"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "4388": {
      "op": "JUMP"
    },
    "4389": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4390": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x6DA"
    },
    "4393": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4394": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4395": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4396": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4397": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "4398": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B7"
    },
    "4401": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4402": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4403": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4405": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4406": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 63,
      "value": "0x6B5"
    },
    "4409": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4410": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4411": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4412": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1667"
    },
    "4415": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4416": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        10950,
        11052
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4417": {
      "offset": [
        1879,
        1889
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "4419": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1879,
        1889
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4426": {
      "op": "SHL"
    },
    "4427": {
      "op": "SUB"
    },
    "4428": {
      "offset": [
        1879,
        1889
      ],
      "op": "AND",
      "path": "24"
    },
    "4429": {
      "offset": [
        1865,
        1875
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4430": {
      "offset": [
        1865,
        1889
      ],
      "op": "EQ",
      "path": "24"
    },
    "4431": {
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116A"
    },
    "4434": {
      "offset": [
        1857,
        1925
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4435": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4437": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4444": {
      "op": "SHL"
    },
    "4445": {
      "offset": [
        1857,
        1925
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4446": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4447": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4449": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "ADD",
      "path": "24"
    },
    "4450": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "4453": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4454": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2019"
    },
    "4457": {
      "fn": "SmartnodesCore.changeLockAmount",
      "jump": "i",
      "offset": [
        1857,
        1925
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4458": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        1857,
        1925
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4459": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        11026,
        11036
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 64,
      "value": "0x69"
    },
    "4461": {
      "fn": "SmartnodesCore.changeLockAmount",
      "offset": [
        11026,
        11045
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4462": {
      "fn": "SmartnodesCore.changeLockAmount",
      "jump": "o",
      "offset": [
        10950,
        11052
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4463": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        9953,
        10221
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4464": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10058,
        10075
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 65,
      "value": "0x65"
    },
    "4466": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10058,
        10075
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4473": {
      "op": "SHL"
    },
    "4474": {
      "op": "SUB"
    },
    "4475": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10058,
        10075
      ],
      "op": "AND",
      "path": "24"
    },
    "4476": {
      "branch": 118,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10050,
        10090
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4477": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11C8"
    },
    "4480": {
      "branch": 118,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4481": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4483": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4490": {
      "op": "SHL"
    },
    "4491": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4492": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4495": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4497": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4498": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "ADD",
      "path": "24"
    },
    "4499": {
      "op": "MSTORE"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4504": {
      "op": "DUP3"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "MSTORE"
    },
    "4507": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4542": {
      "op": "DUP3"
    },
    "4543": {
      "op": "ADD"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "4551": {
      "op": "JUMP"
    },
    "4552": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10029,
        10146
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4553": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10173
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 66,
      "value": "0x65"
    },
    "4555": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4556": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "SUB"
    },
    "4565": {
      "op": "NOT"
    },
    "4566": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "AND",
      "path": "24"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4573": {
      "op": "SHL"
    },
    "4574": {
      "op": "SUB"
    },
    "4575": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4576": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4577": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4578": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "AND",
      "path": "24"
    },
    "4579": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4580": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4581": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4582": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "OR",
      "path": "24"
    },
    "4583": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4584": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        10156,
        10214
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4585": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        9953,
        10221
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4586": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4587": {
      "offset": [
        1715,
        1732
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "4589": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1715,
        1732
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4596": {
      "op": "SHL"
    },
    "4597": {
      "op": "SUB"
    },
    "4598": {
      "offset": [
        1715,
        1732
      ],
      "op": "AND",
      "path": "24"
    },
    "4599": {
      "offset": [
        1693,
        1703
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4600": {
      "offset": [
        1693,
        1733
      ],
      "op": "EQ",
      "path": "24"
    },
    "4601": {
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1214"
    },
    "4604": {
      "offset": [
        1672,
        1797
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4605": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4607": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4614": {
      "op": "SHL"
    },
    "4615": {
      "offset": [
        1672,
        1797
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4616": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4617": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4619": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "ADD",
      "path": "24"
    },
    "4620": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "4623": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4624": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1FBA"
    },
    "4627": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        1672,
        1797
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4628": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        1672,
        1797
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4629": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4761,
        4774
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "4631": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4761,
        4774
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4632": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4735,
        4757
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "4634": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4735,
        4757
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4635": {
      "branch": 119,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4735,
        4774
      ],
      "op": "LT",
      "path": "24"
    },
    "4636": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4731,
        4959
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1244"
    },
    "4639": {
      "branch": 119,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4731,
        4959
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4640": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4885,
        4897
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "4642": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4885,
        4897
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4643": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4870,
        4882
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4645": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4870,
        4882
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4646": {
      "branch": 120,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4870,
        4897
      ],
      "op": "GT",
      "path": "24"
    },
    "4647": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4866,
        4949
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4648": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4866,
        4949
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1244"
    },
    "4651": {
      "branch": 120,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4866,
        4949
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4652": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4933,
        4934
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 67,
      "value": "0x2"
    },
    "4654": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4929
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4656": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4929
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4658": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4659": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4660": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4661": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x123E"
    },
    "4664": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4665": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4666": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "4669": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        4917,
        4934
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4670": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4671": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4672": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4673": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4917,
        4934
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4674": {
      "op": "POP"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4866,
        4949
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4677": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5041,
        5064
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4679": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5074,
        5094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4680": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5109,
        5117
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4681": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5109,
        5124
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4682": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5128,
        5129
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4684": {
      "branch": 121,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5109,
        5129
      ],
      "op": "SUB",
      "path": "24"
    },
    "4685": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5105,
        5405
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1269"
    },
    "4688": {
      "branch": 121,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5105,
        5405
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4689": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5178,
        5194
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 68
    },
    "4690": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5175
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4692": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5175
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4693": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5194
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x125E"
    },
    "4696": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5194
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4697": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5194
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4698": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5194
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "4701": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5163,
        5194
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4702": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5163,
        5194
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4703": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5145,
        5194
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4704": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5145,
        5194
      ],
      "op": "POP",
      "path": "24"
    },
    "4705": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5223,
        5224
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 69,
      "value": "0x0"
    },
    "4707": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5208,
        5224
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4708": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5208,
        5224
      ],
      "op": "POP",
      "path": "24"
    },
    "4709": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5105,
        5405
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12B8"
    },
    "4712": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5105,
        5405
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4713": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5105,
        5405
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4714": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5316,
        5319
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 70,
      "value": "0x64"
    },
    "4716": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5290,
        5306
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4717": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5287
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4719": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5287
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4720": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5306
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1279"
    },
    "4723": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5306
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4724": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5306
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4725": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5306
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "4728": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5275,
        5306
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4729": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5275,
        5306
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4730": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5274,
        5312
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1284"
    },
    "4733": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5274,
        5312
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4734": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5310,
        5312
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x14"
    },
    "4736": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5274,
        5312
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2050"
    },
    "4739": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5274,
        5312
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4740": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5274,
        5312
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4741": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5273,
        5319
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x128E"
    },
    "4744": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5273,
        5319
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4745": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5273,
        5319
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4746": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5273,
        5319
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "4749": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5273,
        5319
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4750": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5273,
        5319
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4751": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5255,
        5319
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4752": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5255,
        5319
      ],
      "op": "POP",
      "path": "24"
    },
    "4753": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5391,
        5394
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 71,
      "value": "0x64"
    },
    "4755": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5365,
        5381
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4756": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5362
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4758": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5362
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4759": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5381
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12A0"
    },
    "4762": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5381
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4763": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5381
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4764": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5381
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "4767": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5350,
        5381
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4768": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5350,
        5381
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4769": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5349,
        5387
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12AB"
    },
    "4772": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5349,
        5387
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4773": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5385,
        5387
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x50"
    },
    "4775": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5349,
        5387
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2050"
    },
    "4778": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5349,
        5387
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4779": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5349,
        5387
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4780": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5348,
        5394
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12B5"
    },
    "4783": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5348,
        5394
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4784": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5348,
        5394
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4785": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5348,
        5394
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "4788": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5348,
        5394
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4789": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5348,
        5394
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4790": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5333,
        5394
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4791": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5333,
        5394
      ],
      "op": "POP",
      "path": "24"
    },
    "4792": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5105,
        5405
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4793": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5451,
        5473
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4795": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5494,
        5510
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4796": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5494,
        5517
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4797": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5476,
        5491
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4798": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5476,
        5517
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12C7"
    },
    "4801": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5476,
        5517
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4802": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5476,
        5517
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4803": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5476,
        5517
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "4806": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5476,
        5517
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4807": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5476,
        5517
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4808": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5451,
        5517
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4809": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5451,
        5517
      ],
      "op": "POP",
      "path": "24"
    },
    "4810": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5532,
        5541
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4812": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4813": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5551,
        5567
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4814": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5551,
        5574
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4815": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5547,
        5548
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4816": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5547,
        5574
      ],
      "op": "LT",
      "path": "24"
    },
    "4817": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4818": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1336"
    },
    "4821": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4822": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5595,
        5612
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4824": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5631
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4825": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5632,
        5633
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4826": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4827": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4828": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4829": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "LT",
      "path": "24"
    },
    "4830": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12E9"
    },
    "4833": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4834": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12E9"
    },
    "4837": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2089"
    },
    "4840": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5615,
        5634
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4841": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4842": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4844": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "MUL",
      "path": "24"
    },
    "4845": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4847": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "ADD",
      "path": "24"
    },
    "4848": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "ADD",
      "path": "24"
    },
    "4849": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5615,
        5634
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4850": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5595,
        5634
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4851": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5595,
        5634
      ],
      "op": "POP",
      "path": "24"
    },
    "4852": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5679,
        5693
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 72
    },
    "4853": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5664
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "4855": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4857": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5665,
        5674
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4864": {
      "op": "SHL"
    },
    "4865": {
      "op": "SUB"
    },
    "4866": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "AND",
      "path": "24"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4873": {
      "op": "SHL"
    },
    "4874": {
      "op": "SUB"
    },
    "4875": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "AND",
      "path": "24"
    },
    "4876": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4877": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4878": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4880": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "ADD",
      "path": "24"
    },
    "4881": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4882": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4883": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4884": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4886": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "ADD",
      "path": "24"
    },
    "4887": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4889": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4890": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5675
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4892": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4893": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4894": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4895": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1328"
    },
    "4898": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4899": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4900": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "4903": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5648,
        5693
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4904": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4905": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4906": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4907": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5648,
        5693
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4908": {
      "op": "POP"
    },
    "4909": {
      "op": "POP"
    },
    "4910": {
      "op": "POP"
    },
    "4911": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5576,
        5579
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 73,
      "value": "0x1"
    },
    "4913": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5576,
        5579
      ],
      "op": "ADD",
      "path": "24"
    },
    "4914": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12CC"
    },
    "4917": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4918": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5527,
        5704
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5751,
        5766
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4921": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5751,
        5766
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4922": {
      "branch": 122,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5751,
        5770
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4923": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5747,
        6019
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13DC"
    },
    "4926": {
      "branch": 122,
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5747,
        6019
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4927": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5791,
        5800
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4929": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4930": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5810,
        5818
      ],
      "op": "DUP9",
      "path": "24"
    },
    "4931": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5810,
        5825
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4932": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5806,
        5807
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4933": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5806,
        5825
      ],
      "op": "LT",
      "path": "24"
    },
    "4934": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4935": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13DA"
    },
    "4938": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4939": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5850,
        5864
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4941": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5922,
        5936
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4942": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5886,
        5898
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4943": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5880
      ],
      "op": "DUP11",
      "path": "24"
    },
    "4944": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5881,
        5882
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4945": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4946": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4947": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4948": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "LT",
      "path": "24"
    },
    "4949": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1360"
    },
    "4952": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4953": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1360"
    },
    "4956": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2089"
    },
    "4959": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5869,
        5883
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4960": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4961": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4963": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "MUL",
      "path": "24"
    },
    "4964": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4966": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "ADD",
      "path": "24"
    },
    "4967": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "ADD",
      "path": "24"
    },
    "4968": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5883
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4969": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5898
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1372"
    },
    "4972": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5898
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4973": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5898
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4974": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5898
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2050"
    },
    "4977": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5869,
        5898
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4978": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5869,
        5898
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4979": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5868,
        5936
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x137C"
    },
    "4982": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5868,
        5936
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4983": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5868,
        5936
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4984": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5868,
        5936
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "4987": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5868,
        5936
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4988": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5868,
        5936
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4989": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5850,
        5937
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4990": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5850,
        5937
      ],
      "op": "POP",
      "path": "24"
    },
    "4991": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5988,
        5994
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 74
    },
    "4992": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5971
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "4994": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4996": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5980
      ],
      "op": "DUP13",
      "path": "24"
    },
    "4997": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5981,
        5982
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4998": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4999": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5000": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5001": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "LT",
      "path": "24"
    },
    "5002": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1395"
    },
    "5005": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5006": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1395"
    },
    "5009": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2089"
    },
    "5012": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5972,
        5983
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5013": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5014": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5016": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "MUL",
      "path": "24"
    },
    "5017": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5019": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "ADD",
      "path": "24"
    },
    "5020": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "ADD",
      "path": "24"
    },
    "5021": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5972,
        5983
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5028": {
      "op": "SHL"
    },
    "5029": {
      "op": "SUB"
    },
    "5030": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "AND",
      "path": "24"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5037": {
      "op": "SHL"
    },
    "5038": {
      "op": "SUB"
    },
    "5039": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "AND",
      "path": "24"
    },
    "5040": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5041": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5042": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5044": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "ADD",
      "path": "24"
    },
    "5045": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5046": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5047": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5048": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5050": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "ADD",
      "path": "24"
    },
    "5051": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5053": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5054": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5056": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5057": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5058": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5059": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13CC"
    },
    "5062": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5063": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5064": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "5067": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        5955,
        5994
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5068": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5069": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5070": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5071": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5955,
        5994
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5072": {
      "op": "POP"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "op": "POP"
    },
    "5075": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5827,
        5830
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 75,
      "value": "0x1"
    },
    "5077": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5827,
        5830
      ],
      "op": "ADD",
      "path": "24"
    },
    "5078": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1341"
    },
    "5081": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5082": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5083": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5786,
        6009
      ],
      "op": "POP",
      "path": "24"
    },
    "5084": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        5747,
        6019
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5085": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 76,
      "value": "0x6B"
    },
    "5087": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5088": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5089": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5090": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6051
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5092": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13EC"
    },
    "5095": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5096": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2000"
    },
    "5099": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "i",
      "offset": [
        6029,
        6053
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5100": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5101": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5102": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5103": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "POP",
      "path": "24"
    },
    "5104": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5105": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        6029,
        6053
      ],
      "op": "POP",
      "path": "24"
    },
    "5106": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4721,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5107": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4721,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5108": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4721,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5109": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5110": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5111": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5112": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5113": {
      "fn": "SmartnodesCore.recordRewards",
      "offset": [
        4479,
        6060
      ],
      "op": "POP",
      "path": "24"
    },
    "5114": {
      "fn": "SmartnodesCore.recordRewards",
      "jump": "o",
      "offset": [
        4479,
        6060
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5115": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10227,
        10654
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5116": {
      "offset": [
        1879,
        1889
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "5118": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1879,
        1889
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5125": {
      "op": "SHL"
    },
    "5126": {
      "op": "SUB"
    },
    "5127": {
      "offset": [
        1879,
        1889
      ],
      "op": "AND",
      "path": "24"
    },
    "5128": {
      "offset": [
        1865,
        1875
      ],
      "op": "CALLER",
      "path": "24"
    },
    "5129": {
      "offset": [
        1865,
        1889
      ],
      "op": "EQ",
      "path": "24"
    },
    "5130": {
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1425"
    },
    "5133": {
      "offset": [
        1857,
        1925
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5134": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5136": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5137": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5143": {
      "op": "SHL"
    },
    "5144": {
      "offset": [
        1857,
        1925
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5145": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5146": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5148": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "ADD",
      "path": "24"
    },
    "5149": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "5152": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5153": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2019"
    },
    "5156": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        1857,
        1925
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5157": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1857,
        1925
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5158": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10448,
        10449
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 77,
      "value": "0x2"
    },
    "5160": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10444
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "5162": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10444
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5164": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5165": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5166": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5167": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1438"
    },
    "5170": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5171": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5172": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "5175": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        10432,
        10449
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5176": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5177": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5178": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "POP",
      "path": "24"
    },
    "5179": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "POP",
      "path": "24"
    },
    "5180": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5181": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5182": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5183": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10432,
        10449
      ],
      "op": "POP",
      "path": "24"
    },
    "5184": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10475,
        10476
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 78,
      "value": "0x2"
    },
    "5186": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10471
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "5188": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10471
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5190": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5191": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5192": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5193": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1452"
    },
    "5196": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5197": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5198": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2067"
    },
    "5201": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        10459,
        10476
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5202": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5203": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5204": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "POP",
      "path": "24"
    },
    "5205": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "POP",
      "path": "24"
    },
    "5206": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5207": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5208": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5209": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10459,
        10476
      ],
      "op": "POP",
      "path": "24"
    },
    "5210": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10503,
        10504
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 79,
      "value": "0x2"
    },
    "5212": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10499
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "5214": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10499
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5216": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5217": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5218": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5219": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x146C"
    },
    "5222": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5223": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5224": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2050"
    },
    "5227": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        10486,
        10504
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5228": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5229": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5230": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5231": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10486,
        10504
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5232": {
      "op": "POP"
    },
    "5233": {
      "op": "POP"
    },
    "5234": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 80,
      "value": "0x65"
    },
    "5236": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5237": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5239": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5240": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5241": {
      "op": "PUSH4",
      "value": "0x762193B9"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5248": {
      "op": "SHL"
    },
    "5249": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5250": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5251": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5252": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5259": {
      "op": "SHL"
    },
    "5260": {
      "op": "SUB"
    },
    "5261": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5262": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5263": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "AND",
      "path": "24"
    },
    "5264": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5265": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10596
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xEC432772"
    },
    "5270": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10596
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5271": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5273": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5274": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5275": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "ADD",
      "path": "24"
    },
    "5276": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5277": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5279": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5280": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5281": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5282": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5283": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5284": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5285": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "SUB",
      "path": "24"
    },
    "5286": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "ADD",
      "path": "24"
    },
    "5287": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5288": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5289": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10584
      ],
      "op": "DUP8",
      "path": "24"
    },
    "5290": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5291": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "5292": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5293": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5294": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5295": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEF5"
    },
    "5298": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5299": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5301": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5302": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        10567,
        10598
      ],
      "op": "REVERT",
      "path": "24"
    },
    "5303": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5310": {
      "op": "SHL"
    },
    "5311": {
      "op": "SUB"
    },
    "5312": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 81
    },
    "5313": {
      "branch": 126,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "5314": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1519"
    },
    "5317": {
      "branch": 126,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5318": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5320": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5327": {
      "op": "SHL"
    },
    "5328": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5329": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5332": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5334": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5335": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "5336": {
      "op": "MSTORE"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5339": {
      "op": "DUP1"
    },
    "5340": {
      "op": "DUP3"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "MSTORE"
    },
    "5343": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5378": {
      "op": "DUP3"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "MSTORE"
    },
    "5381": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5391": {
      "op": "DUP3"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "MSTORE"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5396": {
      "op": "ADD"
    },
    "5397": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "5400": {
      "op": "JUMP"
    },
    "5401": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "op": "SUB"
    },
    "5410": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 82
    },
    "5411": {
      "branch": 127,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "5412": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x157A"
    },
    "5415": {
      "branch": 127,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5416": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5418": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5425": {
      "op": "SHL"
    },
    "5426": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5427": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5430": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5432": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5433": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5439": {
      "op": "DUP3"
    },
    "5440": {
      "op": "ADD"
    },
    "5441": {
      "op": "MSTORE"
    },
    "5442": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5477": {
      "op": "DUP3"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "MSTORE"
    },
    "5480": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5488": {
      "op": "DUP3"
    },
    "5489": {
      "op": "ADD"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5493": {
      "op": "ADD"
    },
    "5494": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "5497": {
      "op": "JUMP"
    },
    "5498": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "op": "SUB"
    },
    "5507": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 83
    },
    "5508": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5509": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "5510": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5512": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5513": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5514": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5515": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5517": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5519": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5520": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5521": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5522": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5524": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5525": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5526": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5527": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5528": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5529": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "5530": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5531": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5532": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5533": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5534": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5535": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5536": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5537": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5538": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5539": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5540": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5541": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5542": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5543": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 84
    },
    "5544": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5545": {
      "op": "DUP5"
    },
    "5546": {
      "op": "DUP2"
    },
    "5547": {
      "op": "MSTORE"
    },
    "5548": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5581": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5585": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5586": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5587": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5588": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "5589": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5590": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5591": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "5592": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "5593": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "5594": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5595": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5602": {
      "op": "SHL"
    },
    "5603": {
      "op": "SUB"
    },
    "5604": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5605": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5606": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "5607": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5609": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5610": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5611": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5612": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5614": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5616": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5617": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5618": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5619": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5621": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5622": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5623": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5624": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5625": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5626": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "5627": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5628": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5629": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5630": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5631": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5632": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5633": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5636": {
      "op": "NOT"
    },
    "5637": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5638": {
      "branch": 128,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "5639": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF09"
    },
    "5642": {
      "branch": 128,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5643": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 85
    },
    "5644": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5645": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "5646": {
      "branch": 129,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5647": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165A"
    },
    "5650": {
      "branch": 129,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5651": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5653": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5660": {
      "op": "SHL"
    },
    "5661": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5662": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5665": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5667": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5668": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "5669": {
      "op": "MSTORE"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5674": {
      "op": "DUP3"
    },
    "5675": {
      "op": "ADD"
    },
    "5676": {
      "op": "MSTORE"
    },
    "5677": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5712": {
      "op": "DUP3"
    },
    "5713": {
      "op": "ADD"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "5721": {
      "op": "JUMP"
    },
    "5722": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5723": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 86,
      "value": "0xF09"
    },
    "5726": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5727": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5728": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5729": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5730": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "5731": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B7"
    },
    "5734": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5735": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5742": {
      "op": "SHL"
    },
    "5743": {
      "op": "SUB"
    },
    "5744": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 87
    },
    "5745": {
      "branch": 130,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "5746": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16CB"
    },
    "5749": {
      "branch": 130,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5750": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5752": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5759": {
      "op": "SHL"
    },
    "5760": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5761": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5764": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5766": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "5768": {
      "op": "MSTORE"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5773": {
      "op": "DUP3"
    },
    "5774": {
      "op": "ADD"
    },
    "5775": {
      "op": "MSTORE"
    },
    "5776": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5811": {
      "op": "DUP3"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "op": "MSTORE"
    },
    "5814": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5822": {
      "op": "SHL"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5825": {
      "op": "DUP3"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "MSTORE"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5830": {
      "op": "ADD"
    },
    "5831": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "5834": {
      "op": "JUMP"
    },
    "5835": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5842": {
      "op": "SHL"
    },
    "5843": {
      "op": "SUB"
    },
    "5844": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 88
    },
    "5845": {
      "branch": 131,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "5846": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172D"
    },
    "5849": {
      "branch": 131,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5850": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5852": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5859": {
      "op": "SHL"
    },
    "5860": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5861": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5864": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5866": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5867": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "5868": {
      "op": "MSTORE"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5873": {
      "op": "DUP3"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "MSTORE"
    },
    "5876": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5911": {
      "op": "DUP3"
    },
    "5912": {
      "op": "ADD"
    },
    "5913": {
      "op": "MSTORE"
    },
    "5914": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5920": {
      "op": "SHL"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5923": {
      "op": "DUP3"
    },
    "5924": {
      "op": "ADD"
    },
    "5925": {
      "op": "MSTORE"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5928": {
      "op": "ADD"
    },
    "5929": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "5932": {
      "op": "JUMP"
    },
    "5933": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5940": {
      "op": "SHL"
    },
    "5941": {
      "op": "SUB"
    },
    "5942": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5943": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "5944": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5946": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5947": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5948": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5949": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "5951": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5953": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5954": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5956": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5957": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5958": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5959": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 89
    },
    "5960": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5961": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "5962": {
      "branch": 132,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5963": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A5"
    },
    "5966": {
      "branch": 132,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5967": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5969": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5970": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5976": {
      "op": "SHL"
    },
    "5977": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5978": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5981": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5983": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5984": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "5985": {
      "op": "MSTORE"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5990": {
      "op": "DUP3"
    },
    "5991": {
      "op": "ADD"
    },
    "5992": {
      "op": "MSTORE"
    },
    "5993": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6028": {
      "op": "DUP3"
    },
    "6029": {
      "op": "ADD"
    },
    "6030": {
      "op": "MSTORE"
    },
    "6031": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6040": {
      "op": "SHL"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6043": {
      "op": "DUP3"
    },
    "6044": {
      "op": "ADD"
    },
    "6045": {
      "op": "MSTORE"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6048": {
      "op": "ADD"
    },
    "6049": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "6052": {
      "op": "JUMP"
    },
    "6053": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6060": {
      "op": "SHL"
    },
    "6061": {
      "op": "SUB"
    },
    "6062": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 90
    },
    "6063": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6064": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "6065": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6067": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6068": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6069": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6070": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "6072": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6074": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6075": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6077": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6078": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6079": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6080": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6081": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6082": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "6083": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6084": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6085": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 91
    },
    "6086": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6087": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "6088": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6089": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6090": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6091": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6092": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6093": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6094": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6095": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6096": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6097": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6098": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17DC"
    },
    "6101": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6102": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6103": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6104": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0F"
    },
    "6107": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6108": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6109": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6110": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "6111": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "6112": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6113": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6114": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6115": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "6116": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 92
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6123": {
      "op": "SHL"
    },
    "6124": {
      "op": "SUB"
    },
    "6125": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "6126": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6133": {
      "op": "SHL"
    },
    "6134": {
      "op": "SUB"
    },
    "6135": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "6136": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6169": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6170": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6172": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6173": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1828"
    },
    "6176": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6177": {
      "op": "DUP2"
    },
    "6178": {
      "op": "MSTORE"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6181": {
      "op": "ADD"
    },
    "6182": {
      "op": "SWAP1"
    },
    "6183": {
      "op": "JUMP"
    },
    "6184": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6185": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6187": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6188": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6189": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6190": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "6191": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6192": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6193": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 93,
      "value": "0xF09"
    },
    "6196": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12132,
        12253
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6197": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6204": {
      "op": "SHL"
    },
    "6205": {
      "op": "SUB"
    },
    "6206": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 94
    },
    "6207": {
      "branch": 133,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "6208": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188B"
    },
    "6211": {
      "branch": 133,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6212": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6214": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6221": {
      "op": "SHL"
    },
    "6222": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6223": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6226": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6228": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6229": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "6230": {
      "op": "MSTORE"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6235": {
      "op": "DUP3"
    },
    "6236": {
      "op": "ADD"
    },
    "6237": {
      "op": "MSTORE"
    },
    "6238": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6273": {
      "op": "DUP3"
    },
    "6274": {
      "op": "ADD"
    },
    "6275": {
      "op": "MSTORE"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6278": {
      "op": "ADD"
    },
    "6279": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x734"
    },
    "6282": {
      "op": "JUMP"
    },
    "6283": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6284": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 95
    },
    "6285": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "6287": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6289": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6290": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6291": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6292": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189D"
    },
    "6295": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6296": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6297": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0F"
    },
    "6300": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6301": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6302": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6303": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6304": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "op": "POP"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6313": {
      "op": "SHL"
    },
    "6314": {
      "op": "SUB"
    },
    "6315": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 96
    },
    "6316": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "6317": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6319": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6320": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6321": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6322": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "6324": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6326": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6327": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6329": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6330": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6331": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6332": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6333": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6334": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6335": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6336": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18CA"
    },
    "6339": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6340": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6341": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6342": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0F"
    },
    "6345": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6346": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6347": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6348": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6349": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6350": {
      "op": "POP"
    },
    "6351": {
      "op": "POP"
    },
    "6352": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 97,
      "value": "0x40"
    },
    "6354": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6355": {
      "op": "DUP2"
    },
    "6356": {
      "op": "DUP2"
    },
    "6357": {
      "op": "MSTORE"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6364": {
      "op": "SHL"
    },
    "6365": {
      "op": "SUB"
    },
    "6366": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6367": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "6368": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6369": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6371": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6405": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6408": {
      "op": "ADD"
    },
    "6409": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6411": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6412": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6413": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6414": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "6415": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6416": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6417": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7167,
        8508
      ],
      "op": "POP",
      "path": "24"
    },
    "6418": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7120,
        8508
      ],
      "op": "POP",
      "path": "24"
    },
    "6419": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7120,
        8508
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6420": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6507,
        7015
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6421": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6596,
        6597
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 98,
      "value": "0x0"
    },
    "6423": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6587,
        6593
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6424": {
      "branch": 123,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6587,
        6597
      ],
      "op": "GT",
      "path": "24"
    },
    "6425": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1934"
    },
    "6428": {
      "branch": 123,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6429": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6431": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6438": {
      "op": "SHL"
    },
    "6439": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6440": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6441": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6443": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "ADD",
      "path": "24"
    },
    "6444": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "6447": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6448": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F44"
    },
    "6451": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6579,
        6635
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6452": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6579,
        6635
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6453": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6674,
        6680
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 99
    },
    "6454": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6653,
        6670
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1954"
    },
    "6457": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6663,
        6669
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6464": {
      "op": "SHL"
    },
    "6465": {
      "op": "SUB"
    },
    "6466": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "6467": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6469": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6470": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6471": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6472": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "6474": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6476": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6477": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6479": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6480": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6481": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6482": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6483": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6484": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6653,
        6670
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6485": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6653,
        6680
      ],
      "op": "LT",
      "path": "24"
    },
    "6486": {
      "branch": 124,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6653,
        6680
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "6487": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x199A"
    },
    "6490": {
      "branch": 124,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6491": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6493": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6500": {
      "op": "SHL"
    },
    "6501": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6502": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6505": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6507": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6508": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "ADD",
      "path": "24"
    },
    "6509": {
      "op": "MSTORE"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "ADD"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "6541": {
      "op": "SHL"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6544": {
      "op": "DUP3"
    },
    "6545": {
      "op": "ADD"
    },
    "6546": {
      "op": "MSTORE"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6549": {
      "op": "ADD"
    },
    "6550": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "6553": {
      "op": "JUMP"
    },
    "6554": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6645,
        6706
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6561": {
      "op": "SHL"
    },
    "6562": {
      "op": "SUB"
    },
    "6563": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 100
    },
    "6564": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "AND",
      "path": "24"
    },
    "6565": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6781,
        6782
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6567": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6568": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6569": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6570": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6747
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "6572": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6574": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6575": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6577": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6578": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6755
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6579": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6769
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "6581": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6769
      ],
      "op": "ADD",
      "path": "24"
    },
    "6582": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6737,
        6769
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6583": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19FE"
    },
    "6586": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6587": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6589": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6596": {
      "op": "SHL"
    },
    "6597": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6598": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6601": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6603": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6604": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "ADD",
      "path": "24"
    },
    "6605": {
      "op": "MSTORE"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6610": {
      "op": "DUP3"
    },
    "6611": {
      "op": "ADD"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6641": {
      "op": "SHL"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6644": {
      "op": "DUP3"
    },
    "6645": {
      "op": "ADD"
    },
    "6646": {
      "op": "MSTORE"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6649": {
      "op": "ADD"
    },
    "6650": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x734"
    },
    "6653": {
      "op": "JUMP"
    },
    "6654": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6716,
        6834
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6655": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6845,
        6888
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 101,
      "value": "0x1A09"
    },
    "6658": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6858,
        6864
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6659": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6874,
        6878
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "6660": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6881,
        6887
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6661": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6845,
        6857
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6C1"
    },
    "6664": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6845,
        6888
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6665": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6845,
        6888
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6666": {
      "op": "POP"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6673": {
      "op": "SHL"
    },
    "6674": {
      "op": "SUB"
    },
    "6675": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 102
    },
    "6676": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "AND",
      "path": "24"
    },
    "6677": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6679": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6680": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6681": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6682": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6908
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "6684": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6686": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6687": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6689": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6690": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6691": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6692": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6693": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6927,
        6933
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6694": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6927,
        6933
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6695": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6916
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6696": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A32"
    },
    "6699": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6700": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6927,
        6933
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6701": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6927,
        6933
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6702": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "6705": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6898,
        6933
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6706": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6707": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6708": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "POP",
      "path": "24"
    },
    "6709": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "POP",
      "path": "24"
    },
    "6710": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6711": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6712": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6713": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6898,
        6933
      ],
      "op": "POP",
      "path": "24"
    },
    "6714": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6958,
        6964
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 103
    },
    "6715": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6954
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "6717": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6954
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6719": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6720": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6721": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6722": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A4B"
    },
    "6725": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6726": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6727": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F0F"
    },
    "6730": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6943,
        6964
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6731": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6732": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6733": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6734": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6943,
        6964
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6735": {
      "op": "POP"
    },
    "6736": {
      "op": "POP"
    },
    "6737": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 104,
      "value": "0x40"
    },
    "6739": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6740": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6747": {
      "op": "SHL"
    },
    "6748": {
      "op": "SUB"
    },
    "6749": {
      "op": "DUP5"
    },
    "6750": {
      "op": "AND"
    },
    "6751": {
      "op": "DUP2"
    },
    "6752": {
      "op": "MSTORE"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6755": {
      "op": "DUP2"
    },
    "6756": {
      "op": "ADD"
    },
    "6757": {
      "op": "DUP4"
    },
    "6758": {
      "op": "SWAP1"
    },
    "6759": {
      "op": "MSTORE"
    },
    "6760": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "6793": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6797": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6798": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6799": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6800": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "SUB",
      "path": "24"
    },
    "6801": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6802": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6980,
        7008
      ],
      "op": "LOG1",
      "path": "24"
    },
    "6803": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6507,
        7015
      ],
      "op": "POP",
      "path": "24"
    },
    "6804": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6507,
        7015
      ],
      "op": "POP",
      "path": "24"
    },
    "6805": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "o",
      "offset": [
        6507,
        7015
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6806": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6807": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6809": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6810": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "6813": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6814": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "6815": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6817": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "6818": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ABD"
    },
    "6821": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6822": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6824": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6831": {
      "op": "SHL"
    },
    "6832": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6833": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6834": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6836": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "6837": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x734"
    },
    "6840": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6841": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209F"
    },
    "6844": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6845": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6846": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 105,
      "value": "0xC09"
    },
    "6849": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6850": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6851": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACC"
    },
    "6854": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6855": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12132,
        12253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6856": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12132,
        12253
      ],
      "op": "POP",
      "path": "2"
    },
    "6857": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12132,
        12253
      ],
      "op": "POP",
      "path": "2"
    },
    "6858": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12132,
        12253
      ],
      "op": "POP",
      "path": "2"
    },
    "6859": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        12132,
        12253
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6860": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6861": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6863": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6864": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "6867": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6868": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "6869": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6871": {
      "branch": 136,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "6872": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AF3"
    },
    "6875": {
      "branch": 136,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6876": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6878": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6885": {
      "op": "SHL"
    },
    "6886": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6887": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6888": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6890": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "6891": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x734"
    },
    "6894": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6895": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x209F"
    },
    "6898": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6899": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6900": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 106,
      "value": "0x36"
    },
    "6902": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AFF"
    },
    "6905": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6906": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6907": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x213A"
    },
    "6910": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6911": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 107,
      "value": "0x37"
    },
    "6915": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC7"
    },
    "6918": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6919": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6920": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x213A"
    },
    "6923": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6924": {
      "op": "JUMPDEST"
    },
    "6925": {
      "op": "POP"
    },
    "6926": {
      "op": "DUP1"
    },
    "6927": {
      "op": "SLOAD"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6930": {
      "op": "DUP3"
    },
    "6931": {
      "op": "SSTORE"
    },
    "6932": {
      "op": "SWAP1"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6935": {
      "op": "MSTORE"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6940": {
      "op": "KECCAK256"
    },
    "6941": {
      "op": "SWAP1"
    },
    "6942": {
      "op": "DUP2"
    },
    "6943": {
      "op": "ADD"
    },
    "6944": {
      "op": "SWAP1"
    },
    "6945": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "6948": {
      "op": "SWAP2"
    },
    "6949": {
      "op": "SWAP1"
    },
    "6950": {
      "op": "JUMPDEST"
    },
    "6951": {
      "op": "DUP1"
    },
    "6952": {
      "op": "DUP3"
    },
    "6953": {
      "op": "GT"
    },
    "6954": {
      "op": "ISZERO"
    },
    "6955": {
      "op": "PUSH2",
      "value": "0x1B3A"
    },
    "6958": {
      "op": "JUMPI"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6961": {
      "op": "DUP2"
    },
    "6962": {
      "op": "SSTORE"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6965": {
      "op": "ADD"
    },
    "6966": {
      "op": "PUSH2",
      "value": "0x1B26"
    },
    "6969": {
      "op": "JUMP"
    },
    "6970": {
      "op": "JUMPDEST"
    },
    "6971": {
      "op": "POP"
    },
    "6972": {
      "op": "SWAP1"
    },
    "6973": {
      "jump": "o",
      "op": "JUMP"
    },
    "6974": {
      "op": "JUMPDEST"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6979": {
      "op": "DUP1"
    },
    "6980": {
      "op": "DUP4"
    },
    "6981": {
      "op": "MSTORE"
    },
    "6982": {
      "op": "DUP4"
    },
    "6983": {
      "op": "MLOAD"
    },
    "6984": {
      "op": "DUP1"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6987": {
      "op": "DUP6"
    },
    "6988": {
      "op": "ADD"
    },
    "6989": {
      "op": "MSTORE"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6992": {
      "op": "JUMPDEST"
    },
    "6993": {
      "op": "DUP2"
    },
    "6994": {
      "op": "DUP2"
    },
    "6995": {
      "op": "LT"
    },
    "6996": {
      "op": "ISZERO"
    },
    "6997": {
      "op": "PUSH2",
      "value": "0x1B6C"
    },
    "7000": {
      "op": "JUMPI"
    },
    "7001": {
      "op": "DUP6"
    },
    "7002": {
      "op": "DUP2"
    },
    "7003": {
      "op": "ADD"
    },
    "7004": {
      "op": "DUP4"
    },
    "7005": {
      "op": "ADD"
    },
    "7006": {
      "op": "MLOAD"
    },
    "7007": {
      "op": "DUP6"
    },
    "7008": {
      "op": "DUP3"
    },
    "7009": {
      "op": "ADD"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7012": {
      "op": "ADD"
    },
    "7013": {
      "op": "MSTORE"
    },
    "7014": {
      "op": "DUP3"
    },
    "7015": {
      "op": "ADD"
    },
    "7016": {
      "op": "PUSH2",
      "value": "0x1B50"
    },
    "7019": {
      "op": "JUMP"
    },
    "7020": {
      "op": "JUMPDEST"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7026": {
      "op": "DUP3"
    },
    "7027": {
      "op": "DUP7"
    },
    "7028": {
      "op": "ADD"
    },
    "7029": {
      "op": "ADD"
    },
    "7030": {
      "op": "MSTORE"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7035": {
      "op": "NOT"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7038": {
      "op": "DUP4"
    },
    "7039": {
      "op": "ADD"
    },
    "7040": {
      "op": "AND"
    },
    "7041": {
      "op": "DUP6"
    },
    "7042": {
      "op": "ADD"
    },
    "7043": {
      "op": "ADD"
    },
    "7044": {
      "op": "SWAP3"
    },
    "7045": {
      "op": "POP"
    },
    "7046": {
      "op": "POP"
    },
    "7047": {
      "op": "POP"
    },
    "7048": {
      "op": "SWAP3"
    },
    "7049": {
      "op": "SWAP2"
    },
    "7050": {
      "op": "POP"
    },
    "7051": {
      "op": "POP"
    },
    "7052": {
      "jump": "o",
      "op": "JUMP"
    },
    "7053": {
      "op": "JUMPDEST"
    },
    "7054": {
      "op": "DUP1"
    },
    "7055": {
      "op": "CALLDATALOAD"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7062": {
      "op": "SHL"
    },
    "7063": {
      "op": "SUB"
    },
    "7064": {
      "op": "DUP2"
    },
    "7065": {
      "op": "AND"
    },
    "7066": {
      "op": "DUP2"
    },
    "7067": {
      "op": "EQ"
    },
    "7068": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "7071": {
      "op": "JUMPI"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7074": {
      "op": "DUP1"
    },
    "7075": {
      "op": "REVERT"
    },
    "7076": {
      "op": "JUMPDEST"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7079": {
      "op": "DUP1"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7082": {
      "op": "DUP4"
    },
    "7083": {
      "op": "DUP6"
    },
    "7084": {
      "op": "SUB"
    },
    "7085": {
      "op": "SLT"
    },
    "7086": {
      "op": "ISZERO"
    },
    "7087": {
      "op": "PUSH2",
      "value": "0x1BB7"
    },
    "7090": {
      "op": "JUMPI"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7093": {
      "op": "DUP1"
    },
    "7094": {
      "op": "REVERT"
    },
    "7095": {
      "op": "JUMPDEST"
    },
    "7096": {
      "op": "PUSH2",
      "value": "0x1BC0"
    },
    "7099": {
      "op": "DUP4"
    },
    "7100": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7103": {
      "jump": "i",
      "op": "JUMP"
    },
    "7104": {
      "op": "JUMPDEST"
    },
    "7105": {
      "op": "SWAP5"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7108": {
      "op": "SWAP4"
    },
    "7109": {
      "op": "SWAP1"
    },
    "7110": {
      "op": "SWAP4"
    },
    "7111": {
      "op": "ADD"
    },
    "7112": {
      "op": "CALLDATALOAD"
    },
    "7113": {
      "op": "SWAP4"
    },
    "7114": {
      "op": "POP"
    },
    "7115": {
      "op": "POP"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "jump": "o",
      "op": "JUMP"
    },
    "7118": {
      "op": "JUMPDEST"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7121": {
      "op": "DUP1"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7124": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7126": {
      "op": "DUP5"
    },
    "7127": {
      "op": "DUP7"
    },
    "7128": {
      "op": "SUB"
    },
    "7129": {
      "op": "SLT"
    },
    "7130": {
      "op": "ISZERO"
    },
    "7131": {
      "op": "PUSH2",
      "value": "0x1BE3"
    },
    "7134": {
      "op": "JUMPI"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7137": {
      "op": "DUP1"
    },
    "7138": {
      "op": "REVERT"
    },
    "7139": {
      "op": "JUMPDEST"
    },
    "7140": {
      "op": "PUSH2",
      "value": "0x1BEC"
    },
    "7143": {
      "op": "DUP5"
    },
    "7144": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7147": {
      "jump": "i",
      "op": "JUMP"
    },
    "7148": {
      "op": "JUMPDEST"
    },
    "7149": {
      "op": "SWAP3"
    },
    "7150": {
      "op": "POP"
    },
    "7151": {
      "op": "PUSH2",
      "value": "0x1BFA"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7156": {
      "op": "DUP6"
    },
    "7157": {
      "op": "ADD"
    },
    "7158": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7161": {
      "jump": "i",
      "op": "JUMP"
    },
    "7162": {
      "op": "JUMPDEST"
    },
    "7163": {
      "op": "SWAP2"
    },
    "7164": {
      "op": "POP"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7167": {
      "op": "DUP5"
    },
    "7168": {
      "op": "ADD"
    },
    "7169": {
      "op": "CALLDATALOAD"
    },
    "7170": {
      "op": "SWAP1"
    },
    "7171": {
      "op": "POP"
    },
    "7172": {
      "op": "SWAP3"
    },
    "7173": {
      "op": "POP"
    },
    "7174": {
      "op": "SWAP3"
    },
    "7175": {
      "op": "POP"
    },
    "7176": {
      "op": "SWAP3"
    },
    "7177": {
      "jump": "o",
      "op": "JUMP"
    },
    "7178": {
      "op": "JUMPDEST"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7183": {
      "op": "DUP3"
    },
    "7184": {
      "op": "DUP5"
    },
    "7185": {
      "op": "SUB"
    },
    "7186": {
      "op": "SLT"
    },
    "7187": {
      "op": "ISZERO"
    },
    "7188": {
      "op": "PUSH2",
      "value": "0x1C1C"
    },
    "7191": {
      "op": "JUMPI"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7194": {
      "op": "DUP1"
    },
    "7195": {
      "op": "REVERT"
    },
    "7196": {
      "op": "JUMPDEST"
    },
    "7197": {
      "op": "POP"
    },
    "7198": {
      "op": "CALLDATALOAD"
    },
    "7199": {
      "op": "SWAP2"
    },
    "7200": {
      "op": "SWAP1"
    },
    "7201": {
      "op": "POP"
    },
    "7202": {
      "jump": "o",
      "op": "JUMP"
    },
    "7203": {
      "op": "JUMPDEST"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7206": {
      "op": "DUP1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7209": {
      "op": "DUP4"
    },
    "7210": {
      "op": "DUP6"
    },
    "7211": {
      "op": "SUB"
    },
    "7212": {
      "op": "SLT"
    },
    "7213": {
      "op": "ISZERO"
    },
    "7214": {
      "op": "PUSH2",
      "value": "0x1C36"
    },
    "7217": {
      "op": "JUMPI"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7220": {
      "op": "DUP1"
    },
    "7221": {
      "op": "REVERT"
    },
    "7222": {
      "op": "JUMPDEST"
    },
    "7223": {
      "op": "POP"
    },
    "7224": {
      "op": "POP"
    },
    "7225": {
      "op": "DUP1"
    },
    "7226": {
      "op": "CALLDATALOAD"
    },
    "7227": {
      "op": "SWAP3"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7230": {
      "op": "SWAP1"
    },
    "7231": {
      "op": "SWAP2"
    },
    "7232": {
      "op": "ADD"
    },
    "7233": {
      "op": "CALLDATALOAD"
    },
    "7234": {
      "op": "SWAP2"
    },
    "7235": {
      "op": "POP"
    },
    "7236": {
      "jump": "o",
      "op": "JUMP"
    },
    "7237": {
      "op": "JUMPDEST"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7242": {
      "op": "DUP3"
    },
    "7243": {
      "op": "DUP5"
    },
    "7244": {
      "op": "SUB"
    },
    "7245": {
      "op": "SLT"
    },
    "7246": {
      "op": "ISZERO"
    },
    "7247": {
      "op": "PUSH2",
      "value": "0x1C57"
    },
    "7250": {
      "op": "JUMPI"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7253": {
      "op": "DUP1"
    },
    "7254": {
      "op": "REVERT"
    },
    "7255": {
      "op": "JUMPDEST"
    },
    "7256": {
      "op": "PUSH2",
      "value": "0x1C60"
    },
    "7259": {
      "op": "DUP3"
    },
    "7260": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7263": {
      "jump": "i",
      "op": "JUMP"
    },
    "7264": {
      "op": "JUMPDEST"
    },
    "7265": {
      "op": "SWAP4"
    },
    "7266": {
      "op": "SWAP3"
    },
    "7267": {
      "op": "POP"
    },
    "7268": {
      "op": "POP"
    },
    "7269": {
      "op": "POP"
    },
    "7270": {
      "jump": "o",
      "op": "JUMP"
    },
    "7271": {
      "op": "JUMPDEST"
    },
    "7272": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7279": {
      "op": "SHL"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7282": {
      "op": "MSTORE"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7287": {
      "op": "MSTORE"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7292": {
      "op": "REVERT"
    },
    "7293": {
      "op": "JUMPDEST"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7296": {
      "op": "MLOAD"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7299": {
      "op": "DUP3"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7303": {
      "op": "NOT"
    },
    "7304": {
      "op": "AND"
    },
    "7305": {
      "op": "DUP2"
    },
    "7306": {
      "op": "ADD"
    },
    "7307": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7316": {
      "op": "DUP2"
    },
    "7317": {
      "op": "GT"
    },
    "7318": {
      "op": "DUP3"
    },
    "7319": {
      "op": "DUP3"
    },
    "7320": {
      "op": "LT"
    },
    "7321": {
      "op": "OR"
    },
    "7322": {
      "op": "ISZERO"
    },
    "7323": {
      "op": "PUSH2",
      "value": "0x1CA6"
    },
    "7326": {
      "op": "JUMPI"
    },
    "7327": {
      "op": "PUSH2",
      "value": "0x1CA6"
    },
    "7330": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "7333": {
      "jump": "i",
      "op": "JUMP"
    },
    "7334": {
      "op": "JUMPDEST"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7337": {
      "op": "MSTORE"
    },
    "7338": {
      "op": "SWAP2"
    },
    "7339": {
      "op": "SWAP1"
    },
    "7340": {
      "op": "POP"
    },
    "7341": {
      "jump": "o",
      "op": "JUMP"
    },
    "7342": {
      "op": "JUMPDEST"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7345": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7354": {
      "op": "DUP3"
    },
    "7355": {
      "op": "GT"
    },
    "7356": {
      "op": "ISZERO"
    },
    "7357": {
      "op": "PUSH2",
      "value": "0x1CC8"
    },
    "7360": {
      "op": "JUMPI"
    },
    "7361": {
      "op": "PUSH2",
      "value": "0x1CC8"
    },
    "7364": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "7367": {
      "jump": "i",
      "op": "JUMP"
    },
    "7368": {
      "op": "JUMPDEST"
    },
    "7369": {
      "op": "POP"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7372": {
      "op": "SHL"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7375": {
      "op": "ADD"
    },
    "7376": {
      "op": "SWAP1"
    },
    "7377": {
      "jump": "o",
      "op": "JUMP"
    },
    "7378": {
      "op": "JUMPDEST"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7381": {
      "op": "DUP3"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7384": {
      "op": "DUP4"
    },
    "7385": {
      "op": "ADD"
    },
    "7386": {
      "op": "SLT"
    },
    "7387": {
      "op": "PUSH2",
      "value": "0x1CE3"
    },
    "7390": {
      "op": "JUMPI"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7393": {
      "op": "DUP1"
    },
    "7394": {
      "op": "REVERT"
    },
    "7395": {
      "op": "JUMPDEST"
    },
    "7396": {
      "op": "DUP2"
    },
    "7397": {
      "op": "CALLDATALOAD"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7400": {
      "op": "PUSH2",
      "value": "0x1CF8"
    },
    "7403": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7406": {
      "op": "DUP4"
    },
    "7407": {
      "op": "PUSH2",
      "value": "0x1CAE"
    },
    "7410": {
      "jump": "i",
      "op": "JUMP"
    },
    "7411": {
      "op": "JUMPDEST"
    },
    "7412": {
      "op": "PUSH2",
      "value": "0x1C7D"
    },
    "7415": {
      "jump": "i",
      "op": "JUMP"
    },
    "7416": {
      "op": "JUMPDEST"
    },
    "7417": {
      "op": "DUP1"
    },
    "7418": {
      "op": "DUP4"
    },
    "7419": {
      "op": "DUP3"
    },
    "7420": {
      "op": "MSTORE"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7423": {
      "op": "DUP3"
    },
    "7424": {
      "op": "ADD"
    },
    "7425": {
      "op": "SWAP2"
    },
    "7426": {
      "op": "POP"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7429": {
      "op": "DUP5"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7432": {
      "op": "SHL"
    },
    "7433": {
      "op": "DUP8"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "SWAP4"
    },
    "7437": {
      "op": "POP"
    },
    "7438": {
      "op": "DUP7"
    },
    "7439": {
      "op": "DUP5"
    },
    "7440": {
      "op": "GT"
    },
    "7441": {
      "op": "ISZERO"
    },
    "7442": {
      "op": "PUSH2",
      "value": "0x1D1A"
    },
    "7445": {
      "op": "JUMPI"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7448": {
      "op": "DUP1"
    },
    "7449": {
      "op": "REVERT"
    },
    "7450": {
      "op": "JUMPDEST"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7453": {
      "op": "DUP7"
    },
    "7454": {
      "op": "ADD"
    },
    "7455": {
      "op": "JUMPDEST"
    },
    "7456": {
      "op": "DUP5"
    },
    "7457": {
      "op": "DUP2"
    },
    "7458": {
      "op": "LT"
    },
    "7459": {
      "op": "ISZERO"
    },
    "7460": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7463": {
      "op": "JUMPI"
    },
    "7464": {
      "op": "PUSH2",
      "value": "0x1D30"
    },
    "7467": {
      "op": "DUP2"
    },
    "7468": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7471": {
      "jump": "i",
      "op": "JUMP"
    },
    "7472": {
      "op": "JUMPDEST"
    },
    "7473": {
      "op": "DUP4"
    },
    "7474": {
      "op": "MSTORE"
    },
    "7475": {
      "op": "SWAP2"
    },
    "7476": {
      "op": "DUP4"
    },
    "7477": {
      "op": "ADD"
    },
    "7478": {
      "op": "SWAP2"
    },
    "7479": {
      "op": "DUP4"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x1D1F"
    },
    "7484": {
      "op": "JUMP"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "POP"
    },
    "7487": {
      "op": "SWAP7"
    },
    "7488": {
      "op": "SWAP6"
    },
    "7489": {
      "op": "POP"
    },
    "7490": {
      "op": "POP"
    },
    "7491": {
      "op": "POP"
    },
    "7492": {
      "op": "POP"
    },
    "7493": {
      "op": "POP"
    },
    "7494": {
      "op": "POP"
    },
    "7495": {
      "jump": "o",
      "op": "JUMP"
    },
    "7496": {
      "op": "JUMPDEST"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7501": {
      "op": "DUP3"
    },
    "7502": {
      "op": "DUP5"
    },
    "7503": {
      "op": "SUB"
    },
    "7504": {
      "op": "SLT"
    },
    "7505": {
      "op": "ISZERO"
    },
    "7506": {
      "op": "PUSH2",
      "value": "0x1D5A"
    },
    "7509": {
      "op": "JUMPI"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7512": {
      "op": "DUP1"
    },
    "7513": {
      "op": "REVERT"
    },
    "7514": {
      "op": "JUMPDEST"
    },
    "7515": {
      "op": "DUP2"
    },
    "7516": {
      "op": "CALLDATALOAD"
    },
    "7517": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7526": {
      "op": "DUP2"
    },
    "7527": {
      "op": "GT"
    },
    "7528": {
      "op": "ISZERO"
    },
    "7529": {
      "op": "PUSH2",
      "value": "0x1D71"
    },
    "7532": {
      "op": "JUMPI"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7535": {
      "op": "DUP1"
    },
    "7536": {
      "op": "REVERT"
    },
    "7537": {
      "op": "JUMPDEST"
    },
    "7538": {
      "op": "PUSH2",
      "value": "0x1D7D"
    },
    "7541": {
      "op": "DUP5"
    },
    "7542": {
      "op": "DUP3"
    },
    "7543": {
      "op": "DUP6"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "PUSH2",
      "value": "0x1CD2"
    },
    "7548": {
      "jump": "i",
      "op": "JUMP"
    },
    "7549": {
      "op": "JUMPDEST"
    },
    "7550": {
      "op": "SWAP5"
    },
    "7551": {
      "op": "SWAP4"
    },
    "7552": {
      "op": "POP"
    },
    "7553": {
      "op": "POP"
    },
    "7554": {
      "op": "POP"
    },
    "7555": {
      "op": "POP"
    },
    "7556": {
      "jump": "o",
      "op": "JUMP"
    },
    "7557": {
      "op": "JUMPDEST"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7560": {
      "op": "DUP1"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7563": {
      "op": "DUP1"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7568": {
      "op": "DUP7"
    },
    "7569": {
      "op": "DUP9"
    },
    "7570": {
      "op": "SUB"
    },
    "7571": {
      "op": "SLT"
    },
    "7572": {
      "op": "ISZERO"
    },
    "7573": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7576": {
      "op": "JUMPI"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7579": {
      "op": "DUP1"
    },
    "7580": {
      "op": "REVERT"
    },
    "7581": {
      "op": "JUMPDEST"
    },
    "7582": {
      "op": "DUP6"
    },
    "7583": {
      "op": "CALLDATALOAD"
    },
    "7584": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7593": {
      "op": "DUP1"
    },
    "7594": {
      "op": "DUP3"
    },
    "7595": {
      "op": "GT"
    },
    "7596": {
      "op": "ISZERO"
    },
    "7597": {
      "op": "PUSH2",
      "value": "0x1DB5"
    },
    "7600": {
      "op": "JUMPI"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7603": {
      "op": "DUP1"
    },
    "7604": {
      "op": "REVERT"
    },
    "7605": {
      "op": "JUMPDEST"
    },
    "7606": {
      "op": "PUSH2",
      "value": "0x1DC1"
    },
    "7609": {
      "op": "DUP10"
    },
    "7610": {
      "op": "DUP4"
    },
    "7611": {
      "op": "DUP11"
    },
    "7612": {
      "op": "ADD"
    },
    "7613": {
      "op": "PUSH2",
      "value": "0x1CD2"
    },
    "7616": {
      "jump": "i",
      "op": "JUMP"
    },
    "7617": {
      "op": "JUMPDEST"
    },
    "7618": {
      "op": "SWAP7"
    },
    "7619": {
      "op": "POP"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7622": {
      "op": "SWAP2"
    },
    "7623": {
      "op": "POP"
    },
    "7624": {
      "op": "DUP2"
    },
    "7625": {
      "op": "DUP9"
    },
    "7626": {
      "op": "ADD"
    },
    "7627": {
      "op": "CALLDATALOAD"
    },
    "7628": {
      "op": "DUP2"
    },
    "7629": {
      "op": "DUP2"
    },
    "7630": {
      "op": "GT"
    },
    "7631": {
      "op": "ISZERO"
    },
    "7632": {
      "op": "PUSH2",
      "value": "0x1DD8"
    },
    "7635": {
      "op": "JUMPI"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7638": {
      "op": "DUP1"
    },
    "7639": {
      "op": "REVERT"
    },
    "7640": {
      "op": "JUMPDEST"
    },
    "7641": {
      "op": "DUP9"
    },
    "7642": {
      "op": "ADD"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7645": {
      "op": "DUP2"
    },
    "7646": {
      "op": "ADD"
    },
    "7647": {
      "op": "DUP11"
    },
    "7648": {
      "op": "SGT"
    },
    "7649": {
      "op": "PUSH2",
      "value": "0x1DE9"
    },
    "7652": {
      "op": "JUMPI"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7655": {
      "op": "DUP1"
    },
    "7656": {
      "op": "REVERT"
    },
    "7657": {
      "op": "JUMPDEST"
    },
    "7658": {
      "op": "DUP1"
    },
    "7659": {
      "op": "CALLDATALOAD"
    },
    "7660": {
      "op": "PUSH2",
      "value": "0x1DF7"
    },
    "7663": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7666": {
      "op": "DUP3"
    },
    "7667": {
      "op": "PUSH2",
      "value": "0x1CAE"
    },
    "7670": {
      "jump": "i",
      "op": "JUMP"
    },
    "7671": {
      "op": "JUMPDEST"
    },
    "7672": {
      "op": "DUP2"
    },
    "7673": {
      "op": "DUP2"
    },
    "7674": {
      "op": "MSTORE"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7677": {
      "op": "SWAP2"
    },
    "7678": {
      "op": "SWAP1"
    },
    "7679": {
      "op": "SWAP2"
    },
    "7680": {
      "op": "SHL"
    },
    "7681": {
      "op": "DUP3"
    },
    "7682": {
      "op": "ADD"
    },
    "7683": {
      "op": "DUP5"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "SWAP1"
    },
    "7686": {
      "op": "DUP5"
    },
    "7687": {
      "op": "DUP2"
    },
    "7688": {
      "op": "ADD"
    },
    "7689": {
      "op": "SWAP1"
    },
    "7690": {
      "op": "DUP13"
    },
    "7691": {
      "op": "DUP4"
    },
    "7692": {
      "op": "GT"
    },
    "7693": {
      "op": "ISZERO"
    },
    "7694": {
      "op": "PUSH2",
      "value": "0x1E16"
    },
    "7697": {
      "op": "JUMPI"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7700": {
      "op": "DUP1"
    },
    "7701": {
      "op": "REVERT"
    },
    "7702": {
      "op": "JUMPDEST"
    },
    "7703": {
      "op": "SWAP3"
    },
    "7704": {
      "op": "DUP6"
    },
    "7705": {
      "op": "ADD"
    },
    "7706": {
      "op": "SWAP3"
    },
    "7707": {
      "op": "JUMPDEST"
    },
    "7708": {
      "op": "DUP3"
    },
    "7709": {
      "op": "DUP5"
    },
    "7710": {
      "op": "LT"
    },
    "7711": {
      "op": "ISZERO"
    },
    "7712": {
      "op": "PUSH2",
      "value": "0x1E34"
    },
    "7715": {
      "op": "JUMPI"
    },
    "7716": {
      "op": "DUP4"
    },
    "7717": {
      "op": "CALLDATALOAD"
    },
    "7718": {
      "op": "DUP3"
    },
    "7719": {
      "op": "MSTORE"
    },
    "7720": {
      "op": "SWAP3"
    },
    "7721": {
      "op": "DUP6"
    },
    "7722": {
      "op": "ADD"
    },
    "7723": {
      "op": "SWAP3"
    },
    "7724": {
      "op": "SWAP1"
    },
    "7725": {
      "op": "DUP6"
    },
    "7726": {
      "op": "ADD"
    },
    "7727": {
      "op": "SWAP1"
    },
    "7728": {
      "op": "PUSH2",
      "value": "0x1E1B"
    },
    "7731": {
      "op": "JUMP"
    },
    "7732": {
      "op": "JUMPDEST"
    },
    "7733": {
      "op": "SWAP9"
    },
    "7734": {
      "op": "POP"
    },
    "7735": {
      "op": "POP"
    },
    "7736": {
      "op": "POP"
    },
    "7737": {
      "op": "POP"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7740": {
      "op": "DUP9"
    },
    "7741": {
      "op": "ADD"
    },
    "7742": {
      "op": "CALLDATALOAD"
    },
    "7743": {
      "op": "SWAP5"
    },
    "7744": {
      "op": "POP"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7747": {
      "op": "DUP9"
    },
    "7748": {
      "op": "ADD"
    },
    "7749": {
      "op": "CALLDATALOAD"
    },
    "7750": {
      "op": "SWAP2"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "DUP1"
    },
    "7753": {
      "op": "DUP3"
    },
    "7754": {
      "op": "GT"
    },
    "7755": {
      "op": "ISZERO"
    },
    "7756": {
      "op": "PUSH2",
      "value": "0x1E54"
    },
    "7759": {
      "op": "JUMPI"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7762": {
      "op": "DUP1"
    },
    "7763": {
      "op": "REVERT"
    },
    "7764": {
      "op": "JUMPDEST"
    },
    "7765": {
      "op": "POP"
    },
    "7766": {
      "op": "PUSH2",
      "value": "0x1E61"
    },
    "7769": {
      "op": "DUP9"
    },
    "7770": {
      "op": "DUP3"
    },
    "7771": {
      "op": "DUP10"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "op": "PUSH2",
      "value": "0x1CD2"
    },
    "7776": {
      "jump": "i",
      "op": "JUMP"
    },
    "7777": {
      "op": "JUMPDEST"
    },
    "7778": {
      "op": "SWAP6"
    },
    "7779": {
      "op": "SWAP9"
    },
    "7780": {
      "op": "SWAP5"
    },
    "7781": {
      "op": "SWAP8"
    },
    "7782": {
      "op": "POP"
    },
    "7783": {
      "op": "SWAP3"
    },
    "7784": {
      "op": "SWAP6"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "op": "CALLDATALOAD"
    },
    "7789": {
      "op": "SWAP4"
    },
    "7790": {
      "op": "SWAP3"
    },
    "7791": {
      "op": "POP"
    },
    "7792": {
      "op": "POP"
    },
    "7793": {
      "op": "POP"
    },
    "7794": {
      "jump": "o",
      "op": "JUMP"
    },
    "7795": {
      "op": "JUMPDEST"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7798": {
      "op": "DUP1"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7801": {
      "op": "DUP4"
    },
    "7802": {
      "op": "DUP6"
    },
    "7803": {
      "op": "SUB"
    },
    "7804": {
      "op": "SLT"
    },
    "7805": {
      "op": "ISZERO"
    },
    "7806": {
      "op": "PUSH2",
      "value": "0x1E86"
    },
    "7809": {
      "op": "JUMPI"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7812": {
      "op": "DUP1"
    },
    "7813": {
      "op": "REVERT"
    },
    "7814": {
      "op": "JUMPDEST"
    },
    "7815": {
      "op": "PUSH2",
      "value": "0x1E8F"
    },
    "7818": {
      "op": "DUP4"
    },
    "7819": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7822": {
      "jump": "i",
      "op": "JUMP"
    },
    "7823": {
      "op": "JUMPDEST"
    },
    "7824": {
      "op": "SWAP2"
    },
    "7825": {
      "op": "POP"
    },
    "7826": {
      "op": "PUSH2",
      "value": "0x1E9D"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7831": {
      "op": "DUP5"
    },
    "7832": {
      "op": "ADD"
    },
    "7833": {
      "op": "PUSH2",
      "value": "0x1B8D"
    },
    "7836": {
      "jump": "i",
      "op": "JUMP"
    },
    "7837": {
      "op": "JUMPDEST"
    },
    "7838": {
      "op": "SWAP1"
    },
    "7839": {
      "op": "POP"
    },
    "7840": {
      "op": "SWAP3"
    },
    "7841": {
      "op": "POP"
    },
    "7842": {
      "op": "SWAP3"
    },
    "7843": {
      "op": "SWAP1"
    },
    "7844": {
      "op": "POP"
    },
    "7845": {
      "jump": "o",
      "op": "JUMP"
    },
    "7846": {
      "op": "JUMPDEST"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7849": {
      "op": "DUP2"
    },
    "7850": {
      "op": "DUP2"
    },
    "7851": {
      "op": "SHR"
    },
    "7852": {
      "op": "SWAP1"
    },
    "7853": {
      "op": "DUP3"
    },
    "7854": {
      "op": "AND"
    },
    "7855": {
      "op": "DUP1"
    },
    "7856": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "7859": {
      "op": "JUMPI"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7862": {
      "op": "DUP3"
    },
    "7863": {
      "op": "AND"
    },
    "7864": {
      "op": "SWAP2"
    },
    "7865": {
      "op": "POP"
    },
    "7866": {
      "op": "JUMPDEST"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7869": {
      "op": "DUP3"
    },
    "7870": {
      "op": "LT"
    },
    "7871": {
      "op": "DUP2"
    },
    "7872": {
      "op": "SUB"
    },
    "7873": {
      "op": "PUSH2",
      "value": "0x1EDA"
    },
    "7876": {
      "op": "JUMPI"
    },
    "7877": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7884": {
      "op": "SHL"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7887": {
      "op": "MSTORE"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7892": {
      "op": "MSTORE"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7897": {
      "op": "REVERT"
    },
    "7898": {
      "op": "JUMPDEST"
    },
    "7899": {
      "op": "POP"
    },
    "7900": {
      "op": "SWAP2"
    },
    "7901": {
      "op": "SWAP1"
    },
    "7902": {
      "op": "POP"
    },
    "7903": {
      "jump": "o",
      "op": "JUMP"
    },
    "7904": {
      "op": "JUMPDEST"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7909": {
      "op": "DUP3"
    },
    "7910": {
      "op": "DUP5"
    },
    "7911": {
      "op": "SUB"
    },
    "7912": {
      "op": "SLT"
    },
    "7913": {
      "op": "ISZERO"
    },
    "7914": {
      "op": "PUSH2",
      "value": "0x1EF2"
    },
    "7917": {
      "op": "JUMPI"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7920": {
      "op": "DUP1"
    },
    "7921": {
      "op": "REVERT"
    },
    "7922": {
      "op": "JUMPDEST"
    },
    "7923": {
      "op": "POP"
    },
    "7924": {
      "op": "MLOAD"
    },
    "7925": {
      "op": "SWAP2"
    },
    "7926": {
      "op": "SWAP1"
    },
    "7927": {
      "op": "POP"
    },
    "7928": {
      "jump": "o",
      "op": "JUMP"
    },
    "7929": {
      "op": "JUMPDEST"
    },
    "7930": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7937": {
      "op": "SHL"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7940": {
      "op": "MSTORE"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7950": {
      "op": "REVERT"
    },
    "7951": {
      "op": "JUMPDEST"
    },
    "7952": {
      "op": "DUP1"
    },
    "7953": {
      "op": "DUP3"
    },
    "7954": {
      "op": "ADD"
    },
    "7955": {
      "op": "DUP1"
    },
    "7956": {
      "op": "DUP3"
    },
    "7957": {
      "op": "GT"
    },
    "7958": {
      "op": "ISZERO"
    },
    "7959": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "7962": {
      "op": "JUMPI"
    },
    "7963": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "7966": {
      "op": "PUSH2",
      "value": "0x1EF9"
    },
    "7969": {
      "jump": "i",
      "op": "JUMP"
    },
    "7970": {
      "op": "JUMPDEST"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7973": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "7977": {
      "op": "DUP1"
    },
    "7978": {
      "op": "DUP4"
    },
    "7979": {
      "op": "AND"
    },
    "7980": {
      "op": "DUP2"
    },
    "7981": {
      "op": "DUP2"
    },
    "7982": {
      "op": "SUB"
    },
    "7983": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "7986": {
      "op": "JUMPI"
    },
    "7987": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "7990": {
      "op": "PUSH2",
      "value": "0x1EF9"
    },
    "7993": {
      "jump": "i",
      "op": "JUMP"
    },
    "7994": {
      "op": "JUMPDEST"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7997": {
      "op": "ADD"
    },
    "7998": {
      "op": "SWAP4"
    },
    "7999": {
      "op": "SWAP3"
    },
    "8000": {
      "op": "POP"
    },
    "8001": {
      "op": "POP"
    },
    "8002": {
      "op": "POP"
    },
    "8003": {
      "jump": "o",
      "op": "JUMP"
    },
    "8004": {
      "op": "JUMPDEST"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8007": {
      "op": "DUP1"
    },
    "8008": {
      "op": "DUP3"
    },
    "8009": {
      "op": "MSTORE"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8012": {
      "op": "SWAP1"
    },
    "8013": {
      "op": "DUP3"
    },
    "8014": {
      "op": "ADD"
    },
    "8015": {
      "op": "MSTORE"
    },
    "8016": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8051": {
      "op": "DUP3"
    },
    "8052": {
      "op": "ADD"
    },
    "8053": {
      "op": "MSTORE"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8058": {
      "op": "SHL"
    },
    "8059": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8061": {
      "op": "DUP3"
    },
    "8062": {
      "op": "ADD"
    },
    "8063": {
      "op": "MSTORE"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8066": {
      "op": "ADD"
    },
    "8067": {
      "op": "SWAP1"
    },
    "8068": {
      "jump": "o",
      "op": "JUMP"
    },
    "8069": {
      "op": "JUMPDEST"
    },
    "8070": {
      "op": "DUP2"
    },
    "8071": {
      "op": "DUP2"
    },
    "8072": {
      "op": "SUB"
    },
    "8073": {
      "op": "DUP2"
    },
    "8074": {
      "op": "DUP2"
    },
    "8075": {
      "op": "GT"
    },
    "8076": {
      "op": "ISZERO"
    },
    "8077": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "8080": {
      "op": "JUMPI"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "8084": {
      "op": "PUSH2",
      "value": "0x1EF9"
    },
    "8087": {
      "jump": "i",
      "op": "JUMP"
    },
    "8088": {
      "op": "JUMPDEST"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8093": {
      "op": "DUP3"
    },
    "8094": {
      "op": "DUP5"
    },
    "8095": {
      "op": "SUB"
    },
    "8096": {
      "op": "SLT"
    },
    "8097": {
      "op": "ISZERO"
    },
    "8098": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "8101": {
      "op": "JUMPI"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8104": {
      "op": "DUP1"
    },
    "8105": {
      "op": "REVERT"
    },
    "8106": {
      "op": "JUMPDEST"
    },
    "8107": {
      "op": "DUP2"
    },
    "8108": {
      "op": "MLOAD"
    },
    "8109": {
      "op": "DUP1"
    },
    "8110": {
      "op": "ISZERO"
    },
    "8111": {
      "op": "ISZERO"
    },
    "8112": {
      "op": "DUP2"
    },
    "8113": {
      "op": "EQ"
    },
    "8114": {
      "op": "PUSH2",
      "value": "0x1C60"
    },
    "8117": {
      "op": "JUMPI"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8120": {
      "op": "DUP1"
    },
    "8121": {
      "op": "REVERT"
    },
    "8122": {
      "op": "JUMPDEST"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8125": {
      "op": "DUP1"
    },
    "8126": {
      "op": "DUP3"
    },
    "8127": {
      "op": "MSTORE"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8130": {
      "op": "SWAP1"
    },
    "8131": {
      "op": "DUP3"
    },
    "8132": {
      "op": "ADD"
    },
    "8133": {
      "op": "MSTORE"
    },
    "8134": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8169": {
      "op": "DUP3"
    },
    "8170": {
      "op": "ADD"
    },
    "8171": {
      "op": "MSTORE"
    },
    "8172": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "8181": {
      "op": "SHL"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8184": {
      "op": "DUP3"
    },
    "8185": {
      "op": "ADD"
    },
    "8186": {
      "op": "MSTORE"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8189": {
      "op": "ADD"
    },
    "8190": {
      "op": "SWAP1"
    },
    "8191": {
      "jump": "o",
      "op": "JUMP"
    },
    "8192": {
      "op": "JUMPDEST"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8197": {
      "op": "DUP3"
    },
    "8198": {
      "op": "ADD"
    },
    "8199": {
      "op": "PUSH2",
      "value": "0x2012"
    },
    "8202": {
      "op": "JUMPI"
    },
    "8203": {
      "op": "PUSH2",
      "value": "0x2012"
    },
    "8206": {
      "op": "PUSH2",
      "value": "0x1EF9"
    },
    "8209": {
      "jump": "i",
      "op": "JUMP"
    },
    "8210": {
      "op": "JUMPDEST"
    },
    "8211": {
      "op": "POP"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8214": {
      "op": "ADD"
    },
    "8215": {
      "op": "SWAP1"
    },
    "8216": {
      "jump": "o",
      "op": "JUMP"
    },
    "8217": {
      "op": "JUMPDEST"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8220": {
      "op": "DUP1"
    },
    "8221": {
      "op": "DUP3"
    },
    "8222": {
      "op": "MSTORE"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8225": {
      "op": "SWAP1"
    },
    "8226": {
      "op": "DUP3"
    },
    "8227": {
      "op": "ADD"
    },
    "8228": {
      "op": "MSTORE"
    },
    "8229": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265207468652070726F78792061646D696E2E00"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8264": {
      "op": "DUP3"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "op": "MSTORE"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "SWAP1"
    },
    "8271": {
      "jump": "o",
      "op": "JUMP"
    },
    "8272": {
      "op": "JUMPDEST"
    },
    "8273": {
      "op": "DUP1"
    },
    "8274": {
      "op": "DUP3"
    },
    "8275": {
      "op": "MUL"
    },
    "8276": {
      "op": "DUP2"
    },
    "8277": {
      "op": "ISZERO"
    },
    "8278": {
      "op": "DUP3"
    },
    "8279": {
      "op": "DUP3"
    },
    "8280": {
      "op": "DIV"
    },
    "8281": {
      "op": "DUP5"
    },
    "8282": {
      "op": "EQ"
    },
    "8283": {
      "op": "OR"
    },
    "8284": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "8287": {
      "op": "JUMPI"
    },
    "8288": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "8291": {
      "op": "PUSH2",
      "value": "0x1EF9"
    },
    "8294": {
      "jump": "i",
      "op": "JUMP"
    },
    "8295": {
      "op": "JUMPDEST"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8298": {
      "op": "DUP3"
    },
    "8299": {
      "op": "PUSH2",
      "value": "0x2084"
    },
    "8302": {
      "op": "JUMPI"
    },
    "8303": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8310": {
      "op": "SHL"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8313": {
      "op": "MSTORE"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8318": {
      "op": "MSTORE"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8323": {
      "op": "REVERT"
    },
    "8324": {
      "op": "JUMPDEST"
    },
    "8325": {
      "op": "POP"
    },
    "8326": {
      "op": "DIV"
    },
    "8327": {
      "op": "SWAP1"
    },
    "8328": {
      "jump": "o",
      "op": "JUMP"
    },
    "8329": {
      "op": "JUMPDEST"
    },
    "8330": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8337": {
      "op": "SHL"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8340": {
      "op": "MSTORE"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8345": {
      "op": "MSTORE"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8350": {
      "op": "REVERT"
    },
    "8351": {
      "op": "JUMPDEST"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8354": {
      "op": "DUP1"
    },
    "8355": {
      "op": "DUP3"
    },
    "8356": {
      "op": "MSTORE"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "8359": {
      "op": "SWAP1"
    },
    "8360": {
      "op": "DUP3"
    },
    "8361": {
      "op": "ADD"
    },
    "8362": {
      "op": "MSTORE"
    },
    "8363": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8398": {
      "op": "DUP3"
    },
    "8399": {
      "op": "ADD"
    },
    "8400": {
      "op": "MSTORE"
    },
    "8401": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8415": {
      "op": "SHL"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8418": {
      "op": "DUP3"
    },
    "8419": {
      "op": "ADD"
    },
    "8420": {
      "op": "MSTORE"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8423": {
      "op": "ADD"
    },
    "8424": {
      "op": "SWAP1"
    },
    "8425": {
      "jump": "o",
      "op": "JUMP"
    },
    "8426": {
      "op": "JUMPDEST"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8429": {
      "op": "DUP3"
    },
    "8430": {
      "op": "GT"
    },
    "8431": {
      "op": "ISZERO"
    },
    "8432": {
      "op": "PUSH2",
      "value": "0x1AC7"
    },
    "8435": {
      "op": "JUMPI"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8438": {
      "op": "DUP2"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8441": {
      "op": "MSTORE"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8446": {
      "op": "KECCAK256"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8449": {
      "op": "DUP6"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8453": {
      "op": "SHR"
    },
    "8454": {
      "op": "DUP2"
    },
    "8455": {
      "op": "ADD"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8458": {
      "op": "DUP7"
    },
    "8459": {
      "op": "LT"
    },
    "8460": {
      "op": "ISZERO"
    },
    "8461": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "8464": {
      "op": "JUMPI"
    },
    "8465": {
      "op": "POP"
    },
    "8466": {
      "op": "DUP1"
    },
    "8467": {
      "op": "JUMPDEST"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8470": {
      "op": "DUP6"
    },
    "8471": {
      "op": "ADD"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8474": {
      "op": "SHR"
    },
    "8475": {
      "op": "DUP3"
    },
    "8476": {
      "op": "ADD"
    },
    "8477": {
      "op": "SWAP2"
    },
    "8478": {
      "op": "POP"
    },
    "8479": {
      "op": "JUMPDEST"
    },
    "8480": {
      "op": "DUP2"
    },
    "8481": {
      "op": "DUP2"
    },
    "8482": {
      "op": "LT"
    },
    "8483": {
      "op": "ISZERO"
    },
    "8484": {
      "op": "PUSH2",
      "value": "0x2132"
    },
    "8487": {
      "op": "JUMPI"
    },
    "8488": {
      "op": "DUP3"
    },
    "8489": {
      "op": "DUP2"
    },
    "8490": {
      "op": "SSTORE"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8493": {
      "op": "ADD"
    },
    "8494": {
      "op": "PUSH2",
      "value": "0x211F"
    },
    "8497": {
      "op": "JUMP"
    },
    "8498": {
      "op": "JUMPDEST"
    },
    "8499": {
      "op": "POP"
    },
    "8500": {
      "op": "POP"
    },
    "8501": {
      "op": "POP"
    },
    "8502": {
      "op": "POP"
    },
    "8503": {
      "op": "POP"
    },
    "8504": {
      "op": "POP"
    },
    "8505": {
      "jump": "o",
      "op": "JUMP"
    },
    "8506": {
      "op": "JUMPDEST"
    },
    "8507": {
      "op": "DUP2"
    },
    "8508": {
      "op": "MLOAD"
    },
    "8509": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8518": {
      "op": "DUP2"
    },
    "8519": {
      "op": "GT"
    },
    "8520": {
      "op": "ISZERO"
    },
    "8521": {
      "op": "PUSH2",
      "value": "0x2154"
    },
    "8524": {
      "op": "JUMPI"
    },
    "8525": {
      "op": "PUSH2",
      "value": "0x2154"
    },
    "8528": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "8531": {
      "jump": "i",
      "op": "JUMP"
    },
    "8532": {
      "op": "JUMPDEST"
    },
    "8533": {
      "op": "PUSH2",
      "value": "0x2168"
    },
    "8536": {
      "op": "DUP2"
    },
    "8537": {
      "op": "PUSH2",
      "value": "0x2162"
    },
    "8540": {
      "op": "DUP5"
    },
    "8541": {
      "op": "SLOAD"
    },
    "8542": {
      "op": "PUSH2",
      "value": "0x1EA6"
    },
    "8545": {
      "jump": "i",
      "op": "JUMP"
    },
    "8546": {
      "op": "JUMPDEST"
    },
    "8547": {
      "op": "DUP5"
    },
    "8548": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8551": {
      "jump": "i",
      "op": "JUMP"
    },
    "8552": {
      "op": "JUMPDEST"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8555": {
      "op": "DUP1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8558": {
      "op": "DUP4"
    },
    "8559": {
      "op": "GT"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8562": {
      "op": "DUP2"
    },
    "8563": {
      "op": "EQ"
    },
    "8564": {
      "op": "PUSH2",
      "value": "0x219D"
    },
    "8567": {
      "op": "JUMPI"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8570": {
      "op": "DUP5"
    },
    "8571": {
      "op": "ISZERO"
    },
    "8572": {
      "op": "PUSH2",
      "value": "0x2185"
    },
    "8575": {
      "op": "JUMPI"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "op": "DUP6"
    },
    "8578": {
      "op": "DUP4"
    },
    "8579": {
      "op": "ADD"
    },
    "8580": {
      "op": "MLOAD"
    },
    "8581": {
      "op": "JUMPDEST"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8584": {
      "op": "NOT"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8587": {
      "op": "DUP7"
    },
    "8588": {
      "op": "SWAP1"
    },
    "8589": {
      "op": "SHL"
    },
    "8590": {
      "op": "SHR"
    },
    "8591": {
      "op": "NOT"
    },
    "8592": {
      "op": "AND"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8595": {
      "op": "DUP6"
    },
    "8596": {
      "op": "SWAP1"
    },
    "8597": {
      "op": "SHL"
    },
    "8598": {
      "op": "OR"
    },
    "8599": {
      "op": "DUP6"
    },
    "8600": {
      "op": "SSTORE"
    },
    "8601": {
      "op": "PUSH2",
      "value": "0x2132"
    },
    "8604": {
      "op": "JUMP"
    },
    "8605": {
      "op": "JUMPDEST"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8608": {
      "op": "DUP6"
    },
    "8609": {
      "op": "DUP2"
    },
    "8610": {
      "op": "MSTORE"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8613": {
      "op": "DUP2"
    },
    "8614": {
      "op": "KECCAK256"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8617": {
      "op": "NOT"
    },
    "8618": {
      "op": "DUP7"
    },
    "8619": {
      "op": "AND"
    },
    "8620": {
      "op": "SWAP2"
    },
    "8621": {
      "op": "JUMPDEST"
    },
    "8622": {
      "op": "DUP3"
    },
    "8623": {
      "op": "DUP2"
    },
    "8624": {
      "op": "LT"
    },
    "8625": {
      "op": "ISZERO"
    },
    "8626": {
      "op": "PUSH2",
      "value": "0x21CC"
    },
    "8629": {
      "op": "JUMPI"
    },
    "8630": {
      "op": "DUP9"
    },
    "8631": {
      "op": "DUP7"
    },
    "8632": {
      "op": "ADD"
    },
    "8633": {
      "op": "MLOAD"
    },
    "8634": {
      "op": "DUP3"
    },
    "8635": {
      "op": "SSTORE"
    },
    "8636": {
      "op": "SWAP5"
    },
    "8637": {
      "op": "DUP5"
    },
    "8638": {
      "op": "ADD"
    },
    "8639": {
      "op": "SWAP5"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8642": {
      "op": "SWAP1"
    },
    "8643": {
      "op": "SWAP2"
    },
    "8644": {
      "op": "ADD"
    },
    "8645": {
      "op": "SWAP1"
    },
    "8646": {
      "op": "DUP5"
    },
    "8647": {
      "op": "ADD"
    },
    "8648": {
      "op": "PUSH2",
      "value": "0x21AD"
    },
    "8651": {
      "op": "JUMP"
    },
    "8652": {
      "op": "JUMPDEST"
    },
    "8653": {
      "op": "POP"
    },
    "8654": {
      "op": "DUP6"
    },
    "8655": {
      "op": "DUP3"
    },
    "8656": {
      "op": "LT"
    },
    "8657": {
      "op": "ISZERO"
    },
    "8658": {
      "op": "PUSH2",
      "value": "0x21EA"
    },
    "8661": {
      "op": "JUMPI"
    },
    "8662": {
      "op": "DUP8"
    },
    "8663": {
      "op": "DUP6"
    },
    "8664": {
      "op": "ADD"
    },
    "8665": {
      "op": "MLOAD"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8668": {
      "op": "NOT"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8671": {
      "op": "DUP9"
    },
    "8672": {
      "op": "SWAP1"
    },
    "8673": {
      "op": "SHL"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8676": {
      "op": "AND"
    },
    "8677": {
      "op": "SHR"
    },
    "8678": {
      "op": "NOT"
    },
    "8679": {
      "op": "AND"
    },
    "8680": {
      "op": "DUP2"
    },
    "8681": {
      "op": "SSTORE"
    },
    "8682": {
      "op": "JUMPDEST"
    },
    "8683": {
      "op": "POP"
    },
    "8684": {
      "op": "POP"
    },
    "8685": {
      "op": "POP"
    },
    "8686": {
      "op": "POP"
    },
    "8687": {
      "op": "POP"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8690": {
      "op": "SWAP1"
    },
    "8691": {
      "op": "DUP2"
    },
    "8692": {
      "op": "SHL"
    },
    "8693": {
      "op": "ADD"
    },
    "8694": {
      "op": "SWAP1"
    },
    "8695": {
      "op": "SSTORE"
    },
    "8696": {
      "op": "POP"
    },
    "8697": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e893ce9e7e4a2bb3caafc160e735f776bfa8ec5b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\ncontract SmartnodesCore is ERC20Upgradeable {\n    ISmartnodesMultiSig public validatorContract;\n    address public proxyAdmin;\n\n    uint256 public tailEmission = 4e18; // a relative number as the state-time can be adjusted. Equivalent to\n    uint256 public constant UNLOCK_PERIOD = 1_209_600; // 14 days in seconds\n\n    uint256 public emissionRate;\n    uint256 public lockAmount;\n    uint256 public halvingPeriod;\n    uint256 public statesSinceLastHalving;\n    uint256 public totalLocked;\n    uint256 public unlockPeriod;\n\n    struct Validator {\n        uint256 locked;\n        uint256 unlockTime;\n        bytes32 publicKeyHash;\n    }\n\n    struct Job {\n        uint256[] capacities;\n        uint256 payment;\n    }\n\n    mapping(bytes32 => Job) public jobs;\n    mapping(address => Validator) public validators;\n    mapping(address => uint256) public unclaimedRewards;\n\n    uint256 public jobCounter;\n    uint24 public validatorCounter;\n    uint256 public userCounter;\n    uint256 public availableCapacity;\n\n    event TokensLocked(address validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(bytes32 jobHash, bytes32 userHash);\n    event JobCompleted(bytes32 jobHash);\n    event JobDisputed(bytes32 indexed jobHash, uint256 timestamp);\n    event RewardsClaimed(address indexed sender, uint256 amount);\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == address(validatorContract),\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    modifier onlyProxyAdmin() {\n        require(msg.sender == proxyAdmin, \"Caller must be the proxy admin.\");\n        _;\n    }\n\n    function initialize(address[] memory _genesisNodes) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n        proxyAdmin = msg.sender;\n        emissionRate = 1024e18;\n        lockAmount = 400_000e18;\n        halvingPeriod = 8742; // 364.25 * 24 (ie once a year if done 1x every hour)\n        statesSinceLastHalving = 0;\n        unlockPeriod = 1_209_600; // (14 days in seconds)\n\n        jobCounter = 1;\n        validatorCounter = 1;\n        userCounter = 1;\n\n        for (uint i = 0; i < _genesisNodes.length; i++) {\n            _mint(_genesisNodes[i], lockAmount);\n        }\n    }\n\n    // Request a job and associate a payment with it\n    // function requestJob(\n    //     bytes32 userHash,\n    //     bytes32 jobHash,\n    //     uint256[] calldata capacities,\n    //     uint256 paymentAmount // Accept payment in tokens\n    // ) external {\n    //     require(jobHashToId[jobHash] == 0, \"Job already created!\");\n    //     require(capacities.length > 0, \"Job must have a capacity.\");\n    //     jobHashToId[jobHash] = jobCounter;\n\n    //     // Require a payment for the job\n    //     require(paymentAmount > 0, \"Payment must be greater than zero.\");\n    //     require(\n    //         balanceOf(msg.sender) >= paymentAmount,\n    //         \"Insufficient token balance.\"\n    //     );\n    //     require(capacities.length > 0, \"\");\n\n    //     // Transfer the payment tokens and burn them\n    //     _transfer(msg.sender, address(0), paymentAmount); // Burn the tokens by sending to zero address\n\n    //     // Store the job with associated payment\n    //     jobs[jobCounter] = Job({\n    //         capacities: capacities,\n    //         payment: paymentAmount // Store the payment amount\n    //     });\n\n    //     emit JobRequested(jobCounter, jobHash, userHash);\n    //     jobCounter++;\n    // }\n\n    // Complete the job and distribute payment to validators/workers\n    function completeJob(\n        bytes32 jobHash\n    ) external onlyValidatorMultiSig returns (uint256) {\n        // Get the job and calculate reward\n        Job memory job = jobs[jobHash];\n\n        // If we have free a p2p-requested job, update counter\n        if (job.payment == 0) {\n            jobCounter++;\n            emit JobCompleted(jobHash);\n            return 0;\n        }\n\n        uint256 totalReward = job.payment;\n        delete jobs[jobHash];\n        emit JobCompleted(jobHash);\n        return totalReward;\n    }\n\n    /**\n     * @notice Records rewards for later claiming by workers/validators thru mint function\n     */\n    function recordRewards(\n        address[] memory _workers,\n        uint256[] memory _capacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted,\n        uint256 additionalReward\n    ) external onlyValidatorMultiSig {\n        if (statesSinceLastHalving >= halvingPeriod) {\n            // If we have hit the halving period, reduce the reward by half\n            if (emissionRate > tailEmission) {\n                emissionRate /= 2;\n            }\n        }\n\n        // Calculate total amount to allocate to workers and validators\n        uint256 validatorReward;\n        uint256 workerReward;\n\n        if (_workers.length == 0) {\n            validatorReward = emissionRate + additionalReward;\n            workerReward = 0;\n        } else {\n            validatorReward = ((emissionRate + additionalReward) * 20) / 100;\n            workerReward = ((emissionRate + additionalReward) * 80) / 100;\n        }\n\n        // Record validator rewards\n        uint256 validatorShare = validatorReward / _validatorsVoted.length;\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            address validator = _validatorsVoted[v];\n            unclaimedRewards[validator] += validatorShare;\n        }\n\n        // Record worker rewards\n        if (_workers.length > 0) {\n            for (uint256 w = 0; w < _workers.length; w++) {\n                uint256 reward = ((_capacities[w] * workerReward) /\n                    _totalCapacity);\n                unclaimedRewards[_workers[w]] += reward;\n            }\n        }\n\n        statesSinceLastHalving++;\n    }\n\n    /**\n     * @notice Allows users to claim their accumulated rewards\n     */\n    function claimRewards() external {\n        uint256 amount = unclaimedRewards[msg.sender];\n        require(amount > 0, \"No rewards to claim\");\n\n        unclaimedRewards[msg.sender] = 0;\n        _mint(msg.sender, amount);\n\n        emit RewardsClaimed(msg.sender, amount);\n    }\n\n    /**\n     * @dev Validator token unlocking, 14 day withdrawal period.\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n        require(\n            validators[sender].publicKeyHash != bytes32(0),\n            \"Validator does not exist.\"\n        );\n\n        transferFrom(sender, address(this), amount);\n        validators[sender].locked += amount;\n        totalLocked += amount;\n\n        emit TokensLocked(sender, amount);\n    }\n\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        Validator storage validator = validators[msg.sender];\n        require(\n            validators[msg.sender].publicKeyHash != bytes32(0),\n            \"Validator does not exist.\"\n        );\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            if (validator.locked < lockAmount) {\n                validatorContract.removeValidator(msg.sender);\n            }\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            totalLocked -= amount;\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            transferFrom(address(this), msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n        require(\n            validators[msg.sender].publicKeyHash == bytes32(0),\n            \"Validator already created with this account!\"\n        );\n\n        validators[msg.sender] = Validator({\n            locked: 0,\n            unlockTime: 0,\n            publicKeyHash: _publicKeyHash\n        });\n\n        _lockTokens(msg.sender, lockAmount);\n        validatorCounter++;\n    }\n\n    function isLocked(address validatorAddress) external view returns (bool) {\n        return validators[validatorAddress].locked >= lockAmount;\n    }\n\n    /**\n     * @notice View function to check unclaimed rewards\n     */\n    function getUnclaimedRewards(address user) external view returns (uint256) {\n        return unclaimedRewards[user];\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return validatorContract.getNumValidators();\n    }\n\n    function getValidatorInfo(\n        address validatorAddress\n    ) external view returns (bool, bytes32) {\n        Validator memory _validator = validators[validatorAddress];\n        bool isActive = validatorContract.isActiveValidator(validatorAddress);\n        return (isActive, _validator.publicKeyHash);\n    }\n\n    function setValidatorContract(address _validatorAddress) external {\n        require(\n            address(validatorContract) == address(0),\n            \"Validator address already set.\"\n        );\n        validatorContract = ISmartnodesMultiSig(_validatorAddress);\n    }\n\n    function halveStateTime() external onlyProxyAdmin {\n        // By reducing the state time in half, we must reduce emissions (ie. state reward)\n        // by half, including the tail emission value\n        tailEmission /= 2;\n        emissionRate /= 2;\n        halvingPeriod *= 2; // Double the state updates requied between halvings\n        validatorContract.halvePeriod(); // Halve the time required between state updates\n    }\n\n    function doubleStateTime() external onlyProxyAdmin {\n        tailEmission *= 2;\n        emissionRate *= 2;\n        halvingPeriod /= 2; // Double the state updates requied between halvings\n        validatorContract.doublePeriod(); // Halve the time required between state updates\n    }\n\n    function changeLockAmount(uint256 amount) external onlyProxyAdmin {\n        lockAmount = amount;\n    }\n}\n",
  "sourceMap": "184:10870:24:-:0;;;346:4;316:34;;184:10870;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}