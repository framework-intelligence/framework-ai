{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "seedValidators",
          "type": "address[]"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeJobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "disputeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "getJobValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "getValidatorBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_leadDevelopers",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_communityWallet",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddr",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "activity",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_workerCapacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "validatorIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userHashByAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "validatorAddressByHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "workers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "26": "contracts/SmartnodesCore.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "30": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5429
      ],
      "ContextUpgradeable": [
        5186
      ],
      "ERC20Upgradeable": [
        3757
      ],
      "IERC20MetadataUpgradeable": [
        5144
      ],
      "IERC20Upgradeable": [
        5119
      ],
      "ISmartnodesMultiSig": [
        3013
      ],
      "Initializable": [
        3834
      ],
      "SmartnodesCore": [
        1226
      ]
    },
    "id": 1227,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:26"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1227,
        "sourceUnit": 3758,
        "src": "57:78:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1227,
        "sourceUnit": 3014,
        "src": "136:46:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 141,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "298:16:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3757,
              "src": "298:16:26"
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:26"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "184:86:26",
          "text": " @title SmartNodes\n @dev An ERC20 contract for managing off-chain networks"
        },
        "fullyImplemented": true,
        "id": 1226,
        "linearizedBaseContracts": [
          1226,
          3757,
          5144,
          5119,
          5186,
          3834
        ],
        "name": "SmartnodesCore",
        "nameLocation": "280:14:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 145,
            "mutability": "mutable",
            "name": "_validatorContractInstance",
            "nameLocation": "384:26:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "356:54:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 144,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 143,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "356:19:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3013,
                "src": "356:19:26"
              },
              "referencedDeclaration": 3013,
              "src": "356:19:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f79621bd",
            "id": 147,
            "mutability": "mutable",
            "name": "validatorContractAddress",
            "nameLocation": "431:24:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "416:39:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 146,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 149,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "520:18:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "505:33:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 148,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 151,
            "mutability": "mutable",
            "name": "userCounter",
            "nameLocation": "559:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "544:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 153,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "591:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "576:25:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 152,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2d49c4b",
            "id": 155,
            "mutability": "mutable",
            "name": "activeValidators",
            "nameLocation": "622:16:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "607:31:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 157,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "659:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "644:28:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 156,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 159,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "693:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "678:28:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 165,
            "name": "TokensLocked",
            "nameLocation": "733:12:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "762:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "746:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "781:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "773:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:43:26"
            },
            "src": "727:62:26"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 171,
            "name": "UnlockInitiated",
            "nameLocation": "800:15:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "832:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "816:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "851:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "843:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:47:26"
            },
            "src": "794:69:26"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 177,
            "name": "TokensUnlocked",
            "nameLocation": "874:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "905:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "889:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "924:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "916:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:43:26"
            },
            "src": "868:64:26"
          },
          {
            "anonymous": false,
            "eventSelector": "5dd5aff7b55a6d23db5800ae74fafb29f5f00976a85526c852c81900d14cf3e7",
            "id": 186,
            "name": "JobRequested",
            "nameLocation": "943:12:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "981:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "965:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1006:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "998:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seedValidators",
                  "nameLocation": "1035:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1025:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 182,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1025:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 183,
                    "nodeType": "ArrayTypeName",
                    "src": "1025:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:100:26"
            },
            "src": "937:119:26"
          },
          {
            "anonymous": false,
            "eventSelector": "9b5ed714c31dfcb1a9397710b6fc1842f37d94ab5dc0ccb528d9a2c97ea76f2a",
            "id": 192,
            "name": "JobCompleted",
            "nameLocation": "1067:12:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1096:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1080:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1111:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1103:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1079:42:26"
            },
            "src": "1061:61:26"
          },
          {
            "anonymous": false,
            "eventSelector": "6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7",
            "id": 198,
            "name": "JobDisputed",
            "nameLocation": "1133:11:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1161:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1145:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1176:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1168:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:42:26"
            },
            "src": "1127:60:26"
          },
          {
            "canonicalName": "SmartnodesCore.User",
            "id": 205,
            "members": [
              {
                "constant": false,
                "id": 200,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "1297:11:26",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "1289:19:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 199,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1289:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 202,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1326:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "1318:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 201,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 204,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1355:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "1349:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 203,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1349:5:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1274:4:26",
            "nodeType": "StructDefinition",
            "scope": 1226,
            "src": "1267:105:26",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 216,
            "members": [
              {
                "constant": false,
                "id": 207,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "1516:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "1508:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 206,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1508:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 209,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "1547:16:26",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "1539:24:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 208,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1539:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 211,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "1581:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "1573:14:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 210,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1573:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 213,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "1605:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "1597:18:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 212,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1597:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 215,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "1631:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "1625:16:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 214,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1625:5:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "1488:9:26",
            "nodeType": "StructDefinition",
            "scope": 1226,
            "src": "1481:167:26",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 230,
            "members": [
              {
                "constant": false,
                "id": 218,
                "mutability": "mutable",
                "name": "author",
                "nameLocation": "1812:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1804:14:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 217,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1804:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 221,
                "mutability": "mutable",
                "name": "seedValidators",
                "nameLocation": "1838:14:26",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1828:24:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 220,
                  "nodeType": "ArrayTypeName",
                  "src": "1828:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 224,
                "mutability": "mutable",
                "name": "workers",
                "nameLocation": "1872:7:26",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1862:17:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 223,
                  "nodeType": "ArrayTypeName",
                  "src": "1862:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 227,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "1899:10:26",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1889:20:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 226,
                  "nodeType": "ArrayTypeName",
                  "src": "1889:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 229,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "1924:8:26",
                "nodeType": "VariableDeclaration",
                "scope": 230,
                "src": "1919:13:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 228,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1919:4:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "1790:3:26",
            "nodeType": "StructDefinition",
            "scope": 1226,
            "src": "1783:156:26",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 233,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "2003:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "1979:50:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 231,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1979:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32315f3030305f303030653138",
              "id": 232,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2016:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21_000_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 236,
            "mutability": "constant",
            "name": "_TAIL_EMISSION",
            "nameLocation": "2052:14:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2035:38:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2035:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38653138",
              "id": 235,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2069:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000000000000000000_by_1",
                "typeString": "int_const 8000000000000000000"
              },
              "value": "8e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c8df245a",
            "id": 239,
            "mutability": "mutable",
            "name": "halving",
            "nameLocation": "2095:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2080:29:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 237,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2080:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32313630",
              "id": 238,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2105:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2160_by_1",
                "typeString": "int_const 2160"
              },
              "value": "2160"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 242,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "2188:12:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2173:36:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 240,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2173:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353132653138",
              "id": 241,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2203:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_512000000000000000000_by_1",
                "typeString": "int_const 512000000000000000000"
              },
              "value": "512e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 245,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "2281:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2266:37:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 243,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2266:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35305f303030653138",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2294:9:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000000"
              },
              "value": "50_000e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 248,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "2368:12:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2353:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 246,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2353:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530343030",
              "id": 247,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2383:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50400_by_1",
                "typeString": "int_const 50400"
              },
              "value": "50400"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b115f50d",
            "id": 250,
            "mutability": "mutable",
            "name": "timeSinceLastHalving",
            "nameLocation": "2409:20:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2394:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 249,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2394:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cea6ab98",
            "id": 255,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "2517:5:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2485:37:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$205_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.User)"
            },
            "typeName": {
              "id": 254,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 251,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2493:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2485:24:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$205_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 253,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 252,
                  "name": "User",
                  "nameLocations": [
                    "2504:4:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "2504:4:26"
                },
                "referencedDeclaration": 205,
                "src": "2504:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$205_storage_ptr",
                  "typeString": "struct SmartnodesCore.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d3eece97",
            "id": 259,
            "mutability": "mutable",
            "name": "workers",
            "nameLocation": "2563:7:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2528:42:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 258,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 256,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2536:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2528:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 257,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2547:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38e56261",
            "id": 263,
            "mutability": "mutable",
            "name": "validatorAddressByHash",
            "nameLocation": "2611:22:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2576:57:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 262,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 260,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2584:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2576:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 261,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2595:7:26",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 268,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "2676:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2639:47:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 267,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 264,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2647:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2639:29:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 266,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 265,
                  "name": "Validator",
                  "nameLocations": [
                    "2658:9:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 216,
                  "src": "2658:9:26"
                },
                "referencedDeclaration": 216,
                "src": "2658:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38ed7cfc",
            "id": 273,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "2723:4:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2692:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
              "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 272,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 269,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2700:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2692:23:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 271,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 270,
                  "name": "Job",
                  "nameLocations": [
                    "2711:3:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 230,
                  "src": "2711:3:26"
                },
                "referencedDeclaration": 230,
                "src": "2711:3:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21b0908b",
            "id": 276,
            "mutability": "mutable",
            "name": "activeJobs",
            "nameLocation": "2750:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2733:27:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 274,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2733:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 275,
              "nodeType": "ArrayTypeName",
              "src": "2733:9:26",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d057fc19",
            "id": 280,
            "mutability": "mutable",
            "name": "userHashByAddress",
            "nameLocation": "2826:17:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2791:52:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 279,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 277,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2799:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2791:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 278,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2810:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 284,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "2884:20:26",
            "nodeType": "VariableDeclaration",
            "scope": 1226,
            "src": "2849:55:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 283,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 281,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2857:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2849:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 282,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2868:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "2944:151:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2975:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2979:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2975:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 289,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2989:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2975:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3027:40:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2954:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2954:123:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2954:123:26"
                },
                {
                  "id": 294,
                  "nodeType": "PlaceholderStatement",
                  "src": "3087:1:26"
                }
              ]
            },
            "id": 296,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "2920:21:26",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2941:2:26"
            },
            "src": "2911:184:26",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "3222:996:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3245:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3259:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 306,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "3232:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:33:26"
                },
                {
                  "expression": {
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 311,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3349:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3363:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3349:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3349:15:26"
                },
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 315,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "3374:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3387:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3374:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:14:26"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "3398:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3419:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3398:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:22:26"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "3469:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "353132653138",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3484:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_512000000000000000000_by_1",
                        "typeString": "int_const 512000000000000000000"
                      },
                      "value": "512e18"
                    },
                    "src": "3469:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:21:26"
                },
                {
                  "expression": {
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 327,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3551:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31305f303030653138",
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3564:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000000"
                      },
                      "value": "10_000e18"
                    },
                    "src": "3551:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:22:26"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 331,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "3627:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38373336",
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3637:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8736_by_1",
                        "typeString": "int_const 8736"
                      },
                      "value": "8736"
                    },
                    "src": "3627:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:14:26"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 335,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3700:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f3230395f363030",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3715:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1209600_by_1",
                        "typeString": "int_const 1209600"
                      },
                      "value": "1_209_600"
                    },
                    "src": "3700:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "3700:24:26"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 339,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "3747:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3770:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3747:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:24:26"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "devWallets",
                      "nameLocation": "3790:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 387,
                      "src": "3782:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3782:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "initialValue": {
                    "hexValue": "3735305f303030653138",
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3803:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_750000000000000000000000_by_1",
                      "typeString": "int_const 750000000000000000000000"
                    },
                    "value": "750_000e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3782:31:26"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "communityWallet",
                      "nameLocation": "3852:15:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 387,
                      "src": "3844:23:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3844:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "hexValue": "315f3735305f303030653138",
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3870:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1750000000000000000000000_by_1",
                      "typeString": "int_const 1750000000000000000000000"
                    },
                    "value": "1_750_000e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3844:38:26"
                },
                {
                  "body": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "3991:87:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 363,
                                "name": "_leadDevelopers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "4011:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 365,
                              "indexExpression": {
                                "id": 364,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 352,
                                "src": "4027:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4011:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 366,
                                "name": "devWallets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "4031:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 367,
                                  "name": "_leadDevelopers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "4044:15:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4060:6:26",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4044:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4031:35:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 362,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "4005:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4005:62:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "4005:62:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 355,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "3958:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 356,
                        "name": "_leadDevelopers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3962:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3978:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3962:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3958:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "initializationExpression": {
                    "assignments": [
                      352
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3951:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "3946:6:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3946:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 354,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3955:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3946:10:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3986:3:26",
                      "subExpression": {
                        "id": 359,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3986:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 361,
                    "nodeType": "ExpressionStatement",
                    "src": "3986:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "3941:137:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 375,
                        "name": "_communityWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "4094:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 376,
                        "name": "communityWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "4112:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3569,
                      "src": "4088:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4088:40:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:40:26"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 379,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "4167:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4183:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4167:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:17:26"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "4194:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4210:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "4194:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:17:26"
                }
              ]
            },
            "functionSelector": "462d0b2e",
            "id": 388,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 303,
                  "name": "initializer",
                  "nameLocations": [
                    "3210:11:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3808,
                  "src": "3210:11:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:11:26"
              }
            ],
            "name": "initialize",
            "nameLocation": "3110:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_leadDevelopers",
                  "nameLocation": "3147:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3130:32:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 297,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3130:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 298,
                    "nodeType": "ArrayTypeName",
                    "src": "3130:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "_communityWallet",
                  "nameLocation": "3180:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3172:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3120:82:26"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3222:0:26"
            },
            "scope": 1226,
            "src": "3101:1117:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "4289:261:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 394,
                          "name": "validatorContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "4320:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4356:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4348:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4348:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4348:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4320:38:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4372:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4299:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4299:115:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4299:115:26"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 403,
                      "name": "_validatorContractInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4424:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 405,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "4473:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 404,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3013,
                        "src": "4453:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$3013_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4453:37:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "4424:66:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "4424:66:26"
                },
                {
                  "expression": {
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 409,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "4500:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 410,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "4527:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4500:43:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "4500:43:26"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "4233:20:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "4262:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "4254:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4253:26:26"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4289:0:26"
            },
            "scope": 1226,
            "src": "4224:326:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "4696:426:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 421,
                            "name": "userHashByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4783:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 424,
                          "indexExpression": {
                            "expression": {
                              "id": 422,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4801:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4805:6:26",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4801:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4783:29:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4824:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4816:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 425,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4816:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4816:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4783:43:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4840:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4762:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4762:114:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "4762:114:26"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 433,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "4887:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_User_$205_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.User storage ref)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "id": 434,
                        "name": "_publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4893:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4887:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$205_storage",
                        "typeString": "struct SmartnodesCore.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 437,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4943:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4947:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4943:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 439,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "4982:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "3530",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5022:2:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 436,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "4911:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$205_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.User storage pointer)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4930:11:26",
                        "4967:13:26",
                        "5010:10:26"
                      ],
                      "names": [
                        "userAddress",
                        "publicKeyHash",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4911:124:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$205_memory_ptr",
                        "typeString": "struct SmartnodesCore.User memory"
                      }
                    },
                    "src": "4887:148:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$205_storage",
                      "typeString": "struct SmartnodesCore.User storage ref"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:148:26"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 444,
                        "name": "userHashByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "5046:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 447,
                      "indexExpression": {
                        "expression": {
                          "id": 445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5064:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5068:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5064:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5046:29:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 448,
                      "name": "_publicKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "5078:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5046:46:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "5046:46:26"
                },
                {
                  "expression": {
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5102:13:26",
                    "subExpression": {
                      "id": 451,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "5102:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "5102:13:26"
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "4556:84:26",
              "text": " @dev Create a User, limit one per address & public key hash (RSA)"
            },
            "functionSelector": "abf7bfd8",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "4654:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "4673:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "4665:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4664:24:26"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4696:0:26"
            },
            "scope": 1226,
            "src": "4645:477:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "5348:795:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 464,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "5379:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 467,
                          "indexExpression": {
                            "expression": {
                              "id": 465,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5400:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5404:6:26",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5400:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5379:32:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5415:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5379:37:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206578697374732e",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5430:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        },
                        "value": "Validator already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a18de8d1ad1bc1800c81afbb9953539c72eecd146ff59c68eba67bf3f5cd478d",
                          "typeString": "literal_string \"Validator already exists.\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5358:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5358:109:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "5358:109:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 475,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5509:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5513:6:26",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5509:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 474,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3263,
                              "src": "5499:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5499:21:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 478,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "5524:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5499:36:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 480,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "5539:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 481,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "5554:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5539:25:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5499:65:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5578:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5478:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5478:139:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:139:26"
                },
                {
                  "expression": {
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 487,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "5674:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 489,
                      "indexExpression": {
                        "id": 488,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "5685:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5674:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$216_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 491,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "5746:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 492,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5792:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5796:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5792:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 494,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "5824:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5860:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "3530",
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5887:2:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          }
                        ],
                        "id": 490,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "5707:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$216_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5731:13:26",
                        "5774:16:26",
                        "5816:6:26",
                        "5848:10:26",
                        "5875:10:26"
                      ],
                      "names": [
                        "publicKeyHash",
                        "validatorAddress",
                        "locked",
                        "unlockTime",
                        "reputation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5707:193:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$216_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "5674:226:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$216_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:226:26"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 500,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "5911:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "expression": {
                          "id": 501,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5932:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5936:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5932:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5911:32:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 504,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "5946:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5911:53:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:53:26"
                },
                {
                  "expression": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 507,
                        "name": "validatorAddressByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "5974:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "id": 508,
                        "name": "_publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "5997:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5974:38:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 510,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6015:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6019:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6015:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5974:51:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "5974:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 515,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6082:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6086:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6082:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 517,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "6094:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 514,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 806,
                      "src": "6070:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6070:35:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6070:35:26"
                },
                {
                  "expression": {
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6116:20:26",
                    "subExpression": {
                      "id": 520,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "6116:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "6116:20:26"
                }
              ]
            },
            "documentation": {
              "id": 456,
              "nodeType": "StructuredDocumentation",
              "src": "5128:114:26",
              "text": " @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
            },
            "functionSelector": "497dfe63",
            "id": 524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "5256:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "5289:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "5281:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5281:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "5321:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "5313:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5313:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5271:67:26"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5348:0:26"
            },
            "scope": 1226,
            "src": "5247:896:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "6365:1298:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 537,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6465:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6469:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6465:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 539,
                      "name": "validatorContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "6479:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6465:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 564,
                  "nodeType": "IfStatement",
                  "src": "6461:228:26",
                  "trueBody": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "6505:184:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 541,
                              "name": "userHashByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "6523:17:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 544,
                            "indexExpression": {
                              "expression": {
                                "id": 542,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6541:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6545:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6541:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6523:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6564:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6556:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 545,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6556:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6556:10:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6523:43:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 562,
                        "nodeType": "IfStatement",
                        "src": "6519:160:26",
                        "trueBody": {
                          "id": 561,
                          "nodeType": "Block",
                          "src": "6568:111:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 551,
                                    "name": "userHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 526,
                                    "src": "6597:8:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 550,
                                  "name": "createUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 455,
                                  "src": "6586:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6586:20:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 553,
                              "nodeType": "ExpressionStatement",
                              "src": "6586:20:26"
                            },
                            {
                              "expression": {
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 554,
                                  "name": "userHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 526,
                                  "src": "6624:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 555,
                                    "name": "userHashByAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "6635:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                      "typeString": "mapping(address => bytes32)"
                                    }
                                  },
                                  "id": 558,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 556,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6653:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6657:6:26",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6653:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6635:29:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "6624:40:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 560,
                              "nodeType": "ExpressionStatement",
                              "src": "6624:40:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 566,
                          "name": "userHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "6707:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6727:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6719:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 567,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6719:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6719:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6707:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f74207265676973746572656421",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6731:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2662cfe69e59afcc0e4be6b0ffe6f1fda50fc8b79c94ddf5a5c98e71a845f489",
                          "typeString": "literal_string \"User not registered!\""
                        },
                        "value": "User not registered!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2662cfe69e59afcc0e4be6b0ffe6f1fda50fc8b79c94ddf5a5c98e71a845f489",
                          "typeString": "literal_string \"User not registered!\""
                        }
                      ],
                      "id": 565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6699:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6699:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "6699:55:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 576,
                              "name": "jobs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "6772:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                                "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                              }
                            },
                            "id": 578,
                            "indexExpression": {
                              "id": 577,
                              "name": "jobHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "6777:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6772:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$230_storage",
                              "typeString": "struct SmartnodesCore.Job storage ref"
                            }
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6786:6:26",
                          "memberName": "author",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 218,
                          "src": "6772:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6804:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6796:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 580,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6796:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6796:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6772:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f6220616c726561647920637265617465642e",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6808:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42ad34d022cd5c2f061afe8c5fe6f6360c9e039f0bd4289af315d9f5963f4f28",
                          "typeString": "literal_string \"Job already created.\""
                        },
                        "value": "Job already created."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42ad34d022cd5c2f061afe8c5fe6f6360c9e039f0bd4289af315d9f5963f4f28",
                          "typeString": "literal_string \"Job already created.\""
                        }
                      ],
                      "id": 575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6764:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6764:67:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "6764:67:26"
                },
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "_seedValidators",
                      "nameLocation": "6933:15:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 662,
                      "src": "6916:32:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6916:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 591,
                        "nodeType": "ArrayTypeName",
                        "src": "6916:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7010:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 593,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "6951:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6991:18:26",
                      "memberName": "generateValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2936,
                      "src": "6951:58:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (address[] memory)"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6951:61:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6916:96:26"
                },
                {
                  "assignments": [
                    602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 602,
                      "mutability": "mutable",
                      "name": "_validatorIds",
                      "nameLocation": "7039:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 662,
                      "src": "7022:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 600,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7022:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 601,
                        "nodeType": "ArrayTypeName",
                        "src": "7022:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7069:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7055:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 603,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7059:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 604,
                        "nodeType": "ArrayTypeName",
                        "src": "7059:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7055:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7022:49:26"
                },
                {
                  "body": {
                    "id": 630,
                    "nodeType": "Block",
                    "src": "7164:84:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 620,
                              "name": "_validatorIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "7178:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 622,
                            "indexExpression": {
                              "id": 621,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 610,
                              "src": "7192:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7178:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 623,
                              "name": "validatorIdByAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "7197:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 627,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 624,
                                "name": "_seedValidators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 592,
                                "src": "7218:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 626,
                              "indexExpression": {
                                "id": 625,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 610,
                                "src": "7234:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7218:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7197:40:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7178:59:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 629,
                        "nodeType": "ExpressionStatement",
                        "src": "7178:59:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 613,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "7131:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 614,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "7135:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7151:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7135:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7131:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "initializationExpression": {
                    "assignments": [
                      610
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 610,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7124:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "7116:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 609,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7116:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 612,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7128:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7116:13:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7159:3:26",
                      "subExpression": {
                        "id": 617,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "7159:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "nodeType": "ExpressionStatement",
                    "src": "7159:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "7111:137:26"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 632,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "7303:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 634,
                      "indexExpression": {
                        "id": 633,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "7308:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7303:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 636,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7345:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7349:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7345:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 638,
                          "name": "_seedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "7385:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 642,
                                "name": "_capacities",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 531,
                                "src": "7437:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7449:6:26",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7437:18:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7423:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 639,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7427:7:26",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 640,
                              "nodeType": "ArrayTypeName",
                              "src": "7427:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7423:33:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 645,
                          "name": "_capacities",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 531,
                          "src": "7482:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7517:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 635,
                        "name": "Job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "7319:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Job_$230_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Job storage pointer)"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7337:6:26",
                        "7369:14:26",
                        "7414:7:26",
                        "7470:10:26",
                        "7507:8:26"
                      ],
                      "names": [
                        "author",
                        "seedValidators",
                        "workers",
                        "capacities",
                        "activity"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7319:213:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "src": "7303:229:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$230_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:229:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 651,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "7561:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 652,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7570:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7576:9:26",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7570:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 654,
                        "name": "_seedValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "7587:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 650,
                      "name": "JobRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "7548:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,address[] memory)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7548:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "EmitStatement",
                  "src": "7543:60:26"
                },
                {
                  "expression": {
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7613:12:26",
                    "subExpression": {
                      "id": 657,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "7613:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "7613:12:26"
                },
                {
                  "expression": {
                    "id": 660,
                    "name": "_validatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 602,
                    "src": "7643:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 536,
                  "id": 661,
                  "nodeType": "Return",
                  "src": "7636:20:26"
                }
              ]
            },
            "functionSelector": "1d4e7793",
            "id": 663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "6208:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "6236:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "6228:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6228:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "6262:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "6254:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6254:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "6298:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "6279:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 529,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6279:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 530,
                    "nodeType": "ArrayTypeName",
                    "src": "6279:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6218:97:26"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "validatorIds",
                  "nameLocation": "6351:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "6334:29:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 533,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6334:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 534,
                    "nodeType": "ArrayTypeName",
                    "src": "6334:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6333:31:26"
            },
            "scope": 1226,
            "src": "6199:1464:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "7814:299:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 677,
                            "name": "_workers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "7832:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7841:6:26",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7832:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 679,
                                "name": "jobs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "7851:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                                  "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                                }
                              },
                              "id": 681,
                              "indexExpression": {
                                "id": 680,
                                "name": "jobHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 665,
                                "src": "7856:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7851:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$230_storage",
                                "typeString": "struct SmartnodesCore.Job storage ref"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7865:10:26",
                            "memberName": "capacities",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 227,
                            "src": "7851:24:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7876:6:26",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7851:31:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7832:50:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7824:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7824:59:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "7824:59:26"
                },
                {
                  "expression": {
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 687,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "7894:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                            "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 689,
                        "indexExpression": {
                          "id": 688,
                          "name": "jobHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "7899:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7894:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7908:7:26",
                      "memberName": "workers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 224,
                      "src": "7894:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 691,
                      "name": "_workers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "7918:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7894:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "7894:32:26"
                },
                {
                  "expression": {
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 694,
                          "name": "jobs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "7936:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                            "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                          }
                        },
                        "id": 696,
                        "indexExpression": {
                          "id": 695,
                          "name": "jobHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "7941:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7936:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage",
                          "typeString": "struct SmartnodesCore.Job storage ref"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7950:8:26",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "7936:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7961:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7936:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "7936:30:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 702,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "8039:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 703,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8048:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8054:9:26",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8048:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 701,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "8026:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 706,
                  "nodeType": "EmitStatement",
                  "src": "8021:43:26"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 707,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "8082:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 709,
                      "indexExpression": {
                        "id": 708,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "8087:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8082:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8096:10:26",
                    "memberName": "capacities",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 227,
                    "src": "8082:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 711,
                  "nodeType": "Return",
                  "src": "8075:31:26"
                }
              ]
            },
            "functionSelector": "43a8d914",
            "id": 713,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 671,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 670,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "7765:21:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 296,
                  "src": "7765:21:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "7765:21:26"
              }
            ],
            "name": "completeJob",
            "nameLocation": "7678:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "7707:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "7699:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7699:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "7741:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "7724:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 666,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7724:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 667,
                    "nodeType": "ArrayTypeName",
                    "src": "7724:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7689:66:26"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "7796:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7796:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 673,
                    "nodeType": "ArrayTypeName",
                    "src": "7796:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7795:18:26"
            },
            "scope": 1226,
            "src": "7669:444:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "8187:130:26",
              "statements": [
                {
                  "assignments": [
                    722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 722,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "8209:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 739,
                      "src": "8197:15:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 720,
                          "name": "Job",
                          "nameLocations": [
                            "8197:3:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 230,
                          "src": "8197:3:26"
                        },
                        "referencedDeclaration": 230,
                        "src": "8197:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 726,
                  "initialValue": {
                    "baseExpression": {
                      "id": 723,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "8215:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                        "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 725,
                    "indexExpression": {
                      "id": 724,
                      "name": "jobHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "8220:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8215:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$230_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8197:31:26"
                },
                {
                  "expression": {
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 727,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "8238:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$230_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job storage pointer"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8242:8:26",
                      "memberName": "activity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 229,
                      "src": "8238:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8253:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8238:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:20:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 734,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "8285:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 735,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8294:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8300:9:26",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8294:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 733,
                      "name": "JobDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "8273:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8273:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "EmitStatement",
                  "src": "8268:42:26"
                }
              ]
            },
            "functionSelector": "ba3f5443",
            "id": 740,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 717,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "8165:21:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 296,
                  "src": "8165:21:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "8165:21:26"
              }
            ],
            "name": "disputeJob",
            "nameLocation": "8128:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "8147:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 740,
                  "src": "8139:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8139:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8138:17:26"
            },
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8187:0:26"
            },
            "scope": 1226,
            "src": "8119:198:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "8477:479:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 749,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "8495:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8504:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8495:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8507:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8487:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8487:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:56:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 757,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 743,
                              "src": "8571:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 756,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3263,
                            "src": "8561:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8561:17:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 759,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 745,
                          "src": "8582:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8561:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8590:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8553:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8553:61:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 763,
                  "nodeType": "ExpressionStatement",
                  "src": "8553:61:26"
                },
                {
                  "assignments": [
                    765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 765,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "8633:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "8625:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8625:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "baseExpression": {
                      "id": 766,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "8647:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 768,
                    "indexExpression": {
                      "id": 767,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "8668:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8647:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8625:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 771,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "8693:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8708:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8693:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8711:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8685:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8685:54:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "8685:54:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 778,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "8763:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 781,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8779:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1226",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$1226",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8771:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 779,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8771:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8771:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 783,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "8786:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 777,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3364,
                      "src": "8750:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8750:43:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "8750:43:26"
                },
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 786,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "8803:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 788,
                        "indexExpression": {
                          "id": 787,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "8814:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8803:23:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$216_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8827:6:26",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "8803:30:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 790,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "8837:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8803:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "8803:40:26"
                },
                {
                  "assignments": [
                    794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "totalLocked",
                      "nameLocation": "8861:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "8853:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8853:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 799,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 795,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "8875:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 797,
                      "indexExpression": {
                        "id": 796,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "8886:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8875:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$216_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8899:6:26",
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 211,
                    "src": "8875:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8853:52:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 801,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "8934:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 802,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "8942:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 800,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "8921:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8921:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "EmitStatement",
                  "src": "8916:33:26"
                }
              ]
            },
            "documentation": {
              "id": 741,
              "nodeType": "StructuredDocumentation",
              "src": "8323:87:26",
              "text": " @dev Internal function to lock tokens, callable from other functions"
            },
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "8424:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8444:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8436:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8436:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8460:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8452:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8452:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8435:32:26"
            },
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8477:0:26"
            },
            "scope": 1226,
            "src": "8415:541:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "9088:48:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 813,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9110:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9114:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9110:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 815,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "9122:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 812,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 806,
                      "src": "9098:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9098:31:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 817,
                  "nodeType": "ExpressionStatement",
                  "src": "9098:31:26"
                }
              ]
            },
            "documentation": {
              "id": 807,
              "nodeType": "StructuredDocumentation",
              "src": "8962:76:26",
              "text": " @dev Validator token unlocking, 30 day withdrawal period."
            },
            "functionSelector": "6e27d889",
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "9052:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9071:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "9063:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9063:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9062:16:26"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9088:0:26"
            },
            "scope": 1226,
            "src": "9043:93:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "9189:1219:26",
              "statements": [
                {
                  "assignments": [
                    825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 825,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "9207:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "9199:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 824,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9199:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 830,
                  "initialValue": {
                    "baseExpression": {
                      "id": 826,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "9221:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 829,
                    "indexExpression": {
                      "expression": {
                        "id": 827,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9242:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9246:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9242:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9221:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9199:54:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 832,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 825,
                          "src": "9271:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9285:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9271:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9288:29:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9263:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9263:55:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "9263:55:26"
                },
                {
                  "assignments": [
                    840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 840,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "9347:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "9329:27:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 838,
                          "name": "Validator",
                          "nameLocations": [
                            "9329:9:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 216,
                          "src": "9329:9:26"
                        },
                        "referencedDeclaration": 216,
                        "src": "9329:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "baseExpression": {
                      "id": 841,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "9359:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 843,
                    "indexExpression": {
                      "id": 842,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "9370:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9359:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$216_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9329:53:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 846,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 821,
                          "src": "9401:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 847,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "9411:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9421:6:26",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 211,
                          "src": "9411:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9401:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9429:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9393:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9393:69:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "9393:69:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 854,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 821,
                          "src": "9480:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9489:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9480:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9492:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9472:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9472:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "9472:56:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 860,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "9614:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9624:10:26",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 213,
                      "src": "9614:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9638:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9614:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 915,
                    "nodeType": "Block",
                    "src": "9944:458:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 889,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10061:5:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10067:9:26",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10061:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 891,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 840,
                                  "src": "10080:9:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10090:10:26",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 213,
                                "src": "10080:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10061:39:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10118:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 888,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10036:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10036:122:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "10036:122:26"
                      },
                      {
                        "expression": {
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 897,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "10173:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10183:6:26",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "10173:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 900,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 821,
                            "src": "10193:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10173:26:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 902,
                        "nodeType": "ExpressionStatement",
                        "src": "10173:26:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 904,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10219:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10223:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10219:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 906,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "10231:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 903,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "10213:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10213:25:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "10213:25:26"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 910,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10320:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10324:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10320:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 912,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "10332:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 909,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "10305:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10305:34:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 914,
                        "nodeType": "EmitStatement",
                        "src": "10300:39:26"
                      }
                    ]
                  },
                  "id": 916,
                  "nodeType": "IfStatement",
                  "src": "9610:792:26",
                  "trueBody": {
                    "id": 887,
                    "nodeType": "Block",
                    "src": "9641:297:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 864,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "9655:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9665:10:26",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 213,
                            "src": "9655:20:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 867,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9678:5:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9684:9:26",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9678:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 869,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "9696:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9678:30:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9655:53:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "9655:53:26"
                      },
                      {
                        "assignments": [
                          874
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 874,
                            "mutability": "mutable",
                            "name": "totalLocked",
                            "nameLocation": "9792:11:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 887,
                            "src": "9784:19:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 873,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9784:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 879,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 875,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "9806:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9816:6:26",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "9806:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 877,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 821,
                            "src": "9825:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9806:25:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9784:47:26"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 881,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9867:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9871:6:26",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9867:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 883,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 840,
                                "src": "9879:9:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 884,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9889:10:26",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 213,
                              "src": "9879:20:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 880,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "9851:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9851:49:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 886,
                        "nodeType": "EmitStatement",
                        "src": "9846:54:26"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "9151:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9172:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "9164:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9163:16:26"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9189:0:26"
            },
            "scope": 1226,
            "src": "9142:1266:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1039,
              "nodeType": "Block",
              "src": "10796:975:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 936,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3249,
                              "src": "10827:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10827:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 938,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "10843:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10827:28:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 940,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "10859:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10827:42:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c79207265616368656421",
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10883:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        },
                        "value": "Maximum supply reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11cab5cf606eaec88ed86a1e96f1b3431415426e9c915c4fd59deac0ab142c78",
                          "typeString": "literal_string \"Maximum supply reached!\""
                        }
                      ],
                      "id": 935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10806:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:112:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "10806:112:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 945,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "10933:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 946,
                      "name": "halving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "10957:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10933:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 958,
                  "nodeType": "IfStatement",
                  "src": "10929:136:26",
                  "trueBody": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "10966:99:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 948,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "10984:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10999:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "10984:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 956,
                        "nodeType": "IfStatement",
                        "src": "10980:75:26",
                        "trueBody": {
                          "id": 955,
                          "nodeType": "Block",
                          "src": "11005:50:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 951,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 242,
                                  "src": "11023:12:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11039:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "11023:17:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 954,
                              "nodeType": "ExpressionStatement",
                              "src": "11023:17:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 960,
                      "mutability": "mutable",
                      "name": "validatorRewardTotal",
                      "nameLocation": "11083:20:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1039,
                      "src": "11075:28:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11075:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 967,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 961,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "11107:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11122:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "11107:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 964,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11106:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11128:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11106:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11075:56:26"
                },
                {
                  "assignments": [
                    969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 969,
                      "mutability": "mutable",
                      "name": "workerRewardTotal",
                      "nameLocation": "11149:17:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1039,
                      "src": "11141:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 968,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11141:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 970,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "11170:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3830",
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11185:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_80_by_1",
                              "typeString": "int_const 80"
                            },
                            "value": "80"
                          },
                          "src": "11170:17:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 973,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11169:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11191:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11169:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11141:53:26"
                },
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "11266:15:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1039,
                      "src": "11258:23:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 977,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11258:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 979,
                      "name": "validatorRewardTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 960,
                      "src": "11284:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 980,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "11319:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11336:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11319:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11284:58:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11258:84:26"
                },
                {
                  "body": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "11407:68:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 996,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 930,
                                "src": "11427:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 998,
                              "indexExpression": {
                                "id": 997,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "11444:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11427:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 999,
                              "name": "validatorReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "11448:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 995,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "11421:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11421:43:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1001,
                        "nodeType": "ExpressionStatement",
                        "src": "11421:43:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 988,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "11373:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 989,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "11377:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11394:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11377:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11373:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "initializationExpression": {
                    "assignments": [
                      985
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 985,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "11366:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "11358:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 984,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11358:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 987,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11370:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11358:13:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11402:3:26",
                      "subExpression": {
                        "id": 992,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "11402:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 994,
                    "nodeType": "ExpressionStatement",
                    "src": "11402:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "11353:122:26"
                },
                {
                  "body": {
                    "id": 1034,
                    "nodeType": "Block",
                    "src": "11573:159:26",
                    "statements": [
                      {
                        "assignments": [
                          1016
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1016,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "11595:6:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 1034,
                            "src": "11587:14:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1015,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11587:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1026,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1021,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1017,
                                        "name": "_workerCapacities",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 925,
                                        "src": "11606:17:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1019,
                                      "indexExpression": {
                                        "id": 1018,
                                        "name": "w",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1005,
                                        "src": "11624:1:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11606:20:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1020,
                                      "name": "workerRewardTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 969,
                                      "src": "11629:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11606:40:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1022,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11605:42:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1023,
                                "name": "_totalCapacity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 927,
                                "src": "11666:14:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11605:75:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1025,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11604:77:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11587:94:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1028,
                                "name": "_workers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 922,
                                "src": "11701:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1030,
                              "indexExpression": {
                                "id": 1029,
                                "name": "w",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1005,
                                "src": "11710:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11701:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1031,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1016,
                              "src": "11714:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1027,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3569,
                            "src": "11695:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11695:26:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "11695:26:26"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1008,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "11547:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1009,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "11551:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11560:6:26",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11551:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11547:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1035,
                  "initializationExpression": {
                    "assignments": [
                      1005
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "w",
                        "nameLocation": "11540:1:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "11532:9:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11532:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1007,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11544:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11532:13:26"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11568:3:26",
                      "subExpression": {
                        "id": 1012,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "11568:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1014,
                    "nodeType": "ExpressionStatement",
                    "src": "11568:3:26"
                  },
                  "nodeType": "ForStatement",
                  "src": "11527:205:26"
                },
                {
                  "expression": {
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11742:22:26",
                    "subExpression": {
                      "id": 1036,
                      "name": "timeSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "11742:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "11742:22:26"
                }
              ]
            },
            "documentation": {
              "id": 919,
              "nodeType": "StructuredDocumentation",
              "src": "10414:166:26",
              "text": " @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n Updates the emission rate and halving accordingly"
            },
            "functionSelector": "a3273d22",
            "id": 1040,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 932,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "10774:21:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 296,
                  "src": "10774:21:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "10774:21:26"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "10594:10:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "10631:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "10614:25:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 920,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10614:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 921,
                    "nodeType": "ArrayTypeName",
                    "src": "10614:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "_workerCapacities",
                  "nameLocation": "10666:17:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "10649:34:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 923,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10649:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 924,
                    "nodeType": "ArrayTypeName",
                    "src": "10649:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "10701:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "10693:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10693:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "10742:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "10725:33:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 928,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10725:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 929,
                    "nodeType": "ArrayTypeName",
                    "src": "10725:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10604:160:26"
            },
            "returnParameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10796:0:26"
            },
            "scope": 1226,
            "src": "10585:1186:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1060,
              "nodeType": "Block",
              "src": "11946:108:26",
              "statements": [
                {
                  "assignments": [
                    1052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1052,
                      "mutability": "mutable",
                      "name": "jobValidators",
                      "nameLocation": "11973:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1060,
                      "src": "11956:30:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1050,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11956:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ArrayTypeName",
                        "src": "11956:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1057,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1053,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "11989:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Job_$230_storage_$",
                          "typeString": "mapping(bytes32 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 1055,
                      "indexExpression": {
                        "id": 1054,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "11994:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11989:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$230_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12003:14:26",
                    "memberName": "seedValidators",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 221,
                    "src": "11989:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11956:61:26"
                },
                {
                  "expression": {
                    "id": 1058,
                    "name": "jobValidators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1052,
                    "src": "12034:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1047,
                  "id": 1059,
                  "nodeType": "Return",
                  "src": "12027:20:26"
                }
              ]
            },
            "functionSelector": "bc1d82a1",
            "id": 1061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobValidators",
            "nameLocation": "11857:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "11891:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "11883:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11883:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11873:31:26"
            },
            "returnParameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "11928:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1044,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11928:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1045,
                    "nodeType": "ArrayTypeName",
                    "src": "11928:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11927:18:26"
            },
            "scope": 1226,
            "src": "11848:206:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1101,
              "nodeType": "Block",
              "src": "12169:387:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1073,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1063,
                          "src": "12187:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1074,
                          "name": "validatorIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 149,
                          "src": "12202:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12187:33:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12222:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 1072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12179:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12179:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "12179:57:26"
                },
                {
                  "assignments": [
                    1081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1081,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "12263:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1101,
                      "src": "12246:27:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$216_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 1080,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1079,
                          "name": "Validator",
                          "nameLocations": [
                            "12246:9:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 216,
                          "src": "12246:9:26"
                        },
                        "referencedDeclaration": 216,
                        "src": "12246:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$216_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1085,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1082,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "12276:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 1084,
                    "indexExpression": {
                      "id": 1083,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "12287:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12276:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$216_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12246:54:26"
                },
                {
                  "assignments": [
                    1087
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1087,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "12315:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1101,
                      "src": "12310:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1086,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12310:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1093,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1090,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "12384:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$216_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12395:16:26",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "12384:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1088,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "12326:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12353:17:26",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2943,
                      "src": "12326:44:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12326:95:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12310:111:26"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1094,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "12452:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1095,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "12474:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$216_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12485:13:26",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 207,
                        "src": "12474:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1097,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "12512:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$216_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12523:16:26",
                        "memberName": "validatorAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "12512:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1099,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12438:111:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bool,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1100,
                  "nodeType": "Return",
                  "src": "12431:118:26"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 1102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "12069:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "12103:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1102,
                  "src": "12095:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12095:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12085:36:26"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1102,
                  "src": "12145:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1065,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12145:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1102,
                  "src": "12151:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12151:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1102,
                  "src": "12160:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12160:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12144:24:26"
            },
            "scope": 1226,
            "src": "12060:496:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "12661:195:26",
              "statements": [
                {
                  "assignments": [
                    1110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1110,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "12679:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1127,
                      "src": "12671:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1109,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12671:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1114,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1111,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "12693:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1113,
                    "indexExpression": {
                      "id": 1112,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "12714:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12693:38:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12671:60:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1116,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1110,
                          "src": "12749:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12763:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12749:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12766:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 1115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12741:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12741:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "12741:53:26"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1122,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "12812:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 1124,
                      "indexExpression": {
                        "id": 1123,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "12823:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12812:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$216_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12836:13:26",
                    "memberName": "publicKeyHash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 207,
                    "src": "12812:37:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1108,
                  "id": 1126,
                  "nodeType": "Return",
                  "src": "12805:44:26"
                }
              ]
            },
            "functionSelector": "62fb00fc",
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorBytes",
            "nameLocation": "12571:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "12606:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "12598:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12598:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12588:40:26"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "12652:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12652:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12651:9:26"
            },
            "scope": 1226,
            "src": "12562:294:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1137,
              "nodeType": "Block",
              "src": "12918:39:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1133,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "12935:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12949:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12935:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1132,
                  "id": 1136,
                  "nodeType": "Return",
                  "src": "12928:22:26"
                }
              ]
            },
            "functionSelector": "b5cb15f7",
            "id": 1138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCount",
            "nameLocation": "12871:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12883:2:26"
            },
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "12909:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12909:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12908:9:26"
            },
            "scope": 1226,
            "src": "12862:95:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "13024:46:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1143,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "13041:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13062:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13041:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1146,
                  "nodeType": "Return",
                  "src": "13034:29:26"
                }
              ]
            },
            "functionSelector": "7071688a",
            "id": 1148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorCount",
            "nameLocation": "12972:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12989:2:26"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "13015:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13015:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13014:9:26"
            },
            "scope": 1226,
            "src": "12963:107:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "13143:69:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1153,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13160:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13187:16:26",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2948,
                      "src": "13160:43:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13160:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1152,
                  "id": 1156,
                  "nodeType": "Return",
                  "src": "13153:52:26"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "13085:23:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13108:2:26"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "13134:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13134:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13133:9:26"
            },
            "scope": 1226,
            "src": "13076:136:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "13277:36:26",
              "statements": [
                {
                  "expression": {
                    "id": 1163,
                    "name": "emissionRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 242,
                    "src": "13294:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1162,
                  "id": 1164,
                  "nodeType": "Return",
                  "src": "13287:19:26"
                }
              ]
            },
            "functionSelector": "c0a77da9",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissionRate",
            "nameLocation": "13227:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13242:2:26"
            },
            "returnParameters": {
              "id": 1162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "13268:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13268:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13267:9:26"
            },
            "scope": 1226,
            "src": "13218:95:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1175,
              "nodeType": "Block",
              "src": "13372:42:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1171,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "13389:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartnodesCore_$1226",
                          "typeString": "contract SmartnodesCore"
                        }
                      },
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13394:11:26",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3249,
                      "src": "13389:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13389:18:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1170,
                  "id": 1174,
                  "nodeType": "Return",
                  "src": "13382:25:26"
                }
              ]
            },
            "functionSelector": "6c9c2faf",
            "id": 1176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSupply",
            "nameLocation": "13328:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13337:2:26"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "13363:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13363:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13362:9:26"
            },
            "scope": 1226,
            "src": "13319:95:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1196,
              "nodeType": "Block",
              "src": "13490:119:26",
              "statements": [
                {
                  "assignments": [
                    1184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "13508:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "13500:11:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13500:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1188,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1185,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "13514:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1187,
                    "indexExpression": {
                      "id": 1186,
                      "name": "validatorAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "13535:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13514:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13500:49:26"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1189,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "13566:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$216_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 1191,
                        "indexExpression": {
                          "id": 1190,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "13577:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13566:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$216_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13582:6:26",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "13566:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1193,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "13592:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13566:36:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1182,
                  "id": 1195,
                  "nodeType": "Return",
                  "src": "13559:43:26"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 1197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "13429:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "validatorAddr",
                  "nameLocation": "13446:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "13438:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13438:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13437:23:26"
            },
            "returnParameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "13484:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13484:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13483:6:26"
            },
            "scope": 1226,
            "src": "13420:189:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1207,
              "nodeType": "Block",
              "src": "13680:74:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1203,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13697:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13724:21:26",
                      "memberName": "getSelectedValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2954,
                      "src": "13697:48:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13697:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1202,
                  "id": 1206,
                  "nodeType": "Return",
                  "src": "13690:57:26"
                }
              ]
            },
            "functionSelector": "4966d086",
            "id": 1208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProposees",
            "nameLocation": "13624:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13636:2:26"
            },
            "returnParameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1208,
                  "src": "13662:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1199,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13662:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1200,
                    "nodeType": "ArrayTypeName",
                    "src": "13662:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13661:18:26"
            },
            "scope": 1226,
            "src": "13615:139:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1224,
              "nodeType": "Block",
              "src": "13876:61:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1220,
                        "name": "_validatorContractInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "13893:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$3013",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13920:8:26",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2977,
                      "src": "13893:35:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13893:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,address[] memory)"
                    }
                  },
                  "functionReturnParameters": 1219,
                  "id": 1223,
                  "nodeType": "Return",
                  "src": "13886:44:26"
                }
              ]
            },
            "functionSelector": "1865c57d",
            "id": 1225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "13769:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13777:2:26"
            },
            "returnParameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "13827:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13827:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "13836:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13836:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "13845:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13845:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "13854:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1216,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13854:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1217,
                    "nodeType": "ArrayTypeName",
                    "src": "13854:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13826:45:26"
            },
            "scope": 1226,
            "src": "13760:177:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1227,
        "src": "271:13668:26",
        "usedErrors": [],
        "usedEvents": [
          165,
          171,
          177,
          186,
          192,
          198,
          5109,
          5118
        ]
      }
    ],
    "src": "32:13908:26"
  },
  "bytecode": "",
  "bytecodeSha1": "88357280145c49481fa9fb18dafdcbadbe227df3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "149": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "147": [
            2369,
            2382,
            true
          ],
          "148": [
            2369,
            2417,
            true
          ]
        }
      },
      "2": {
        "ERC20Upgradeable._approve": {
          "139": [
            10591,
            10610,
            true
          ],
          "140": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "146": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "141": [
            11303,
            11340,
            false
          ],
          "142": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "143": [
            7951,
            7969,
            true
          ],
          "144": [
            8029,
            8045,
            true
          ],
          "145": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "138": [
            7152,
            7187,
            true
          ]
        }
      },
      "26": {
        "SmartnodesCore._lockTokens": {
          "135": [
            8495,
            8505,
            true
          ],
          "136": [
            8561,
            8588,
            true
          ],
          "137": [
            8693,
            8709,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "119": [
            7832,
            7882,
            true
          ]
        },
        "SmartnodesCore.createUser": {
          "132": [
            4783,
            4826,
            true
          ]
        },
        "SmartnodesCore.createValidator": {
          "120": [
            5379,
            5416,
            true
          ],
          "121": [
            5499,
            5535,
            false
          ],
          "122": [
            5539,
            5564,
            true
          ]
        },
        "SmartnodesCore.getValidatorBytes": {
          "123": [
            12749,
            12764,
            true
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "133": [
            12187,
            12220,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "129": [
            10827,
            10869,
            true
          ],
          "130": [
            10933,
            10964,
            false
          ],
          "131": [
            10984,
            11003,
            false
          ]
        },
        "SmartnodesCore.requestJob": {
          "117": [
            6465,
            6503,
            false
          ],
          "118": [
            6772,
            6806,
            true
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "134": [
            4320,
            4358,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "124": [
            9271,
            9286,
            true
          ],
          "125": [
            9401,
            9427,
            true
          ],
          "126": [
            9480,
            9490,
            true
          ],
          "127": [
            9614,
            9639,
            false
          ],
          "128": [
            10061,
            10100,
            true
          ]
        }
      },
      "3": {},
      "30": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "31": [
            3101,
            3153
          ]
        }
      },
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "104": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "115": [
            2381,
            2394
          ],
          "116": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "91": [
            10583,
            10651
          ],
          "92": [
            10661,
            10729
          ],
          "93": [
            10740,
            10776
          ],
          "94": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "105": [
            8827,
            8892
          ],
          "106": [
            8963,
            8985
          ],
          "107": [
            8995,
            9023
          ],
          "108": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "95": [
            11356,
            11424
          ],
          "96": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "97": [
            7943,
            8011
          ],
          "98": [
            8021,
            8085
          ],
          "99": [
            8192,
            8264
          ],
          "100": [
            8298,
            8336
          ],
          "101": [
            8356,
            8379
          ],
          "102": [
            8390,
            8421
          ],
          "103": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "5": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "8": [
            4907,
            4939
          ],
          "9": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "76": [
            7144,
            7229
          ],
          "77": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "25": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "6": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "68": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "78": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "21": [
            5712,
            5750
          ],
          "22": [
            5760,
            5787
          ],
          "23": [
            5797,
            5808
          ]
        }
      },
      "26": {
        "SmartnodesCore._lockTokens": {
          "109": [
            8487,
            8543
          ],
          "110": [
            8553,
            8614
          ],
          "111": [
            8685,
            8739
          ],
          "112": [
            8750,
            8793
          ],
          "113": [
            8803,
            8843
          ],
          "114": [
            8916,
            8949
          ]
        },
        "SmartnodesCore.completeJob": {
          "26": [
            7824,
            7883
          ],
          "27": [
            7894,
            7926
          ],
          "28": [
            7936,
            7966
          ],
          "29": [
            8021,
            8064
          ],
          "30": [
            8075,
            8106
          ]
        },
        "SmartnodesCore.createUser": {
          "79": [
            4762,
            4876
          ],
          "80": [
            4887,
            5035
          ],
          "81": [
            5046,
            5092
          ],
          "82": [
            5102,
            5115
          ]
        },
        "SmartnodesCore.createValidator": {
          "47": [
            5358,
            5467
          ],
          "48": [
            5478,
            5617
          ],
          "49": [
            5674,
            5900
          ],
          "50": [
            5911,
            5964
          ],
          "51": [
            5974,
            6025
          ],
          "52": [
            6070,
            6105
          ],
          "53": [
            6116,
            6136
          ]
        },
        "SmartnodesCore.disputeJob": {
          "86": [
            8238,
            8258
          ],
          "87": [
            8268,
            8310
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "24": [
            13153,
            13205
          ]
        },
        "SmartnodesCore.getEmissionRate": {
          "4": [
            13287,
            13306
          ]
        },
        "SmartnodesCore.getProposees": {
          "46": [
            13690,
            13747
          ]
        },
        "SmartnodesCore.getState": {
          "10": [
            13886,
            13930
          ]
        },
        "SmartnodesCore.getSupply": {
          "56": [
            13382,
            13407
          ]
        },
        "SmartnodesCore.getUserCount": {
          "83": [
            12928,
            12950
          ]
        },
        "SmartnodesCore.getValidatorBytes": {
          "54": [
            12741,
            12794
          ],
          "55": [
            12805,
            12849
          ]
        },
        "SmartnodesCore.getValidatorCount": {
          "58": [
            13034,
            13063
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "84": [
            12179,
            12236
          ],
          "85": [
            12431,
            12549
          ]
        },
        "SmartnodesCore.initialize": {
          "32": [
            3232,
            3265
          ],
          "33": [
            3349,
            3364
          ],
          "34": [
            3374,
            3388
          ],
          "35": [
            3398,
            3420
          ],
          "36": [
            3469,
            3490
          ],
          "37": [
            3551,
            3573
          ],
          "38": [
            3627,
            3641
          ],
          "39": [
            3700,
            3724
          ],
          "40": [
            3747,
            3771
          ],
          "41": [
            4005,
            4067
          ],
          "42": [
            3986,
            3989
          ],
          "43": [
            4088,
            4128
          ],
          "44": [
            4167,
            4184
          ],
          "45": [
            4194,
            4211
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            13559,
            13602
          ]
        },
        "SmartnodesCore.lockTokens": {
          "57": [
            9098,
            9129
          ]
        },
        "SmartnodesCore.mintTokens": {
          "69": [
            10806,
            10918
          ],
          "70": [
            11023,
            11040
          ],
          "71": [
            11421,
            11464
          ],
          "72": [
            11402,
            11405
          ],
          "73": [
            11695,
            11721
          ],
          "74": [
            11568,
            11571
          ],
          "75": [
            11742,
            11764
          ]
        },
        "SmartnodesCore.requestJob": {
          "11": [
            6586,
            6606
          ],
          "12": [
            6624,
            6664
          ],
          "13": [
            6699,
            6754
          ],
          "14": [
            6764,
            6831
          ],
          "15": [
            7178,
            7237
          ],
          "16": [
            7159,
            7162
          ],
          "17": [
            7303,
            7532
          ],
          "18": [
            7543,
            7603
          ],
          "19": [
            7613,
            7625
          ],
          "20": [
            7636,
            7656
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "88": [
            4299,
            4414
          ],
          "89": [
            4424,
            4490
          ],
          "90": [
            4500,
            4543
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "59": [
            9263,
            9318
          ],
          "60": [
            9393,
            9462
          ],
          "61": [
            9472,
            9528
          ],
          "62": [
            9655,
            9708
          ],
          "63": [
            9846,
            9900
          ],
          "64": [
            10036,
            10158
          ],
          "65": [
            10173,
            10199
          ],
          "66": [
            10213,
            10238
          ],
          "67": [
            10300,
            10339
          ]
        }
      },
      "3": {},
      "30": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "7": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "271:13668:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:28:26;;;;;;;;;713:25:32;;;701:2;686:18;678:28:26;567:177:32;4770:197:2;;;;;;:::i;:::-;;:::i;:::-;;;1370:14:32;;1363:22;1345:41;;1333:2;1318:18;4770:197:2;1205:187:32;3581:106:2;3668:12;;3581:106;;13760:177:26;;;:::i;:::-;;;;;;;;;;:::i;6199:1464::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2353:35::-;;;;;;2733:27;;;;;;:::i;:::-;;:::i;5529:286:2:-;;;;;;:::i;:::-;;:::i;2849:55:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3430:91:2;;;3512:2;4781:36:32;;4769:2;4754:18;3430:91:2;4639:184:32;1979:50:26;;2016:13;1979:50;;2639:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2639:47:26;;;;;;;;;;;;;;;5083:25:32;;;-1:-1:-1;;;;;5144:32:32;;;5139:2;5124:18;;5117:60;5193:18;;;5186:34;;;;5251:2;5236:18;;5229:34;5312:4;5300:17;5294:3;5279:19;;5272:46;5070:3;5055:19;2639:47:26;4828:496:32;13076:136:26;;;:::i;2576:57::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2576:57:26;;;;;;-1:-1:-1;;;;;5678:32:32;;;5660:51;;5648:2;5633:18;2576:57:26;5514:203:32;2692:35:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2692:35:26;;;;;;;;;;;;-1:-1:-1;;;;;5908:32:32;;;5890:51;;5984:14;;5977:22;5972:2;5957:18;;5950:50;5863:18;2692:35:26;5722:284:32;6210:236:2;;;;;;:::i;:::-;;:::i;7669:444:26:-;;;;;;:::i;:::-;;:::i;3101:1117::-;;;;;;:::i;:::-;;:::i;:::-;;13615:139;;;:::i;:::-;;;;;;;:::i;5247:896::-;;;;;;:::i;:::-;;:::i;13420:189::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13514:35:26;13484:4;13514:35;;;:20;:35;;;;;;;;;13592:10;;13566:15;;;:10;:15;;;;;;:22;;;:36;;;13420:189;576:25;;;;;;12562:294;;;;;;:::i;:::-;;:::i;13319:95::-;;;:::i;9043:93::-;;;;;;:::i;:::-;;:::i;12963:107::-;;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;9142:1266:26;;;;;;:::i;:::-;;:::i;505:33::-;;;;;;2704:102:2;;;:::i;2173:36:26:-;;;;;;10585:1186;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4645:477:26:-;;;;;;:::i;:::-;;:::i;2394:35::-;;;;;;12862:95;;;:::i;12060:496::-;;;;;;:::i;:::-;;:::i;:::-;;;;10628:14:32;;10621:22;10603:41;;10675:2;10660:18;;10653:34;;;;-1:-1:-1;;;;;10723:32:32;10703:18;;;10696:60;10591:2;10576:18;12060:496:26;10407:355:32;8119:198:26;;;;;;:::i;:::-;;:::i;11848:206::-;;;;;;:::i;:::-;;:::i;13218:95::-;13294:12;;13218:95;;644:28;;;;;;2080:29;;;;;;4224:326;;;;;;:::i;:::-;;:::i;2485:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2485:37:26;;;;;;;;;;;;;-1:-1:-1;;;;;10983:32:32;;;10965:51;;11047:2;11032:18;;11025:34;;;;11107:4;11095:17;11075:18;;;11068:45;10953:2;10938:18;2485:37:26;10767:352:32;2791:52:26;;;;;;:::i;:::-;;;;;;;;;;;;;;607:31;;;;;;2528:42;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2528:42:26;;;2266:37;;;;;;4313:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;544:26:26;;;;;;416:39;;;;;-1:-1:-1;;;;;416:39:26;;;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;13760:177:26:-;13827:7;13836;13845;13854:16;13893:26;;;;;;;;;-1:-1:-1;;;;;13893:26:26;-1:-1:-1;;;;;13893:35:26;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13893:37:26;;;;;;;;;;;;:::i;:::-;13886:44;;;;;;;;13760:177;;;;:::o;6199:1464::-;6479:24;;6334:29;;-1:-1:-1;;;;;6479:24:26;6465:10;:38;6461:228;;6541:10;6564:1;6523:29;;;:17;:29;;;;;;6519:160;;6586:20;6597:8;6586:10;:20::i;:::-;6653:10;6635:29;;;;:17;:29;;;;;;;-1:-1:-1;6519:160:26;6707:8;6699:55;;;;-1:-1:-1;;;6699:55:26;;13401:2:32;6699:55:26;;;13383:21:32;13440:2;13420:18;;;13413:30;-1:-1:-1;;;13459:18:32;;;13452:50;13519:18;;6699:55:26;;;;;;;;;6804:1;6772:13;;;:4;:13;;;;;:20;-1:-1:-1;;;;;6772:20:26;:34;6764:67;;;;-1:-1:-1;;;6764:67:26;;13750:2:32;6764:67:26;;;13732:21:32;13789:2;13769:18;;;13762:30;-1:-1:-1;;;13808:18:32;;;13801:50;13868:18;;6764:67:26;13548:344:32;6764:67:26;6951:26;;:61;;-1:-1:-1;;;6951:61:26;;:26;:61;;;713:25:32;6916:32:26;;-1:-1:-1;;;;;6951:26:26;;:58;;686:18:32;;6951:61:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6951:61:26;;;;;;;;;;;;:::i;:::-;7055:16;;;7069:1;7055:16;;;;;;;;;6916:96;;-1:-1:-1;7022:30:26;;7055:16;;;;;;;;;;;;-1:-1:-1;7055:16:26;7022:49;;7116:9;7111:137;7135:15;:22;7131:1;:26;7111:137;;;7197:20;:40;7218:15;7234:1;7218:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7197:40:26;-1:-1:-1;;;;;7197:40:26;;;;;;;;;;;;;7178:13;7192:1;7178:16;;;;;;;;:::i;:::-;;;;;;;;;;:59;7159:3;;7111:137;;;-1:-1:-1;7319:213:26;;;;;;;;7345:10;7319:213;;;;;;;;;;;7437:11;7423:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7423:33:26;;7319:213;;;;7482:11;;7319:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7319:213:26;;;-1:-1:-1;;7517:4:26;7319:213;;;;;;;7303:13;;;:4;:13;;;;;;:229;;;;-1:-1:-1;;;;;;7303:229:26;-1:-1:-1;;;;;7303:229:26;;;;;;;;;;;;:13;;:229;;;;;-1:-1:-1;7303:229:26;;;:::i;:::-;-1:-1:-1;7303:229:26;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7303:229:26;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7303:229:26;;;;;;;;;;;;-1:-1:-1;;7303:229:26;;;;;;;;;;7548:55;;7561:7;;7548:55;;;;7570:15;;7587;;7548:55;:::i;:::-;;;;;;;;7613:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;7643:13:26;;6199:1464;-1:-1:-1;;;;;;;6199:1464:26:o;2733:27::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2733:27:26;:::o;5529:286:2:-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;13076:136:26:-;13160:26;;:45;;;-1:-1:-1;;;13160:45:26;;;;13134:7;;-1:-1:-1;;;;;13160:26:26;;:43;;:45;;;;;;;;;;;;;;:26;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13153:52;;13076:136;:::o;6210:236:2:-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;7669:444:26:-;2989:24;;7796:16;;-1:-1:-1;;;;;2989:24:26;2975:10;:38;2954:123;;;;-1:-1:-1;;;2954:123:26;;;;;;;:::i;:::-;7851:13:::1;::::0;;;:4:::1;:13;::::0;;;;:24:::1;;:31:::0;7832:15;;:50:::1;7824:59;;;::::0;::::1;;7894:13;::::0;;;:4:::1;:13;::::0;;;;;;;:32;;::::1;::::0;:21:::1;::::0;;::::1;::::0;:32;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7961:5:26::1;7936:13:::0;;;:4:::1;:13;::::0;;;;;;:22:::1;;:30:::0;;-1:-1:-1;;7936:30:26::1;::::0;;8026:38;7941:7;;8026:38:::1;::::0;::::1;::::0;8048:15:::1;713:25:32::0;;701:2;686:18;;567:177;8026:38:26::1;;;;;;;;8082:13;::::0;;;:4:::1;:13;::::0;;;;;;;;:24:::1;;8075:31:::0;;;;;;::::1;::::0;;;;;;;;;;8082:24;;8075:31;::::1;8082:24:::0;8075:31;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7669:444:::0;;;;:::o;3101:1117::-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;16124:2:32;2361:107:1;;;16106:21:32;16163:2;16143:18;;;16136:30;16202:34;16182:18;;;16175:62;-1:-1:-1;;;16253:18:32;;;16246:44;16307:19;;2361:107:1;15922:410:32;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;3232:33:26::1;;;;;;;;;;;;;;-1:-1:-1::0;;;3232:33:26::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;3232:33:26::1;;::::0;:12:::1;:33::i;:::-;3363:1;3349:11;:15:::0;;;3374:10:::1;:14:::0;;;3398:18:::1;:22:::0;3484:6:::1;3469:12;:21:::0;3564:9:::1;3551:10;:22:::0;3637:4:::1;3627:7;:14:::0;3715:9:::1;3700:12;:24:::0;-1:-1:-1;3747:20:26::1;:24:::0;;;3803:10:::1;::::0;3870:12:::1;::::0;3941:137:::1;3962:15;:22;3958:1;:26;3941:137;;;4005:62;4011:15;4027:1;4011:18;;;;;;;;:::i;:::-;;;;;;;4044:15;:22;4031:10;:35;;;;:::i;:::-;4005:5;:62::i;:::-;3986:3;;3941:137;;;;4088:40;4094:16;4112:15;4088:5;:40::i;:::-;-1:-1:-1::0;;4183:1:26::1;4167:13;:17:::0;4210:1:::1;4194:13;:17:::0;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;3101:1117:26;;:::o;13615:139::-;13697:26;;:50;;;-1:-1:-1;;;13697:50:26;;;;13662:16;;-1:-1:-1;;;;;13697:26:26;;:48;;:50;;;;;:26;;:50;;;;;;;:26;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13697:50:26;;;;;;;;;;;;:::i;5247:896::-;5400:10;5379:32;;;;:20;:32;;;;;;:37;5358:109;;;;-1:-1:-1;;;5358:109:26;;16761:2:32;5358:109:26;;;16743:21:32;16800:2;16780:18;;;16773:30;16839:27;16819:18;;;16812:55;16884:18;;5358:109:26;16559:349:32;5358:109:26;5509:10;3819:7:2;3845:18;;;:9;:18;;;;;;5524:11:26;-1:-1:-1;5499:36:26;:65;;;;;5554:10;;5539:11;:25;;5499:65;5478:139;;;;-1:-1:-1;;;5478:139:26;;17115:2:32;5478:139:26;;;17097:21:32;17154:2;17134:18;;;17127:30;17193:29;17173:18;;;17166:57;17240:18;;5478:139:26;16913:351:32;5478:139:26;5707:193;;;;;;;;;;;5792:10;5707:193;;;;;;;5824:10;;;5707:193;;;;;;-1:-1:-1;5707:193:26;;;;;;5887:2;5707:193;;;;;;5685:18;;;5674:30;;:10;:30;;;;;:226;;;;;;;;;;;-1:-1:-1;;;;;5674:226:26;;;-1:-1:-1;;;;;;5674:226:26;;;;;;;;;;;;;;;;;;;;;;;;;5707:193;5674:226;;;-1:-1:-1;;5674:226:26;;;;;;;;;;5946:18;;5911:32;;;:20;:32;;;;;:53;5974:38;;;:22;:38;;;;;;;:51;;;;;;;;;;6094:10;6070:35;;5792:10;6070:11;:35::i;:::-;6116:18;:20;;;:18;:20;;;:::i;:::-;;;;;;5247:896;;:::o;12562:294::-;-1:-1:-1;;;;;12693:38:26;;12652:7;12693:38;;;:20;:38;;;;;;12749:15;12741:53;;;;-1:-1:-1;;;12741:53:26;;17471:2:32;12741:53:26;;;17453:21:32;17510:2;17490:18;;;17483:30;-1:-1:-1;;;17529:18:32;;;17522:55;17594:18;;12741:53:26;17269:349:32;12741:53:26;12812:23;;;;:10;:23;;;;;:37;;12562:294;-1:-1:-1;;12562:294:26:o;13319:95::-;13363:7;13389:4;-1:-1:-1;;;;;13389:16:26;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9043:93;9098:31;9110:10;9122:6;9098:11;:31::i;:::-;9043:93;:::o;12963:107::-;13015:7;13062:1;13041:18;;:22;;;;:::i;9142:1266::-;9242:10;9199:19;9221:32;;;:20;:32;;;;;;9271:15;9263:55;;;;-1:-1:-1;;;9263:55:26;;17958:2:32;9263:55:26;;;17940:21:32;17997:2;17977:18;;;17970:30;18036:29;18016:18;;;18009:57;18083:18;;9263:55:26;17756:351:32;9263:55:26;9329:27;9359:23;;;:10;:23;;;;;9411:16;;;;9401:26;;;9393:69;;;;-1:-1:-1;;;9393:69:26;;18314:2:32;9393:69:26;;;18296:21:32;18353:2;18333:18;;;18326:30;18392:32;18372:18;;;18365:60;18442:18;;9393:69:26;18112:354:32;9393:69:26;9489:1;9480:6;:10;9472:56;;;;-1:-1:-1;;;9472:56:26;;;;;;;:::i;:::-;9614:9;:20;;;9638:1;9614:25;9610:792;;9696:12;;9678:30;;:15;:30;:::i;:::-;9655:20;;;:53;9806:16;;;;9784:19;;9806:25;;9825:6;;9806:25;:::i;:::-;9784:47;;9867:10;-1:-1:-1;;;;;9851:49:26;;9879:9;:20;;;9851:49;;;;713:25:32;;701:2;686:18;;567:177;9851:49:26;;;;;;;;9641:297;2080:637:1;3101:1117:26;;:::o;9610:792::-;10080:9;:20;;;10061:15;:39;;10036:122;;;;-1:-1:-1;;;10036:122:26;;19075:2:32;10036:122:26;;;19057:21:32;19114:2;19094:18;;;19087:30;19153:26;19133:18;;;19126:54;19197:18;;10036:122:26;18873:348:32;10036:122:26;10193:6;10173:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;10213:25:26;;-1:-1:-1;10219:10:26;10231:6;10213:5;:25::i;:::-;10305:34;;713:25:32;;;10320:10:26;;10305:34;;701:2:32;686:18;10305:34:26;;;;;;;9189:1219;;9142:1266;:::o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;10585:1186:26:-;2989:24;;-1:-1:-1;;;;;2989:24:26;2975:10;:38;2954:123;;;;-1:-1:-1;;;2954:123:26;;;;;;;:::i;:::-;2016:13:::1;10843:12;;10827:13;3668:12:2::0;;;3581:106;10827:13:26::1;:28;;;;:::i;:::-;:42;;10806:112;;;::::0;-1:-1:-1;;;10806:112:26;;19428:2:32;10806:112:26::1;::::0;::::1;19410:21:32::0;19467:2;19447:18;;;19440:30;19506:25;19486:18;;;19479:53;19549:18;;10806:112:26::1;19226:347:32::0;10806:112:26::1;10957:7;;10933:20;;:31;10929:136;;10999:4;10984:12;;:19;10980:75;;;11039:1;11023:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10980:75:26::1;11075:28;11128:3;11107:12;;11122:2;11107:17;;;;:::i;:::-;11106:25;;;;:::i;:::-;11075:56;;11141:25;11191:3;11170:12;;11185:2;11170:17;;;;:::i;:::-;11169:25;;;;:::i;:::-;11141:53;;11258:23;11319:16;:23;11284:20;:58;;;;:::i;:::-;11258:84;;11358:9;11353:122;11377:16;:23;11373:1;:27;11353:122;;;11421:43;11427:16;11444:1;11427:19;;;;;;;;:::i;:::-;;;;;;;11448:15;11421:5;:43::i;:::-;11402:3;;11353:122;;;;11532:9;11527:205;11551:8;:15;11547:1;:19;11527:205;;;11587:14;11666;11629:17;11606;11624:1;11606:20;;;;;;;;:::i;:::-;;;;;;;:40;;;;:::i;:::-;11605:75;;;;:::i;:::-;11587:94;;11695:26;11701:8;11710:1;11701:11;;;;;;;;:::i;:::-;;;;;;;11714:6;11695:5;:26::i;:::-;-1:-1:-1::0;11568:3:26::1;;11527:205;;;-1:-1:-1::0;11742:20:26::1;:22:::0;;;:20:::1;:22;::::0;::::1;:::i;:::-;;;;;;10796:975;;;10585:1186:::0;;;;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;19953:2:32;7144:85:2;;;19935:21:32;19992:2;19972:18;;;19965:30;20031:34;20011:18;;;20004:62;-1:-1:-1;;;20082:18:32;;;20075:35;20127:19;;7144:85:2;19751:401:32;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;4645:477:26:-;4801:10;4824:1;4783:29;;;:17;:29;;;;;;:43;4762:114;;;;-1:-1:-1;;;4762:114:26;;20359:2:32;4762:114:26;;;20341:21:32;20398:2;20378:18;;;20371:30;20437:26;20417:18;;;20410:54;20481:18;;4762:114:26;20157:348:32;4762:114:26;4911:124;;;;;;;;4943:10;4911:124;;;;;;;;;;5022:2;4911:124;;;;;;-1:-1:-1;4887:21:26;;;:5;:21;;;;;:148;;;;-1:-1:-1;;;;;;4887:148:26;-1:-1:-1;;;;;4887:148:26;;;;;;;;-1:-1:-1;4887:148:26;;;;;;;;;;-1:-1:-1;;4887:148:26;4911:124;4887:148;;;;;;;;;;5046:29;;;:17;:29;;;;;:46;;;5102:11;:13;;;;;;:::i;:::-;;;;;;4645:477;:::o;12862:95::-;12909:7;12949:1;12935:11;;:15;;;;:::i;12060:496::-;12145:4;12151:7;12160;12202:18;;12187:12;:33;12179:57;;;;-1:-1:-1;;;12179:57:26;;20712:2:32;12179:57:26;;;20694:21:32;20751:2;20731:18;;;20724:30;-1:-1:-1;;;20770:18:32;;;20763:41;20821:18;;12179:57:26;20510:335:32;12179:57:26;12246:27;12276:24;;;:10;:24;;;;;;;;12246:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;12246:54:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12326:26;;:95;;-1:-1:-1;;;12326:95:26;;;;;5660:51:32;;;;12246:54:26;:27;12326:26;;;;;:44;;5633:18:32;;12326:95:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12474:24;;12512:27;;;;;12310:111;;12474:24;;-1:-1:-1;12512:27:26;-1:-1:-1;12060:496:26;;-1:-1:-1;;;12060:496:26:o;8119:198::-;2989:24;;-1:-1:-1;;;;;2989:24:26;2975:10;:38;2954:123;;;;-1:-1:-1;;;2954:123:26;;;;;;;:::i;:::-;8197:15:::1;8215:13:::0;;;:4:::1;:13;::::0;;;;;;;;8238:12:::1;::::0;::::1;:20:::0;;-1:-1:-1;;8238:20:26::1;::::0;;8273:37;;8294:15:::1;713:25:32::0;;8215:13:26;;8273:37:::1;::::0;686:18:32;8273:37:26::1;;;;;;;8187:130;8119:198:::0;:::o;11848:206::-;11956:30;11989:13;;;:4;:13;;;;;;;;:28;;11956:61;;;;;;;;;;;;;;;;;11928:16;;11956:30;:61;;11989:28;11956:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11956:61:26;;;;;;;;;;;;;;;;-1:-1:-1;11956:61:26;;11848:206;-1:-1:-1;;;;;;;11848:206:26:o;4224:326::-;4320:24;;-1:-1:-1;;;;;4320:24:26;:38;4299:115;;;;-1:-1:-1;;;4299:115:26;;21334:2:32;4299:115:26;;;21316:21:32;21373:2;21353:18;;;21346:30;21412:32;21392:18;;;21385:60;21462:18;;4299:115:26;21132:354:32;4299:115:26;4424:26;:66;;-1:-1:-1;;;;;4424:66:26;;;-1:-1:-1;;;;;;4424:66:26;;;;;;;;4500:24;:43;;;;;;;;4224:326::o;10460:370:2:-;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;21693:2:32;10583:68:2;;;21675:21:32;21732:2;21712:18;;;21705:30;21771:34;21751:18;;;21744:62;-1:-1:-1;;;21822:18:32;;;21815:34;21866:19;;10583:68:2;21491:400:32;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;22098:2:32;10661:68:2;;;22080:21:32;22137:2;22117:18;;;22110:30;22176:34;22156:18;;;22149:62;-1:-1:-1;;;22227:18:32;;;22220:32;22269:19;;10661:68:2;21896:398:32;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;713:25:32;;;10791:32:2;;686:18:32;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;22501:2:32;11356:68:2;;;22483:21:32;22540:2;22520:18;;;22513:30;22579:31;22559:18;;;22552:59;22628:18;;11356:68:2;22299:353:32;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;22859:2:32;7943:68:2;;;22841:21:32;22898:2;22878:18;;;22871:30;22937:34;22917:18;;;22910:62;-1:-1:-1;;;22988:18:32;;;22981:35;23033:19;;7943:68:2;22657:401:32;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;23265:2:32;8021:64:2;;;23247:21:32;23304:2;23284:18;;;23277:30;23343:34;23323:18;;;23316:62;-1:-1:-1;;;23394:18:32;;;23387:33;23437:19;;8021:64:2;23063:399:32;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;23669:2:32;8192:72:2;;;23651:21:32;23708:2;23688:18;;;23681:30;23747:34;23727:18;;;23720:62;-1:-1:-1;;;23798:18:32;;;23791:36;23844:19;;8192:72:2;23467:402:32;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;713:25:32;;701:2;686:18;;567:177;8395:26:2;;;;;;;;8432:37;3101:1117:26;2116:147:2;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;8752:389::-;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;24488:2:32;8827:65:2;;;24470:21:32;24527:2;24507:18;;;24500:30;24566:33;24546:18;;;24539:61;24617:18;;8827:65:2;24286:355:32;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;713:25:32;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;701:2:32;686:18;9038:37:2;;;;;;;2116:147;;:::o;8415:541:26:-;8504:1;8495:6;:10;8487:56;;;;-1:-1:-1;;;8487:56:26;;;;;;;:::i;:::-;8582:6;8561:17;8571:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;8561:17:26;:27;;8553:61;;;;-1:-1:-1;;;8553:61:26;;24848:2:32;8553:61:26;;;24830:21:32;24887:2;24867:18;;;24860:30;-1:-1:-1;;;24906:18:32;;;24899:51;24967:18;;8553:61:26;24646:345:32;8553:61:26;-1:-1:-1;;;;;8647:28:26;;8625:19;8647:28;;;:20;:28;;;;;;;8693:16;;;8685:54;;;;-1:-1:-1;;;8685:54:26;;17471:2:32;8685:54:26;;;17453:21:32;17510:2;17490:18;;;17483:30;-1:-1:-1;;;17529:18:32;;;17522:55;17594:18;;8685:54:26;17269:349:32;8685:54:26;8750:43;8763:6;8779:4;8786:6;8750:12;:43::i;:::-;-1:-1:-1;8803:23:26;;;;:10;:23;;;;;:30;;:40;;8837:6;;8803:23;:40;;8837:6;;8803:40;:::i;:::-;;;;-1:-1:-1;;8853:19:26;8875:23;;;:10;:23;;;;;;;;;:30;;;8921:28;;713:25:32;;;-1:-1:-1;;;;;8921:28:26;;;;;686:18:32;8921:28:26;567:177:32;2269:159:2;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:548:32;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;749:131::-;-1:-1:-1;;;;;824:31:32;;814:42;;804:70;;870:1;867;860:12;885:315;953:6;961;1014:2;1002:9;993:7;989:23;985:32;982:52;;;1030:1;1027;1020:12;982:52;1069:9;1056:23;1088:31;1113:5;1088:31;:::i;:::-;1138:5;1190:2;1175:18;;;;1162:32;;-1:-1:-1;;;885:315:32:o;1397:465::-;1450:3;1488:5;1482:12;1515:6;1510:3;1503:19;1541:4;1570;1565:3;1561:14;1554:21;;1609:4;1602:5;1598:16;1632:1;1642:195;1656:6;1653:1;1650:13;1642:195;;;1721:13;;-1:-1:-1;;;;;1717:39:32;1705:52;;1777:12;;;;1812:15;;;;1753:1;1671:9;1642:195;;;-1:-1:-1;1853:3:32;;1397:465;-1:-1:-1;;;;;1397:465:32:o;1867:476::-;2130:6;2119:9;2112:25;2173:6;2168:2;2157:9;2153:18;2146:34;2216:6;2211:2;2200:9;2196:18;2189:34;2259:3;2254:2;2243:9;2239:18;2232:31;2093:4;2280:57;2332:3;2321:9;2317:19;2309:6;2280:57;:::i;:::-;2272:65;1867:476;-1:-1:-1;;;;;;1867:476:32:o;2348:751::-;2452:6;2460;2468;2476;2529:2;2517:9;2508:7;2504:23;2500:32;2497:52;;;2545:1;2542;2535:12;2497:52;2581:9;2568:23;2558:33;;2638:2;2627:9;2623:18;2610:32;2600:42;;2693:2;2682:9;2678:18;2665:32;2716:18;2757:2;2749:6;2746:14;2743:34;;;2773:1;2770;2763:12;2743:34;2811:6;2800:9;2796:22;2786:32;;2856:7;2849:4;2845:2;2841:13;2837:27;2827:55;;2878:1;2875;2868:12;2827:55;2918:2;2905:16;2944:2;2936:6;2933:14;2930:34;;;2960:1;2957;2950:12;2930:34;3013:7;3008:2;2998:6;2995:1;2991:14;2987:2;2983:23;2979:32;2976:45;2973:65;;;3034:1;3031;3024:12;2973:65;2348:751;;;;-1:-1:-1;;3065:2:32;3057:11;;-1:-1:-1;;;2348:751:32:o;3104:632::-;3275:2;3327:21;;;3397:13;;3300:18;;;3419:22;;;3246:4;;3275:2;3498:15;;;;3472:2;3457:18;;;3246:4;3541:169;3555:6;3552:1;3549:13;3541:169;;;3616:13;;3604:26;;3685:15;;;;3650:12;;;;3577:1;3570:9;3541:169;;;-1:-1:-1;3727:3:32;;3104:632;-1:-1:-1;;;;;;3104:632:32:o;3741:180::-;3800:6;3853:2;3841:9;3832:7;3828:23;3824:32;3821:52;;;3869:1;3866;3859:12;3821:52;-1:-1:-1;3892:23:32;;3741:180;-1:-1:-1;3741:180:32:o;3926:456::-;4003:6;4011;4019;4072:2;4060:9;4051:7;4047:23;4043:32;4040:52;;;4088:1;4085;4078:12;4040:52;4127:9;4114:23;4146:31;4171:5;4146:31;:::i;:::-;4196:5;-1:-1:-1;4253:2:32;4238:18;;4225:32;4266:33;4225:32;4266:33;:::i;:::-;3926:456;;4318:7;;-1:-1:-1;;;4372:2:32;4357:18;;;;4344:32;;3926:456::o;4387:247::-;4446:6;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;4554:9;4541:23;4573:31;4598:5;4573:31;:::i;:::-;4623:5;4387:247;-1:-1:-1;;;4387:247:32:o;6011:127::-;6072:10;6067:3;6063:20;6060:1;6053:31;6103:4;6100:1;6093:15;6127:4;6124:1;6117:15;6143:275;6214:2;6208:9;6279:2;6260:13;;-1:-1:-1;;6256:27:32;6244:40;;6314:18;6299:34;;6335:22;;;6296:62;6293:88;;;6361:18;;:::i;:::-;6397:2;6390:22;6143:275;;-1:-1:-1;6143:275:32:o;6423:183::-;6483:4;6516:18;6508:6;6505:30;6502:56;;;6538:18;;:::i;:::-;-1:-1:-1;6583:1:32;6579:14;6595:4;6575:25;;6423:183::o;6611:743::-;6665:5;6718:3;6711:4;6703:6;6699:17;6695:27;6685:55;;6736:1;6733;6726:12;6685:55;6772:6;6759:20;6798:4;6822:60;6838:43;6878:2;6838:43;:::i;:::-;6822:60;:::i;:::-;6904:3;6928:2;6923:3;6916:15;6956:4;6951:3;6947:14;6940:21;;7013:4;7007:2;7004:1;7000:10;6992:6;6988:23;6984:34;6970:48;;7041:3;7033:6;7030:15;7027:35;;;7058:1;7055;7048:12;7027:35;7094:4;7086:6;7082:17;7108:217;7124:6;7119:3;7116:15;7108:217;;;7204:3;7191:17;7221:31;7246:5;7221:31;:::i;:::-;7265:18;;7303:12;;;;7141;;7108:217;;;-1:-1:-1;7343:5:32;6611:743;-1:-1:-1;;;;;;6611:743:32:o;7359:416::-;7452:6;7460;7513:2;7501:9;7492:7;7488:23;7484:32;7481:52;;;7529:1;7526;7519:12;7481:52;7565:9;7552:23;7542:33;;7626:2;7615:9;7611:18;7598:32;7653:18;7645:6;7642:30;7639:50;;;7685:1;7682;7675:12;7639:50;7708:61;7761:7;7752:6;7741:9;7737:22;7708:61;:::i;:::-;7698:71;;;7359:416;;;;;:::o;7780:483::-;7873:6;7881;7934:2;7922:9;7913:7;7909:23;7905:32;7902:52;;;7950:1;7947;7940:12;7902:52;7990:9;7977:23;8023:18;8015:6;8012:30;8009:50;;;8055:1;8052;8045:12;8009:50;8078:61;8131:7;8122:6;8111:9;8107:22;8078:61;:::i;:::-;8068:71;;;8189:2;8178:9;8174:18;8161:32;8202:31;8227:5;8202:31;:::i;:::-;8252:5;8242:15;;;7780:483;;;;;:::o;8268:261::-;8447:2;8436:9;8429:21;8410:4;8467:56;8519:2;8508:9;8504:18;8496:6;8467:56;:::i;8534:248::-;8602:6;8610;8663:2;8651:9;8642:7;8638:23;8634:32;8631:52;;;8679:1;8676;8669:12;8631:52;-1:-1:-1;;8702:23:32;;;8772:2;8757:18;;;8744:32;;-1:-1:-1;8534:248:32:o;8969:1433::-;9130:6;9138;9146;9154;9207:3;9195:9;9186:7;9182:23;9178:33;9175:53;;;9224:1;9221;9214:12;9175:53;9264:9;9251:23;9293:18;9334:2;9326:6;9323:14;9320:34;;;9350:1;9347;9340:12;9320:34;9373:61;9426:7;9417:6;9406:9;9402:22;9373:61;:::i;:::-;9363:71;;9453:2;9443:12;;9508:2;9497:9;9493:18;9480:32;9537:2;9527:8;9524:16;9521:36;;;9553:1;9550;9543:12;9521:36;9576:24;;9631:4;9623:13;;9619:27;-1:-1:-1;9609:55:32;;9660:1;9657;9650:12;9609:55;9696:2;9683:16;9719:60;9735:43;9775:2;9735:43;:::i;9719:60::-;9813:15;;;9895:1;9891:10;;;;9883:19;;9879:28;;;9844:12;;;;9919:19;;;9916:39;;;9951:1;9948;9941:12;9916:39;9975:11;;;;9995:142;10011:6;10006:3;10003:15;9995:142;;;10077:17;;10065:30;;10028:12;;;;10115;;;;9995:142;;;10156:5;-1:-1:-1;;;;10208:2:32;10193:18;;10180:32;;-1:-1:-1;10265:2:32;10250:18;;10237:32;;-1:-1:-1;10281:16:32;;;10278:36;;;10310:1;10307;10300:12;10278:36;;10333:63;10388:7;10377:8;10366:9;10362:24;10333:63;:::i;:::-;10323:73;;;8969:1433;;;;;;;:::o;11124:388::-;11192:6;11200;11253:2;11241:9;11232:7;11228:23;11224:32;11221:52;;;11269:1;11266;11259:12;11221:52;11308:9;11295:23;11327:31;11352:5;11327:31;:::i;:::-;11377:5;-1:-1:-1;11434:2:32;11419:18;;11406:32;11447:33;11406:32;11447:33;:::i;11517:380::-;11596:1;11592:12;;;;11639;;;11660:61;;11714:4;11706:6;11702:17;11692:27;;11660:61;11767:2;11759:6;11756:14;11736:18;11733:38;11730:161;;11813:10;11808:3;11804:20;11801:1;11794:31;11848:4;11845:1;11838:15;11876:4;11873:1;11866:15;11730:161;;11517:380;;;:::o;11902:740::-;11967:5;12020:3;12013:4;12005:6;12001:17;11997:27;11987:55;;12038:1;12035;12028:12;11987:55;12067:6;12061:13;12093:4;12117:60;12133:43;12173:2;12133:43;:::i;12117:60::-;12199:3;12223:2;12218:3;12211:15;12251:4;12246:3;12242:14;12235:21;;12308:4;12302:2;12299:1;12295:10;12287:6;12283:23;12279:34;12265:48;;12336:3;12328:6;12325:15;12322:35;;;12353:1;12350;12343:12;12322:35;12389:4;12381:6;12377:17;12403:210;12419:6;12414:3;12411:15;12403:210;;;12492:3;12486:10;12509:31;12534:5;12509:31;:::i;:::-;12553:18;;12591:12;;;;12436;;12403:210;;12647:547;12769:6;12777;12785;12793;12846:3;12834:9;12825:7;12821:23;12817:33;12814:53;;;12863:1;12860;12853:12;12814:53;12892:9;12886:16;12876:26;;12942:2;12931:9;12927:18;12921:25;12911:35;;12986:2;12975:9;12971:18;12965:25;12955:35;;13034:2;13023:9;13019:18;13013:25;13061:18;13053:6;13050:30;13047:50;;;13093:1;13090;13083:12;13047:50;13116:72;13180:7;13171:6;13160:9;13156:22;13116:72;:::i;14087:363::-;14182:6;14235:2;14223:9;14214:7;14210:23;14206:32;14203:52;;;14251:1;14248;14241:12;14203:52;14284:9;14278:16;14317:18;14309:6;14306:30;14303:50;;;14349:1;14346;14339:12;14303:50;14372:72;14436:7;14427:6;14416:9;14412:22;14372:72;:::i;:::-;14362:82;14087:363;-1:-1:-1;;;;14087:363:32:o;14455:127::-;14516:10;14511:3;14507:20;14504:1;14497:31;14547:4;14544:1;14537:15;14571:4;14568:1;14561:15;14587:332;14794:6;14783:9;14776:25;14837:2;14832;14821:9;14817:18;14810:30;14757:4;14857:56;14909:2;14898:9;14894:18;14886:6;14857:56;:::i;14924:127::-;14985:10;14980:3;14976:20;14973:1;14966:31;15016:4;15013:1;15006:15;15040:4;15037:1;15030:15;15056:135;15095:3;15116:17;;;15113:43;;15136:18;;:::i;:::-;-1:-1:-1;15183:1:32;15172:13;;15056:135::o;15196:184::-;15266:6;15319:2;15307:9;15298:7;15294:23;15290:32;15287:52;;;15335:1;15332;15325:12;15287:52;-1:-1:-1;15358:16:32;;15196:184;-1:-1:-1;15196:184:32:o;15385:125::-;15450:9;;;15471:10;;;15468:36;;;15484:18;;:::i;15515:402::-;15717:2;15699:21;;;15756:2;15736:18;;;15729:30;15795:34;15790:2;15775:18;;15768:62;-1:-1:-1;;;15861:2:32;15846:18;;15839:36;15907:3;15892:19;;15515:402::o;16337:217::-;16377:1;16403;16393:132;;16447:10;16442:3;16438:20;16435:1;16428:31;16482:4;16479:1;16472:15;16510:4;16507:1;16500:15;16393:132;-1:-1:-1;16539:9:32;;16337:217::o;17623:128::-;17690:9;;;17711:11;;;17708:37;;;17725:18;;:::i;18471:397::-;18673:2;18655:21;;;18712:2;18692:18;;;18685:30;18751:34;18746:2;18731:18;;18724:62;-1:-1:-1;;;18817:2:32;18802:18;;18795:31;18858:3;18843:19;;18471:397::o;19578:168::-;19651:9;;;19682;;19699:15;;;19693:22;;19679:37;19669:71;;19720:18;;:::i;20850:277::-;20917:6;20970:2;20958:9;20949:7;20945:23;20941:32;20938:52;;;20986:1;20983;20976:12;20938:52;21018:9;21012:16;21071:5;21064:13;21057:21;21050:5;21047:32;21037:60;;21093:1;21090;21083:12;23874:407;24076:2;24058:21;;;24115:2;24095:18;;;24088:30;24154:34;24149:2;24134:18;;24127:62;-1:-1:-1;;;24220:2:32;24205:18;;24198:41;24271:3;24256:19;;23874:407::o;25122:543::-;25224:2;25219:3;25216:11;25213:446;;;25260:1;25284:5;25281:1;25274:16;25328:4;25325:1;25315:18;25398:2;25386:10;25382:19;25379:1;25375:27;25369:4;25365:38;25434:4;25422:10;25419:20;25416:47;;;-1:-1:-1;25457:4:32;25416:47;25512:2;25507:3;25503:12;25500:1;25496:20;25490:4;25486:31;25476:41;;25567:82;25585:2;25578:5;25575:13;25567:82;;;25630:17;;;25611:1;25600:13;25567:82;;;25571:3;;;25122:543;;;:::o;25841:1345::-;25967:3;25961:10;25994:18;25986:6;25983:30;25980:56;;;26016:18;;:::i;:::-;26045:97;26135:6;26095:38;26127:4;26121:11;26095:38;:::i;:::-;26089:4;26045:97;:::i;:::-;26197:4;;26254:2;26243:14;;26271:1;26266:663;;;;26973:1;26990:6;26987:89;;;-1:-1:-1;27042:19:32;;;27036:26;26987:89;-1:-1:-1;;25798:1:32;25794:11;;;25790:24;25786:29;25776:40;25822:1;25818:11;;;25773:57;27089:81;;26236:944;;26266:663;25069:1;25062:14;;;25106:4;25093:18;;-1:-1:-1;;26302:20:32;;;26420:236;26434:7;26431:1;26428:14;26420:236;;;26523:19;;;26517:26;26502:42;;26615:27;;;;26583:1;26571:14;;;;26450:19;;26420:236;;;26424:3;26684:6;26675:7;26672:19;26669:201;;;26745:19;;;26739:26;-1:-1:-1;;26828:1:32;26824:14;;;26840:3;26820:24;26816:37;26812:42;26797:58;26782:74;;26669:201;-1:-1:-1;;;;;26916:1:32;26900:14;;;26896:22;26883:36;;-1:-1:-1;25841:1345:32:o",
  "language": "Solidity",
  "natspec": {
    "details": "An ERC20 contract for managing off-chain networks",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createUser(bytes32)": {
        "details": "Create a User, limit one per address & public key hash (RSA)"
      },
      "createValidator(bytes32,uint256)": {
        "details": "Create a Validator, limit one per address & public key hash (RSA), requires locking up sno"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint256)": {
        "details": "Validator token unlocking, 30 day withdrawal period."
      },
      "mintTokens(address[],uint256[],uint256,address[])": {
        "details": "Mint tokens for updating state rewards, distribute 40/60 among validators and workers Updates the emission rate and halving accordingly"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "SmartNodes",
    "version": 1
  },
  "offset": [
    271,
    13939
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x327 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7071688A GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xBA3F5443 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xD057FC19 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD8DF5DC1 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x826 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xF79621BD EQ PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD057FC19 EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x7F4 JUMPI DUP1 PUSH4 0xD3EECE97 EQ PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC5AB2241 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0xC8DF245A EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x75D JUMPI DUP1 PUSH4 0xCEA6AB98 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA3F5443 EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xBC1D82A1 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0xC0A77DA9 EQ PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3273D22 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0xABF7BFD8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xABF7BFD8 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xB115F50D EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3273D22 EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7071688A EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x66D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37DEEA70 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x4966D086 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x50355D76 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0x62FB00FC EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x6C9C2FAF EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4966D086 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x38E56261 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x38ED7CFC EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0x43A8D914 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x462D0B2E EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20D3A0B4 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x27764547 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x21B0908B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x1D4E7793 EQ PUSH2 0x3A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x334 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x230D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x394 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x374 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x24F1 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x353 PUSH11 0x115EEC47F6CF7E35000000 DUP2 JUMP JUMPDEST PUSH2 0x47E PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x353 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x74 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x530 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x2639 JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x592 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x26D2 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x26E5 JUMP JUMPDEST PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x5C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6F SLOAD SWAP1 DUP5 MSTORE PUSH1 0x75 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x668 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x2707 JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x374 PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x188A JUMP JUMPDEST PUSH2 0x588 PUSH2 0x6CE CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x72B CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x592 PUSH2 0x73E CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x6E SLOAD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x588 PUSH2 0x76B CALLDATASIZE PUSH1 0x4 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x7AC PUSH2 0x77E CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x72 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2532 JUMP JUMPDEST PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x80B CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x73 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x83D CALLDATASIZE PUSH1 0x4 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x353 PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x4E2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x281B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x281B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x924 DUP2 DUP6 DUP6 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1865C57D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x9B2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x28BD JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA05 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA05 JUMPI PUSH2 0x9F2 DUP6 PUSH2 0x1898 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP5 POP JUMPDEST DUP5 PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x55736572206E6F74207265676973746572656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2537B11030B63932B0B23C9031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71547B79 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE2A8F6F2 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB1C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x79 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB64 JUMPI PUSH2 0xB64 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9F PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xB45 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE3 JUMPI PUSH2 0xBE3 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC0C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP11 DUP4 MSTORE PUSH1 0x76 DUP5 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP5 DUP5 ADD MLOAD DUP1 MLOAD SWAP2 SWAP5 PUSH2 0xC8F SWAP5 DUP7 ADD SWAP4 POP ADD SWAP1 PUSH2 0x2258 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xCAB SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2258 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xCC7 SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22BD JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH32 0x5DD5AFF7B55A6D23DB5800AE74FAFB29F5F00976A85526C852C81900D14CF3E7 SWAP1 PUSH2 0xD17 SWAP1 TIMESTAMP SWAP1 DUP7 SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x69 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD2F DUP4 PUSH2 0x298D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x77 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xD6E DUP6 DUP3 DUP6 PUSH2 0x1D39 JUMP JUMPDEST PUSH2 0xD79 DUP6 DUP6 DUP6 PUSH2 0x1DCB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x924 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xE31 SWAP1 DUP8 SWAP1 PUSH2 0x29BF JUMP JUMPDEST PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 MLOAD EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xEA6 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x2258 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH32 0x9B5ED714C31DFCB1A9397710B6FC1842F37D94AB5DC0CCB528D9A2C97EA76F2A SWAP1 PUSH2 0xEF4 SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF53 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF3F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF7B JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF7F JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1004 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x104B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x68 DUP2 SWAP1 SSTORE PUSH1 0x69 DUP2 SWAP1 SSTORE PUSH1 0x67 SSTORE PUSH9 0x1BC16D674EC8000000 PUSH1 0x6E SSTORE PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x6F SSTORE PUSH2 0x2220 PUSH1 0x6D SSTORE PUSH3 0x127500 PUSH1 0x70 SSTORE PUSH1 0x0 PUSH1 0x71 DUP2 SWAP1 SSTORE PUSH10 0x9ED194DB19B238C00000 SWAP1 PUSH11 0x17293B0A9E69FD9C00000 SWAP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10DB DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10C1 JUMPI PUSH2 0x10C1 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 MLOAD DUP6 PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10A3 JUMP JUMPDEST POP PUSH2 0x10EE DUP5 DUP3 PUSH2 0x1FCE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6B SSTORE PUSH1 0x5 PUSH1 0x6C SSTORE DUP1 ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFBCCA273 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFBCCA273 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x115B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDF2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x290B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206578697374732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x1201 JUMPI POP PUSH1 0x6F SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x6F DUP1 SLOAD DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x80 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x67 DUP1 SLOAD DUP5 MSTORE PUSH1 0x75 DUP9 MSTORE DUP11 DUP5 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP6 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP10 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP8 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH1 0xFF NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE SWAP2 SLOAD DUP5 DUP7 MSTORE PUSH1 0x79 DUP5 MSTORE DUP7 DUP7 KECCAK256 SSTORE DUP8 DUP6 MSTORE PUSH1 0x74 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND DUP2 OR SWAP1 SWAP3 SSTORE SLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1318 DUP4 PUSH2 0x298D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x13E2 CALLER DUP3 PUSH2 0x20AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x67 SLOAD PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x1453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x2A4D JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x1555 JUMPI PUSH1 0x70 SLOAD PUSH2 0x14EE SWAP1 TIMESTAMP PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1506 SWAP1 DUP6 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 DUP4 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1547 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x15A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15CD SWAP1 POP CALLER DUP5 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0x281B JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH11 0x115EEC47F6CF7E35000000 PUSH1 0x6E SLOAD PUSH2 0x1658 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST GT ISZERO PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D20737570706C79207265616368656421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x71 SLOAD LT PUSH2 0x16E6 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x6E SLOAD GT ISZERO PUSH2 0x16E6 JUMPI PUSH1 0x2 PUSH1 0x6E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x14 PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x6E SLOAD PUSH1 0x50 PUSH2 0x1718 SWAP2 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 MLOAD DUP4 PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x176C JUMPI PUSH2 0x1764 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1756 JUMPI PUSH2 0x1756 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1738 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP7 DUP5 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x178F JUMPI PUSH2 0x178F PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D0 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17C2 JUMPI PUSH2 0x17C2 PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1FCE JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1770 JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x17EA DUP4 PUSH2 0x298D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x187D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH2 0xD79 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x924 DUP2 DUP6 DUP6 PUSH2 0x1DCB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x78 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x18F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x32 DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x72 DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP7 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP1 DUP3 MSTORE PUSH1 0x78 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD SWAP2 PUSH2 0x1975 DUP4 PUSH2 0x298D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x68 SLOAD PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x67 SLOAD DUP5 LT PUSH2 0x19D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP3 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x65 SLOAD SWAP4 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x2AA5 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP8 SWAP3 SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1ACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 MLOAD TIMESTAMP DUP2 MSTORE DUP4 SWAP2 PUSH32 0x6E04AA702F9AF7A9A398F10D27918152DF25AC0CDC6D74321B9F7496374387A7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x76 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1B83 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B65 JUMPI JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1BE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x66 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1DC5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x1DC5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1C15 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1F09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1F40 SWAP1 DUP5 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F8C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH2 0x1FCA DUP3 DUP3 PUSH2 0x2218 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2036 SWAP2 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2063 SWAP1 DUP5 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x20CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x2A4D JUMP JUMPDEST DUP1 PUSH2 0x20ED DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x2133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x79 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x2198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x21A3 DUP4 ADDRESS DUP5 PUSH2 0xD60 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x21C5 SWAP1 DUP5 SWAP1 PUSH2 0x29BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x75 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP2 ADD PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x223F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x224B DUP4 DUP3 PUSH2 0x2B62 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x110C DUP3 DUP3 PUSH2 0x2B62 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x22AD JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22AD JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2278 JUMP JUMPDEST POP PUSH2 0x22B9 SWAP3 SWAP2 POP PUSH2 0x22F8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x22AD JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22AD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22B9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x233B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x231F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x238F DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23D7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x23B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2407 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x239D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24CC JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24B0 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2511 DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2521 DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x254F DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2595 JUMPI PUSH2 0x2595 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25B7 JUMPI PUSH2 0x25B7 PUSH2 0x2556 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x25E7 PUSH2 0x25E2 DUP4 PUSH2 0x259D JUMP JUMPDEST PUSH2 0x256C JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x262E JUMPI DUP1 CALLDATALOAD PUSH2 0x2621 DUP2 PUSH2 0x235C JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x260E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x264C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x266A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2676 DUP6 DUP3 DUP7 ADD PUSH2 0x25C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B6 DUP6 DUP3 DUP7 ADD PUSH2 0x25C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x26C7 DUP2 PUSH2 0x235C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x254F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x271D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2741 DUP9 DUP4 DUP10 ADD PUSH2 0x25C1 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 SWAP2 POP DUP2 DUP8 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x2769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2777 PUSH2 0x25E2 DUP3 PUSH2 0x259D JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP12 DUP4 GT ISZERO PUSH2 0x2796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x27B4 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x279B JUMP JUMPDEST SWAP8 POP POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E1 DUP8 DUP3 DUP9 ADD PUSH2 0x25C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x280B DUP2 PUSH2 0x235C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x26C7 DUP2 PUSH2 0x235C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x282F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x284F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x2876 PUSH2 0x25E2 DUP4 PUSH2 0x259D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x262E JUMPI DUP1 MLOAD PUSH2 0x28B0 DUP2 PUSH2 0x235C JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x289D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27E1 DUP8 DUP3 DUP9 ADD PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x291D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2940 DUP5 DUP3 DUP6 ADD PUSH2 0x2855 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2940 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x239D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x299F JUMPI PUSH2 0x299F PUSH2 0x2977 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x92A JUMPI PUSH2 0x92A PUSH2 0x2977 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x92A JUMPI PUSH2 0x92A PUSH2 0x2977 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x92A JUMPI PUSH2 0x92A PUSH2 0x2977 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2B3B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B5A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B47 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B7C JUMPI PUSH2 0x2B7C PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2B90 DUP2 PUSH2 0x2B8A DUP5 SLOAD PUSH2 0x281B JUMP JUMPDEST DUP5 PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2BC5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2BAD JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2B5A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BF4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2BD5 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2C12 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x640D9682F6 LOG4 MSTORE 0xBA 0xB3 SWAP11 0xC6 0xBE 0xEE 0xAC 0x26 0xA6 PUSH1 0x4D 0xCD SWAP16 0x2B DUP3 0x2C 0xD4 SWAP16 BALANCE 0xBB PUSH20 0xAB974C64736F6C63430008190033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "6": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "12": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "16": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "17": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "POP",
      "path": "26"
    },
    "18": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "21": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "LT",
      "path": "26"
    },
    "22": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x327"
    },
    "25": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "26": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "29": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "SHR",
      "path": "26"
    },
    "32": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "33": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7071688A"
    },
    "38": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "39": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B8"
    },
    "42": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "43": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "44": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBA3F5443"
    },
    "49": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "50": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "54": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "55": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD057FC19"
    },
    "60": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "61": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "65": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "66": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD8DF5DC1"
    },
    "71": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "72": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "76": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "77": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD8DF5DC1"
    },
    "82": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "83": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x826"
    },
    "86": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "87": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "88": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "94": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x82F"
    },
    "97": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "98": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "99": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF0C37A59"
    },
    "104": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "105": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x868"
    },
    "108": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "109": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "110": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF79621BD"
    },
    "115": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "116": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x871"
    },
    "119": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "120": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "123": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "124": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "125": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "126": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD057FC19"
    },
    "131": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "132": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7D4"
    },
    "135": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "136": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "137": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD2D49C4B"
    },
    "142": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "143": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7F4"
    },
    "146": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "147": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "148": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xD3EECE97"
    },
    "153": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "154": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7FD"
    },
    "157": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "158": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "161": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "162": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "163": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "164": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC5AB2241"
    },
    "169": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "170": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "174": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "175": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC5AB2241"
    },
    "180": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "181": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x74B"
    },
    "184": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "185": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "186": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC8DF245A"
    },
    "191": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "192": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x754"
    },
    "195": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "196": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "197": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xCDF64A76"
    },
    "202": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "203": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x75D"
    },
    "206": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "207": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "208": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xCEA6AB98"
    },
    "213": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "214": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x770"
    },
    "217": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "218": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "221": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "222": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "223": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "224": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBA3F5443"
    },
    "229": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "230": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x71D"
    },
    "233": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "234": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "235": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBC1D82A1"
    },
    "240": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "241": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x730"
    },
    "244": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "245": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "246": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC0A77DA9"
    },
    "251": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "252": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x743"
    },
    "255": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "256": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "259": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "260": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "261": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "262": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA3273D22"
    },
    "267": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "268": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "272": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "273": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xABF7BFD8"
    },
    "278": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "279": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "283": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "284": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xABF7BFD8"
    },
    "289": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "290": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6C0"
    },
    "293": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "294": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "295": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB115F50D"
    },
    "300": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "301": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6D3"
    },
    "304": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "305": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "306": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB5CB15F7"
    },
    "311": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "312": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6DC"
    },
    "315": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "316": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "317": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB7797537"
    },
    "322": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "323": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6E4"
    },
    "326": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "327": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "330": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "331": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "332": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "333": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA3273D22"
    },
    "338": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "339": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x687"
    },
    "342": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "343": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "344": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA457C2D7"
    },
    "349": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "350": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x69A"
    },
    "353": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "354": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "355": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA9059CBB"
    },
    "360": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "361": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6AD"
    },
    "364": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "365": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "368": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "369": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "370": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "371": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7071688A"
    },
    "376": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "377": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x629"
    },
    "380": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "381": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "382": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x70A08231"
    },
    "387": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "388": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x631"
    },
    "391": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "392": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "393": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C405325"
    },
    "398": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "399": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x65A"
    },
    "402": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "403": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "404": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x8F029D5E"
    },
    "409": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "410": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x66D"
    },
    "413": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "414": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "415": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x95D89B41"
    },
    "420": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "421": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x676"
    },
    "424": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "425": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "426": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x96AFC450"
    },
    "431": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "432": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x67E"
    },
    "435": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "436": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "439": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "440": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "441": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "442": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x37DEEA70"
    },
    "447": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "448": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x277"
    },
    "451": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "452": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "453": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4966D086"
    },
    "458": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "459": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x230"
    },
    "462": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "463": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "464": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x50355D76"
    },
    "469": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "470": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20A"
    },
    "473": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "474": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "475": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x50355D76"
    },
    "480": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "481": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5F2"
    },
    "484": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "485": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "486": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62FB00FC"
    },
    "491": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "492": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5FB"
    },
    "495": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "496": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "497": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6C9C2FAF"
    },
    "502": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "503": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x60E"
    },
    "506": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "507": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "508": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6E27D889"
    },
    "513": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "514": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x616"
    },
    "517": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "518": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "521": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "522": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "523": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "524": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4966D086"
    },
    "529": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "530": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x58A"
    },
    "533": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "534": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "535": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x497DFE63"
    },
    "540": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "541": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x59F"
    },
    "544": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "545": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "546": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4A4FBEEC"
    },
    "551": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "552": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5B2"
    },
    "555": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "556": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "559": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "560": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "561": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "562": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x37DEEA70"
    },
    "567": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "568": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4B1"
    },
    "571": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "572": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "573": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x38E56261"
    },
    "578": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "579": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4B9"
    },
    "582": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "583": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "584": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x38ED7CFC"
    },
    "589": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "590": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4FA"
    },
    "593": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "594": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "595": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x39509351"
    },
    "600": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "601": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x54F"
    },
    "604": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "605": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "606": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x43A8D914"
    },
    "611": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "612": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x562"
    },
    "615": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "616": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "617": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x462D0B2E"
    },
    "622": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "623": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x575"
    },
    "626": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "627": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "629": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "630": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "631": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "632": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "633": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x20D3A0B4"
    },
    "638": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "639": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2E4"
    },
    "642": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "643": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "644": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x27764547"
    },
    "649": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "GT",
      "path": "26"
    },
    "650": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2BE"
    },
    "653": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "654": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "655": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x27764547"
    },
    "660": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "661": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3F3"
    },
    "664": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "665": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "666": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x313CE567"
    },
    "671": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "672": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x413"
    },
    "675": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "676": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "677": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x32CB6B0C"
    },
    "682": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "683": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x422"
    },
    "686": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "687": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "688": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x35AA2E44"
    },
    "693": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "694": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x434"
    },
    "697": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "698": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "700": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "701": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "702": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "703": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "704": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x20D3A0B4"
    },
    "709": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "710": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3C4"
    },
    "713": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "714": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "715": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x21B0908B"
    },
    "720": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "721": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3CD"
    },
    "724": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "725": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "726": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x23B872DD"
    },
    "731": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "732": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3E0"
    },
    "735": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "736": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "738": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "739": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "740": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "741": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "742": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6FDDE03"
    },
    "747": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "748": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32C"
    },
    "751": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "752": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "753": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x8AC5256"
    },
    "758": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "759": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34A"
    },
    "762": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "763": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "764": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x95EA7B3"
    },
    "769": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "770": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x361"
    },
    "773": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "774": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "775": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x18160DDD"
    },
    "780": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "781": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x384"
    },
    "784": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "785": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "786": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1865C57D"
    },
    "791": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "792": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x38C"
    },
    "795": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "796": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "797": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1D4E7793"
    },
    "802": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "EQ",
      "path": "26"
    },
    "803": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3A4"
    },
    "806": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "807": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "808": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "810": {
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "DUP1",
      "path": "26"
    },
    "811": {
      "first_revert": true,
      "fn": null,
      "offset": [
        271,
        13939
      ],
      "op": "REVERT",
      "path": "26"
    },
    "812": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "813": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334"
    },
    "816": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x884"
    },
    "819": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "820": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "821": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "824": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "827": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "828": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "829": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230D"
    },
    "832": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "833": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "834": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "836": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "837": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "838": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "839": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "840": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "841": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "842": {
      "offset": [
        678,
        706
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "843": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "846": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6C"
    },
    "848": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "849": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "DUP2",
      "path": "26"
    },
    "850": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "JUMP",
      "path": "26"
    },
    "851": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "852": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "854": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        678,
        706
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "855": {
      "op": "SWAP1"
    },
    "856": {
      "op": "DUP2"
    },
    "857": {
      "op": "MSTORE"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "offset": [
        678,
        706
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "864": {
      "op": "JUMP"
    },
    "865": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "866": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "869": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F"
    },
    "872": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "873": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "875": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2371"
    },
    "878": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "879": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "880": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x916"
    },
    "883": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "885": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "887": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "888": {
      "op": "SWAP1"
    },
    "889": {
      "op": "ISZERO"
    },
    "890": {
      "op": "ISZERO"
    },
    "891": {
      "op": "DUP2"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "899": {
      "op": "JUMP"
    },
    "900": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "901": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "903": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "904": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "907": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "908": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "909": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x394"
    },
    "912": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x930"
    },
    "915": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13760,
        13937
      ],
      "op": "JUMP",
      "path": "26"
    },
    "916": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "917": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "919": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "920": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "923": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "924": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "925": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "926": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "927": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "928": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x23E2"
    },
    "931": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13760,
        13937
      ],
      "op": "JUMP",
      "path": "26"
    },
    "932": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3B7"
    },
    "936": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3B2"
    },
    "939": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "940": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "942": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2411"
    },
    "945": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMP",
      "path": "26"
    },
    "946": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "947": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9C0"
    },
    "950": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMP",
      "path": "26"
    },
    "951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "952": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "954": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "955": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2494"
    },
    "963": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMP",
      "path": "26"
    },
    "964": {
      "offset": [
        2353,
        2388
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "965": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2353,
        2388
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2353,
        2388
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "970": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2353,
        2388
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "971": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2353,
        2388
      ],
      "op": "DUP2",
      "path": "26"
    },
    "972": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2353,
        2388
      ],
      "op": "JUMP",
      "path": "26"
    },
    "973": {
      "offset": [
        2733,
        2760
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "974": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "977": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3DB"
    },
    "980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "983": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "986": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2733,
        2760
      ],
      "op": "JUMP",
      "path": "26"
    },
    "987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "988": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD3F"
    },
    "991": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        2733,
        2760
      ],
      "op": "JUMP",
      "path": "26"
    },
    "992": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "993": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "996": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EE"
    },
    "999": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1000": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1002": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24F1"
    },
    "1005": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1006": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1007": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD60"
    },
    "1010": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1011": {
      "offset": [
        2849,
        2904
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1012": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1015": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x401"
    },
    "1018": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1019": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1021": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2532"
    },
    "1024": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        2849,
        2904
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1025": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1026": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "1028": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1030": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1031": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1033": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1034": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1035": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1036": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1038": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1039": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1040": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1041": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1042": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2849,
        2904
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1043": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1044": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1046": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1047": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "1057": {
      "op": "JUMP"
    },
    "1058": {
      "offset": [
        1979,
        2029
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1059": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1979,
        2029
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1062": {
      "offset": [
        2016,
        2029
      ],
      "op": "PUSH11",
      "path": "26",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "1074": {
      "offset": [
        1979,
        2029
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1075": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1979,
        2029
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1076": {
      "offset": [
        2639,
        2686
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1077": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x47E"
    },
    "1080": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x442"
    },
    "1083": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1084": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1086": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1089": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        2639,
        2686
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1090": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1091": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "1093": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1095": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1096": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1098": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1099": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1100": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1101": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1103": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1104": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1105": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1106": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1107": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1109": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1110": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "ADD",
      "path": "26"
    },
    "1111": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1112": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1114": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1115": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "ADD",
      "path": "26"
    },
    "1116": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1117": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "1119": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1120": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "ADD",
      "path": "26"
    },
    "1121": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1122": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1124": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1125": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "1126": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "ADD",
      "path": "26"
    },
    "1127": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1128": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1129": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "SUB"
    },
    "1138": {
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1139": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1140": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "AND",
      "path": "26"
    },
    "1141": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1142": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1143": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1144": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1145": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1147": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "AND",
      "path": "26"
    },
    "1148": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP6",
      "path": "26"
    },
    "1149": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1150": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1151": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1153": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1154": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        2639,
        2686
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1155": {
      "op": "SWAP6"
    },
    "1156": {
      "op": "DUP7"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "SUB"
    },
    "1166": {
      "op": "SWAP1"
    },
    "1167": {
      "op": "SWAP5"
    },
    "1168": {
      "op": "AND"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1171": {
      "op": "DUP7"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "op": "MSTORE"
    },
    "1174": {
      "op": "SWAP3"
    },
    "1175": {
      "op": "DUP5"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "SWAP2"
    },
    "1178": {
      "op": "SWAP1"
    },
    "1179": {
      "op": "SWAP2"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1183": {
      "op": "DUP4"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "MSTORE"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1188": {
      "op": "AND"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1191": {
      "op": "DUP3"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "op": "MSTORE"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "offset": [
        2639,
        2686
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1200": {
      "op": "JUMP"
    },
    "1201": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13076,
        13212
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1202": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13076,
        13212
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1205": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13076,
        13212
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD84"
    },
    "1208": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        13076,
        13212
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1209": {
      "offset": [
        2576,
        2633
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1210": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4E2"
    },
    "1213": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4C7"
    },
    "1216": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1217": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1219": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1222": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        2576,
        2633
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1223": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1224": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x74"
    },
    "1226": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1228": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1229": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1231": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1232": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1233": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1234": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1236": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1237": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1238": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "offset": [
        2576,
        2633
      ],
      "op": "AND",
      "path": "26"
    },
    "1248": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1249": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1250": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1251": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1253": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2576,
        2633
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "op": "SWAP1"
    },
    "1263": {
      "op": "SWAP2"
    },
    "1264": {
      "op": "AND"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "offset": [
        2576,
        2633
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1273": {
      "op": "JUMP"
    },
    "1274": {
      "offset": [
        2692,
        2727
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1275": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x530"
    },
    "1278": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x508"
    },
    "1281": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1282": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1284": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1287": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        2692,
        2727
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1288": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1289": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "1291": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1293": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1294": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1296": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1297": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1298": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1299": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1301": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1302": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1303": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1304": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1305": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1307": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1308": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1309": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "ADD",
      "path": "26"
    },
    "1310": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1320": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1321": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "AND",
      "path": "26"
    },
    "1322": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1323": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1325": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "AND",
      "path": "26"
    },
    "1326": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1327": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1328": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1329": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1331": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1332": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        2692,
        2727
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1339": {
      "op": "SHL"
    },
    "1340": {
      "op": "SUB"
    },
    "1341": {
      "op": "SWAP1"
    },
    "1342": {
      "op": "SWAP4"
    },
    "1343": {
      "op": "AND"
    },
    "1344": {
      "op": "DUP4"
    },
    "1345": {
      "op": "MSTORE"
    },
    "1346": {
      "op": "SWAP1"
    },
    "1347": {
      "op": "ISZERO"
    },
    "1348": {
      "op": "ISZERO"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1351": {
      "op": "DUP4"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "offset": [
        2692,
        2727
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1358": {
      "op": "JUMP"
    },
    "1359": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1363": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55D"
    },
    "1366": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1367": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1369": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2371"
    },
    "1372": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1373": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1374": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF7"
    },
    "1377": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1378": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1379": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3B7"
    },
    "1382": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x570"
    },
    "1385": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1386": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1388": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2639"
    },
    "1391": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7669,
        8113
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1392": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1393": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE36"
    },
    "1396": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7669,
        8113
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1397": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1398": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1401": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x583"
    },
    "1404": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1405": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1407": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2680"
    },
    "1410": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1411": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1412": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF60"
    },
    "1415": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1416": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1417": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "STOP",
      "path": "26"
    },
    "1418": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1419": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x592"
    },
    "1422": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1111"
    },
    "1425": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13615,
        13754
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1426": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1427": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1429": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1430": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1433": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1434": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1435": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x26D2"
    },
    "1438": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13615,
        13754
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1439": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1440": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1443": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5AD"
    },
    "1446": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1447": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1449": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x26E5"
    },
    "1452": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5247,
        6143
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1453": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1454": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1183"
    },
    "1457": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        5247,
        6143
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1458": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1459": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x374"
    },
    "1462": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5C0"
    },
    "1465": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1466": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1468": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2532"
    },
    "1471": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        13420,
        13609
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1472": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1479": {
      "op": "SHL"
    },
    "1480": {
      "op": "SUB"
    },
    "1481": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "AND",
      "path": "26"
    },
    "1482": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13484,
        13488
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1484": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1485": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1486": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1487": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13534
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "1489": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1491": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1492": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1493": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1494": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1496": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1497": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1498": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1499": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13514,
        13549
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1500": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13592,
        13602
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 2,
      "value": "0x6F"
    },
    "1502": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13592,
        13602
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1503": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1504": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1505": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1506": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13576
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "1508": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1509": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1510": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1511": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1512": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1513": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13581
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1514": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13588
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1516": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13588
      ],
      "op": "ADD",
      "path": "26"
    },
    "1517": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13588
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1518": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13602
      ],
      "op": "LT",
      "path": "26"
    },
    "1519": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13602
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1520": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13566,
        13602
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1521": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        13420,
        13609
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1522": {
      "offset": [
        576,
        601
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1523": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1526": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x69"
    },
    "1528": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1529": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1530": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        576,
        601
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1531": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1532": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1535": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x609"
    },
    "1538": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1539": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1541": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2532"
    },
    "1544": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "i",
      "offset": [
        12562,
        12856
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1545": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1546": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1321"
    },
    "1549": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "i",
      "offset": [
        12562,
        12856
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1550": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13319,
        13414
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1551": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13319,
        13414
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1554": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13319,
        13414
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1398"
    },
    "1557": {
      "fn": "SmartnodesCore.getSupply",
      "jump": "i",
      "offset": [
        13319,
        13414
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1558": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1559": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1562": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x624"
    },
    "1565": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1566": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1568": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1571": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9043,
        9136
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1572": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1573": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13D8"
    },
    "1576": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9043,
        9136
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1577": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12963,
        13070
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1578": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12963,
        13070
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1581": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12963,
        13070
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E5"
    },
    "1584": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        12963,
        13070
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1585": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1586": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "1589": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63F"
    },
    "1592": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1593": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1595": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2532"
    },
    "1598": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1606": {
      "op": "SHL"
    },
    "1607": {
      "op": "SUB"
    },
    "1608": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 3
    },
    "1609": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1611": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1612": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1613": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1614": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1616": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1618": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1619": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1621": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1622": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1623": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1624": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1625": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1626": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1627": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1630": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x668"
    },
    "1633": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1634": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1636": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1639": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9142,
        10408
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1640": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1641": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13F6"
    },
    "1644": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9142,
        10408
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1645": {
      "offset": [
        505,
        538
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1646": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1649": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x67"
    },
    "1651": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1652": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1653": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        505,
        538
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1654": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1655": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334"
    },
    "1658": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1607"
    },
    "1661": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1662": {
      "offset": [
        2173,
        2209
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1663": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2173,
        2209
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1666": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2173,
        2209
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "1668": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2173,
        2209
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1669": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2173,
        2209
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1670": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2173,
        2209
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1671": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1672": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1675": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x695"
    },
    "1678": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1679": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1681": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2707"
    },
    "1684": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10585,
        11771
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1685": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1686": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1616"
    },
    "1689": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10585,
        11771
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1690": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1691": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1694": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A8"
    },
    "1697": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1698": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1700": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2371"
    },
    "1703": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1704": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1705": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F8"
    },
    "1708": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1709": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1710": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "1713": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BB"
    },
    "1716": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1717": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1719": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2371"
    },
    "1722": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1723": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1724": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188A"
    },
    "1727": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1728": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1729": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1732": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6CE"
    },
    "1735": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1736": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1738": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1741": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4645,
        5122
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1742": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1743": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1898"
    },
    "1746": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        4645,
        5122
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1747": {
      "offset": [
        2394,
        2429
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1748": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2394,
        2429
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1751": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2394,
        2429
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x71"
    },
    "1753": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2394,
        2429
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1754": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2394,
        2429
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1755": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        2394,
        2429
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1756": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12862,
        12957
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1757": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12862,
        12957
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1760": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12862,
        12957
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x197D"
    },
    "1763": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12862,
        12957
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1764": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1765": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6F7"
    },
    "1768": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6F2"
    },
    "1771": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1772": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1774": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1777": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1778": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1779": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x198E"
    },
    "1782": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1783": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1784": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1786": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1787": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1788": {
      "op": "SWAP4"
    },
    "1789": {
      "op": "ISZERO"
    },
    "1790": {
      "op": "ISZERO"
    },
    "1791": {
      "op": "DUP5"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "op": "DUP5"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "op": "SWAP3"
    },
    "1798": {
      "op": "SWAP1"
    },
    "1799": {
      "op": "SWAP3"
    },
    "1800": {
      "op": "MSTORE"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "op": "AND"
    },
    "1810": {
      "op": "SWAP1"
    },
    "1811": {
      "op": "DUP3"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "1820": {
      "op": "JUMP"
    },
    "1821": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1822": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1825": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x72B"
    },
    "1828": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1829": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1831": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1834": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        8119,
        8317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1835": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1836": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1AA3"
    },
    "1839": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        8119,
        8317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1840": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1841": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x592"
    },
    "1844": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x73E"
    },
    "1847": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1848": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1850": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1853": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11848,
        12054
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1854": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1855": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B21"
    },
    "1858": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "i",
      "offset": [
        11848,
        12054
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1859": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13218,
        13313
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1860": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13294,
        13306
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 4,
      "value": "0x6E"
    },
    "1862": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13294,
        13306
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1863": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13218,
        13313
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1866": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        13218,
        13313
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1867": {
      "offset": [
        644,
        672
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1868": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1871": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6B"
    },
    "1873": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1874": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1875": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        644,
        672
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1876": {
      "offset": [
        2080,
        2109
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1877": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2080,
        2109
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "1880": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2080,
        2109
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6D"
    },
    "1882": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2080,
        2109
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1883": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2080,
        2109
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1884": {
      "fn": "SmartnodesCore.getEmissionRate",
      "offset": [
        2080,
        2109
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1885": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1886": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x588"
    },
    "1889": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x76B"
    },
    "1892": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1893": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1895": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2532"
    },
    "1898": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        4224,
        4550
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1899": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1900": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B90"
    },
    "1903": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        4224,
        4550
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1904": {
      "offset": [
        2485,
        2522
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1905": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7AC"
    },
    "1908": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x77E"
    },
    "1911": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "1912": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1914": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "1917": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2485,
        2522
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1918": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1919": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x72"
    },
    "1921": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1923": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1924": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1926": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1927": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1928": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1929": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1931": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1932": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1933": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1934": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1935": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1937": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1938": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "ADD",
      "path": "26"
    },
    "1939": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1940": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "1942": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1943": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1944": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "ADD",
      "path": "26"
    },
    "1945": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1955": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1956": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "AND",
      "path": "26"
    },
    "1957": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1958": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1959": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "1961": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "AND",
      "path": "26"
    },
    "1962": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1963": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1964": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1965": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1967": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1968": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2485,
        2522
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "op": "SUB"
    },
    "1977": {
      "op": "SWAP1"
    },
    "1978": {
      "op": "SWAP5"
    },
    "1979": {
      "op": "AND"
    },
    "1980": {
      "op": "DUP5"
    },
    "1981": {
      "op": "MSTORE"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1984": {
      "op": "DUP5"
    },
    "1985": {
      "op": "ADD"
    },
    "1986": {
      "op": "SWAP3"
    },
    "1987": {
      "op": "SWAP1"
    },
    "1988": {
      "op": "SWAP3"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1992": {
      "op": "AND"
    },
    "1993": {
      "op": "SWAP1"
    },
    "1994": {
      "op": "DUP3"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "offset": [
        2485,
        2522
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x341"
    },
    "2003": {
      "op": "JUMP"
    },
    "2004": {
      "offset": [
        2791,
        2843
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2005": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2008": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7E2"
    },
    "2011": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2012": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2014": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2532"
    },
    "2017": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2791,
        2843
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2018": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2019": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x78"
    },
    "2021": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2023": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2024": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2026": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2027": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2028": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2029": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2031": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2032": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2033": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2034": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2035": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2791,
        2843
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2036": {
      "offset": [
        607,
        638
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2037": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2040": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6A"
    },
    "2042": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2043": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2044": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        607,
        638
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2045": {
      "offset": [
        2528,
        2570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2046": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4E2"
    },
    "2049": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x80B"
    },
    "2052": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2053": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2055": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24D8"
    },
    "2058": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2528,
        2570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2059": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2060": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x73"
    },
    "2062": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2064": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2065": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2067": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2068": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2069": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2070": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2072": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2073": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2074": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "offset": [
        2528,
        2570
      ],
      "op": "AND",
      "path": "26"
    },
    "2084": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2085": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2528,
        2570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2086": {
      "offset": [
        2266,
        2303
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2087": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2266,
        2303
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2090": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2266,
        2303
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "2092": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2266,
        2303
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2093": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2266,
        2303
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2094": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2266,
        2303
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2095": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2096": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x353"
    },
    "2099": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83D"
    },
    "2102": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2103": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2105": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27ED"
    },
    "2108": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2109": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "op": "SUB"
    },
    "2118": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "2119": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2120": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "2121": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2123": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2124": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2125": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2126": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "2128": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2130": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2131": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2132": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2133": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2135": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2136": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2137": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2138": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2139": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2140": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2141": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "2142": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2143": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2144": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2145": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2146": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2147": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2148": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2149": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2150": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2151": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2152": {
      "offset": [
        544,
        570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2153": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x353"
    },
    "2156": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x68"
    },
    "2158": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2159": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2160": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        544,
        570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2161": {
      "offset": [
        416,
        455
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2162": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "2164": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2165": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x4E2"
    },
    "2168": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2175": {
      "op": "SHL"
    },
    "2176": {
      "op": "SUB"
    },
    "2177": {
      "offset": [
        416,
        455
      ],
      "op": "AND",
      "path": "26"
    },
    "2178": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2179": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        416,
        455
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2180": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2181": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2183": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x36"
    },
    "2185": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2187": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x893"
    },
    "2190": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2191": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281B"
    },
    "2194": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2199": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2200": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2202": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2203": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2204": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2205": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2206": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2208": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2209": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2211": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2212": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2214": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2215": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2217": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2218": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2219": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2220": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2221": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2222": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2223": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2224": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2225": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2227": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2228": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2229": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2230": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2231": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BF"
    },
    "2234": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2235": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281B"
    },
    "2238": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2239": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2240": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2241": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2242": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x90C"
    },
    "2245": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2246": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2247": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2249": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "2250": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E1"
    },
    "2253": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2254": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2257": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2258": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2259": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2260": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "2261": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "2262": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2263": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2264": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2265": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2267": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2268": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2269": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x90C"
    },
    "2272": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2273": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2274": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2275": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2276": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2277": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2278": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2280": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2281": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2283": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2285": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2286": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2287": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2288": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2289": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2290": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2291": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2292": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2293": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2295": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2296": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2297": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2299": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2300": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2301": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2302": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "2303": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8EF"
    },
    "2306": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2307": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2308": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2309": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "2310": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2312": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "2313": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2314": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "2315": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2316": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2317": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2318": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2319": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2320": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2321": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2322": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2323": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "2324": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2325": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2326": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2327": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2329": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "2330": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x924"
    },
    "2333": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2334": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2335": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2336": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C15"
    },
    "2339": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2340": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2341": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2343": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2344": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2345": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "2346": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2347": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2348": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2349": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2350": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "2351": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2352": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2353": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13827,
        13834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2355": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13836,
        13843
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2356": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13845,
        13852
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2358": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13854,
        13870
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2360": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 10,
      "value": "0x65"
    },
    "2362": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2364": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2365": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2366": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2367": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "2370": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "EXP",
      "path": "26"
    },
    "2371": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2372": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "DIV",
      "path": "26"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13919
      ],
      "op": "AND",
      "path": "26"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2388": {
      "op": "SHL"
    },
    "2389": {
      "op": "SUB"
    },
    "2390": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13928
      ],
      "op": "AND",
      "path": "26"
    },
    "2391": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13928
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1865C57D"
    },
    "2396": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2398": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2399": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2400": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "2405": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "AND",
      "path": "26"
    },
    "2406": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "2408": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "SHL",
      "path": "26"
    },
    "2409": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2410": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2411": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2413": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "ADD",
      "path": "26"
    },
    "2414": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2416": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2418": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2419": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2420": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2421": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "SUB",
      "path": "26"
    },
    "2422": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2423": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2424": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "GAS",
      "path": "26"
    },
    "2425": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2426": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2427": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2428": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2429": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x98A"
    },
    "2432": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2433": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2434": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2436": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2437": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2438": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2439": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2441": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2442": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2443": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2444": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2445": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2446": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2447": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2449": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2450": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2451": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2453": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2454": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2455": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2457": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2458": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2459": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2460": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "ADD",
      "path": "26"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2463": {
      "op": "NOT"
    },
    "2464": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "AND",
      "path": "26"
    },
    "2465": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2466": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "ADD",
      "path": "26"
    },
    "2467": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2469": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2470": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9B2"
    },
    "2473": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2474": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2475": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2476": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "ADD",
      "path": "26"
    },
    "2477": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2478": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28BD"
    },
    "2481": {
      "fn": "SmartnodesCore.getState",
      "jump": "i",
      "offset": [
        13893,
        13930
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2482": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13893,
        13930
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2483": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2484": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2485": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2486": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2487": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2488": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2489": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2490": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13886,
        13930
      ],
      "op": "POP",
      "path": "26"
    },
    "2491": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2492": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2493": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2494": {
      "fn": "SmartnodesCore.getState",
      "offset": [
        13760,
        13937
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2495": {
      "fn": "SmartnodesCore.getState",
      "jump": "o",
      "offset": [
        13760,
        13937
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2496": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2497": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6479,
        6503
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "2499": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6479,
        6503
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2500": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6334,
        6363
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2502": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6334,
        6363
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "op": "SUB"
    },
    "2511": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6479,
        6503
      ],
      "op": "AND",
      "path": "26"
    },
    "2512": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6475
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2513": {
      "branch": 117,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6465,
        6503
      ],
      "op": "EQ",
      "path": "26"
    },
    "2514": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6461,
        6689
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA05"
    },
    "2517": {
      "branch": 117,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6461,
        6689
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2518": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6541,
        6551
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2519": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6564,
        6565
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2521": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2522": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2523": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2524": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6540
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x78"
    },
    "2526": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2528": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2529": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2531": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2532": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2533": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6523,
        6552
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2534": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6519,
        6679
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA05"
    },
    "2537": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6519,
        6679
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2538": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6586,
        6606
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 11,
      "value": "0x9F2"
    },
    "2541": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6597,
        6605
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2542": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6586,
        6596
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1898"
    },
    "2545": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6586,
        6606
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2546": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6586,
        6606
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2547": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6653,
        6663
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 12
    },
    "2548": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2550": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2551": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2552": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2553": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6652
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x78"
    },
    "2555": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2557": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2558": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2560": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2561": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2562": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2563": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6635,
        6664
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "2564": {
      "op": "POP"
    },
    "2565": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6519,
        6679
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2566": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6707,
        6715
      ],
      "op": "DUP5",
      "path": "26",
      "statement": 13
    },
    "2567": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA4E"
    },
    "2570": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2571": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2573": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2582": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2585": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2587": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2588": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "ADD",
      "path": "26"
    },
    "2589": {
      "op": "MSTORE"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2594": {
      "op": "DUP3"
    },
    "2595": {
      "op": "ADD"
    },
    "2596": {
      "op": "MSTORE"
    },
    "2597": {
      "op": "PUSH20",
      "value": "0x55736572206E6F74207265676973746572656421"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2623": {
      "op": "DUP3"
    },
    "2624": {
      "op": "ADD"
    },
    "2625": {
      "op": "MSTORE"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2628": {
      "op": "ADD"
    },
    "2629": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2630": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2632": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2633": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2634": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2635": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "SUB",
      "path": "26"
    },
    "2636": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2637": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "26"
    },
    "2638": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6699,
        6754
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2639": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6804,
        6805
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 14,
      "value": "0x0"
    },
    "2641": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2642": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2643": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2644": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "2646": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2648": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2649": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2651": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2652": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6785
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2653": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6792
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2660": {
      "op": "SHL"
    },
    "2661": {
      "op": "SUB"
    },
    "2662": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6792
      ],
      "op": "AND",
      "path": "26"
    },
    "2663": {
      "branch": 118,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6772,
        6806
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2664": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAAA"
    },
    "2667": {
      "branch": 118,
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2668": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2670": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2677": {
      "op": "SHL"
    },
    "2678": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2679": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2682": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2684": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2685": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "ADD",
      "path": "26"
    },
    "2686": {
      "op": "MSTORE"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "op": "MSTORE"
    },
    "2694": {
      "op": "PUSH20",
      "value": "0x2537B11030B63932B0B23C9031B932B0BA32B217"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2717": {
      "op": "SHL"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2720": {
      "op": "DUP3"
    },
    "2721": {
      "op": "ADD"
    },
    "2722": {
      "op": "MSTORE"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2725": {
      "op": "ADD"
    },
    "2726": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "2729": {
      "op": "JUMP"
    },
    "2730": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6764,
        6831
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2731": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        6977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x65"
    },
    "2733": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        6977
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2734": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2736": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2737": {
      "op": "PUSH4",
      "value": "0x71547B79"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2744": {
      "op": "SHL"
    },
    "2745": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2746": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2747": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        6977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2749": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2751": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2752": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "ADD",
      "path": "26"
    },
    "2753": {
      "op": "MSTORE"
    },
    "2754": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6948
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2756": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        6948
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2763": {
      "op": "SHL"
    },
    "2764": {
      "op": "SUB"
    },
    "2765": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        6977
      ],
      "op": "AND",
      "path": "26"
    },
    "2766": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        6977
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2767": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7009
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xE2A8F6F2"
    },
    "2772": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7009
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2775": {
      "op": "ADD"
    },
    "2776": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2778": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2780": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2781": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2782": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2783": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "SUB",
      "path": "26"
    },
    "2784": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2785": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2786": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "GAS",
      "path": "26"
    },
    "2787": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2788": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2789": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2790": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2791": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAF4"
    },
    "2794": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2795": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2796": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2798": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2799": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2800": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2801": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2803": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2804": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2805": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "POP",
      "path": "26"
    },
    "2806": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "POP",
      "path": "26"
    },
    "2807": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "POP",
      "path": "26"
    },
    "2808": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "POP",
      "path": "26"
    },
    "2809": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2811": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2812": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2813": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2815": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2816": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2817": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2819": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2820": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2821": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2822": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "ADD",
      "path": "26"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2825": {
      "op": "NOT"
    },
    "2826": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "AND",
      "path": "26"
    },
    "2827": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2828": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "ADD",
      "path": "26"
    },
    "2829": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2831": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2832": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB1C"
    },
    "2835": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2836": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2837": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2838": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "ADD",
      "path": "26"
    },
    "2839": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2840": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x290B"
    },
    "2843": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        6951,
        7012
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2844": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6951,
        7012
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2845": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2847": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2848": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2849": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7069,
        7070
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2851": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2852": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2853": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2854": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2855": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2856": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "ADD",
      "path": "26"
    },
    "2857": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2858": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2859": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2860": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        7012
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2861": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6916,
        7012
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2862": {
      "op": "POP"
    },
    "2863": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7022,
        7052
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2865": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7022,
        7052
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2866": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2867": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2869": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2870": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2871": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "ADD",
      "path": "26"
    },
    "2872": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2873": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2874": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "2875": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2876": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "2877": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "ADD",
      "path": "26"
    },
    "2878": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7055,
        7071
      ],
      "op": "POP",
      "path": "26"
    },
    "2881": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7022,
        7071
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2882": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7022,
        7071
      ],
      "op": "POP",
      "path": "26"
    },
    "2883": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7116,
        7125
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2885": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2886": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7135,
        7150
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2887": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7135,
        7157
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2888": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7131,
        7132
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2889": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7131,
        7157
      ],
      "op": "LT",
      "path": "26"
    },
    "2890": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2891": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBB2"
    },
    "2894": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2895": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7217
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 15,
      "value": "0x79"
    },
    "2897": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2899": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7233
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2900": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7234,
        7235
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2901": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2902": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2903": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2904": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "LT",
      "path": "26"
    },
    "2905": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB64"
    },
    "2908": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2909": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB64"
    },
    "2912": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2948"
    },
    "2915": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7218,
        7236
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2916": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2917": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2919": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "MUL",
      "path": "26"
    },
    "2920": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2922": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "ADD",
      "path": "26"
    },
    "2923": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "ADD",
      "path": "26"
    },
    "2924": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7218,
        7236
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2931": {
      "op": "SHL"
    },
    "2932": {
      "op": "SUB"
    },
    "2933": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "AND",
      "path": "26"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "op": "SUB"
    },
    "2942": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "AND",
      "path": "26"
    },
    "2943": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2944": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2945": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2947": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "ADD",
      "path": "26"
    },
    "2948": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2949": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2950": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2951": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2953": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "ADD",
      "path": "26"
    },
    "2954": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2956": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2957": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7197,
        7237
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2958": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7191
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2959": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7192,
        7193
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2960": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2961": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2962": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2963": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "LT",
      "path": "26"
    },
    "2964": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB9F"
    },
    "2967": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2968": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB9F"
    },
    "2971": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2948"
    },
    "2974": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7178,
        7194
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2975": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2976": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2978": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2979": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2980": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "MUL",
      "path": "26"
    },
    "2981": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2982": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2983": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2984": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "ADD",
      "path": "26"
    },
    "2985": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7194
      ],
      "op": "ADD",
      "path": "26"
    },
    "2986": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7178,
        7237
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2987": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7159,
        7162
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 16,
      "value": "0x1"
    },
    "2989": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7159,
        7162
      ],
      "op": "ADD",
      "path": "26"
    },
    "2990": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB45"
    },
    "2993": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2994": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7111,
        7248
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2995": {
      "op": "POP"
    },
    "2996": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 17,
      "value": "0x40"
    },
    "2998": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2999": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3000": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "3002": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3003": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3004": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3005": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3006": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7345,
        7355
      ],
      "op": "CALLER",
      "path": "26"
    },
    "3007": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3008": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3009": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3011": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3012": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3013": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3014": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3015": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3016": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3017": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3018": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3019": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7437,
        7448
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3020": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3029": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3030": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "GT",
      "path": "26"
    },
    "3031": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3032": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBE3"
    },
    "3035": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3036": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBE3"
    },
    "3039": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2556"
    },
    "3042": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7423,
        7456
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3043": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3044": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3046": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3047": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3048": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3049": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3050": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3051": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3052": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3054": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "MUL",
      "path": "26"
    },
    "3055": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3057": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "ADD",
      "path": "26"
    },
    "3058": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3059": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "ADD",
      "path": "26"
    },
    "3060": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3062": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3063": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3064": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3065": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC0C"
    },
    "3068": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3069": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3070": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3072": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "ADD",
      "path": "26"
    },
    "3073": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3075": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3076": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "MUL",
      "path": "26"
    },
    "3077": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3078": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "3079": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3080": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "3081": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "ADD",
      "path": "26"
    },
    "3082": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3085": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7423,
        7456
      ],
      "op": "POP",
      "path": "26"
    },
    "3086": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3087": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3088": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3090": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3091": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7482,
        7493
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3092": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7482,
        7493
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3093": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3094": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3095": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3097": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MUL",
      "path": "26"
    },
    "3098": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3100": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3101": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3103": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3104": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3105": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3106": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3107": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3109": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3110": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3111": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3112": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3113": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3114": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3115": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3116": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3117": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3118": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3120": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3121": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3122": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3123": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3125": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MUL",
      "path": "26"
    },
    "3126": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3127": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3128": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3129": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "3130": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3132": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3133": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3134": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3135": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3136": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3137": {
      "op": "POP"
    },
    "3138": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3139": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3140": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "op": "POP"
    },
    "3143": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7517,
        7521
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3145": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3147": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3148": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3149": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3150": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3151": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3152": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7319,
        7532
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3153": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "DUP11",
      "path": "26"
    },
    "3154": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3155": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3156": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7307
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "3158": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3159": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3160": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3162": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3163": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3164": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3165": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3166": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3167": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3168": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "op": "SUB"
    },
    "3177": {
      "op": "NOT"
    },
    "3178": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "AND",
      "path": "26"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "op": "SUB"
    },
    "3187": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3188": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3189": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "AND",
      "path": "26"
    },
    "3190": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "OR",
      "path": "26"
    },
    "3191": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3192": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3193": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3194": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3195": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3196": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3197": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3198": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3199": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3200": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7316
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3201": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC8F"
    },
    "3204": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3205": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3206": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3207": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3210": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3211": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2258"
    },
    "3214": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7303,
        7532
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3215": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3219": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3220": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3221": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3222": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3223": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3224": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCAB"
    },
    "3227": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3228": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "3230": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3231": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3232": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3233": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3235": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3236": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3237": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3238": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3239": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2258"
    },
    "3242": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7303,
        7532
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3243": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "3247": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3248": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3249": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3250": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3251": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3252": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCC7"
    },
    "3255": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3256": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3258": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3259": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3260": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3261": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3263": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3264": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3265": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3266": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3267": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22BD"
    },
    "3270": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7303,
        7532
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3271": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3272": {
      "op": "POP"
    },
    "3273": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "3275": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3276": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3277": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3278": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3279": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3280": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3282": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3283": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3284": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ADD",
      "path": "26"
    },
    "3285": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3286": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3289": {
      "op": "NOT"
    },
    "3290": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "AND",
      "path": "26"
    },
    "3291": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3292": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3293": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3294": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3295": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3296": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3297": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "OR",
      "path": "26"
    },
    "3298": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3299": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7303,
        7532
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3300": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 18,
      "value": "0x40"
    },
    "3302": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3303": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7561,
        7568
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3304": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7561,
        7568
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3305": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x5DD5AFF7B55A6D23DB5800AE74FAFB29F5F00976A85526C852C81900D14CF3E7"
    },
    "3338": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3339": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD17"
    },
    "3342": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3343": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7570,
        7585
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "3344": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7570,
        7585
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3345": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7587,
        7602
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3346": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7587,
        7602
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3347": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x295E"
    },
    "3350": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7548,
        7603
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3351": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3352": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3354": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3355": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3356": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3357": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "SUB",
      "path": "26"
    },
    "3358": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3359": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7548,
        7603
      ],
      "op": "LOG2",
      "path": "26"
    },
    "3360": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7623
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 19,
      "value": "0x69"
    },
    "3362": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3363": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3364": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3365": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7623
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3367": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD2F"
    },
    "3370": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3371": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x298D"
    },
    "3374": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "i",
      "offset": [
        7613,
        7625
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3375": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3376": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3377": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3378": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7613,
        7625
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7643,
        7656
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 20
    },
    "3381": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        7643,
        7656
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "3382": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        6199,
        7663
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "op": "POP"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        6199,
        7663
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3391": {
      "offset": [
        2733,
        2760
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3392": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x77"
    },
    "3394": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3395": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3396": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3397": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3398": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "LT",
      "path": "26"
    },
    "3399": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD4F"
    },
    "3402": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3403": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3405": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3406": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3407": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3408": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3410": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3411": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3412": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3413": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3415": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3416": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3417": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3418": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "ADD",
      "path": "26"
    },
    "3419": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3420": {
      "fn": "SmartnodesCore.requestJob",
      "offset": [
        2733,
        2760
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3421": {
      "op": "POP"
    },
    "3422": {
      "offset": [
        2733,
        2760
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3423": {
      "fn": "SmartnodesCore.requestJob",
      "jump": "o",
      "offset": [
        2733,
        2760
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3424": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3425": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3427": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3428": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0xD6E"
    },
    "3431": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3432": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3433": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3434": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D39"
    },
    "3437": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3438": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3439": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0xD79"
    },
    "3442": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3443": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3444": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3445": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DCB"
    },
    "3448": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3449": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3450": {
      "op": "POP"
    },
    "3451": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x1"
    },
    "3453": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3454": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "op": "POP"
    },
    "3458": {
      "op": "POP"
    },
    "3459": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3460": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13076,
        13212
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3461": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13186
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 24,
      "value": "0x65"
    },
    "3463": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13186
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3464": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3466": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3467": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3468": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3477": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3478": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3479": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3480": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13134,
        13141
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3482": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13134,
        13141
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3489": {
      "op": "SHL"
    },
    "3490": {
      "op": "SUB"
    },
    "3491": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13186
      ],
      "op": "AND",
      "path": "26"
    },
    "3492": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13186
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3493": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13203
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x91E2E252"
    },
    "3498": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13203
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3499": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3501": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3502": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3503": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ADD",
      "path": "26"
    },
    "3504": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3505": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3507": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3508": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3509": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3510": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3511": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3512": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SUB",
      "path": "26"
    },
    "3513": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ADD",
      "path": "26"
    },
    "3514": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3515": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13186
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3516": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "GAS",
      "path": "26"
    },
    "3517": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3518": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3519": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3520": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3521": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDCE"
    },
    "3524": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3525": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3526": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3528": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3529": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3530": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3531": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3533": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3534": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3535": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "POP",
      "path": "26"
    },
    "3536": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "POP",
      "path": "26"
    },
    "3537": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "POP",
      "path": "26"
    },
    "3538": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "POP",
      "path": "26"
    },
    "3539": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3541": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3542": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3543": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3545": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "NOT",
      "path": "26"
    },
    "3546": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3548": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3549": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ADD",
      "path": "26"
    },
    "3550": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "AND",
      "path": "26"
    },
    "3551": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3552": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ADD",
      "path": "26"
    },
    "3553": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3554": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3556": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3557": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "POP",
      "path": "26"
    },
    "3558": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3559": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "ADD",
      "path": "26"
    },
    "3560": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3561": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF2"
    },
    "3564": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3565": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3566": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29A6"
    },
    "3569": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        13160,
        13205
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3570": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13160,
        13205
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3571": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13153,
        13205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3572": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13153,
        13205
      ],
      "op": "POP",
      "path": "26"
    },
    "3573": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        13076,
        13212
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3574": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        13076,
        13212
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3575": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3576": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3577": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3579": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 25
    },
    "3580": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3581": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3582": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "3584": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3586": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3587": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3588": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3589": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3591": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3592": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3593": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "op": "SUB"
    },
    "3602": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3603": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "3604": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3605": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3606": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3607": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3608": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3609": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3610": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3611": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3612": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3613": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3614": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3615": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x924"
    },
    "3618": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3619": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3620": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3621": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3622": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3623": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE31"
    },
    "3626": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3627": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3628": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3629": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BF"
    },
    "3632": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3633": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3634": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C15"
    },
    "3637": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3638": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3639": {
      "offset": [
        2989,
        3013
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "3641": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2989,
        3013
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3642": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7796,
        7812
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "3644": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7796,
        7812
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "op": "SUB"
    },
    "3653": {
      "offset": [
        2989,
        3013
      ],
      "op": "AND",
      "path": "26"
    },
    "3654": {
      "offset": [
        2975,
        2985
      ],
      "op": "CALLER",
      "path": "26"
    },
    "3655": {
      "offset": [
        2975,
        3013
      ],
      "op": "EQ",
      "path": "26"
    },
    "3656": {
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE63"
    },
    "3659": {
      "offset": [
        2954,
        3077
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3660": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3662": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "offset": [
        2954,
        3077
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3671": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3672": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3674": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "ADD",
      "path": "26"
    },
    "3675": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "3678": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3679": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29D2"
    },
    "3682": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        2954,
        3077
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3683": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3684": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 26,
      "value": "0x0"
    },
    "3686": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3687": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3688": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3689": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7855
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "3691": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3693": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3694": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3696": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3697": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7864
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3698": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7875
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3700": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7875
      ],
      "op": "ADD",
      "path": "26"
    },
    "3701": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7851,
        7882
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3702": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7832,
        7847
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3703": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7832,
        7847
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3704": {
      "branch": 119,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7832,
        7882
      ],
      "op": "EQ",
      "path": "26"
    },
    "3705": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7824,
        7883
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE81"
    },
    "3708": {
      "branch": 119,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7824,
        7883
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3709": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7824,
        7883
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3711": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7824,
        7883
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3712": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7824,
        7883
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3713": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7824,
        7883
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3714": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 27,
      "value": "0x0"
    },
    "3716": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3717": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3718": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3719": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "3721": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3723": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3724": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3725": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3726": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3728": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3729": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3730": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7907
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3731": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3732": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3733": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xEA6"
    },
    "3736": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3737": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7915
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "3739": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7915
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3740": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7915
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3741": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7915
      ],
      "op": "ADD",
      "path": "26"
    },
    "3742": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7915
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3743": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3744": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "ADD",
      "path": "26"
    },
    "3745": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3746": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2258"
    },
    "3749": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        7894,
        7926
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3750": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7894,
        7926
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7961,
        7966
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 28,
      "value": "0x0"
    },
    "3754": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3755": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3756": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3757": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7940
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "3759": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3761": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3762": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3764": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3765": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3766": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3767": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7949
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3768": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7958
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3770": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7958
      ],
      "op": "ADD",
      "path": "26"
    },
    "3771": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7966
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3772": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7966
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3775": {
      "op": "NOT"
    },
    "3776": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7966
      ],
      "op": "AND",
      "path": "26"
    },
    "3777": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7966
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3778": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7936,
        7966
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "3779": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "MLOAD",
      "path": "26",
      "statement": 29
    },
    "3780": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7941,
        7948
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3781": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7941,
        7948
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3782": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x9B5ED714C31DFCB1A9397710B6FC1842F37D94AB5DC0CCB528D9A2C97EA76F2A"
    },
    "3815": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3816": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xEF4"
    },
    "3819": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3820": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8048,
        8063
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "3821": {
      "op": "DUP2"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "SWAP1"
    },
    "3827": {
      "op": "JUMP"
    },
    "3828": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3829": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3831": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3832": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3833": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3834": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "SUB",
      "path": "26"
    },
    "3835": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3836": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8026,
        8064
      ],
      "op": "LOG2",
      "path": "26"
    },
    "3837": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 30,
      "value": "0x0"
    },
    "3839": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3840": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3841": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3842": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8086
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "3844": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3846": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3847": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3848": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3849": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3851": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3852": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3853": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3854": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8095
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3855": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3857": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3858": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3859": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3860": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3861": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3862": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3863": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3864": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MUL",
      "path": "26"
    },
    "3865": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3866": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3867": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3868": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3869": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3870": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3871": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3872": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3873": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3874": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3875": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3876": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8106
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3877": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3878": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3879": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8082,
        8106
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3880": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3881": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3882": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3883": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF53"
    },
    "3886": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3887": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3889": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MUL",
      "path": "26"
    },
    "3890": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3891": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3892": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3893": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3894": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3896": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3897": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3899": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3901": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3902": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3903": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3904": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3905": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3906": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3907": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3908": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3910": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3911": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3912": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3914": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "ADD",
      "path": "26"
    },
    "3915": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3916": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3917": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3918": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "GT",
      "path": "26"
    },
    "3919": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF3F"
    },
    "3922": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3923": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3924": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "POP",
      "path": "26"
    },
    "3925": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "POP",
      "path": "26"
    },
    "3926": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "POP",
      "path": "26"
    },
    "3927": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "POP",
      "path": "26"
    },
    "3928": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "POP",
      "path": "26"
    },
    "3929": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3930": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        8075,
        8106
      ],
      "op": "POP",
      "path": "26"
    },
    "3931": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3932": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3933": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "POP",
      "path": "26"
    },
    "3934": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        7669,
        8113
      ],
      "op": "POP",
      "path": "26"
    },
    "3935": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        7669,
        8113
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3936": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3937": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3939": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3940": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3943": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3944": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "3945": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3947": {
      "branch": 147,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "3948": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7B"
    },
    "3951": {
      "branch": 147,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3952": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3954": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3955": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3957": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "3958": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3959": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7F"
    },
    "3962": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3963": {
      "branch": 148,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3964": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 31
    },
    "3965": {
      "op": "EXTCODESIZE"
    },
    "3966": {
      "op": "ISZERO"
    },
    "3967": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3968": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFE2"
    },
    "3971": {
      "branch": 148,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3972": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3974": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3975": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3981": {
      "op": "SHL"
    },
    "3982": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3983": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3986": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3988": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3989": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3995": {
      "op": "DUP3"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "MSTORE"
    },
    "3998": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4033": {
      "op": "DUP3"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4053": {
      "op": "SHL"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "ADD"
    },
    "4058": {
      "op": "MSTORE"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4061": {
      "op": "ADD"
    },
    "4062": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA45"
    },
    "4065": {
      "op": "JUMP"
    },
    "4066": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4067": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4069": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4070": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "4073": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4074": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "4075": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4077": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "4078": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4079": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4080": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4081": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1004"
    },
    "4084": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4085": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4087": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4088": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4092": {
      "op": "NOT"
    },
    "4093": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "4094": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "4097": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "4098": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4099": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4100": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4101": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 32,
      "value": "0x104B"
    },
    "4104": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4106": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4107": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4108": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4110": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "ADD",
      "path": "26"
    },
    "4111": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4113": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4114": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4115": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "4117": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4118": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4119": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4121": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "ADD",
      "path": "26"
    },
    "4122": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4135": {
      "op": "SHL"
    },
    "4136": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4137": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4138": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "POP",
      "path": "26"
    },
    "4139": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4141": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4142": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4143": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4145": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "ADD",
      "path": "26"
    },
    "4146": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4148": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4149": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4150": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "4152": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4153": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4154": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4156": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "ADD",
      "path": "26"
    },
    "4157": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4163": {
      "op": "SHL"
    },
    "4164": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4165": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4166": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "POP",
      "path": "26"
    },
    "4167": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3244
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F99"
    },
    "4170": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        3232,
        3265
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4171": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3232,
        3265
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4172": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3363,
        3364
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 33,
      "value": "0x1"
    },
    "4174": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3349,
        3360
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x68"
    },
    "4176": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3349,
        3364
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4177": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3349,
        3364
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4178": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3349,
        3364
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4179": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3374,
        3384
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 34,
      "value": "0x69"
    },
    "4181": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3374,
        3388
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4182": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3374,
        3388
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4183": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3374,
        3388
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4184": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3398,
        3416
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 35,
      "value": "0x67"
    },
    "4186": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3398,
        3420
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4187": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3484,
        3490
      ],
      "op": "PUSH9",
      "path": "26",
      "statement": 36,
      "value": "0x1BC16D674EC8000000"
    },
    "4197": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3469,
        3481
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "4199": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3469,
        3490
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4200": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3564,
        3573
      ],
      "op": "PUSH10",
      "path": "26",
      "statement": 37,
      "value": "0x21E19E0C9BAB2400000"
    },
    "4211": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3551,
        3561
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "4213": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3551,
        3573
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4214": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3637,
        3641
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 38,
      "value": "0x2220"
    },
    "4217": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3627,
        3634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6D"
    },
    "4219": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3627,
        3641
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4220": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3715,
        3724
      ],
      "op": "PUSH3",
      "path": "26",
      "statement": 39,
      "value": "0x127500"
    },
    "4224": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3700,
        3712
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x70"
    },
    "4226": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3700,
        3724
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3747,
        3767
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 40,
      "value": "0x71"
    },
    "4231": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3747,
        3771
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4232": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3747,
        3771
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4233": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3747,
        3771
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4234": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3803,
        3813
      ],
      "op": "PUSH10",
      "path": "26",
      "value": "0x9ED194DB19B238C00000"
    },
    "4245": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3803,
        3813
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4246": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3870,
        3882
      ],
      "op": "PUSH11",
      "path": "26",
      "value": "0x17293B0A9E69FD9C00000"
    },
    "4258": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3870,
        3882
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4259": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4260": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3962,
        3977
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4261": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3962,
        3984
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4262": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3958,
        3959
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4263": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3958,
        3984
      ],
      "op": "LT",
      "path": "26"
    },
    "4264": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4265": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10E3"
    },
    "4268": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4269": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4005,
        4067
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 41,
      "value": "0x10DB"
    },
    "4272": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4026
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4273": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4027,
        4028
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4274": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4275": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4276": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4277": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "LT",
      "path": "26"
    },
    "4278": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10C1"
    },
    "4281": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4282": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10C1"
    },
    "4285": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2948"
    },
    "4288": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4011,
        4029
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4289": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4290": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4292": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "MUL",
      "path": "26"
    },
    "4293": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4295": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "ADD",
      "path": "26"
    },
    "4296": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "ADD",
      "path": "26"
    },
    "4297": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4011,
        4029
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4298": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4044,
        4059
      ],
      "op": "DUP8",
      "path": "26"
    },
    "4299": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4044,
        4066
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4300": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4031,
        4041
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4301": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10D6"
    },
    "4304": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4305": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4306": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A18"
    },
    "4309": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4310": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4311": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4005,
        4010
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FCE"
    },
    "4314": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4005,
        4067
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4315": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4005,
        4067
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4316": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3986,
        3989
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 42,
      "value": "0x1"
    },
    "4318": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3986,
        3989
      ],
      "op": "ADD",
      "path": "26"
    },
    "4319": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10A3"
    },
    "4322": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4323": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4324": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3941,
        4078
      ],
      "op": "POP",
      "path": "26"
    },
    "4325": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4088,
        4128
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 43,
      "value": "0x10EE"
    },
    "4328": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4094,
        4110
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4329": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4112,
        4127
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4330": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4088,
        4093
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FCE"
    },
    "4333": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        4088,
        4128
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4334": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4088,
        4128
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "op": "POP"
    },
    "4337": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4183,
        4184
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 44,
      "value": "0x1"
    },
    "4339": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4167,
        4180
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6B"
    },
    "4341": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4167,
        4184
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4342": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4210,
        4211
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 45,
      "value": "0x5"
    },
    "4344": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4194,
        4207
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6C"
    },
    "4346": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        4194,
        4211
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4347": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4348": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4349": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x110C"
    },
    "4352": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4353": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4355": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4356": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4357": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4360": {
      "op": "NOT"
    },
    "4361": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "4362": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4363": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4364": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4365": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "4366": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "POP",
      "path": "26"
    },
    "4367": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "POP",
      "path": "26"
    },
    "4368": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4369": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13615,
        13754
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4370": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 46,
      "value": "0x65"
    },
    "4372": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4373": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4375": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4376": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4377": {
      "op": "PUSH4",
      "value": "0xFBCCA273"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4384": {
      "op": "SHL"
    },
    "4385": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4386": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4387": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4388": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4389": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13662,
        13678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "4391": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13662,
        13678
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "op": "SUB"
    },
    "4400": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "AND",
      "path": "26"
    },
    "4401": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4402": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13745
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFBCCA273"
    },
    "4407": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13745
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4408": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4410": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4411": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4412": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ADD",
      "path": "26"
    },
    "4413": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4414": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4416": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4417": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4418": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4419": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4420": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4421": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SUB",
      "path": "26"
    },
    "4422": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ADD",
      "path": "26"
    },
    "4423": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4424": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13723
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4425": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "GAS",
      "path": "26"
    },
    "4426": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4427": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4428": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4429": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4430": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x115B"
    },
    "4433": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4434": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4435": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4437": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4438": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4439": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4440": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4442": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4443": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4444": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "POP",
      "path": "26"
    },
    "4445": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "POP",
      "path": "26"
    },
    "4446": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "POP",
      "path": "26"
    },
    "4447": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "POP",
      "path": "26"
    },
    "4448": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4450": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4451": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4452": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4454": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4455": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4456": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4458": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4459": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4460": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4461": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ADD",
      "path": "26"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4464": {
      "op": "NOT"
    },
    "4465": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "AND",
      "path": "26"
    },
    "4466": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4467": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ADD",
      "path": "26"
    },
    "4468": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4470": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4471": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF2"
    },
    "4474": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4475": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4476": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4477": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "ADD",
      "path": "26"
    },
    "4478": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4479": {
      "fn": "SmartnodesCore.getProposees",
      "offset": [
        13697,
        13747
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x290B"
    },
    "4482": {
      "fn": "SmartnodesCore.getProposees",
      "jump": "i",
      "offset": [
        13697,
        13747
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4483": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4484": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5400,
        5410
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 47
    },
    "4485": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4487": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4488": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4489": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4490": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5399
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "4492": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4494": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4495": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4497": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4498": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4499": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5411
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4500": {
      "branch": 120,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5379,
        5416
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4501": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11E0"
    },
    "4504": {
      "branch": 120,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4505": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4507": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4514": {
      "op": "SHL"
    },
    "4515": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4516": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4519": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4521": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4522": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "ADD",
      "path": "26"
    },
    "4523": {
      "op": "MSTORE"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4528": {
      "op": "DUP3"
    },
    "4529": {
      "op": "ADD"
    },
    "4530": {
      "op": "MSTORE"
    },
    "4531": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206578697374732E00000000000000"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4566": {
      "op": "DUP3"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "4575": {
      "op": "JUMP"
    },
    "4576": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5358,
        5467
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4577": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5509,
        5519
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 48
    },
    "4578": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4580": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4581": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4582": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4583": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "4585": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4587": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4588": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4590": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4591": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4592": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4593": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5524,
        5535
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4594": {
      "op": "GT"
    },
    "4595": {
      "branch": 121,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5535
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4596": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5564
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4597": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5564
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4598": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5564
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1201"
    },
    "4601": {
      "branch": 121,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5564
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4602": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5564
      ],
      "op": "POP",
      "path": "26"
    },
    "4603": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5554,
        5564
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "4605": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5554,
        5564
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4606": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5539,
        5550
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4607": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5539,
        5564
      ],
      "op": "LT",
      "path": "26"
    },
    "4608": {
      "branch": 122,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5539,
        5564
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4609": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5499,
        5564
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4610": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x124D"
    },
    "4613": {
      "branch": 122,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4614": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4616": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4623": {
      "op": "SHL"
    },
    "4624": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4625": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4628": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4630": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4631": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "ADD",
      "path": "26"
    },
    "4632": {
      "op": "MSTORE"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4637": {
      "op": "DUP3"
    },
    "4638": {
      "op": "ADD"
    },
    "4639": {
      "op": "MSTORE"
    },
    "4640": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4675": {
      "op": "DUP3"
    },
    "4676": {
      "op": "ADD"
    },
    "4677": {
      "op": "MSTORE"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "4684": {
      "op": "JUMP"
    },
    "4685": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5478,
        5617
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4686": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 49,
      "value": "0x40"
    },
    "4688": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4689": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4690": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "4692": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4693": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4694": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4695": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4696": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4697": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4698": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4699": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5792,
        5802
      ],
      "op": "CALLER",
      "path": "26"
    },
    "4700": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4702": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4703": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4704": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4705": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4706": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4707": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4708": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5824,
        5834
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6F"
    },
    "4710": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5824,
        5834
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4711": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5824,
        5834
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4712": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4713": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP8",
      "path": "26"
    },
    "4714": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4715": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4716": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4717": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4720": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "4722": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP8",
      "path": "26"
    },
    "4723": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4724": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4725": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4726": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4727": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5887,
        5889
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x32"
    },
    "4729": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "4731": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP10",
      "path": "26"
    },
    "4732": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4733": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4734": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4735": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4736": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5685,
        5703
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x67"
    },
    "4738": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5685,
        5703
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4739": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5685,
        5703
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4740": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4741": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4742": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5684
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "4744": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "DUP9",
      "path": "26"
    },
    "4745": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4746": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4747": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4748": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5704
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4749": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP10",
      "path": "26"
    },
    "4750": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4751": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4752": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4753": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "4754": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4755": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "4757": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4758": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4759": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4760": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4767": {
      "op": "SHL"
    },
    "4768": {
      "op": "SUB"
    },
    "4769": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4770": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4771": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "AND",
      "path": "26"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4778": {
      "op": "SHL"
    },
    "4779": {
      "op": "SUB"
    },
    "4780": {
      "op": "NOT"
    },
    "4781": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4782": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4783": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "AND",
      "path": "26"
    },
    "4784": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "OR",
      "path": "26"
    },
    "4785": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4786": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4787": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4788": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4789": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "4791": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4792": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4793": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4794": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4795": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4796": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "4798": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP10",
      "path": "26"
    },
    "4799": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4800": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4801": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4802": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4804": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4805": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "4806": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "ADD",
      "path": "26"
    },
    "4807": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4808": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4809": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5707,
        5900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "4811": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4812": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP9",
      "path": "26"
    },
    "4813": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "AND",
      "path": "26"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4816": {
      "op": "NOT"
    },
    "4817": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4818": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP9",
      "path": "26"
    },
    "4819": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "AND",
      "path": "26"
    },
    "4820": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "4821": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4822": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "4823": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "OR",
      "path": "26"
    },
    "4824": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4825": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "4826": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5674,
        5900
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4827": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5946,
        5964
      ],
      "op": "SWAP2",
      "path": "26",
      "statement": 50
    },
    "4828": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5946,
        5964
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4829": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4830": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4831": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4832": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5931
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "4834": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4835": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4836": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4837": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4838": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5943
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4839": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5911,
        5964
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4840": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "DUP8",
      "path": "26",
      "statement": 51
    },
    "4841": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4842": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4843": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        5996
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x74"
    },
    "4845": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4846": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4847": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4848": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4849": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4850": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4851": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6012
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4852": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4853": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4854": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4855": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "4856": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "AND",
      "path": "26"
    },
    "4857": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4858": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "OR",
      "path": "26"
    },
    "4859": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4860": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4861": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5974,
        6025
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4862": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6094,
        6104
      ],
      "op": "SLOAD",
      "path": "26",
      "statement": 52
    },
    "4863": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6070,
        6105
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1308"
    },
    "4866": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6070,
        6105
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4867": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5792,
        5802
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4868": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6070,
        6081
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20AD"
    },
    "4871": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        6070,
        6105
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4872": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6070,
        6105
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4873": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6134
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 53,
      "value": "0x67"
    },
    "4875": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4876": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4877": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4878": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6134
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4880": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1318"
    },
    "4883": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4884": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x298D"
    },
    "4887": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        6116,
        6136
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4888": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4889": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4890": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4891": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "POP",
      "path": "26"
    },
    "4892": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "4893": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        6116,
        6136
      ],
      "op": "POP",
      "path": "26"
    },
    "4894": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "POP",
      "path": "26"
    },
    "4895": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        5247,
        6143
      ],
      "op": "POP",
      "path": "26"
    },
    "4896": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        5247,
        6143
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4897": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4904": {
      "op": "SHL"
    },
    "4905": {
      "op": "SUB"
    },
    "4906": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4907": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "AND",
      "path": "26"
    },
    "4908": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12652,
        12659
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4910": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4911": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4912": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4913": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12713
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "4915": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4917": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4918": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4920": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4921": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4922": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12693,
        12731
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4923": {
      "branch": 123,
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12749,
        12764
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 54
    },
    "4924": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1383"
    },
    "4927": {
      "branch": 123,
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4928": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4930": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4937": {
      "op": "SHL"
    },
    "4938": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4939": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4942": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4944": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4945": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "ADD",
      "path": "26"
    },
    "4946": {
      "op": "MSTORE"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4951": {
      "op": "DUP3"
    },
    "4952": {
      "op": "ADD"
    },
    "4953": {
      "op": "MSTORE"
    },
    "4954": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4985": {
      "op": "DUP3"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "MSTORE"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4990": {
      "op": "ADD"
    },
    "4991": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "4994": {
      "op": "JUMP"
    },
    "4995": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12741,
        12794
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4996": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 55,
      "value": "0x0"
    },
    "4998": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4999": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5000": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5001": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "5003": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5005": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5006": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5008": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5009": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12835
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5010": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12849
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5011": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12812,
        12849
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5012": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "offset": [
        12562,
        12856
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "fn": "SmartnodesCore.getValidatorBytes",
      "jump": "o",
      "offset": [
        12562,
        12856
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5016": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13319,
        13414
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5017": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13363,
        13370
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5019": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13393
      ],
      "op": "ADDRESS",
      "path": "26",
      "statement": 56
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5026": {
      "op": "SHL"
    },
    "5027": {
      "op": "SUB"
    },
    "5028": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13405
      ],
      "op": "AND",
      "path": "26"
    },
    "5029": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13405
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x18160DDD"
    },
    "5034": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5036": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5037": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5038": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "5043": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "AND",
      "path": "26"
    },
    "5044": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "5046": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "SHL",
      "path": "26"
    },
    "5047": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5048": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5049": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5051": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "ADD",
      "path": "26"
    },
    "5052": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5054": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5056": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5057": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5058": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5059": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "SUB",
      "path": "26"
    },
    "5060": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5061": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5062": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "GAS",
      "path": "26"
    },
    "5063": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "5064": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5065": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5066": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5067": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDCE"
    },
    "5070": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5071": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5072": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5074": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5075": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5076": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5077": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5079": {
      "fn": "SmartnodesCore.getSupply",
      "offset": [
        13389,
        13407
      ],
      "op": "REVERT",
      "path": "26"
    },
    "5080": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5081": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9098,
        9129
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 57,
      "value": "0x13E2"
    },
    "5084": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9110,
        9120
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5085": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9122,
        9128
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5086": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9098,
        9109
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20AD"
    },
    "5089": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        9098,
        9129
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5090": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9098,
        9129
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5091": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        9043,
        9136
      ],
      "op": "POP",
      "path": "26"
    },
    "5092": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        9043,
        9136
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5093": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        12963,
        13070
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5094": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13015,
        13022
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5096": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13062,
        13063
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 58,
      "value": "0x1"
    },
    "5098": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13041,
        13059
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x67"
    },
    "5100": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13041,
        13059
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5101": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13041,
        13063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF2"
    },
    "5104": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13041,
        13063
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5105": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13041,
        13063
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5106": {
      "fn": "SmartnodesCore.getValidatorCount",
      "offset": [
        13041,
        13063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A3A"
    },
    "5109": {
      "fn": "SmartnodesCore.getValidatorCount",
      "jump": "i",
      "offset": [
        13041,
        13063
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5110": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5111": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9242,
        9252
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5112": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9199,
        9218
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5114": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5115": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5116": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5117": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9241
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "5119": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5121": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5122": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5124": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5125": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5126": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9221,
        9253
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5127": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9271,
        9286
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 59
    },
    "5128": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1453"
    },
    "5131": {
      "branch": 124,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5132": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5134": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5143": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5146": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5148": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5149": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "ADD",
      "path": "26"
    },
    "5150": {
      "op": "MSTORE"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5155": {
      "op": "DUP3"
    },
    "5156": {
      "op": "ADD"
    },
    "5157": {
      "op": "MSTORE"
    },
    "5158": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5193": {
      "op": "DUP3"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "MSTORE"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5198": {
      "op": "ADD"
    },
    "5199": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "5202": {
      "op": "JUMP"
    },
    "5203": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9263,
        9318
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5204": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9329,
        9356
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5206": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5207": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5208": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5209": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "5211": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5213": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5214": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5216": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5217": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9359,
        9382
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5218": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9411,
        9427
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 60,
      "value": "0x2"
    },
    "5220": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9411,
        9427
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5221": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9411,
        9427
      ],
      "op": "ADD",
      "path": "26"
    },
    "5222": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9411,
        9427
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5223": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9401,
        9427
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5224": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9401,
        9427
      ],
      "op": "GT",
      "path": "26"
    },
    "5225": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9401,
        9427
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5226": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14B5"
    },
    "5229": {
      "branch": 125,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5230": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5232": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5239": {
      "op": "SHL"
    },
    "5240": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5241": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5244": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5246": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5247": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "ADD",
      "path": "26"
    },
    "5248": {
      "op": "MSTORE"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "ADD"
    },
    "5255": {
      "op": "MSTORE"
    },
    "5256": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5291": {
      "op": "DUP3"
    },
    "5292": {
      "op": "ADD"
    },
    "5293": {
      "op": "MSTORE"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "5300": {
      "op": "JUMP"
    },
    "5301": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9393,
        9462
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5302": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9489,
        9490
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 61,
      "value": "0x0"
    },
    "5304": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9480,
        9486
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5305": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9480,
        9490
      ],
      "op": "GT",
      "path": "26"
    },
    "5306": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14D5"
    },
    "5309": {
      "branch": 126,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5310": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5312": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5319": {
      "op": "SHL"
    },
    "5320": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5321": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5322": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5324": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "ADD",
      "path": "26"
    },
    "5325": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "5328": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5329": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A4D"
    },
    "5332": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9472,
        9528
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5333": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9472,
        9528
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5334": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9614,
        9623
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5335": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9614,
        9634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5337": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9614,
        9634
      ],
      "op": "ADD",
      "path": "26"
    },
    "5338": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9614,
        9634
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5339": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9638,
        9639
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5341": {
      "branch": 127,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9614,
        9639
      ],
      "op": "SUB",
      "path": "26"
    },
    "5342": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        10402
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1555"
    },
    "5345": {
      "branch": 127,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        10402
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5346": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9696,
        9708
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 62,
      "value": "0x70"
    },
    "5348": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9696,
        9708
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5349": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9678,
        9708
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14EE"
    },
    "5352": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9678,
        9708
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5353": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9678,
        9693
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "5354": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9678,
        9708
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5357": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9678,
        9708
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5358": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9678,
        9708
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5359": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        9675
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5361": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        9675
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5362": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        9675
      ],
      "op": "ADD",
      "path": "26"
    },
    "5363": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9655,
        9708
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5364": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9822
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "5366": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9822
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5367": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9822
      ],
      "op": "ADD",
      "path": "26"
    },
    "5368": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9822
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5369": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9784,
        9803
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5371": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9784,
        9803
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5372": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9831
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1506"
    },
    "5375": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9831
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5376": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9825,
        9831
      ],
      "op": "DUP6",
      "path": "26"
    },
    "5377": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9825,
        9831
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5378": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9831
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A3A"
    },
    "5381": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        9806,
        9831
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5382": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9806,
        9831
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5383": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9784,
        9831
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5384": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9784,
        9831
      ],
      "op": "POP",
      "path": "26"
    },
    "5385": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9867,
        9877
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 63
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5392": {
      "op": "SHL"
    },
    "5393": {
      "op": "SUB"
    },
    "5394": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "AND",
      "path": "26"
    },
    "5395": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "5428": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9879,
        9888
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5429": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9879,
        9899
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5431": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9879,
        9899
      ],
      "op": "ADD",
      "path": "26"
    },
    "5432": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9879,
        9899
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5433": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5435": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5436": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1547"
    },
    "5439": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5440": {
      "op": "DUP2"
    },
    "5441": {
      "op": "MSTORE"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "SWAP1"
    },
    "5446": {
      "op": "JUMP"
    },
    "5447": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5448": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5450": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5451": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5452": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5453": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "SUB",
      "path": "26"
    },
    "5454": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5455": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9851,
        9900
      ],
      "op": "LOG2",
      "path": "26"
    },
    "5456": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9641,
        9938
      ],
      "op": "POP",
      "path": "26"
    },
    "5457": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "5458": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "POP",
      "path": "26"
    },
    "5459": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "POP",
      "path": "26"
    },
    "5460": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5461": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9610,
        10402
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5462": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10080,
        10089
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 64
    },
    "5463": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10080,
        10100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5465": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10080,
        10100
      ],
      "op": "ADD",
      "path": "26"
    },
    "5466": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10080,
        10100
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5467": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10061,
        10076
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "5468": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10061,
        10100
      ],
      "op": "LT",
      "path": "26"
    },
    "5469": {
      "branch": 128,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10061,
        10100
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5470": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15A9"
    },
    "5473": {
      "branch": 128,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5474": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5476": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5483": {
      "op": "SHL"
    },
    "5484": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5485": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5488": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5490": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5491": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "ADD",
      "path": "26"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5497": {
      "op": "DUP3"
    },
    "5498": {
      "op": "ADD"
    },
    "5499": {
      "op": "MSTORE"
    },
    "5500": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5535": {
      "op": "DUP3"
    },
    "5536": {
      "op": "ADD"
    },
    "5537": {
      "op": "MSTORE"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5540": {
      "op": "ADD"
    },
    "5541": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "5544": {
      "op": "JUMP"
    },
    "5545": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10036,
        10158
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5546": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10193,
        10199
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 65
    },
    "5547": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10182
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5548": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10189
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "5550": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10189
      ],
      "op": "ADD",
      "path": "26"
    },
    "5551": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10189
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5553": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5554": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5555": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5556": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15BD"
    },
    "5559": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5560": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5561": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A3A"
    },
    "5564": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        10173,
        10199
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5565": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5566": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5567": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5568": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10173,
        10199
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5569": {
      "op": "POP"
    },
    "5570": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10213,
        10238
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 66,
      "value": "0x15CD"
    },
    "5573": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10213,
        10238
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5574": {
      "op": "POP"
    },
    "5575": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10219,
        10229
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5576": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10231,
        10237
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5577": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10213,
        10218
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FCE"
    },
    "5580": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        10213,
        10238
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5581": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10213,
        10238
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5582": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 67,
      "value": "0x40"
    },
    "5584": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5585": {
      "op": "DUP4"
    },
    "5586": {
      "op": "DUP2"
    },
    "5587": {
      "op": "MSTORE"
    },
    "5588": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10320,
        10330
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5589": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10320,
        10330
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5590": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "5623": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5626": {
      "op": "ADD"
    },
    "5627": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5629": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5630": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5631": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5632": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "SUB",
      "path": "26"
    },
    "5633": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5634": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        10305,
        10339
      ],
      "op": "LOG2",
      "path": "26"
    },
    "5635": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9189,
        10408
      ],
      "op": "POP",
      "path": "26"
    },
    "5636": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9189,
        10408
      ],
      "op": "POP",
      "path": "26"
    },
    "5637": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        9142,
        10408
      ],
      "op": "POP",
      "path": "26"
    },
    "5638": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        9142,
        10408
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5639": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5640": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5642": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x37"
    },
    "5644": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5645": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5646": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x893"
    },
    "5649": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5650": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281B"
    },
    "5653": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5654": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5655": {
      "offset": [
        2989,
        3013
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "5657": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2989,
        3013
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5664": {
      "op": "SHL"
    },
    "5665": {
      "op": "SUB"
    },
    "5666": {
      "offset": [
        2989,
        3013
      ],
      "op": "AND",
      "path": "26"
    },
    "5667": {
      "offset": [
        2975,
        2985
      ],
      "op": "CALLER",
      "path": "26"
    },
    "5668": {
      "offset": [
        2975,
        3013
      ],
      "op": "EQ",
      "path": "26"
    },
    "5669": {
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1640"
    },
    "5672": {
      "offset": [
        2954,
        3077
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5673": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5675": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5682": {
      "op": "SHL"
    },
    "5683": {
      "offset": [
        2954,
        3077
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5684": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5685": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5687": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "ADD",
      "path": "26"
    },
    "5688": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "5691": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5692": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29D2"
    },
    "5695": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        2954,
        3077
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5696": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        2954,
        3077
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5697": {
      "offset": [
        2016,
        2029
      ],
      "op": "PUSH11",
      "path": "26",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "5709": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10843,
        10855
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 69,
      "value": "0x6E"
    },
    "5711": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10843,
        10855
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5712": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10840
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1658"
    },
    "5715": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "5717": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5718": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5719": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5720": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10840
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5721": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10855
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1662"
    },
    "5724": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10855
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5725": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10855
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5726": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10855
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "5729": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        10827,
        10855
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5730": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10855
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5731": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10869
      ],
      "op": "GT",
      "path": "26"
    },
    "5732": {
      "branch": 129,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10827,
        10869
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5733": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16B0"
    },
    "5736": {
      "branch": 129,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5737": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5739": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5746": {
      "op": "SHL"
    },
    "5747": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5748": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5751": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5753": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5754": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "ADD",
      "path": "26"
    },
    "5755": {
      "op": "MSTORE"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "ADD"
    },
    "5762": {
      "op": "MSTORE"
    },
    "5763": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D20737570706C79207265616368656421000000000000000000"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5798": {
      "op": "DUP3"
    },
    "5799": {
      "op": "ADD"
    },
    "5800": {
      "op": "MSTORE"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5803": {
      "op": "ADD"
    },
    "5804": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "5807": {
      "op": "JUMP"
    },
    "5808": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10806,
        10918
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5809": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10957,
        10964
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6D"
    },
    "5811": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10957,
        10964
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5812": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10933,
        10953
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x71"
    },
    "5814": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10933,
        10953
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5815": {
      "branch": 130,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10933,
        10964
      ],
      "op": "LT",
      "path": "26"
    },
    "5816": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10929,
        11065
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16E6"
    },
    "5819": {
      "branch": 130,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10929,
        11065
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5820": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10999,
        11003
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xDE0B6B3A7640000"
    },
    "5829": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10984,
        10996
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "5831": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10984,
        10996
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5832": {
      "branch": 131,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10984,
        11003
      ],
      "op": "GT",
      "path": "26"
    },
    "5833": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10980,
        11055
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5834": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10980,
        11055
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16E6"
    },
    "5837": {
      "branch": 131,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10980,
        11055
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5838": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11039,
        11040
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 70,
      "value": "0x2"
    },
    "5840": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11035
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "5842": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11035
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5844": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5845": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5846": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5847": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16E0"
    },
    "5850": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5851": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5852": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A18"
    },
    "5855": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11023,
        11040
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5856": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5857": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5858": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5859": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11023,
        11040
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10980,
        11055
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5863": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11075,
        11103
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5865": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11128,
        11131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x64"
    },
    "5867": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11119
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "5869": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11119
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5870": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11122,
        11124
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x14"
    },
    "5872": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11124
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16F9"
    },
    "5875": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11124
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5876": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11124
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5877": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11124
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A8E"
    },
    "5880": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11107,
        11124
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5881": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11107,
        11124
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5882": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11106,
        11131
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1703"
    },
    "5885": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11106,
        11131
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5886": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11106,
        11131
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5887": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11106,
        11131
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A18"
    },
    "5890": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11106,
        11131
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5891": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11106,
        11131
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5892": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11075,
        11131
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5893": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11075,
        11131
      ],
      "op": "POP",
      "path": "26"
    },
    "5894": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11141,
        11166
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5896": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11191,
        11194
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x64"
    },
    "5898": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11182
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x6E"
    },
    "5900": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11182
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5901": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11185,
        11187
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x50"
    },
    "5903": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11187
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1718"
    },
    "5906": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11187
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5907": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11187
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5908": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11187
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A8E"
    },
    "5911": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11170,
        11187
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5912": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11170,
        11187
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5913": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11169,
        11194
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1722"
    },
    "5916": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11169,
        11194
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5917": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11169,
        11194
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5918": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11169,
        11194
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A18"
    },
    "5921": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11169,
        11194
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5922": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11169,
        11194
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5923": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11141,
        11194
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5924": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11141,
        11194
      ],
      "op": "POP",
      "path": "26"
    },
    "5925": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11258,
        11281
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5927": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11319,
        11335
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5928": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11319,
        11342
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5929": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11284,
        11304
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5930": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11284,
        11342
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1733"
    },
    "5933": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11284,
        11342
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5934": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11284,
        11342
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5935": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11284,
        11342
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A18"
    },
    "5938": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11284,
        11342
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5939": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11284,
        11342
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5940": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11258,
        11342
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5941": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11258,
        11342
      ],
      "op": "POP",
      "path": "26"
    },
    "5942": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11358,
        11367
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5944": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5945": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11377,
        11393
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5946": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11377,
        11400
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5947": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11373,
        11374
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5948": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11373,
        11400
      ],
      "op": "LT",
      "path": "26"
    },
    "5949": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5950": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x176C"
    },
    "5953": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5954": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11421,
        11464
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 71,
      "value": "0x1764"
    },
    "5957": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11443
      ],
      "op": "DUP6",
      "path": "26"
    },
    "5958": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11444,
        11445
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5959": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5960": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5961": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5962": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "LT",
      "path": "26"
    },
    "5963": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1756"
    },
    "5966": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5967": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1756"
    },
    "5970": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2948"
    },
    "5973": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11427,
        11446
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5974": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5975": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5977": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "MUL",
      "path": "26"
    },
    "5978": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5980": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "ADD",
      "path": "26"
    },
    "5981": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "ADD",
      "path": "26"
    },
    "5982": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11427,
        11446
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5983": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11448,
        11463
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5984": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11421,
        11426
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FCE"
    },
    "5987": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11421,
        11464
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5988": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11421,
        11464
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5989": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11402,
        11405
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 72,
      "value": "0x1"
    },
    "5991": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11402,
        11405
      ],
      "op": "ADD",
      "path": "26"
    },
    "5992": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1738"
    },
    "5995": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5996": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5997": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11353,
        11475
      ],
      "op": "POP",
      "path": "26"
    },
    "5998": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11532,
        11541
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6000": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6001": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11551,
        11559
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6002": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11551,
        11566
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6003": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11547,
        11548
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6004": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11547,
        11566
      ],
      "op": "LT",
      "path": "26"
    },
    "6005": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6006": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17D9"
    },
    "6009": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6010": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11587,
        11601
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6012": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11666,
        11680
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6013": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11629,
        11646
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6014": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11623
      ],
      "op": "DUP10",
      "path": "26"
    },
    "6015": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11624,
        11625
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6016": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6017": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6018": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6019": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "LT",
      "path": "26"
    },
    "6020": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x178F"
    },
    "6023": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6024": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x178F"
    },
    "6027": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2948"
    },
    "6030": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11606,
        11626
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6031": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6032": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6034": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "MUL",
      "path": "26"
    },
    "6035": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6037": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "ADD",
      "path": "26"
    },
    "6038": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "ADD",
      "path": "26"
    },
    "6039": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11626
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6040": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11646
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17A1"
    },
    "6043": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11646
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6044": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11646
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6045": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11646
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A8E"
    },
    "6048": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11606,
        11646
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6049": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11606,
        11646
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6050": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11680
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17AB"
    },
    "6053": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11680
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6054": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11680
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6055": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11680
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A18"
    },
    "6058": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11605,
        11680
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6059": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11605,
        11680
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6060": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11587,
        11681
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6061": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11587,
        11681
      ],
      "op": "POP",
      "path": "26"
    },
    "6062": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11695,
        11721
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 73,
      "value": "0x17D0"
    },
    "6065": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11709
      ],
      "op": "DUP10",
      "path": "26"
    },
    "6066": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11710,
        11711
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6067": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6068": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6069": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6070": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "LT",
      "path": "26"
    },
    "6071": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17C2"
    },
    "6074": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6075": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17C2"
    },
    "6078": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2948"
    },
    "6081": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11701,
        11712
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6082": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6083": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6085": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "MUL",
      "path": "26"
    },
    "6086": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6088": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "ADD",
      "path": "26"
    },
    "6089": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "ADD",
      "path": "26"
    },
    "6090": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11701,
        11712
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6091": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11714,
        11720
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6092": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11695,
        11700
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1FCE"
    },
    "6095": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11695,
        11721
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6096": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11695,
        11721
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6097": {
      "op": "POP"
    },
    "6098": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11568,
        11571
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 74,
      "value": "0x1"
    },
    "6100": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11568,
        11571
      ],
      "op": "ADD",
      "path": "26"
    },
    "6101": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1770"
    },
    "6104": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6105": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11527,
        11732
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6106": {
      "op": "POP"
    },
    "6107": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11762
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 75,
      "value": "0x71"
    },
    "6109": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6110": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6111": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6112": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11762
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6114": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17EA"
    },
    "6117": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6118": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x298D"
    },
    "6121": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        11742,
        11764
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6122": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6123": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6124": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6125": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "POP",
      "path": "26"
    },
    "6126": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6127": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        11742,
        11764
      ],
      "op": "POP",
      "path": "26"
    },
    "6128": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10796,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6129": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10796,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6130": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10796,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6131": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6132": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6133": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6134": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        10585,
        11771
      ],
      "op": "POP",
      "path": "26"
    },
    "6135": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        10585,
        11771
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6136": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6137": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6138": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6140": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6141": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6142": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6143": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "6145": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6147": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6148": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6149": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6150": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6152": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6153": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6154": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6161": {
      "op": "SHL"
    },
    "6162": {
      "op": "SUB"
    },
    "6163": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6164": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "6165": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6166": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6167": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6168": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6169": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6170": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6171": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6172": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6173": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6174": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6175": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6176": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 76
    },
    "6177": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6178": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "6179": {
      "branch": 138,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6180": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x187D"
    },
    "6183": {
      "branch": 138,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6184": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6186": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6193": {
      "op": "SHL"
    },
    "6194": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6195": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6198": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6200": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6201": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "6202": {
      "op": "MSTORE"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6207": {
      "op": "DUP3"
    },
    "6208": {
      "op": "ADD"
    },
    "6209": {
      "op": "MSTORE"
    },
    "6210": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6245": {
      "op": "DUP3"
    },
    "6246": {
      "op": "ADD"
    },
    "6247": {
      "op": "MSTORE"
    },
    "6248": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6256": {
      "op": "SHL"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6259": {
      "op": "DUP3"
    },
    "6260": {
      "op": "ADD"
    },
    "6261": {
      "op": "MSTORE"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6264": {
      "op": "ADD"
    },
    "6265": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "6268": {
      "op": "JUMP"
    },
    "6269": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6270": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0xD79"
    },
    "6273": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6274": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6275": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6276": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6277": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "6278": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C15"
    },
    "6281": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6282": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6283": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6285": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6286": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 78,
      "value": "0x924"
    },
    "6289": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6290": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6291": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6292": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DCB"
    },
    "6295": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6296": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6297": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4801,
        4811
      ],
      "op": "CALLER",
      "path": "26",
      "statement": 79
    },
    "6298": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4824,
        4825
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6300": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6301": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6302": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6303": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4800
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x78"
    },
    "6305": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6307": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6308": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6310": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6311": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6312": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4812
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6313": {
      "branch": 132,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4783,
        4826
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6314": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18F5"
    },
    "6317": {
      "branch": 132,
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6318": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6320": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6327": {
      "op": "SHL"
    },
    "6328": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6329": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6332": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6334": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6335": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "ADD",
      "path": "26"
    },
    "6336": {
      "op": "MSTORE"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6341": {
      "op": "DUP3"
    },
    "6342": {
      "op": "ADD"
    },
    "6343": {
      "op": "MSTORE"
    },
    "6344": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "6377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6379": {
      "op": "DUP3"
    },
    "6380": {
      "op": "ADD"
    },
    "6381": {
      "op": "MSTORE"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6384": {
      "op": "ADD"
    },
    "6385": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "6388": {
      "op": "JUMP"
    },
    "6389": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4762,
        4876
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6390": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 80,
      "value": "0x40"
    },
    "6392": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6393": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6394": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "6396": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6397": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "ADD",
      "path": "26"
    },
    "6398": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6399": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6400": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4943,
        4953
      ],
      "op": "CALLER",
      "path": "26"
    },
    "6401": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6402": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6403": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6404": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6406": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6407": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6408": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "ADD",
      "path": "26"
    },
    "6409": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6410": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6411": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6412": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5022,
        5024
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x32"
    },
    "6414": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6415": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6416": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "ADD",
      "path": "26"
    },
    "6417": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6418": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6419": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6422": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6423": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6424": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6425": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4892
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x72"
    },
    "6427": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6428": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6429": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6430": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6431": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        4908
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6432": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "6433": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6434": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6435": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6442": {
      "op": "SHL"
    },
    "6443": {
      "op": "SUB"
    },
    "6444": {
      "op": "NOT"
    },
    "6445": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "AND",
      "path": "26"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6452": {
      "op": "SHL"
    },
    "6453": {
      "op": "SUB"
    },
    "6454": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6455": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6456": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "AND",
      "path": "26"
    },
    "6457": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "OR",
      "path": "26"
    },
    "6458": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6459": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6460": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6461": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6464": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6465": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "ADD",
      "path": "26"
    },
    "6466": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6467": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6468": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "6470": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6471": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6472": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "ADD",
      "path": "26"
    },
    "6473": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6474": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6477": {
      "op": "NOT"
    },
    "6478": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "AND",
      "path": "26"
    },
    "6479": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4911,
        5035
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "6481": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6482": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "6483": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "AND",
      "path": "26"
    },
    "6484": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6485": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6486": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6487": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "OR",
      "path": "26"
    },
    "6488": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6489": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6490": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4887,
        5035
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6491": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 81
    },
    "6492": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6493": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6494": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x78"
    },
    "6496": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6497": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6498": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6499": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6500": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5075
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6501": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5092
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6502": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5092
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6503": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5046,
        5092
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6504": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5113
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 82,
      "value": "0x68"
    },
    "6506": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6507": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6508": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6509": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1975"
    },
    "6512": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6513": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x298D"
    },
    "6516": {
      "fn": "SmartnodesCore.createUser",
      "jump": "i",
      "offset": [
        5102,
        5115
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6517": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6518": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6519": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6520": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "POP",
      "path": "26"
    },
    "6521": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6522": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        5102,
        5115
      ],
      "op": "POP",
      "path": "26"
    },
    "6523": {
      "fn": "SmartnodesCore.createUser",
      "offset": [
        4645,
        5122
      ],
      "op": "POP",
      "path": "26"
    },
    "6524": {
      "fn": "SmartnodesCore.createUser",
      "jump": "o",
      "offset": [
        4645,
        5122
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6525": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12862,
        12957
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6526": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12909,
        12916
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6528": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12949,
        12950
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 83,
      "value": "0x1"
    },
    "6530": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12935,
        12946
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x68"
    },
    "6532": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12935,
        12946
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6533": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12935,
        12950
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF2"
    },
    "6536": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12935,
        12950
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6537": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12935,
        12950
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6538": {
      "fn": "SmartnodesCore.getUserCount",
      "offset": [
        12935,
        12950
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A3A"
    },
    "6541": {
      "fn": "SmartnodesCore.getUserCount",
      "jump": "i",
      "offset": [
        12935,
        12950
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6542": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6543": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12145,
        12149
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6545": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12151,
        12158
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6546": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12160,
        12167
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6548": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12202,
        12220
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 84,
      "value": "0x67"
    },
    "6550": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12202,
        12220
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6551": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12187,
        12199
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6552": {
      "branch": 133,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12187,
        12220
      ],
      "op": "LT",
      "path": "26"
    },
    "6553": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x19D2"
    },
    "6556": {
      "branch": 133,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6557": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6559": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6566": {
      "op": "SHL"
    },
    "6567": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6568": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6571": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6573": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6574": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "ADD",
      "path": "26"
    },
    "6575": {
      "op": "MSTORE"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6580": {
      "op": "DUP3"
    },
    "6581": {
      "op": "ADD"
    },
    "6582": {
      "op": "MSTORE"
    },
    "6583": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6597": {
      "op": "SHL"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6600": {
      "op": "DUP3"
    },
    "6601": {
      "op": "ADD"
    },
    "6602": {
      "op": "MSTORE"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6605": {
      "op": "ADD"
    },
    "6606": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "6609": {
      "op": "JUMP"
    },
    "6610": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12179,
        12236
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6611": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6613": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "DUP5",
      "path": "26"
    },
    "6614": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6615": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6616": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12286
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "6618": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6620": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6621": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6622": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6623": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6625": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6626": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6627": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12276,
        12300
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6628": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6629": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6630": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "6632": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6633": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6634": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6635": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6636": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6637": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6638": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6639": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6640": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "6642": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6643": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6644": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6651": {
      "op": "SHL"
    },
    "6652": {
      "op": "SUB"
    },
    "6653": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6654": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6655": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "AND",
      "path": "26"
    },
    "6656": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6657": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6658": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6659": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6660": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6661": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6662": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "6664": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6665": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6666": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6667": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6668": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6669": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6670": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6671": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "6673": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6674": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6675": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6676": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "6678": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6679": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6680": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6681": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6683": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6684": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6685": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6686": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6687": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "6689": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "AND",
      "path": "26"
    },
    "6690": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "6692": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6693": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "ADD",
      "path": "26"
    },
    "6694": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6695": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x65"
    },
    "6697": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6698": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6699": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6700": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6707": {
      "op": "SHL"
    },
    "6708": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6709": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6710": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6711": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6712": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "ADD",
      "path": "26"
    },
    "6713": {
      "op": "SWAP5"
    },
    "6714": {
      "op": "SWAP1"
    },
    "6715": {
      "op": "SWAP5"
    },
    "6716": {
      "op": "MSTORE"
    },
    "6717": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12300
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6718": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12246,
        12273
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6719": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6720": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6721": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6722": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "AND",
      "path": "26"
    },
    "6723": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12352
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6724": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12370
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x40550A1C"
    },
    "6729": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12370
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6732": {
      "op": "ADD"
    },
    "6733": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6735": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6737": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6738": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6739": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6740": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "SUB",
      "path": "26"
    },
    "6741": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6742": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6743": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "GAS",
      "path": "26"
    },
    "6744": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "6745": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6746": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6747": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6748": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A69"
    },
    "6751": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6752": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6753": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6755": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6756": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "6757": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6758": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6760": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "REVERT",
      "path": "26"
    },
    "6761": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6762": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "POP",
      "path": "26"
    },
    "6763": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "POP",
      "path": "26"
    },
    "6764": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "POP",
      "path": "26"
    },
    "6765": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "POP",
      "path": "26"
    },
    "6766": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6768": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6769": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6770": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6772": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "NOT",
      "path": "26"
    },
    "6773": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6775": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6776": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "ADD",
      "path": "26"
    },
    "6777": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "AND",
      "path": "26"
    },
    "6778": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6779": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "ADD",
      "path": "26"
    },
    "6780": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6781": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6783": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6784": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "POP",
      "path": "26"
    },
    "6785": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6786": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "ADD",
      "path": "26"
    },
    "6787": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6788": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A8D"
    },
    "6791": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6792": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6793": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AA5"
    },
    "6796": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        12326,
        12421
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6797": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12326,
        12421
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6798": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12474,
        12498
      ],
      "op": "DUP3",
      "path": "26",
      "statement": 85
    },
    "6799": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12474,
        12498
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6800": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12512,
        12539
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6802": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12512,
        12539
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6803": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12512,
        12539
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6804": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12512,
        12539
      ],
      "op": "ADD",
      "path": "26"
    },
    "6805": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12512,
        12539
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6806": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12310,
        12421
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6807": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12310,
        12421
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "6808": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12474,
        12498
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6809": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12474,
        12498
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "6810": {
      "op": "POP"
    },
    "6811": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12512,
        12539
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6812": {
      "op": "POP"
    },
    "6813": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6814": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        12060,
        12556
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "6815": {
      "op": "POP"
    },
    "6816": {
      "op": "POP"
    },
    "6817": {
      "op": "POP"
    },
    "6818": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        12060,
        12556
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6819": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6820": {
      "offset": [
        2989,
        3013
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x66"
    },
    "6822": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2989,
        3013
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6829": {
      "op": "SHL"
    },
    "6830": {
      "op": "SUB"
    },
    "6831": {
      "offset": [
        2989,
        3013
      ],
      "op": "AND",
      "path": "26"
    },
    "6832": {
      "offset": [
        2975,
        2985
      ],
      "op": "CALLER",
      "path": "26"
    },
    "6833": {
      "offset": [
        2975,
        3013
      ],
      "op": "EQ",
      "path": "26"
    },
    "6834": {
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1ACD"
    },
    "6837": {
      "offset": [
        2954,
        3077
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6838": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6840": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "offset": [
        2954,
        3077
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6849": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6850": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6852": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "ADD",
      "path": "26"
    },
    "6853": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "6856": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6857": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29D2"
    },
    "6860": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "i",
      "offset": [
        2954,
        3077
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6861": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        2954,
        3077
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6862": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8197,
        8212
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6864": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6865": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6866": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6867": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8219
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "6869": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6871": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6872": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6873": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6874": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6876": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6877": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6878": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6879": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6880": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8250
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 86,
      "value": "0x4"
    },
    "6882": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8250
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6883": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8250
      ],
      "op": "ADD",
      "path": "26"
    },
    "6884": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8258
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6885": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8258
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6888": {
      "op": "NOT"
    },
    "6889": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8258
      ],
      "op": "AND",
      "path": "26"
    },
    "6890": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8258
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6891": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8238,
        8258
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "6892": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "SWAP2",
      "path": "26",
      "statement": 87
    },
    "6893": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6894": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8294,
        8309
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "6895": {
      "op": "DUP2"
    },
    "6896": {
      "op": "MSTORE"
    },
    "6897": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6898": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8215,
        8228
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6899": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0x6E04AA702F9AF7A9A398F10D27918152DF25AC0CDC6D74321B9F7496374387A7"
    },
    "6932": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6933": {
      "op": "ADD"
    },
    "6934": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6936": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6937": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6938": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6939": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "SUB",
      "path": "26"
    },
    "6940": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6941": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8273,
        8310
      ],
      "op": "LOG2",
      "path": "26"
    },
    "6942": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8187,
        8317
      ],
      "op": "POP",
      "path": "26"
    },
    "6943": {
      "fn": "SmartnodesCore.disputeJob",
      "offset": [
        8119,
        8317
      ],
      "op": "POP",
      "path": "26"
    },
    "6944": {
      "fn": "SmartnodesCore.disputeJob",
      "jump": "o",
      "offset": [
        8119,
        8317
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6945": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6946": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        11986
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6948": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6949": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6950": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6951": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        11993
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x76"
    },
    "6953": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6955": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6956": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6957": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6958": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6960": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6961": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6962": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12002
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "6963": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "6965": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "6966": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6967": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "6968": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6969": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6970": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6971": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6972": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MUL",
      "path": "26"
    },
    "6973": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6974": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "6975": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP6",
      "path": "26"
    },
    "6976": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "6977": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6978": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6979": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6980": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6981": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6982": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6983": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11928,
        11944
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "6985": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11928,
        11944
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "6986": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        11986
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "6987": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6988": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "6989": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11989,
        12017
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6990": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6991": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6992": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6993": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B83"
    },
    "6996": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6997": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6999": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MUL",
      "path": "26"
    },
    "7000": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7001": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "7002": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7003": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7004": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7006": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7007": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7009": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7011": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7012": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7013": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7014": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7015": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7022": {
      "op": "SHL"
    },
    "7023": {
      "op": "SUB"
    },
    "7024": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "AND",
      "path": "26"
    },
    "7025": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7026": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7027": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "7029": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7030": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7031": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "7032": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7033": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7035": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "ADD",
      "path": "26"
    },
    "7036": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7037": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7038": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "GT",
      "path": "26"
    },
    "7039": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B65"
    },
    "7042": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "7043": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7044": {
      "op": "POP"
    },
    "7045": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7046": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11956,
        12017
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "7047": {
      "fn": "SmartnodesCore.getJobValidators",
      "offset": [
        11848,
        12054
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "7048": {
      "op": "POP"
    },
    "7049": {
      "op": "POP"
    },
    "7050": {
      "op": "POP"
    },
    "7051": {
      "op": "POP"
    },
    "7052": {
      "op": "POP"
    },
    "7053": {
      "op": "POP"
    },
    "7054": {
      "op": "POP"
    },
    "7055": {
      "fn": "SmartnodesCore.getJobValidators",
      "jump": "o",
      "offset": [
        11848,
        12054
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7056": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4224,
        4550
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7057": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4320,
        4344
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 88,
      "value": "0x66"
    },
    "7059": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4320,
        4344
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7066": {
      "op": "SHL"
    },
    "7067": {
      "op": "SUB"
    },
    "7068": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4320,
        4344
      ],
      "op": "AND",
      "path": "26"
    },
    "7069": {
      "branch": 134,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4320,
        4358
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "7070": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1BE9"
    },
    "7073": {
      "branch": 134,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "7074": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7076": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7083": {
      "op": "SHL"
    },
    "7084": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7085": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7088": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "7090": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7091": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "ADD",
      "path": "26"
    },
    "7092": {
      "op": "MSTORE"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7097": {
      "op": "DUP3"
    },
    "7098": {
      "op": "ADD"
    },
    "7099": {
      "op": "MSTORE"
    },
    "7100": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7135": {
      "op": "DUP3"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "op": "MSTORE"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7140": {
      "op": "ADD"
    },
    "7141": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "7144": {
      "op": "JUMP"
    },
    "7145": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4299,
        4414
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7146": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4450
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 89,
      "value": "0x65"
    },
    "7148": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7149": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7156": {
      "op": "SHL"
    },
    "7157": {
      "op": "SUB"
    },
    "7158": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7159": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7160": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "AND",
      "path": "26"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7167": {
      "op": "SHL"
    },
    "7168": {
      "op": "SUB"
    },
    "7169": {
      "op": "NOT"
    },
    "7170": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7171": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7172": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "AND",
      "path": "26"
    },
    "7173": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7174": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "OR",
      "path": "26"
    },
    "7175": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7176": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7177": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4424,
        4490
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7178": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4524
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 90,
      "value": "0x66"
    },
    "7180": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7181": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7182": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7183": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7184": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "AND",
      "path": "26"
    },
    "7185": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "OR",
      "path": "26"
    },
    "7186": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7187": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        4500,
        4543
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7188": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        4224,
        4550
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7189": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7196": {
      "op": "SHL"
    },
    "7197": {
      "op": "SUB"
    },
    "7198": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 91
    },
    "7199": {
      "branch": 139,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "7200": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C77"
    },
    "7203": {
      "branch": 139,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7204": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7206": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7213": {
      "op": "SHL"
    },
    "7214": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7215": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7218": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7220": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7221": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "7222": {
      "op": "MSTORE"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7225": {
      "op": "DUP1"
    },
    "7226": {
      "op": "DUP3"
    },
    "7227": {
      "op": "ADD"
    },
    "7228": {
      "op": "MSTORE"
    },
    "7229": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7264": {
      "op": "DUP3"
    },
    "7265": {
      "op": "ADD"
    },
    "7266": {
      "op": "MSTORE"
    },
    "7267": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7274": {
      "op": "SHL"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7277": {
      "op": "DUP3"
    },
    "7278": {
      "op": "ADD"
    },
    "7279": {
      "op": "MSTORE"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7282": {
      "op": "ADD"
    },
    "7283": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "7286": {
      "op": "JUMP"
    },
    "7287": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7294": {
      "op": "SHL"
    },
    "7295": {
      "op": "SUB"
    },
    "7296": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 92
    },
    "7297": {
      "branch": 140,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "7298": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD8"
    },
    "7301": {
      "branch": 140,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7302": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7304": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7311": {
      "op": "SHL"
    },
    "7312": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7313": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7316": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7318": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7319": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "7320": {
      "op": "MSTORE"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7325": {
      "op": "DUP3"
    },
    "7326": {
      "op": "ADD"
    },
    "7327": {
      "op": "MSTORE"
    },
    "7328": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7363": {
      "op": "DUP3"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7371": {
      "op": "SHL"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7374": {
      "op": "DUP3"
    },
    "7375": {
      "op": "ADD"
    },
    "7376": {
      "op": "MSTORE"
    },
    "7377": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7379": {
      "op": "ADD"
    },
    "7380": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "7383": {
      "op": "JUMP"
    },
    "7384": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7391": {
      "op": "SHL"
    },
    "7392": {
      "op": "SUB"
    },
    "7393": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 93
    },
    "7394": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7395": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "7396": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7398": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7399": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7400": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7401": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7403": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7405": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7406": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7407": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7408": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7410": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7411": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7412": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7413": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7414": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7415": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "7416": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7417": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7418": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7419": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7420": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7421": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7422": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7423": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7424": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7425": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7426": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7427": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7428": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7429": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 94
    },
    "7430": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7431": {
      "op": "DUP5"
    },
    "7432": {
      "op": "DUP2"
    },
    "7433": {
      "op": "MSTORE"
    },
    "7434": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7467": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7468": {
      "op": "ADD"
    },
    "7469": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7471": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7472": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7473": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7474": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "7475": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7476": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7477": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7478": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7479": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "7480": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7481": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7488": {
      "op": "SHL"
    },
    "7489": {
      "op": "SUB"
    },
    "7490": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7491": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7492": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "7493": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7495": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7496": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7497": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7498": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "7500": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7502": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7503": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7504": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7505": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7507": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7508": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7509": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7510": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7511": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7512": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "7513": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7514": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7515": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7516": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7517": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7518": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7519": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7522": {
      "op": "NOT"
    },
    "7523": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7524": {
      "branch": 141,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "7525": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC5"
    },
    "7528": {
      "branch": 141,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7529": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 95
    },
    "7530": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7531": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "7532": {
      "branch": 142,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7533": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB8"
    },
    "7536": {
      "branch": 142,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7537": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7539": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7546": {
      "op": "SHL"
    },
    "7547": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7548": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7551": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7553": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7554": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "7555": {
      "op": "MSTORE"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7560": {
      "op": "DUP3"
    },
    "7561": {
      "op": "ADD"
    },
    "7562": {
      "op": "MSTORE"
    },
    "7563": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7598": {
      "op": "DUP3"
    },
    "7599": {
      "op": "ADD"
    },
    "7600": {
      "op": "MSTORE"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "7607": {
      "op": "JUMP"
    },
    "7608": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7609": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 96,
      "value": "0x1DC5"
    },
    "7612": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7613": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7614": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7615": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7616": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "7617": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C15"
    },
    "7620": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7621": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7622": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7623": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7624": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7625": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "7626": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7627": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7634": {
      "op": "SHL"
    },
    "7635": {
      "op": "SUB"
    },
    "7636": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 97
    },
    "7637": {
      "branch": 143,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "7638": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E2F"
    },
    "7641": {
      "branch": 143,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7642": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7651": {
      "op": "SHL"
    },
    "7652": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7653": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7656": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7658": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7659": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "7660": {
      "op": "MSTORE"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7665": {
      "op": "DUP3"
    },
    "7666": {
      "op": "ADD"
    },
    "7667": {
      "op": "MSTORE"
    },
    "7668": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7703": {
      "op": "DUP3"
    },
    "7704": {
      "op": "ADD"
    },
    "7705": {
      "op": "MSTORE"
    },
    "7706": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7714": {
      "op": "SHL"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7717": {
      "op": "DUP3"
    },
    "7718": {
      "op": "ADD"
    },
    "7719": {
      "op": "MSTORE"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7722": {
      "op": "ADD"
    },
    "7723": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "7726": {
      "op": "JUMP"
    },
    "7727": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7734": {
      "op": "SHL"
    },
    "7735": {
      "op": "SUB"
    },
    "7736": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 98
    },
    "7737": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "7738": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E91"
    },
    "7741": {
      "branch": 144,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7742": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7744": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7751": {
      "op": "SHL"
    },
    "7752": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7753": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7756": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7758": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7759": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "7760": {
      "op": "MSTORE"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7765": {
      "op": "DUP3"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "MSTORE"
    },
    "7768": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7803": {
      "op": "DUP3"
    },
    "7804": {
      "op": "ADD"
    },
    "7805": {
      "op": "MSTORE"
    },
    "7806": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7812": {
      "op": "SHL"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7815": {
      "op": "DUP3"
    },
    "7816": {
      "op": "ADD"
    },
    "7817": {
      "op": "MSTORE"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7820": {
      "op": "ADD"
    },
    "7821": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "7824": {
      "op": "JUMP"
    },
    "7825": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7832": {
      "op": "SHL"
    },
    "7833": {
      "op": "SUB"
    },
    "7834": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7835": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "7836": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7838": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7839": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7840": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7841": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7843": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7845": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7846": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7848": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7849": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7850": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7851": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 99
    },
    "7852": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7853": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "7854": {
      "branch": 145,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7855": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F09"
    },
    "7858": {
      "branch": 145,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7859": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7861": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7870": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7873": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7875": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7876": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "7877": {
      "op": "MSTORE"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7882": {
      "op": "DUP3"
    },
    "7883": {
      "op": "ADD"
    },
    "7884": {
      "op": "MSTORE"
    },
    "7885": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7920": {
      "op": "DUP3"
    },
    "7921": {
      "op": "ADD"
    },
    "7922": {
      "op": "MSTORE"
    },
    "7923": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7932": {
      "op": "SHL"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7935": {
      "op": "DUP3"
    },
    "7936": {
      "op": "ADD"
    },
    "7937": {
      "op": "MSTORE"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7940": {
      "op": "ADD"
    },
    "7941": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "7944": {
      "op": "JUMP"
    },
    "7945": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7952": {
      "op": "SHL"
    },
    "7953": {
      "op": "SUB"
    },
    "7954": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 100
    },
    "7955": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7956": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "7957": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7959": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7960": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7961": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7962": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "7964": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7966": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7967": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7969": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7970": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7971": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7972": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7973": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7974": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "7975": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7976": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7977": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 101
    },
    "7978": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7979": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "7980": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7981": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7982": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7983": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7984": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7985": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7986": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7987": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7988": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7989": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7990": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F40"
    },
    "7993": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7994": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7995": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7996": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BF"
    },
    "7999": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8000": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8001": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8002": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "8003": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "8004": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8005": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8006": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8007": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "8008": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 102
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8015": {
      "op": "SHL"
    },
    "8016": {
      "op": "SUB"
    },
    "8017": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "8018": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8025": {
      "op": "SHL"
    },
    "8026": {
      "op": "SUB"
    },
    "8027": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "8028": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8061": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8062": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8064": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8065": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F8C"
    },
    "8068": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8069": {
      "op": "DUP2"
    },
    "8070": {
      "op": "MSTORE"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8073": {
      "op": "ADD"
    },
    "8074": {
      "op": "SWAP1"
    },
    "8075": {
      "op": "JUMP"
    },
    "8076": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8077": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8079": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8080": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8081": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8082": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "8083": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8084": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8085": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 103,
      "value": "0x1DC5"
    },
    "8088": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        3101,
        4218
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8089": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8090": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8092": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8093": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8096": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8097": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8098": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8100": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8101": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC0"
    },
    "8104": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8105": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8107": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8114": {
      "op": "SHL"
    },
    "8115": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8116": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8117": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8119": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8120": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA45"
    },
    "8123": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8124": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AC7"
    },
    "8127": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8128": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8129": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 104,
      "value": "0x1FCA"
    },
    "8132": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8133": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8134": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2218"
    },
    "8137": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8138": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8139": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "8140": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "8141": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8142": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8149": {
      "op": "SHL"
    },
    "8150": {
      "op": "SUB"
    },
    "8151": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 105
    },
    "8152": {
      "branch": 146,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "8153": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2024"
    },
    "8156": {
      "branch": 146,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8157": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8159": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8166": {
      "op": "SHL"
    },
    "8167": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8168": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8171": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8173": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8174": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "8175": {
      "op": "MSTORE"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8180": {
      "op": "DUP3"
    },
    "8181": {
      "op": "ADD"
    },
    "8182": {
      "op": "MSTORE"
    },
    "8183": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8216": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8218": {
      "op": "DUP3"
    },
    "8219": {
      "op": "ADD"
    },
    "8220": {
      "op": "MSTORE"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8223": {
      "op": "ADD"
    },
    "8224": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA45"
    },
    "8227": {
      "op": "JUMP"
    },
    "8228": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8229": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 106
    },
    "8230": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "8232": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8234": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8235": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8236": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8237": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2036"
    },
    "8240": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8241": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8242": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BF"
    },
    "8245": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8246": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8247": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8248": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8249": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8250": {
      "op": "POP"
    },
    "8251": {
      "op": "POP"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8258": {
      "op": "SHL"
    },
    "8259": {
      "op": "SUB"
    },
    "8260": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 107
    },
    "8261": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "8262": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8264": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8265": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8266": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8267": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "8269": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8271": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8272": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8274": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8275": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8276": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8277": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8278": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8279": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8280": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8281": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2063"
    },
    "8284": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8285": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8286": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8287": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29BF"
    },
    "8290": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8291": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8292": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8293": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8294": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8295": {
      "op": "POP"
    },
    "8296": {
      "op": "POP"
    },
    "8297": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 108,
      "value": "0x40"
    },
    "8299": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8300": {
      "op": "DUP2"
    },
    "8301": {
      "op": "DUP2"
    },
    "8302": {
      "op": "MSTORE"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8309": {
      "op": "SHL"
    },
    "8310": {
      "op": "SUB"
    },
    "8311": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8312": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "8313": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8314": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8316": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8317": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8350": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8353": {
      "op": "ADD"
    },
    "8354": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8356": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8357": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8358": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8359": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "8360": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8361": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8362": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "8363": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "POP",
      "path": "2"
    },
    "8364": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8365": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8415,
        8956
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8366": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8504,
        8505
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 109,
      "value": "0x0"
    },
    "8368": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8495,
        8501
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8369": {
      "branch": 135,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8495,
        8505
      ],
      "op": "GT",
      "path": "26"
    },
    "8370": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20CD"
    },
    "8373": {
      "branch": 135,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8374": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8376": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8383": {
      "op": "SHL"
    },
    "8384": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8385": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8386": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8388": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "ADD",
      "path": "26"
    },
    "8389": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "8392": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8393": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2A4D"
    },
    "8396": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8487,
        8543
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8397": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8487,
        8543
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8398": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8582,
        8588
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 110
    },
    "8399": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8561,
        8578
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x20ED"
    },
    "8402": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8571,
        8577
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8409": {
      "op": "SHL"
    },
    "8410": {
      "op": "SUB"
    },
    "8411": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "8412": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8414": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8415": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8416": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8417": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "8419": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8421": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8422": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8424": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8425": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8426": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8427": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8428": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8429": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8561,
        8578
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8430": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8561,
        8588
      ],
      "op": "LT",
      "path": "26"
    },
    "8431": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8561,
        8588
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8432": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2133"
    },
    "8435": {
      "branch": 136,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8436": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8438": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8439": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8445": {
      "op": "SHL"
    },
    "8446": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8447": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8450": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8452": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8453": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "ADD",
      "path": "26"
    },
    "8454": {
      "op": "MSTORE"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8459": {
      "op": "DUP3"
    },
    "8460": {
      "op": "ADD"
    },
    "8461": {
      "op": "MSTORE"
    },
    "8462": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8486": {
      "op": "SHL"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8489": {
      "op": "DUP3"
    },
    "8490": {
      "op": "ADD"
    },
    "8491": {
      "op": "MSTORE"
    },
    "8492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8494": {
      "op": "ADD"
    },
    "8495": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "8498": {
      "op": "JUMP"
    },
    "8499": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8553,
        8614
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8506": {
      "op": "SHL"
    },
    "8507": {
      "op": "SUB"
    },
    "8508": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8509": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "AND",
      "path": "26"
    },
    "8510": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8625,
        8644
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8512": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8513": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8514": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8515": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8667
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x79"
    },
    "8517": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8519": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8520": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8522": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8523": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8524": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8525": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8647,
        8675
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8526": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8693,
        8709
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 111
    },
    "8527": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8693,
        8709
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8528": {
      "branch": 137,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8693,
        8709
      ],
      "op": "SUB",
      "path": "26"
    },
    "8529": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2198"
    },
    "8532": {
      "branch": 137,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8533": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8535": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8544": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8547": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8549": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8550": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "ADD",
      "path": "26"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8556": {
      "op": "DUP3"
    },
    "8557": {
      "op": "ADD"
    },
    "8558": {
      "op": "MSTORE"
    },
    "8559": {
      "op": "PUSH25",
      "value": "0x2B30B634B230BA37B9103237B2B9903737BA1032BC34B9BA17"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "8587": {
      "op": "SHL"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8590": {
      "op": "DUP3"
    },
    "8591": {
      "op": "ADD"
    },
    "8592": {
      "op": "MSTORE"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8595": {
      "op": "ADD"
    },
    "8596": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA45"
    },
    "8599": {
      "op": "JUMP"
    },
    "8600": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8685,
        8739
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8601": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8750,
        8793
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 112,
      "value": "0x21A3"
    },
    "8604": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8763,
        8769
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8605": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8779,
        8783
      ],
      "op": "ADDRESS",
      "path": "26"
    },
    "8606": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8786,
        8792
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8607": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8750,
        8762
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD60"
    },
    "8610": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8750,
        8793
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8611": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8750,
        8793
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8612": {
      "op": "POP"
    },
    "8613": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 113,
      "value": "0x0"
    },
    "8615": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8616": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8617": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8618": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8813
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "8620": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8622": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8623": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8625": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8626": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8627": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8833
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "8629": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8833
      ],
      "op": "ADD",
      "path": "26"
    },
    "8630": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8631": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8632": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8837,
        8843
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8633": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8837,
        8843
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "8634": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8826
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8635": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21C5"
    },
    "8638": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8639": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8837,
        8843
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8640": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8837,
        8843
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8641": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29BF"
    },
    "8644": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        8803,
        8843
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8645": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8646": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8647": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8648": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8803,
        8843
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "8649": {
      "op": "POP"
    },
    "8650": {
      "op": "POP"
    },
    "8651": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8853,
        8872
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8653": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8654": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8655": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8656": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8885
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x75"
    },
    "8658": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8660": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8661": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8662": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8663": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8665": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8666": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8667": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8668": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8898
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8669": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8905
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "8671": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8905
      ],
      "op": "ADD",
      "path": "26"
    },
    "8672": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8875,
        8905
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8673": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "SWAP2",
      "path": "26",
      "statement": 114
    },
    "8674": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8675": {
      "op": "DUP5"
    },
    "8676": {
      "op": "DUP2"
    },
    "8677": {
      "op": "MSTORE"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8684": {
      "op": "SHL"
    },
    "8685": {
      "op": "SUB"
    },
    "8686": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "DUP7",
      "path": "26"
    },
    "8687": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "AND",
      "path": "26"
    },
    "8688": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8689": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "PUSH32",
      "path": "26",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "8722": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8723": {
      "op": "ADD"
    },
    "8724": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        8921,
        8949
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1547"
    },
    "8727": {
      "op": "JUMP"
    },
    "8728": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8729": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8731": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8732": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8735": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8736": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "8737": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8739": {
      "branch": 149,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "8740": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x223F"
    },
    "8743": {
      "branch": 149,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8744": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8746": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8753": {
      "op": "SHL"
    },
    "8754": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8755": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8756": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8758": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "8759": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA45"
    },
    "8762": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8763": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AC7"
    },
    "8766": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8767": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8768": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 115,
      "value": "0x36"
    },
    "8770": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224B"
    },
    "8773": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8774": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8775": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B62"
    },
    "8778": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8779": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8780": {
      "op": "POP"
    },
    "8781": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 116,
      "value": "0x37"
    },
    "8783": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x110C"
    },
    "8786": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8787": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8788": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B62"
    },
    "8791": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8792": {
      "op": "JUMPDEST"
    },
    "8793": {
      "op": "DUP3"
    },
    "8794": {
      "op": "DUP1"
    },
    "8795": {
      "op": "SLOAD"
    },
    "8796": {
      "op": "DUP3"
    },
    "8797": {
      "op": "DUP3"
    },
    "8798": {
      "op": "SSTORE"
    },
    "8799": {
      "op": "SWAP1"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8802": {
      "op": "MSTORE"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8807": {
      "op": "KECCAK256"
    },
    "8808": {
      "op": "SWAP1"
    },
    "8809": {
      "op": "DUP2"
    },
    "8810": {
      "op": "ADD"
    },
    "8811": {
      "op": "SWAP3"
    },
    "8812": {
      "op": "DUP3"
    },
    "8813": {
      "op": "ISZERO"
    },
    "8814": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8817": {
      "op": "JUMPI"
    },
    "8818": {
      "op": "SWAP2"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8821": {
      "op": "MUL"
    },
    "8822": {
      "op": "DUP3"
    },
    "8823": {
      "op": "ADD"
    },
    "8824": {
      "op": "JUMPDEST"
    },
    "8825": {
      "op": "DUP3"
    },
    "8826": {
      "op": "DUP2"
    },
    "8827": {
      "op": "GT"
    },
    "8828": {
      "op": "ISZERO"
    },
    "8829": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8832": {
      "op": "JUMPI"
    },
    "8833": {
      "op": "DUP3"
    },
    "8834": {
      "op": "MLOAD"
    },
    "8835": {
      "op": "DUP3"
    },
    "8836": {
      "op": "SLOAD"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8843": {
      "op": "SHL"
    },
    "8844": {
      "op": "SUB"
    },
    "8845": {
      "op": "NOT"
    },
    "8846": {
      "op": "AND"
    },
    "8847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8853": {
      "op": "SHL"
    },
    "8854": {
      "op": "SUB"
    },
    "8855": {
      "op": "SWAP1"
    },
    "8856": {
      "op": "SWAP2"
    },
    "8857": {
      "op": "AND"
    },
    "8858": {
      "op": "OR"
    },
    "8859": {
      "op": "DUP3"
    },
    "8860": {
      "op": "SSTORE"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8863": {
      "op": "SWAP1"
    },
    "8864": {
      "op": "SWAP3"
    },
    "8865": {
      "op": "ADD"
    },
    "8866": {
      "op": "SWAP2"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8869": {
      "op": "SWAP1"
    },
    "8870": {
      "op": "SWAP2"
    },
    "8871": {
      "op": "ADD"
    },
    "8872": {
      "op": "SWAP1"
    },
    "8873": {
      "op": "PUSH2",
      "value": "0x2278"
    },
    "8876": {
      "op": "JUMP"
    },
    "8877": {
      "op": "JUMPDEST"
    },
    "8878": {
      "op": "POP"
    },
    "8879": {
      "op": "PUSH2",
      "value": "0x22B9"
    },
    "8882": {
      "op": "SWAP3"
    },
    "8883": {
      "op": "SWAP2"
    },
    "8884": {
      "op": "POP"
    },
    "8885": {
      "op": "PUSH2",
      "value": "0x22F8"
    },
    "8888": {
      "jump": "i",
      "op": "JUMP"
    },
    "8889": {
      "op": "JUMPDEST"
    },
    "8890": {
      "op": "POP"
    },
    "8891": {
      "op": "SWAP1"
    },
    "8892": {
      "jump": "o",
      "op": "JUMP"
    },
    "8893": {
      "op": "JUMPDEST"
    },
    "8894": {
      "op": "DUP3"
    },
    "8895": {
      "op": "DUP1"
    },
    "8896": {
      "op": "SLOAD"
    },
    "8897": {
      "op": "DUP3"
    },
    "8898": {
      "op": "DUP3"
    },
    "8899": {
      "op": "SSTORE"
    },
    "8900": {
      "op": "SWAP1"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8903": {
      "op": "MSTORE"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8908": {
      "op": "KECCAK256"
    },
    "8909": {
      "op": "SWAP1"
    },
    "8910": {
      "op": "DUP2"
    },
    "8911": {
      "op": "ADD"
    },
    "8912": {
      "op": "SWAP3"
    },
    "8913": {
      "op": "DUP3"
    },
    "8914": {
      "op": "ISZERO"
    },
    "8915": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8918": {
      "op": "JUMPI"
    },
    "8919": {
      "op": "SWAP2"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8922": {
      "op": "MUL"
    },
    "8923": {
      "op": "DUP3"
    },
    "8924": {
      "op": "ADD"
    },
    "8925": {
      "op": "JUMPDEST"
    },
    "8926": {
      "op": "DUP3"
    },
    "8927": {
      "op": "DUP2"
    },
    "8928": {
      "op": "GT"
    },
    "8929": {
      "op": "ISZERO"
    },
    "8930": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8933": {
      "op": "JUMPI"
    },
    "8934": {
      "op": "DUP3"
    },
    "8935": {
      "op": "MLOAD"
    },
    "8936": {
      "op": "DUP3"
    },
    "8937": {
      "op": "SSTORE"
    },
    "8938": {
      "op": "SWAP2"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8941": {
      "op": "ADD"
    },
    "8942": {
      "op": "SWAP2"
    },
    "8943": {
      "op": "SWAP1"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8946": {
      "op": "ADD"
    },
    "8947": {
      "op": "SWAP1"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "8951": {
      "op": "JUMP"
    },
    "8952": {
      "op": "JUMPDEST"
    },
    "8953": {
      "op": "JUMPDEST"
    },
    "8954": {
      "op": "DUP1"
    },
    "8955": {
      "op": "DUP3"
    },
    "8956": {
      "op": "GT"
    },
    "8957": {
      "op": "ISZERO"
    },
    "8958": {
      "op": "PUSH2",
      "value": "0x22B9"
    },
    "8961": {
      "op": "JUMPI"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8964": {
      "op": "DUP2"
    },
    "8965": {
      "op": "SSTORE"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8968": {
      "op": "ADD"
    },
    "8969": {
      "op": "PUSH2",
      "value": "0x22F9"
    },
    "8972": {
      "op": "JUMP"
    },
    "8973": {
      "op": "JUMPDEST"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8978": {
      "op": "DUP1"
    },
    "8979": {
      "op": "DUP4"
    },
    "8980": {
      "op": "MSTORE"
    },
    "8981": {
      "op": "DUP4"
    },
    "8982": {
      "op": "MLOAD"
    },
    "8983": {
      "op": "DUP1"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8986": {
      "op": "DUP6"
    },
    "8987": {
      "op": "ADD"
    },
    "8988": {
      "op": "MSTORE"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "DUP2"
    },
    "8993": {
      "op": "DUP2"
    },
    "8994": {
      "op": "LT"
    },
    "8995": {
      "op": "ISZERO"
    },
    "8996": {
      "op": "PUSH2",
      "value": "0x233B"
    },
    "8999": {
      "op": "JUMPI"
    },
    "9000": {
      "op": "DUP6"
    },
    "9001": {
      "op": "DUP2"
    },
    "9002": {
      "op": "ADD"
    },
    "9003": {
      "op": "DUP4"
    },
    "9004": {
      "op": "ADD"
    },
    "9005": {
      "op": "MLOAD"
    },
    "9006": {
      "op": "DUP6"
    },
    "9007": {
      "op": "DUP3"
    },
    "9008": {
      "op": "ADD"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9011": {
      "op": "ADD"
    },
    "9012": {
      "op": "MSTORE"
    },
    "9013": {
      "op": "DUP3"
    },
    "9014": {
      "op": "ADD"
    },
    "9015": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "9018": {
      "op": "JUMP"
    },
    "9019": {
      "op": "JUMPDEST"
    },
    "9020": {
      "op": "POP"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9025": {
      "op": "DUP3"
    },
    "9026": {
      "op": "DUP7"
    },
    "9027": {
      "op": "ADD"
    },
    "9028": {
      "op": "ADD"
    },
    "9029": {
      "op": "MSTORE"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9034": {
      "op": "NOT"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9037": {
      "op": "DUP4"
    },
    "9038": {
      "op": "ADD"
    },
    "9039": {
      "op": "AND"
    },
    "9040": {
      "op": "DUP6"
    },
    "9041": {
      "op": "ADD"
    },
    "9042": {
      "op": "ADD"
    },
    "9043": {
      "op": "SWAP3"
    },
    "9044": {
      "op": "POP"
    },
    "9045": {
      "op": "POP"
    },
    "9046": {
      "op": "POP"
    },
    "9047": {
      "op": "SWAP3"
    },
    "9048": {
      "op": "SWAP2"
    },
    "9049": {
      "op": "POP"
    },
    "9050": {
      "op": "POP"
    },
    "9051": {
      "jump": "o",
      "op": "JUMP"
    },
    "9052": {
      "op": "JUMPDEST"
    },
    "9053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9059": {
      "op": "SHL"
    },
    "9060": {
      "op": "SUB"
    },
    "9061": {
      "op": "DUP2"
    },
    "9062": {
      "op": "AND"
    },
    "9063": {
      "op": "DUP2"
    },
    "9064": {
      "op": "EQ"
    },
    "9065": {
      "op": "PUSH2",
      "value": "0x13E2"
    },
    "9068": {
      "op": "JUMPI"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9071": {
      "op": "DUP1"
    },
    "9072": {
      "op": "REVERT"
    },
    "9073": {
      "op": "JUMPDEST"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9076": {
      "op": "DUP1"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9079": {
      "op": "DUP4"
    },
    "9080": {
      "op": "DUP6"
    },
    "9081": {
      "op": "SUB"
    },
    "9082": {
      "op": "SLT"
    },
    "9083": {
      "op": "ISZERO"
    },
    "9084": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "9087": {
      "op": "JUMPI"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9090": {
      "op": "DUP1"
    },
    "9091": {
      "op": "REVERT"
    },
    "9092": {
      "op": "JUMPDEST"
    },
    "9093": {
      "op": "DUP3"
    },
    "9094": {
      "op": "CALLDATALOAD"
    },
    "9095": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "9098": {
      "op": "DUP2"
    },
    "9099": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9102": {
      "jump": "i",
      "op": "JUMP"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "SWAP5"
    },
    "9105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9107": {
      "op": "SWAP4"
    },
    "9108": {
      "op": "SWAP1"
    },
    "9109": {
      "op": "SWAP4"
    },
    "9110": {
      "op": "ADD"
    },
    "9111": {
      "op": "CALLDATALOAD"
    },
    "9112": {
      "op": "SWAP4"
    },
    "9113": {
      "op": "POP"
    },
    "9114": {
      "op": "POP"
    },
    "9115": {
      "op": "POP"
    },
    "9116": {
      "jump": "o",
      "op": "JUMP"
    },
    "9117": {
      "op": "JUMPDEST"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9120": {
      "op": "DUP2"
    },
    "9121": {
      "op": "MLOAD"
    },
    "9122": {
      "op": "DUP1"
    },
    "9123": {
      "op": "DUP5"
    },
    "9124": {
      "op": "MSTORE"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9127": {
      "op": "DUP1"
    },
    "9128": {
      "op": "DUP6"
    },
    "9129": {
      "op": "ADD"
    },
    "9130": {
      "op": "SWAP5"
    },
    "9131": {
      "op": "POP"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9134": {
      "op": "DUP5"
    },
    "9135": {
      "op": "ADD"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9138": {
      "op": "JUMPDEST"
    },
    "9139": {
      "op": "DUP4"
    },
    "9140": {
      "op": "DUP2"
    },
    "9141": {
      "op": "LT"
    },
    "9142": {
      "op": "ISZERO"
    },
    "9143": {
      "op": "PUSH2",
      "value": "0x23D7"
    },
    "9146": {
      "op": "JUMPI"
    },
    "9147": {
      "op": "DUP2"
    },
    "9148": {
      "op": "MLOAD"
    },
    "9149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9155": {
      "op": "SHL"
    },
    "9156": {
      "op": "SUB"
    },
    "9157": {
      "op": "AND"
    },
    "9158": {
      "op": "DUP8"
    },
    "9159": {
      "op": "MSTORE"
    },
    "9160": {
      "op": "SWAP6"
    },
    "9161": {
      "op": "DUP3"
    },
    "9162": {
      "op": "ADD"
    },
    "9163": {
      "op": "SWAP6"
    },
    "9164": {
      "op": "SWAP1"
    },
    "9165": {
      "op": "DUP3"
    },
    "9166": {
      "op": "ADD"
    },
    "9167": {
      "op": "SWAP1"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9170": {
      "op": "ADD"
    },
    "9171": {
      "op": "PUSH2",
      "value": "0x23B2"
    },
    "9174": {
      "op": "JUMP"
    },
    "9175": {
      "op": "JUMPDEST"
    },
    "9176": {
      "op": "POP"
    },
    "9177": {
      "op": "SWAP5"
    },
    "9178": {
      "op": "SWAP6"
    },
    "9179": {
      "op": "SWAP5"
    },
    "9180": {
      "op": "POP"
    },
    "9181": {
      "op": "POP"
    },
    "9182": {
      "op": "POP"
    },
    "9183": {
      "op": "POP"
    },
    "9184": {
      "op": "POP"
    },
    "9185": {
      "jump": "o",
      "op": "JUMP"
    },
    "9186": {
      "op": "JUMPDEST"
    },
    "9187": {
      "op": "DUP5"
    },
    "9188": {
      "op": "DUP2"
    },
    "9189": {
      "op": "MSTORE"
    },
    "9190": {
      "op": "DUP4"
    },
    "9191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9193": {
      "op": "DUP3"
    },
    "9194": {
      "op": "ADD"
    },
    "9195": {
      "op": "MSTORE"
    },
    "9196": {
      "op": "DUP3"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9199": {
      "op": "DUP3"
    },
    "9200": {
      "op": "ADD"
    },
    "9201": {
      "op": "MSTORE"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9206": {
      "op": "DUP3"
    },
    "9207": {
      "op": "ADD"
    },
    "9208": {
      "op": "MSTORE"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9211": {
      "op": "PUSH2",
      "value": "0x2407"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9216": {
      "op": "DUP4"
    },
    "9217": {
      "op": "ADD"
    },
    "9218": {
      "op": "DUP5"
    },
    "9219": {
      "op": "PUSH2",
      "value": "0x239D"
    },
    "9222": {
      "jump": "i",
      "op": "JUMP"
    },
    "9223": {
      "op": "JUMPDEST"
    },
    "9224": {
      "op": "SWAP7"
    },
    "9225": {
      "op": "SWAP6"
    },
    "9226": {
      "op": "POP"
    },
    "9227": {
      "op": "POP"
    },
    "9228": {
      "op": "POP"
    },
    "9229": {
      "op": "POP"
    },
    "9230": {
      "op": "POP"
    },
    "9231": {
      "op": "POP"
    },
    "9232": {
      "jump": "o",
      "op": "JUMP"
    },
    "9233": {
      "op": "JUMPDEST"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "DUP1"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9239": {
      "op": "DUP1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9242": {
      "op": "DUP6"
    },
    "9243": {
      "op": "DUP8"
    },
    "9244": {
      "op": "SUB"
    },
    "9245": {
      "op": "SLT"
    },
    "9246": {
      "op": "ISZERO"
    },
    "9247": {
      "op": "PUSH2",
      "value": "0x2427"
    },
    "9250": {
      "op": "JUMPI"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9253": {
      "op": "DUP1"
    },
    "9254": {
      "op": "REVERT"
    },
    "9255": {
      "op": "JUMPDEST"
    },
    "9256": {
      "op": "DUP5"
    },
    "9257": {
      "op": "CALLDATALOAD"
    },
    "9258": {
      "op": "SWAP4"
    },
    "9259": {
      "op": "POP"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9262": {
      "op": "DUP6"
    },
    "9263": {
      "op": "ADD"
    },
    "9264": {
      "op": "CALLDATALOAD"
    },
    "9265": {
      "op": "SWAP3"
    },
    "9266": {
      "op": "POP"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9269": {
      "op": "DUP6"
    },
    "9270": {
      "op": "ADD"
    },
    "9271": {
      "op": "CALLDATALOAD"
    },
    "9272": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9281": {
      "op": "DUP1"
    },
    "9282": {
      "op": "DUP3"
    },
    "9283": {
      "op": "GT"
    },
    "9284": {
      "op": "ISZERO"
    },
    "9285": {
      "op": "PUSH2",
      "value": "0x244D"
    },
    "9288": {
      "op": "JUMPI"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9291": {
      "op": "DUP1"
    },
    "9292": {
      "op": "REVERT"
    },
    "9293": {
      "op": "JUMPDEST"
    },
    "9294": {
      "op": "DUP2"
    },
    "9295": {
      "op": "DUP8"
    },
    "9296": {
      "op": "ADD"
    },
    "9297": {
      "op": "SWAP2"
    },
    "9298": {
      "op": "POP"
    },
    "9299": {
      "op": "DUP8"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9302": {
      "op": "DUP4"
    },
    "9303": {
      "op": "ADD"
    },
    "9304": {
      "op": "SLT"
    },
    "9305": {
      "op": "PUSH2",
      "value": "0x2461"
    },
    "9308": {
      "op": "JUMPI"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9311": {
      "op": "DUP1"
    },
    "9312": {
      "op": "REVERT"
    },
    "9313": {
      "op": "JUMPDEST"
    },
    "9314": {
      "op": "DUP2"
    },
    "9315": {
      "op": "CALLDATALOAD"
    },
    "9316": {
      "op": "DUP2"
    },
    "9317": {
      "op": "DUP2"
    },
    "9318": {
      "op": "GT"
    },
    "9319": {
      "op": "ISZERO"
    },
    "9320": {
      "op": "PUSH2",
      "value": "0x2470"
    },
    "9323": {
      "op": "JUMPI"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9326": {
      "op": "DUP1"
    },
    "9327": {
      "op": "REVERT"
    },
    "9328": {
      "op": "JUMPDEST"
    },
    "9329": {
      "op": "DUP9"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9332": {
      "op": "DUP3"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9335": {
      "op": "SHL"
    },
    "9336": {
      "op": "DUP6"
    },
    "9337": {
      "op": "ADD"
    },
    "9338": {
      "op": "ADD"
    },
    "9339": {
      "op": "GT"
    },
    "9340": {
      "op": "ISZERO"
    },
    "9341": {
      "op": "PUSH2",
      "value": "0x2485"
    },
    "9344": {
      "op": "JUMPI"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9347": {
      "op": "DUP1"
    },
    "9348": {
      "op": "REVERT"
    },
    "9349": {
      "op": "JUMPDEST"
    },
    "9350": {
      "op": "SWAP6"
    },
    "9351": {
      "op": "SWAP9"
    },
    "9352": {
      "op": "SWAP5"
    },
    "9353": {
      "op": "SWAP8"
    },
    "9354": {
      "op": "POP"
    },
    "9355": {
      "op": "POP"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9358": {
      "op": "ADD"
    },
    "9359": {
      "op": "SWAP5"
    },
    "9360": {
      "op": "POP"
    },
    "9361": {
      "op": "POP"
    },
    "9362": {
      "op": "POP"
    },
    "9363": {
      "jump": "o",
      "op": "JUMP"
    },
    "9364": {
      "op": "JUMPDEST"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9367": {
      "op": "DUP1"
    },
    "9368": {
      "op": "DUP3"
    },
    "9369": {
      "op": "MSTORE"
    },
    "9370": {
      "op": "DUP3"
    },
    "9371": {
      "op": "MLOAD"
    },
    "9372": {
      "op": "DUP3"
    },
    "9373": {
      "op": "DUP3"
    },
    "9374": {
      "op": "ADD"
    },
    "9375": {
      "op": "DUP2"
    },
    "9376": {
      "op": "SWAP1"
    },
    "9377": {
      "op": "MSTORE"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9380": {
      "op": "SWAP2"
    },
    "9381": {
      "op": "SWAP1"
    },
    "9382": {
      "op": "DUP5"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "SWAP1"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9388": {
      "op": "DUP6"
    },
    "9389": {
      "op": "ADD"
    },
    "9390": {
      "op": "SWAP1"
    },
    "9391": {
      "op": "DUP5"
    },
    "9392": {
      "op": "JUMPDEST"
    },
    "9393": {
      "op": "DUP2"
    },
    "9394": {
      "op": "DUP2"
    },
    "9395": {
      "op": "LT"
    },
    "9396": {
      "op": "ISZERO"
    },
    "9397": {
      "op": "PUSH2",
      "value": "0x24CC"
    },
    "9400": {
      "op": "JUMPI"
    },
    "9401": {
      "op": "DUP4"
    },
    "9402": {
      "op": "MLOAD"
    },
    "9403": {
      "op": "DUP4"
    },
    "9404": {
      "op": "MSTORE"
    },
    "9405": {
      "op": "SWAP3"
    },
    "9406": {
      "op": "DUP5"
    },
    "9407": {
      "op": "ADD"
    },
    "9408": {
      "op": "SWAP3"
    },
    "9409": {
      "op": "SWAP2"
    },
    "9410": {
      "op": "DUP5"
    },
    "9411": {
      "op": "ADD"
    },
    "9412": {
      "op": "SWAP2"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9415": {
      "op": "ADD"
    },
    "9416": {
      "op": "PUSH2",
      "value": "0x24B0"
    },
    "9419": {
      "op": "JUMP"
    },
    "9420": {
      "op": "JUMPDEST"
    },
    "9421": {
      "op": "POP"
    },
    "9422": {
      "op": "SWAP1"
    },
    "9423": {
      "op": "SWAP7"
    },
    "9424": {
      "op": "SWAP6"
    },
    "9425": {
      "op": "POP"
    },
    "9426": {
      "op": "POP"
    },
    "9427": {
      "op": "POP"
    },
    "9428": {
      "op": "POP"
    },
    "9429": {
      "op": "POP"
    },
    "9430": {
      "op": "POP"
    },
    "9431": {
      "jump": "o",
      "op": "JUMP"
    },
    "9432": {
      "op": "JUMPDEST"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9437": {
      "op": "DUP3"
    },
    "9438": {
      "op": "DUP5"
    },
    "9439": {
      "op": "SUB"
    },
    "9440": {
      "op": "SLT"
    },
    "9441": {
      "op": "ISZERO"
    },
    "9442": {
      "op": "PUSH2",
      "value": "0x24EA"
    },
    "9445": {
      "op": "JUMPI"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9448": {
      "op": "DUP1"
    },
    "9449": {
      "op": "REVERT"
    },
    "9450": {
      "op": "JUMPDEST"
    },
    "9451": {
      "op": "POP"
    },
    "9452": {
      "op": "CALLDATALOAD"
    },
    "9453": {
      "op": "SWAP2"
    },
    "9454": {
      "op": "SWAP1"
    },
    "9455": {
      "op": "POP"
    },
    "9456": {
      "jump": "o",
      "op": "JUMP"
    },
    "9457": {
      "op": "JUMPDEST"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9460": {
      "op": "DUP1"
    },
    "9461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9465": {
      "op": "DUP5"
    },
    "9466": {
      "op": "DUP7"
    },
    "9467": {
      "op": "SUB"
    },
    "9468": {
      "op": "SLT"
    },
    "9469": {
      "op": "ISZERO"
    },
    "9470": {
      "op": "PUSH2",
      "value": "0x2506"
    },
    "9473": {
      "op": "JUMPI"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9476": {
      "op": "DUP1"
    },
    "9477": {
      "op": "REVERT"
    },
    "9478": {
      "op": "JUMPDEST"
    },
    "9479": {
      "op": "DUP4"
    },
    "9480": {
      "op": "CALLDATALOAD"
    },
    "9481": {
      "op": "PUSH2",
      "value": "0x2511"
    },
    "9484": {
      "op": "DUP2"
    },
    "9485": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9488": {
      "jump": "i",
      "op": "JUMP"
    },
    "9489": {
      "op": "JUMPDEST"
    },
    "9490": {
      "op": "SWAP3"
    },
    "9491": {
      "op": "POP"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9494": {
      "op": "DUP5"
    },
    "9495": {
      "op": "ADD"
    },
    "9496": {
      "op": "CALLDATALOAD"
    },
    "9497": {
      "op": "PUSH2",
      "value": "0x2521"
    },
    "9500": {
      "op": "DUP2"
    },
    "9501": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9504": {
      "jump": "i",
      "op": "JUMP"
    },
    "9505": {
      "op": "JUMPDEST"
    },
    "9506": {
      "op": "SWAP3"
    },
    "9507": {
      "op": "SWAP6"
    },
    "9508": {
      "op": "SWAP3"
    },
    "9509": {
      "op": "SWAP5"
    },
    "9510": {
      "op": "POP"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "op": "POP"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9515": {
      "op": "SWAP2"
    },
    "9516": {
      "op": "SWAP1"
    },
    "9517": {
      "op": "SWAP2"
    },
    "9518": {
      "op": "ADD"
    },
    "9519": {
      "op": "CALLDATALOAD"
    },
    "9520": {
      "op": "SWAP1"
    },
    "9521": {
      "jump": "o",
      "op": "JUMP"
    },
    "9522": {
      "op": "JUMPDEST"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9527": {
      "op": "DUP3"
    },
    "9528": {
      "op": "DUP5"
    },
    "9529": {
      "op": "SUB"
    },
    "9530": {
      "op": "SLT"
    },
    "9531": {
      "op": "ISZERO"
    },
    "9532": {
      "op": "PUSH2",
      "value": "0x2544"
    },
    "9535": {
      "op": "JUMPI"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9538": {
      "op": "DUP1"
    },
    "9539": {
      "op": "REVERT"
    },
    "9540": {
      "op": "JUMPDEST"
    },
    "9541": {
      "op": "DUP2"
    },
    "9542": {
      "op": "CALLDATALOAD"
    },
    "9543": {
      "op": "PUSH2",
      "value": "0x254F"
    },
    "9546": {
      "op": "DUP2"
    },
    "9547": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9550": {
      "jump": "i",
      "op": "JUMP"
    },
    "9551": {
      "op": "JUMPDEST"
    },
    "9552": {
      "op": "SWAP4"
    },
    "9553": {
      "op": "SWAP3"
    },
    "9554": {
      "op": "POP"
    },
    "9555": {
      "op": "POP"
    },
    "9556": {
      "op": "POP"
    },
    "9557": {
      "jump": "o",
      "op": "JUMP"
    },
    "9558": {
      "op": "JUMPDEST"
    },
    "9559": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9566": {
      "op": "SHL"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9569": {
      "op": "MSTORE"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9574": {
      "op": "MSTORE"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9579": {
      "op": "REVERT"
    },
    "9580": {
      "op": "JUMPDEST"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9583": {
      "op": "MLOAD"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9586": {
      "op": "DUP3"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9590": {
      "op": "NOT"
    },
    "9591": {
      "op": "AND"
    },
    "9592": {
      "op": "DUP2"
    },
    "9593": {
      "op": "ADD"
    },
    "9594": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9603": {
      "op": "DUP2"
    },
    "9604": {
      "op": "GT"
    },
    "9605": {
      "op": "DUP3"
    },
    "9606": {
      "op": "DUP3"
    },
    "9607": {
      "op": "LT"
    },
    "9608": {
      "op": "OR"
    },
    "9609": {
      "op": "ISZERO"
    },
    "9610": {
      "op": "PUSH2",
      "value": "0x2595"
    },
    "9613": {
      "op": "JUMPI"
    },
    "9614": {
      "op": "PUSH2",
      "value": "0x2595"
    },
    "9617": {
      "op": "PUSH2",
      "value": "0x2556"
    },
    "9620": {
      "jump": "i",
      "op": "JUMP"
    },
    "9621": {
      "op": "JUMPDEST"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9624": {
      "op": "MSTORE"
    },
    "9625": {
      "op": "SWAP2"
    },
    "9626": {
      "op": "SWAP1"
    },
    "9627": {
      "op": "POP"
    },
    "9628": {
      "jump": "o",
      "op": "JUMP"
    },
    "9629": {
      "op": "JUMPDEST"
    },
    "9630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9632": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9641": {
      "op": "DUP3"
    },
    "9642": {
      "op": "GT"
    },
    "9643": {
      "op": "ISZERO"
    },
    "9644": {
      "op": "PUSH2",
      "value": "0x25B7"
    },
    "9647": {
      "op": "JUMPI"
    },
    "9648": {
      "op": "PUSH2",
      "value": "0x25B7"
    },
    "9651": {
      "op": "PUSH2",
      "value": "0x2556"
    },
    "9654": {
      "jump": "i",
      "op": "JUMP"
    },
    "9655": {
      "op": "JUMPDEST"
    },
    "9656": {
      "op": "POP"
    },
    "9657": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9659": {
      "op": "SHL"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9662": {
      "op": "ADD"
    },
    "9663": {
      "op": "SWAP1"
    },
    "9664": {
      "jump": "o",
      "op": "JUMP"
    },
    "9665": {
      "op": "JUMPDEST"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9668": {
      "op": "DUP3"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9671": {
      "op": "DUP4"
    },
    "9672": {
      "op": "ADD"
    },
    "9673": {
      "op": "SLT"
    },
    "9674": {
      "op": "PUSH2",
      "value": "0x25D2"
    },
    "9677": {
      "op": "JUMPI"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9680": {
      "op": "DUP1"
    },
    "9681": {
      "op": "REVERT"
    },
    "9682": {
      "op": "JUMPDEST"
    },
    "9683": {
      "op": "DUP2"
    },
    "9684": {
      "op": "CALLDATALOAD"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9687": {
      "op": "PUSH2",
      "value": "0x25E7"
    },
    "9690": {
      "op": "PUSH2",
      "value": "0x25E2"
    },
    "9693": {
      "op": "DUP4"
    },
    "9694": {
      "op": "PUSH2",
      "value": "0x259D"
    },
    "9697": {
      "jump": "i",
      "op": "JUMP"
    },
    "9698": {
      "op": "JUMPDEST"
    },
    "9699": {
      "op": "PUSH2",
      "value": "0x256C"
    },
    "9702": {
      "jump": "i",
      "op": "JUMP"
    },
    "9703": {
      "op": "JUMPDEST"
    },
    "9704": {
      "op": "DUP1"
    },
    "9705": {
      "op": "DUP4"
    },
    "9706": {
      "op": "DUP3"
    },
    "9707": {
      "op": "MSTORE"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9710": {
      "op": "DUP3"
    },
    "9711": {
      "op": "ADD"
    },
    "9712": {
      "op": "SWAP2"
    },
    "9713": {
      "op": "POP"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9716": {
      "op": "DUP5"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9719": {
      "op": "SHL"
    },
    "9720": {
      "op": "DUP8"
    },
    "9721": {
      "op": "ADD"
    },
    "9722": {
      "op": "ADD"
    },
    "9723": {
      "op": "SWAP4"
    },
    "9724": {
      "op": "POP"
    },
    "9725": {
      "op": "DUP7"
    },
    "9726": {
      "op": "DUP5"
    },
    "9727": {
      "op": "GT"
    },
    "9728": {
      "op": "ISZERO"
    },
    "9729": {
      "op": "PUSH2",
      "value": "0x2609"
    },
    "9732": {
      "op": "JUMPI"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9735": {
      "op": "DUP1"
    },
    "9736": {
      "op": "REVERT"
    },
    "9737": {
      "op": "JUMPDEST"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9740": {
      "op": "DUP7"
    },
    "9741": {
      "op": "ADD"
    },
    "9742": {
      "op": "JUMPDEST"
    },
    "9743": {
      "op": "DUP5"
    },
    "9744": {
      "op": "DUP2"
    },
    "9745": {
      "op": "LT"
    },
    "9746": {
      "op": "ISZERO"
    },
    "9747": {
      "op": "PUSH2",
      "value": "0x262E"
    },
    "9750": {
      "op": "JUMPI"
    },
    "9751": {
      "op": "DUP1"
    },
    "9752": {
      "op": "CALLDATALOAD"
    },
    "9753": {
      "op": "PUSH2",
      "value": "0x2621"
    },
    "9756": {
      "op": "DUP2"
    },
    "9757": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9760": {
      "jump": "i",
      "op": "JUMP"
    },
    "9761": {
      "op": "JUMPDEST"
    },
    "9762": {
      "op": "DUP4"
    },
    "9763": {
      "op": "MSTORE"
    },
    "9764": {
      "op": "SWAP2"
    },
    "9765": {
      "op": "DUP4"
    },
    "9766": {
      "op": "ADD"
    },
    "9767": {
      "op": "SWAP2"
    },
    "9768": {
      "op": "DUP4"
    },
    "9769": {
      "op": "ADD"
    },
    "9770": {
      "op": "PUSH2",
      "value": "0x260E"
    },
    "9773": {
      "op": "JUMP"
    },
    "9774": {
      "op": "JUMPDEST"
    },
    "9775": {
      "op": "POP"
    },
    "9776": {
      "op": "SWAP7"
    },
    "9777": {
      "op": "SWAP6"
    },
    "9778": {
      "op": "POP"
    },
    "9779": {
      "op": "POP"
    },
    "9780": {
      "op": "POP"
    },
    "9781": {
      "op": "POP"
    },
    "9782": {
      "op": "POP"
    },
    "9783": {
      "op": "POP"
    },
    "9784": {
      "jump": "o",
      "op": "JUMP"
    },
    "9785": {
      "op": "JUMPDEST"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9788": {
      "op": "DUP1"
    },
    "9789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9791": {
      "op": "DUP4"
    },
    "9792": {
      "op": "DUP6"
    },
    "9793": {
      "op": "SUB"
    },
    "9794": {
      "op": "SLT"
    },
    "9795": {
      "op": "ISZERO"
    },
    "9796": {
      "op": "PUSH2",
      "value": "0x264C"
    },
    "9799": {
      "op": "JUMPI"
    },
    "9800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9802": {
      "op": "DUP1"
    },
    "9803": {
      "op": "REVERT"
    },
    "9804": {
      "op": "JUMPDEST"
    },
    "9805": {
      "op": "DUP3"
    },
    "9806": {
      "op": "CALLDATALOAD"
    },
    "9807": {
      "op": "SWAP2"
    },
    "9808": {
      "op": "POP"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9811": {
      "op": "DUP4"
    },
    "9812": {
      "op": "ADD"
    },
    "9813": {
      "op": "CALLDATALOAD"
    },
    "9814": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9823": {
      "op": "DUP2"
    },
    "9824": {
      "op": "GT"
    },
    "9825": {
      "op": "ISZERO"
    },
    "9826": {
      "op": "PUSH2",
      "value": "0x266A"
    },
    "9829": {
      "op": "JUMPI"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9832": {
      "op": "DUP1"
    },
    "9833": {
      "op": "REVERT"
    },
    "9834": {
      "op": "JUMPDEST"
    },
    "9835": {
      "op": "PUSH2",
      "value": "0x2676"
    },
    "9838": {
      "op": "DUP6"
    },
    "9839": {
      "op": "DUP3"
    },
    "9840": {
      "op": "DUP7"
    },
    "9841": {
      "op": "ADD"
    },
    "9842": {
      "op": "PUSH2",
      "value": "0x25C1"
    },
    "9845": {
      "jump": "i",
      "op": "JUMP"
    },
    "9846": {
      "op": "JUMPDEST"
    },
    "9847": {
      "op": "SWAP2"
    },
    "9848": {
      "op": "POP"
    },
    "9849": {
      "op": "POP"
    },
    "9850": {
      "op": "SWAP3"
    },
    "9851": {
      "op": "POP"
    },
    "9852": {
      "op": "SWAP3"
    },
    "9853": {
      "op": "SWAP1"
    },
    "9854": {
      "op": "POP"
    },
    "9855": {
      "jump": "o",
      "op": "JUMP"
    },
    "9856": {
      "op": "JUMPDEST"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9859": {
      "op": "DUP1"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9862": {
      "op": "DUP4"
    },
    "9863": {
      "op": "DUP6"
    },
    "9864": {
      "op": "SUB"
    },
    "9865": {
      "op": "SLT"
    },
    "9866": {
      "op": "ISZERO"
    },
    "9867": {
      "op": "PUSH2",
      "value": "0x2693"
    },
    "9870": {
      "op": "JUMPI"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9873": {
      "op": "DUP1"
    },
    "9874": {
      "op": "REVERT"
    },
    "9875": {
      "op": "JUMPDEST"
    },
    "9876": {
      "op": "DUP3"
    },
    "9877": {
      "op": "CALLDATALOAD"
    },
    "9878": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9887": {
      "op": "DUP2"
    },
    "9888": {
      "op": "GT"
    },
    "9889": {
      "op": "ISZERO"
    },
    "9890": {
      "op": "PUSH2",
      "value": "0x26AA"
    },
    "9893": {
      "op": "JUMPI"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9896": {
      "op": "DUP1"
    },
    "9897": {
      "op": "REVERT"
    },
    "9898": {
      "op": "JUMPDEST"
    },
    "9899": {
      "op": "PUSH2",
      "value": "0x26B6"
    },
    "9902": {
      "op": "DUP6"
    },
    "9903": {
      "op": "DUP3"
    },
    "9904": {
      "op": "DUP7"
    },
    "9905": {
      "op": "ADD"
    },
    "9906": {
      "op": "PUSH2",
      "value": "0x25C1"
    },
    "9909": {
      "jump": "i",
      "op": "JUMP"
    },
    "9910": {
      "op": "JUMPDEST"
    },
    "9911": {
      "op": "SWAP3"
    },
    "9912": {
      "op": "POP"
    },
    "9913": {
      "op": "POP"
    },
    "9914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9916": {
      "op": "DUP4"
    },
    "9917": {
      "op": "ADD"
    },
    "9918": {
      "op": "CALLDATALOAD"
    },
    "9919": {
      "op": "PUSH2",
      "value": "0x26C7"
    },
    "9922": {
      "op": "DUP2"
    },
    "9923": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9926": {
      "jump": "i",
      "op": "JUMP"
    },
    "9927": {
      "op": "JUMPDEST"
    },
    "9928": {
      "op": "DUP1"
    },
    "9929": {
      "op": "SWAP2"
    },
    "9930": {
      "op": "POP"
    },
    "9931": {
      "op": "POP"
    },
    "9932": {
      "op": "SWAP3"
    },
    "9933": {
      "op": "POP"
    },
    "9934": {
      "op": "SWAP3"
    },
    "9935": {
      "op": "SWAP1"
    },
    "9936": {
      "op": "POP"
    },
    "9937": {
      "jump": "o",
      "op": "JUMP"
    },
    "9938": {
      "op": "JUMPDEST"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9941": {
      "op": "DUP2"
    },
    "9942": {
      "op": "MSTORE"
    },
    "9943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9945": {
      "op": "PUSH2",
      "value": "0x254F"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9950": {
      "op": "DUP4"
    },
    "9951": {
      "op": "ADD"
    },
    "9952": {
      "op": "DUP5"
    },
    "9953": {
      "op": "PUSH2",
      "value": "0x239D"
    },
    "9956": {
      "jump": "i",
      "op": "JUMP"
    },
    "9957": {
      "op": "JUMPDEST"
    },
    "9958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9960": {
      "op": "DUP1"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9963": {
      "op": "DUP4"
    },
    "9964": {
      "op": "DUP6"
    },
    "9965": {
      "op": "SUB"
    },
    "9966": {
      "op": "SLT"
    },
    "9967": {
      "op": "ISZERO"
    },
    "9968": {
      "op": "PUSH2",
      "value": "0x26F8"
    },
    "9971": {
      "op": "JUMPI"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9974": {
      "op": "DUP1"
    },
    "9975": {
      "op": "REVERT"
    },
    "9976": {
      "op": "JUMPDEST"
    },
    "9977": {
      "op": "POP"
    },
    "9978": {
      "op": "POP"
    },
    "9979": {
      "op": "DUP1"
    },
    "9980": {
      "op": "CALLDATALOAD"
    },
    "9981": {
      "op": "SWAP3"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9984": {
      "op": "SWAP1"
    },
    "9985": {
      "op": "SWAP2"
    },
    "9986": {
      "op": "ADD"
    },
    "9987": {
      "op": "CALLDATALOAD"
    },
    "9988": {
      "op": "SWAP2"
    },
    "9989": {
      "op": "POP"
    },
    "9990": {
      "jump": "o",
      "op": "JUMP"
    },
    "9991": {
      "op": "JUMPDEST"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9994": {
      "op": "DUP1"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9997": {
      "op": "DUP1"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10000": {
      "op": "DUP6"
    },
    "10001": {
      "op": "DUP8"
    },
    "10002": {
      "op": "SUB"
    },
    "10003": {
      "op": "SLT"
    },
    "10004": {
      "op": "ISZERO"
    },
    "10005": {
      "op": "PUSH2",
      "value": "0x271D"
    },
    "10008": {
      "op": "JUMPI"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10011": {
      "op": "DUP1"
    },
    "10012": {
      "op": "REVERT"
    },
    "10013": {
      "op": "JUMPDEST"
    },
    "10014": {
      "op": "DUP5"
    },
    "10015": {
      "op": "CALLDATALOAD"
    },
    "10016": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10025": {
      "op": "DUP1"
    },
    "10026": {
      "op": "DUP3"
    },
    "10027": {
      "op": "GT"
    },
    "10028": {
      "op": "ISZERO"
    },
    "10029": {
      "op": "PUSH2",
      "value": "0x2735"
    },
    "10032": {
      "op": "JUMPI"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10035": {
      "op": "DUP1"
    },
    "10036": {
      "op": "REVERT"
    },
    "10037": {
      "op": "JUMPDEST"
    },
    "10038": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10041": {
      "op": "DUP9"
    },
    "10042": {
      "op": "DUP4"
    },
    "10043": {
      "op": "DUP10"
    },
    "10044": {
      "op": "ADD"
    },
    "10045": {
      "op": "PUSH2",
      "value": "0x25C1"
    },
    "10048": {
      "jump": "i",
      "op": "JUMP"
    },
    "10049": {
      "op": "JUMPDEST"
    },
    "10050": {
      "op": "SWAP6"
    },
    "10051": {
      "op": "POP"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10054": {
      "op": "SWAP2"
    },
    "10055": {
      "op": "POP"
    },
    "10056": {
      "op": "DUP2"
    },
    "10057": {
      "op": "DUP8"
    },
    "10058": {
      "op": "ADD"
    },
    "10059": {
      "op": "CALLDATALOAD"
    },
    "10060": {
      "op": "DUP2"
    },
    "10061": {
      "op": "DUP2"
    },
    "10062": {
      "op": "GT"
    },
    "10063": {
      "op": "ISZERO"
    },
    "10064": {
      "op": "PUSH2",
      "value": "0x2758"
    },
    "10067": {
      "op": "JUMPI"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10070": {
      "op": "DUP1"
    },
    "10071": {
      "op": "REVERT"
    },
    "10072": {
      "op": "JUMPDEST"
    },
    "10073": {
      "op": "DUP8"
    },
    "10074": {
      "op": "ADD"
    },
    "10075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10077": {
      "op": "DUP2"
    },
    "10078": {
      "op": "ADD"
    },
    "10079": {
      "op": "DUP10"
    },
    "10080": {
      "op": "SGT"
    },
    "10081": {
      "op": "PUSH2",
      "value": "0x2769"
    },
    "10084": {
      "op": "JUMPI"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10087": {
      "op": "DUP1"
    },
    "10088": {
      "op": "REVERT"
    },
    "10089": {
      "op": "JUMPDEST"
    },
    "10090": {
      "op": "DUP1"
    },
    "10091": {
      "op": "CALLDATALOAD"
    },
    "10092": {
      "op": "PUSH2",
      "value": "0x2777"
    },
    "10095": {
      "op": "PUSH2",
      "value": "0x25E2"
    },
    "10098": {
      "op": "DUP3"
    },
    "10099": {
      "op": "PUSH2",
      "value": "0x259D"
    },
    "10102": {
      "jump": "i",
      "op": "JUMP"
    },
    "10103": {
      "op": "JUMPDEST"
    },
    "10104": {
      "op": "DUP2"
    },
    "10105": {
      "op": "DUP2"
    },
    "10106": {
      "op": "MSTORE"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10109": {
      "op": "SWAP2"
    },
    "10110": {
      "op": "SWAP1"
    },
    "10111": {
      "op": "SWAP2"
    },
    "10112": {
      "op": "SHL"
    },
    "10113": {
      "op": "DUP3"
    },
    "10114": {
      "op": "ADD"
    },
    "10115": {
      "op": "DUP5"
    },
    "10116": {
      "op": "ADD"
    },
    "10117": {
      "op": "SWAP1"
    },
    "10118": {
      "op": "DUP5"
    },
    "10119": {
      "op": "DUP2"
    },
    "10120": {
      "op": "ADD"
    },
    "10121": {
      "op": "SWAP1"
    },
    "10122": {
      "op": "DUP12"
    },
    "10123": {
      "op": "DUP4"
    },
    "10124": {
      "op": "GT"
    },
    "10125": {
      "op": "ISZERO"
    },
    "10126": {
      "op": "PUSH2",
      "value": "0x2796"
    },
    "10129": {
      "op": "JUMPI"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10132": {
      "op": "DUP1"
    },
    "10133": {
      "op": "REVERT"
    },
    "10134": {
      "op": "JUMPDEST"
    },
    "10135": {
      "op": "SWAP3"
    },
    "10136": {
      "op": "DUP6"
    },
    "10137": {
      "op": "ADD"
    },
    "10138": {
      "op": "SWAP3"
    },
    "10139": {
      "op": "JUMPDEST"
    },
    "10140": {
      "op": "DUP3"
    },
    "10141": {
      "op": "DUP5"
    },
    "10142": {
      "op": "LT"
    },
    "10143": {
      "op": "ISZERO"
    },
    "10144": {
      "op": "PUSH2",
      "value": "0x27B4"
    },
    "10147": {
      "op": "JUMPI"
    },
    "10148": {
      "op": "DUP4"
    },
    "10149": {
      "op": "CALLDATALOAD"
    },
    "10150": {
      "op": "DUP3"
    },
    "10151": {
      "op": "MSTORE"
    },
    "10152": {
      "op": "SWAP3"
    },
    "10153": {
      "op": "DUP6"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "SWAP3"
    },
    "10156": {
      "op": "SWAP1"
    },
    "10157": {
      "op": "DUP6"
    },
    "10158": {
      "op": "ADD"
    },
    "10159": {
      "op": "SWAP1"
    },
    "10160": {
      "op": "PUSH2",
      "value": "0x279B"
    },
    "10163": {
      "op": "JUMP"
    },
    "10164": {
      "op": "JUMPDEST"
    },
    "10165": {
      "op": "SWAP8"
    },
    "10166": {
      "op": "POP"
    },
    "10167": {
      "op": "POP"
    },
    "10168": {
      "op": "POP"
    },
    "10169": {
      "op": "POP"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10172": {
      "op": "DUP8"
    },
    "10173": {
      "op": "ADD"
    },
    "10174": {
      "op": "CALLDATALOAD"
    },
    "10175": {
      "op": "SWAP4"
    },
    "10176": {
      "op": "POP"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10179": {
      "op": "DUP8"
    },
    "10180": {
      "op": "ADD"
    },
    "10181": {
      "op": "CALLDATALOAD"
    },
    "10182": {
      "op": "SWAP2"
    },
    "10183": {
      "op": "POP"
    },
    "10184": {
      "op": "DUP1"
    },
    "10185": {
      "op": "DUP3"
    },
    "10186": {
      "op": "GT"
    },
    "10187": {
      "op": "ISZERO"
    },
    "10188": {
      "op": "PUSH2",
      "value": "0x27D4"
    },
    "10191": {
      "op": "JUMPI"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10194": {
      "op": "DUP1"
    },
    "10195": {
      "op": "REVERT"
    },
    "10196": {
      "op": "JUMPDEST"
    },
    "10197": {
      "op": "POP"
    },
    "10198": {
      "op": "PUSH2",
      "value": "0x27E1"
    },
    "10201": {
      "op": "DUP8"
    },
    "10202": {
      "op": "DUP3"
    },
    "10203": {
      "op": "DUP9"
    },
    "10204": {
      "op": "ADD"
    },
    "10205": {
      "op": "PUSH2",
      "value": "0x25C1"
    },
    "10208": {
      "jump": "i",
      "op": "JUMP"
    },
    "10209": {
      "op": "JUMPDEST"
    },
    "10210": {
      "op": "SWAP2"
    },
    "10211": {
      "op": "POP"
    },
    "10212": {
      "op": "POP"
    },
    "10213": {
      "op": "SWAP3"
    },
    "10214": {
      "op": "SWAP6"
    },
    "10215": {
      "op": "SWAP2"
    },
    "10216": {
      "op": "SWAP5"
    },
    "10217": {
      "op": "POP"
    },
    "10218": {
      "op": "SWAP3"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "jump": "o",
      "op": "JUMP"
    },
    "10221": {
      "op": "JUMPDEST"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10224": {
      "op": "DUP1"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10227": {
      "op": "DUP4"
    },
    "10228": {
      "op": "DUP6"
    },
    "10229": {
      "op": "SUB"
    },
    "10230": {
      "op": "SLT"
    },
    "10231": {
      "op": "ISZERO"
    },
    "10232": {
      "op": "PUSH2",
      "value": "0x2800"
    },
    "10235": {
      "op": "JUMPI"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10238": {
      "op": "DUP1"
    },
    "10239": {
      "op": "REVERT"
    },
    "10240": {
      "op": "JUMPDEST"
    },
    "10241": {
      "op": "DUP3"
    },
    "10242": {
      "op": "CALLDATALOAD"
    },
    "10243": {
      "op": "PUSH2",
      "value": "0x280B"
    },
    "10246": {
      "op": "DUP2"
    },
    "10247": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "10250": {
      "jump": "i",
      "op": "JUMP"
    },
    "10251": {
      "op": "JUMPDEST"
    },
    "10252": {
      "op": "SWAP2"
    },
    "10253": {
      "op": "POP"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10256": {
      "op": "DUP4"
    },
    "10257": {
      "op": "ADD"
    },
    "10258": {
      "op": "CALLDATALOAD"
    },
    "10259": {
      "op": "PUSH2",
      "value": "0x26C7"
    },
    "10262": {
      "op": "DUP2"
    },
    "10263": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "10266": {
      "jump": "i",
      "op": "JUMP"
    },
    "10267": {
      "op": "JUMPDEST"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10270": {
      "op": "DUP2"
    },
    "10271": {
      "op": "DUP2"
    },
    "10272": {
      "op": "SHR"
    },
    "10273": {
      "op": "SWAP1"
    },
    "10274": {
      "op": "DUP3"
    },
    "10275": {
      "op": "AND"
    },
    "10276": {
      "op": "DUP1"
    },
    "10277": {
      "op": "PUSH2",
      "value": "0x282F"
    },
    "10280": {
      "op": "JUMPI"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10283": {
      "op": "DUP3"
    },
    "10284": {
      "op": "AND"
    },
    "10285": {
      "op": "SWAP2"
    },
    "10286": {
      "op": "POP"
    },
    "10287": {
      "op": "JUMPDEST"
    },
    "10288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10290": {
      "op": "DUP3"
    },
    "10291": {
      "op": "LT"
    },
    "10292": {
      "op": "DUP2"
    },
    "10293": {
      "op": "SUB"
    },
    "10294": {
      "op": "PUSH2",
      "value": "0x284F"
    },
    "10297": {
      "op": "JUMPI"
    },
    "10298": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10305": {
      "op": "SHL"
    },
    "10306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10308": {
      "op": "MSTORE"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10311": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10313": {
      "op": "MSTORE"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10318": {
      "op": "REVERT"
    },
    "10319": {
      "op": "JUMPDEST"
    },
    "10320": {
      "op": "POP"
    },
    "10321": {
      "op": "SWAP2"
    },
    "10322": {
      "op": "SWAP1"
    },
    "10323": {
      "op": "POP"
    },
    "10324": {
      "jump": "o",
      "op": "JUMP"
    },
    "10325": {
      "op": "JUMPDEST"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10328": {
      "op": "DUP3"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10331": {
      "op": "DUP4"
    },
    "10332": {
      "op": "ADD"
    },
    "10333": {
      "op": "SLT"
    },
    "10334": {
      "op": "PUSH2",
      "value": "0x2866"
    },
    "10337": {
      "op": "JUMPI"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10340": {
      "op": "DUP1"
    },
    "10341": {
      "op": "REVERT"
    },
    "10342": {
      "op": "JUMPDEST"
    },
    "10343": {
      "op": "DUP2"
    },
    "10344": {
      "op": "MLOAD"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10347": {
      "op": "PUSH2",
      "value": "0x2876"
    },
    "10350": {
      "op": "PUSH2",
      "value": "0x25E2"
    },
    "10353": {
      "op": "DUP4"
    },
    "10354": {
      "op": "PUSH2",
      "value": "0x259D"
    },
    "10357": {
      "jump": "i",
      "op": "JUMP"
    },
    "10358": {
      "op": "JUMPDEST"
    },
    "10359": {
      "op": "DUP1"
    },
    "10360": {
      "op": "DUP4"
    },
    "10361": {
      "op": "DUP3"
    },
    "10362": {
      "op": "MSTORE"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10365": {
      "op": "DUP3"
    },
    "10366": {
      "op": "ADD"
    },
    "10367": {
      "op": "SWAP2"
    },
    "10368": {
      "op": "POP"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10371": {
      "op": "DUP5"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10374": {
      "op": "SHL"
    },
    "10375": {
      "op": "DUP8"
    },
    "10376": {
      "op": "ADD"
    },
    "10377": {
      "op": "ADD"
    },
    "10378": {
      "op": "SWAP4"
    },
    "10379": {
      "op": "POP"
    },
    "10380": {
      "op": "DUP7"
    },
    "10381": {
      "op": "DUP5"
    },
    "10382": {
      "op": "GT"
    },
    "10383": {
      "op": "ISZERO"
    },
    "10384": {
      "op": "PUSH2",
      "value": "0x2898"
    },
    "10387": {
      "op": "JUMPI"
    },
    "10388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10390": {
      "op": "DUP1"
    },
    "10391": {
      "op": "REVERT"
    },
    "10392": {
      "op": "JUMPDEST"
    },
    "10393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10395": {
      "op": "DUP7"
    },
    "10396": {
      "op": "ADD"
    },
    "10397": {
      "op": "JUMPDEST"
    },
    "10398": {
      "op": "DUP5"
    },
    "10399": {
      "op": "DUP2"
    },
    "10400": {
      "op": "LT"
    },
    "10401": {
      "op": "ISZERO"
    },
    "10402": {
      "op": "PUSH2",
      "value": "0x262E"
    },
    "10405": {
      "op": "JUMPI"
    },
    "10406": {
      "op": "DUP1"
    },
    "10407": {
      "op": "MLOAD"
    },
    "10408": {
      "op": "PUSH2",
      "value": "0x28B0"
    },
    "10411": {
      "op": "DUP2"
    },
    "10412": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "10415": {
      "jump": "i",
      "op": "JUMP"
    },
    "10416": {
      "op": "JUMPDEST"
    },
    "10417": {
      "op": "DUP4"
    },
    "10418": {
      "op": "MSTORE"
    },
    "10419": {
      "op": "SWAP2"
    },
    "10420": {
      "op": "DUP4"
    },
    "10421": {
      "op": "ADD"
    },
    "10422": {
      "op": "SWAP2"
    },
    "10423": {
      "op": "DUP4"
    },
    "10424": {
      "op": "ADD"
    },
    "10425": {
      "op": "PUSH2",
      "value": "0x289D"
    },
    "10428": {
      "op": "JUMP"
    },
    "10429": {
      "op": "JUMPDEST"
    },
    "10430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10432": {
      "op": "DUP1"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10435": {
      "op": "DUP1"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10438": {
      "op": "DUP6"
    },
    "10439": {
      "op": "DUP8"
    },
    "10440": {
      "op": "SUB"
    },
    "10441": {
      "op": "SLT"
    },
    "10442": {
      "op": "ISZERO"
    },
    "10443": {
      "op": "PUSH2",
      "value": "0x28D3"
    },
    "10446": {
      "op": "JUMPI"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10449": {
      "op": "DUP1"
    },
    "10450": {
      "op": "REVERT"
    },
    "10451": {
      "op": "JUMPDEST"
    },
    "10452": {
      "op": "DUP5"
    },
    "10453": {
      "op": "MLOAD"
    },
    "10454": {
      "op": "SWAP4"
    },
    "10455": {
      "op": "POP"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10458": {
      "op": "DUP6"
    },
    "10459": {
      "op": "ADD"
    },
    "10460": {
      "op": "MLOAD"
    },
    "10461": {
      "op": "SWAP3"
    },
    "10462": {
      "op": "POP"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10465": {
      "op": "DUP6"
    },
    "10466": {
      "op": "ADD"
    },
    "10467": {
      "op": "MLOAD"
    },
    "10468": {
      "op": "SWAP2"
    },
    "10469": {
      "op": "POP"
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10472": {
      "op": "DUP6"
    },
    "10473": {
      "op": "ADD"
    },
    "10474": {
      "op": "MLOAD"
    },
    "10475": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10484": {
      "op": "DUP2"
    },
    "10485": {
      "op": "GT"
    },
    "10486": {
      "op": "ISZERO"
    },
    "10487": {
      "op": "PUSH2",
      "value": "0x28FF"
    },
    "10490": {
      "op": "JUMPI"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10493": {
      "op": "DUP1"
    },
    "10494": {
      "op": "REVERT"
    },
    "10495": {
      "op": "JUMPDEST"
    },
    "10496": {
      "op": "PUSH2",
      "value": "0x27E1"
    },
    "10499": {
      "op": "DUP8"
    },
    "10500": {
      "op": "DUP3"
    },
    "10501": {
      "op": "DUP9"
    },
    "10502": {
      "op": "ADD"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x2855"
    },
    "10506": {
      "jump": "i",
      "op": "JUMP"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10512": {
      "op": "DUP3"
    },
    "10513": {
      "op": "DUP5"
    },
    "10514": {
      "op": "SUB"
    },
    "10515": {
      "op": "SLT"
    },
    "10516": {
      "op": "ISZERO"
    },
    "10517": {
      "op": "PUSH2",
      "value": "0x291D"
    },
    "10520": {
      "op": "JUMPI"
    },
    "10521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10523": {
      "op": "DUP1"
    },
    "10524": {
      "op": "REVERT"
    },
    "10525": {
      "op": "JUMPDEST"
    },
    "10526": {
      "op": "DUP2"
    },
    "10527": {
      "op": "MLOAD"
    },
    "10528": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10537": {
      "op": "DUP2"
    },
    "10538": {
      "op": "GT"
    },
    "10539": {
      "op": "ISZERO"
    },
    "10540": {
      "op": "PUSH2",
      "value": "0x2934"
    },
    "10543": {
      "op": "JUMPI"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10546": {
      "op": "DUP1"
    },
    "10547": {
      "op": "REVERT"
    },
    "10548": {
      "op": "JUMPDEST"
    },
    "10549": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10552": {
      "op": "DUP5"
    },
    "10553": {
      "op": "DUP3"
    },
    "10554": {
      "op": "DUP6"
    },
    "10555": {
      "op": "ADD"
    },
    "10556": {
      "op": "PUSH2",
      "value": "0x2855"
    },
    "10559": {
      "jump": "i",
      "op": "JUMP"
    },
    "10560": {
      "op": "JUMPDEST"
    },
    "10561": {
      "op": "SWAP5"
    },
    "10562": {
      "op": "SWAP4"
    },
    "10563": {
      "op": "POP"
    },
    "10564": {
      "op": "POP"
    },
    "10565": {
      "op": "POP"
    },
    "10566": {
      "op": "POP"
    },
    "10567": {
      "jump": "o",
      "op": "JUMP"
    },
    "10568": {
      "op": "JUMPDEST"
    },
    "10569": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10574": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10576": {
      "op": "SHL"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10579": {
      "op": "MSTORE"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10584": {
      "op": "MSTORE"
    },
    "10585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10589": {
      "op": "REVERT"
    },
    "10590": {
      "op": "JUMPDEST"
    },
    "10591": {
      "op": "DUP3"
    },
    "10592": {
      "op": "DUP2"
    },
    "10593": {
      "op": "MSTORE"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10598": {
      "op": "DUP3"
    },
    "10599": {
      "op": "ADD"
    },
    "10600": {
      "op": "MSTORE"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10603": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10608": {
      "op": "DUP4"
    },
    "10609": {
      "op": "ADD"
    },
    "10610": {
      "op": "DUP5"
    },
    "10611": {
      "op": "PUSH2",
      "value": "0x239D"
    },
    "10614": {
      "jump": "i",
      "op": "JUMP"
    },
    "10615": {
      "op": "JUMPDEST"
    },
    "10616": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10623": {
      "op": "SHL"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10626": {
      "op": "MSTORE"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10631": {
      "op": "MSTORE"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10636": {
      "op": "REVERT"
    },
    "10637": {
      "op": "JUMPDEST"
    },
    "10638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10642": {
      "op": "DUP3"
    },
    "10643": {
      "op": "ADD"
    },
    "10644": {
      "op": "PUSH2",
      "value": "0x299F"
    },
    "10647": {
      "op": "JUMPI"
    },
    "10648": {
      "op": "PUSH2",
      "value": "0x299F"
    },
    "10651": {
      "op": "PUSH2",
      "value": "0x2977"
    },
    "10654": {
      "jump": "i",
      "op": "JUMP"
    },
    "10655": {
      "op": "JUMPDEST"
    },
    "10656": {
      "op": "POP"
    },
    "10657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10659": {
      "op": "ADD"
    },
    "10660": {
      "op": "SWAP1"
    },
    "10661": {
      "jump": "o",
      "op": "JUMP"
    },
    "10662": {
      "op": "JUMPDEST"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10667": {
      "op": "DUP3"
    },
    "10668": {
      "op": "DUP5"
    },
    "10669": {
      "op": "SUB"
    },
    "10670": {
      "op": "SLT"
    },
    "10671": {
      "op": "ISZERO"
    },
    "10672": {
      "op": "PUSH2",
      "value": "0x29B8"
    },
    "10675": {
      "op": "JUMPI"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10678": {
      "op": "DUP1"
    },
    "10679": {
      "op": "REVERT"
    },
    "10680": {
      "op": "JUMPDEST"
    },
    "10681": {
      "op": "POP"
    },
    "10682": {
      "op": "MLOAD"
    },
    "10683": {
      "op": "SWAP2"
    },
    "10684": {
      "op": "SWAP1"
    },
    "10685": {
      "op": "POP"
    },
    "10686": {
      "jump": "o",
      "op": "JUMP"
    },
    "10687": {
      "op": "JUMPDEST"
    },
    "10688": {
      "op": "DUP1"
    },
    "10689": {
      "op": "DUP3"
    },
    "10690": {
      "op": "ADD"
    },
    "10691": {
      "op": "DUP1"
    },
    "10692": {
      "op": "DUP3"
    },
    "10693": {
      "op": "GT"
    },
    "10694": {
      "op": "ISZERO"
    },
    "10695": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "10698": {
      "op": "JUMPI"
    },
    "10699": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "10702": {
      "op": "PUSH2",
      "value": "0x2977"
    },
    "10705": {
      "jump": "i",
      "op": "JUMP"
    },
    "10706": {
      "op": "JUMPDEST"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10709": {
      "op": "DUP1"
    },
    "10710": {
      "op": "DUP3"
    },
    "10711": {
      "op": "MSTORE"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10714": {
      "op": "SWAP1"
    },
    "10715": {
      "op": "DUP3"
    },
    "10716": {
      "op": "ADD"
    },
    "10717": {
      "op": "MSTORE"
    },
    "10718": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "10751": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10753": {
      "op": "DUP3"
    },
    "10754": {
      "op": "ADD"
    },
    "10755": {
      "op": "MSTORE"
    },
    "10756": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "10763": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10765": {
      "op": "SHL"
    },
    "10766": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10768": {
      "op": "DUP3"
    },
    "10769": {
      "op": "ADD"
    },
    "10770": {
      "op": "MSTORE"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10773": {
      "op": "ADD"
    },
    "10774": {
      "op": "SWAP1"
    },
    "10775": {
      "jump": "o",
      "op": "JUMP"
    },
    "10776": {
      "op": "JUMPDEST"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10779": {
      "op": "DUP3"
    },
    "10780": {
      "op": "PUSH2",
      "value": "0x2A35"
    },
    "10783": {
      "op": "JUMPI"
    },
    "10784": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10791": {
      "op": "SHL"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10794": {
      "op": "MSTORE"
    },
    "10795": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10799": {
      "op": "MSTORE"
    },
    "10800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10804": {
      "op": "REVERT"
    },
    "10805": {
      "op": "JUMPDEST"
    },
    "10806": {
      "op": "POP"
    },
    "10807": {
      "op": "DIV"
    },
    "10808": {
      "op": "SWAP1"
    },
    "10809": {
      "jump": "o",
      "op": "JUMP"
    },
    "10810": {
      "op": "JUMPDEST"
    },
    "10811": {
      "op": "DUP2"
    },
    "10812": {
      "op": "DUP2"
    },
    "10813": {
      "op": "SUB"
    },
    "10814": {
      "op": "DUP2"
    },
    "10815": {
      "op": "DUP2"
    },
    "10816": {
      "op": "GT"
    },
    "10817": {
      "op": "ISZERO"
    },
    "10818": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "10821": {
      "op": "JUMPI"
    },
    "10822": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "10825": {
      "op": "PUSH2",
      "value": "0x2977"
    },
    "10828": {
      "jump": "i",
      "op": "JUMP"
    },
    "10829": {
      "op": "JUMPDEST"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10832": {
      "op": "DUP1"
    },
    "10833": {
      "op": "DUP3"
    },
    "10834": {
      "op": "MSTORE"
    },
    "10835": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10837": {
      "op": "SWAP1"
    },
    "10838": {
      "op": "DUP3"
    },
    "10839": {
      "op": "ADD"
    },
    "10840": {
      "op": "MSTORE"
    },
    "10841": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10876": {
      "op": "DUP3"
    },
    "10877": {
      "op": "ADD"
    },
    "10878": {
      "op": "MSTORE"
    },
    "10879": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10883": {
      "op": "SHL"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10886": {
      "op": "DUP3"
    },
    "10887": {
      "op": "ADD"
    },
    "10888": {
      "op": "MSTORE"
    },
    "10889": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10891": {
      "op": "ADD"
    },
    "10892": {
      "op": "SWAP1"
    },
    "10893": {
      "jump": "o",
      "op": "JUMP"
    },
    "10894": {
      "op": "JUMPDEST"
    },
    "10895": {
      "op": "DUP1"
    },
    "10896": {
      "op": "DUP3"
    },
    "10897": {
      "op": "MUL"
    },
    "10898": {
      "op": "DUP2"
    },
    "10899": {
      "op": "ISZERO"
    },
    "10900": {
      "op": "DUP3"
    },
    "10901": {
      "op": "DUP3"
    },
    "10902": {
      "op": "DIV"
    },
    "10903": {
      "op": "DUP5"
    },
    "10904": {
      "op": "EQ"
    },
    "10905": {
      "op": "OR"
    },
    "10906": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "10909": {
      "op": "JUMPI"
    },
    "10910": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "10913": {
      "op": "PUSH2",
      "value": "0x2977"
    },
    "10916": {
      "jump": "i",
      "op": "JUMP"
    },
    "10917": {
      "op": "JUMPDEST"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10922": {
      "op": "DUP3"
    },
    "10923": {
      "op": "DUP5"
    },
    "10924": {
      "op": "SUB"
    },
    "10925": {
      "op": "SLT"
    },
    "10926": {
      "op": "ISZERO"
    },
    "10927": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10930": {
      "op": "JUMPI"
    },
    "10931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10933": {
      "op": "DUP1"
    },
    "10934": {
      "op": "REVERT"
    },
    "10935": {
      "op": "JUMPDEST"
    },
    "10936": {
      "op": "DUP2"
    },
    "10937": {
      "op": "MLOAD"
    },
    "10938": {
      "op": "DUP1"
    },
    "10939": {
      "op": "ISZERO"
    },
    "10940": {
      "op": "ISZERO"
    },
    "10941": {
      "op": "DUP2"
    },
    "10942": {
      "op": "EQ"
    },
    "10943": {
      "op": "PUSH2",
      "value": "0x254F"
    },
    "10946": {
      "op": "JUMPI"
    },
    "10947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10949": {
      "op": "DUP1"
    },
    "10950": {
      "op": "REVERT"
    },
    "10951": {
      "op": "JUMPDEST"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10954": {
      "op": "DUP1"
    },
    "10955": {
      "op": "DUP3"
    },
    "10956": {
      "op": "MSTORE"
    },
    "10957": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10959": {
      "op": "SWAP1"
    },
    "10960": {
      "op": "DUP3"
    },
    "10961": {
      "op": "ADD"
    },
    "10962": {
      "op": "MSTORE"
    },
    "10963": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "10996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10998": {
      "op": "DUP3"
    },
    "10999": {
      "op": "ADD"
    },
    "11000": {
      "op": "MSTORE"
    },
    "11001": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11015": {
      "op": "SHL"
    },
    "11016": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11018": {
      "op": "DUP3"
    },
    "11019": {
      "op": "ADD"
    },
    "11020": {
      "op": "MSTORE"
    },
    "11021": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11023": {
      "op": "ADD"
    },
    "11024": {
      "op": "SWAP1"
    },
    "11025": {
      "jump": "o",
      "op": "JUMP"
    },
    "11026": {
      "op": "JUMPDEST"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11029": {
      "op": "DUP3"
    },
    "11030": {
      "op": "GT"
    },
    "11031": {
      "op": "ISZERO"
    },
    "11032": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "11035": {
      "op": "JUMPI"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11038": {
      "op": "DUP2"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11041": {
      "op": "MSTORE"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11046": {
      "op": "KECCAK256"
    },
    "11047": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11049": {
      "op": "DUP6"
    },
    "11050": {
      "op": "ADD"
    },
    "11051": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11053": {
      "op": "SHR"
    },
    "11054": {
      "op": "DUP2"
    },
    "11055": {
      "op": "ADD"
    },
    "11056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11058": {
      "op": "DUP7"
    },
    "11059": {
      "op": "LT"
    },
    "11060": {
      "op": "ISZERO"
    },
    "11061": {
      "op": "PUSH2",
      "value": "0x2B3B"
    },
    "11064": {
      "op": "JUMPI"
    },
    "11065": {
      "op": "POP"
    },
    "11066": {
      "op": "DUP1"
    },
    "11067": {
      "op": "JUMPDEST"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11070": {
      "op": "DUP6"
    },
    "11071": {
      "op": "ADD"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11074": {
      "op": "SHR"
    },
    "11075": {
      "op": "DUP3"
    },
    "11076": {
      "op": "ADD"
    },
    "11077": {
      "op": "SWAP2"
    },
    "11078": {
      "op": "POP"
    },
    "11079": {
      "op": "JUMPDEST"
    },
    "11080": {
      "op": "DUP2"
    },
    "11081": {
      "op": "DUP2"
    },
    "11082": {
      "op": "LT"
    },
    "11083": {
      "op": "ISZERO"
    },
    "11084": {
      "op": "PUSH2",
      "value": "0x2B5A"
    },
    "11087": {
      "op": "JUMPI"
    },
    "11088": {
      "op": "DUP3"
    },
    "11089": {
      "op": "DUP2"
    },
    "11090": {
      "op": "SSTORE"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11093": {
      "op": "ADD"
    },
    "11094": {
      "op": "PUSH2",
      "value": "0x2B47"
    },
    "11097": {
      "op": "JUMP"
    },
    "11098": {
      "op": "JUMPDEST"
    },
    "11099": {
      "op": "POP"
    },
    "11100": {
      "op": "POP"
    },
    "11101": {
      "op": "POP"
    },
    "11102": {
      "op": "POP"
    },
    "11103": {
      "op": "POP"
    },
    "11104": {
      "op": "POP"
    },
    "11105": {
      "jump": "o",
      "op": "JUMP"
    },
    "11106": {
      "op": "JUMPDEST"
    },
    "11107": {
      "op": "DUP2"
    },
    "11108": {
      "op": "MLOAD"
    },
    "11109": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11118": {
      "op": "DUP2"
    },
    "11119": {
      "op": "GT"
    },
    "11120": {
      "op": "ISZERO"
    },
    "11121": {
      "op": "PUSH2",
      "value": "0x2B7C"
    },
    "11124": {
      "op": "JUMPI"
    },
    "11125": {
      "op": "PUSH2",
      "value": "0x2B7C"
    },
    "11128": {
      "op": "PUSH2",
      "value": "0x2556"
    },
    "11131": {
      "jump": "i",
      "op": "JUMP"
    },
    "11132": {
      "op": "JUMPDEST"
    },
    "11133": {
      "op": "PUSH2",
      "value": "0x2B90"
    },
    "11136": {
      "op": "DUP2"
    },
    "11137": {
      "op": "PUSH2",
      "value": "0x2B8A"
    },
    "11140": {
      "op": "DUP5"
    },
    "11141": {
      "op": "SLOAD"
    },
    "11142": {
      "op": "PUSH2",
      "value": "0x281B"
    },
    "11145": {
      "jump": "i",
      "op": "JUMP"
    },
    "11146": {
      "op": "JUMPDEST"
    },
    "11147": {
      "op": "DUP5"
    },
    "11148": {
      "op": "PUSH2",
      "value": "0x2B12"
    },
    "11151": {
      "jump": "i",
      "op": "JUMP"
    },
    "11152": {
      "op": "JUMPDEST"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11155": {
      "op": "DUP1"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11158": {
      "op": "DUP4"
    },
    "11159": {
      "op": "GT"
    },
    "11160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11162": {
      "op": "DUP2"
    },
    "11163": {
      "op": "EQ"
    },
    "11164": {
      "op": "PUSH2",
      "value": "0x2BC5"
    },
    "11167": {
      "op": "JUMPI"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11170": {
      "op": "DUP5"
    },
    "11171": {
      "op": "ISZERO"
    },
    "11172": {
      "op": "PUSH2",
      "value": "0x2BAD"
    },
    "11175": {
      "op": "JUMPI"
    },
    "11176": {
      "op": "POP"
    },
    "11177": {
      "op": "DUP6"
    },
    "11178": {
      "op": "DUP4"
    },
    "11179": {
      "op": "ADD"
    },
    "11180": {
      "op": "MLOAD"
    },
    "11181": {
      "op": "JUMPDEST"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11184": {
      "op": "NOT"
    },
    "11185": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11187": {
      "op": "DUP7"
    },
    "11188": {
      "op": "SWAP1"
    },
    "11189": {
      "op": "SHL"
    },
    "11190": {
      "op": "SHR"
    },
    "11191": {
      "op": "NOT"
    },
    "11192": {
      "op": "AND"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11195": {
      "op": "DUP6"
    },
    "11196": {
      "op": "SWAP1"
    },
    "11197": {
      "op": "SHL"
    },
    "11198": {
      "op": "OR"
    },
    "11199": {
      "op": "DUP6"
    },
    "11200": {
      "op": "SSTORE"
    },
    "11201": {
      "op": "PUSH2",
      "value": "0x2B5A"
    },
    "11204": {
      "op": "JUMP"
    },
    "11205": {
      "op": "JUMPDEST"
    },
    "11206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11208": {
      "op": "DUP6"
    },
    "11209": {
      "op": "DUP2"
    },
    "11210": {
      "op": "MSTORE"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11213": {
      "op": "DUP2"
    },
    "11214": {
      "op": "KECCAK256"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11217": {
      "op": "NOT"
    },
    "11218": {
      "op": "DUP7"
    },
    "11219": {
      "op": "AND"
    },
    "11220": {
      "op": "SWAP2"
    },
    "11221": {
      "op": "JUMPDEST"
    },
    "11222": {
      "op": "DUP3"
    },
    "11223": {
      "op": "DUP2"
    },
    "11224": {
      "op": "LT"
    },
    "11225": {
      "op": "ISZERO"
    },
    "11226": {
      "op": "PUSH2",
      "value": "0x2BF4"
    },
    "11229": {
      "op": "JUMPI"
    },
    "11230": {
      "op": "DUP9"
    },
    "11231": {
      "op": "DUP7"
    },
    "11232": {
      "op": "ADD"
    },
    "11233": {
      "op": "MLOAD"
    },
    "11234": {
      "op": "DUP3"
    },
    "11235": {
      "op": "SSTORE"
    },
    "11236": {
      "op": "SWAP5"
    },
    "11237": {
      "op": "DUP5"
    },
    "11238": {
      "op": "ADD"
    },
    "11239": {
      "op": "SWAP5"
    },
    "11240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11242": {
      "op": "SWAP1"
    },
    "11243": {
      "op": "SWAP2"
    },
    "11244": {
      "op": "ADD"
    },
    "11245": {
      "op": "SWAP1"
    },
    "11246": {
      "op": "DUP5"
    },
    "11247": {
      "op": "ADD"
    },
    "11248": {
      "op": "PUSH2",
      "value": "0x2BD5"
    },
    "11251": {
      "op": "JUMP"
    },
    "11252": {
      "op": "JUMPDEST"
    },
    "11253": {
      "op": "POP"
    },
    "11254": {
      "op": "DUP6"
    },
    "11255": {
      "op": "DUP3"
    },
    "11256": {
      "op": "LT"
    },
    "11257": {
      "op": "ISZERO"
    },
    "11258": {
      "op": "PUSH2",
      "value": "0x2C12"
    },
    "11261": {
      "op": "JUMPI"
    },
    "11262": {
      "op": "DUP8"
    },
    "11263": {
      "op": "DUP6"
    },
    "11264": {
      "op": "ADD"
    },
    "11265": {
      "op": "MLOAD"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11268": {
      "op": "NOT"
    },
    "11269": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11271": {
      "op": "DUP9"
    },
    "11272": {
      "op": "SWAP1"
    },
    "11273": {
      "op": "SHL"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11276": {
      "op": "AND"
    },
    "11277": {
      "op": "SHR"
    },
    "11278": {
      "op": "NOT"
    },
    "11279": {
      "op": "AND"
    },
    "11280": {
      "op": "DUP2"
    },
    "11281": {
      "op": "SSTORE"
    },
    "11282": {
      "op": "JUMPDEST"
    },
    "11283": {
      "op": "POP"
    },
    "11284": {
      "op": "POP"
    },
    "11285": {
      "op": "POP"
    },
    "11286": {
      "op": "POP"
    },
    "11287": {
      "op": "POP"
    },
    "11288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11290": {
      "op": "SWAP1"
    },
    "11291": {
      "op": "DUP2"
    },
    "11292": {
      "op": "SHL"
    },
    "11293": {
      "op": "ADD"
    },
    "11294": {
      "op": "SWAP1"
    },
    "11295": {
      "op": "SSTORE"
    },
    "11296": {
      "op": "POP"
    },
    "11297": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a84bcb23730188fbdb3a9dba77945eefb05d191b",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\n/**\n * @title SmartNodes\n * @dev An ERC20 contract for managing off-chain networks\n */\ncontract SmartnodesCore is ERC20Upgradeable {\n    // Validator multi-sig address\n    ISmartnodesMultiSig private _validatorContractInstance;\n    address public validatorContractAddress;\n\n    // Counters for storage indexing / IDs\n    uint256 public validatorIdCounter;\n    uint256 public userCounter;\n    uint256 public jobCounter;\n    uint256 public activeValidators;\n    uint256 public minValidators;\n    uint256 public maxValidators;\n\n    // Events\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(\n        bytes32 indexed jobHash,\n        uint256 timestamp,\n        address[] seedValidators\n    );\n    event JobCompleted(bytes32 indexed jobId, uint256 timestamp);\n    event JobDisputed(bytes32 indexed jobId, uint256 timestamp);\n\n    // User data with key information (address, RSA key hash, reputation)\n    struct User {\n        address userAddress;\n        bytes32 publicKeyHash;\n        uint8 reputation;\n    }\n\n    // Validator data with key information (address, RSA key hash, locked value, reputation, activity)\n    struct Validator {\n        bytes32 publicKeyHash;\n        address validatorAddress;\n        uint256 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n    }\n\n    // Information for  a generic off-chain job (job hash [key for kademlia lookup], seed validators, participants, author, etc)\n    struct Job {\n        address author;\n        address[] seedValidators;\n        address[] workers;\n        uint256[] capacities;\n        bool activity;\n    }\n\n    // ERC20 token supply metrics\n    uint256 public constant MAX_SUPPLY = 21_000_000e18;\n    uint256 constant _TAIL_EMISSION = 8e18;\n\n    uint256 public halving = 2160; // number of state updates until next halving (~3 months)\n    uint256 public emissionRate = 512e18; // amount of tokens to be emitted per state update\n    uint256 public lockAmount = 50_000e18; // minimum validator locked tokens required\n    uint256 public unlockPeriod = 50400;\n    uint256 public timeSinceLastHalving;\n\n    // Main datastructure mappings via id lookup\n    mapping(bytes32 => User) public users;\n    mapping(bytes32 => address) public workers;\n    mapping(bytes32 => address) public validatorAddressByHash;\n    mapping(uint256 => Validator) public validators;\n    mapping(bytes32 => Job) public jobs;\n    uint256[] public activeJobs;\n\n    // Helpful mappings\n    mapping(address => bytes32) public userHashByAddress;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == validatorContractAddress,\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    function initialize(\n        address[] memory _leadDevelopers,\n        address _communityWallet\n    ) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n\n        // Set all counters to 1 (when looking up values, 0 = Not found)\n        userCounter = 1;\n        jobCounter = 1;\n        validatorIdCounter = 1;\n\n        // Set ERC20 token parameters\n        emissionRate = 512e18; // amount of tokens to be emitted per state update\n        lockAmount = 10_000e18; // minimum validator locked tokens required\n        halving = 8736; // Number of state updates before reward halving\n        unlockPeriod = 1_209_600; // (seconds)\n        timeSinceLastHalving = 0;\n\n        uint256 devWallets = 750_000e18; // For genesis nodes\n        uint256 communityWallet = 1_750_000e18; // 1.5M for IDO, 0.25M for community endeavours\n\n        for (uint i = 0; i < _leadDevelopers.length; i++) {\n            _mint(_leadDevelopers[i], devWallets / _leadDevelopers.length);\n        }\n\n        _mint(_communityWallet, communityWallet);\n\n        // Other parameters\n        minValidators = 1;\n        maxValidators = 5;\n    }\n\n    function setValidatorContract(address validatorAddress) external {\n        require(\n            validatorContractAddress == address(0),\n            \"Validator address already set.\"\n        );\n        _validatorContractInstance = ISmartnodesMultiSig(validatorAddress);\n        validatorContractAddress = validatorAddress;\n    }\n\n    /**\n     * @dev Create a User, limit one per address & public key hash (RSA)\n     */\n    function createUser(bytes32 _publicKeyHash) public {\n        // Only one address & public key hash per user.\n        require(\n            userHashByAddress[msg.sender] == bytes32(0),\n            \"User already registered.\"\n        );\n\n        users[_publicKeyHash] = User({\n            userAddress: msg.sender,\n            publicKeyHash: _publicKeyHash,\n            reputation: 50\n        });\n\n        userHashByAddress[msg.sender] = _publicKeyHash;\n        userCounter++;\n    }\n\n    /**\n     * @dev Create a Validator, limit one per address & public key hash (RSA), requires locking up sno\n     */\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already exists.\"\n        );\n\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n\n        // Create validator on SmartnodesCore\n        validators[validatorIdCounter] = Validator({\n            publicKeyHash: _publicKeyHash,\n            validatorAddress: msg.sender,\n            locked: lockAmount,\n            unlockTime: 0,\n            reputation: 50\n        });\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorAddressByHash[_publicKeyHash] = msg.sender;\n\n        // Lock token in contract\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorIdCounter++;\n    }\n\n    // User Job Requesting Via Chainlink VRF TODO\n    function requestJob(\n        bytes32 userHash,\n        bytes32 jobHash,\n        uint256[] calldata _capacities\n    ) external returns (uint256[] memory validatorIds) {\n        // If user directly requests a job, register if they have not already done so\n        if (msg.sender != validatorContractAddress) {\n            if (userHashByAddress[msg.sender] == bytes32(0)) {\n                createUser(userHash);\n                userHash = userHashByAddress[msg.sender];\n            }\n        }\n\n        require(userHash != bytes32(0), \"User not registered!\");\n        require(jobs[jobHash].author == address(0), \"Job already created.\");\n        // require(_capacities[0] > 0, \"Capacity must be greater zero.\");\n\n        address[] memory _seedValidators = _validatorContractInstance\n            .generateValidators(1);\n        uint256[] memory _validatorIds = new uint256[](1); // (_seedValidators.length);\n\n        for (uint256 i = 0; i < _seedValidators.length; i++) {\n            _validatorIds[i] = validatorIdByAddress[_seedValidators[i]];\n        }\n\n        // Store the job in the jobs mapping\n        jobs[jobHash] = Job({\n            author: msg.sender,\n            seedValidators: _seedValidators,\n            workers: new address[](_capacities.length),\n            capacities: _capacities,\n            activity: true\n        });\n\n        emit JobRequested(jobHash, block.timestamp, _seedValidators);\n        jobCounter++;\n\n        return _validatorIds;\n    }\n\n    function completeJob(\n        bytes32 jobHash,\n        address[] memory _workers\n    ) external onlyValidatorMultiSig returns (uint256[] memory) {\n        require(_workers.length == jobs[jobHash].capacities.length);\n\n        jobs[jobHash].workers = _workers;\n        jobs[jobHash].activity = false;\n        // jobIdByUserHash[userIdHash] = 0;\n\n        emit JobCompleted(jobHash, block.timestamp);\n\n        return jobs[jobHash].capacities;\n    }\n\n    function disputeJob(bytes32 jobHash) external onlyValidatorMultiSig {\n        Job storage job = jobs[jobHash];\n        job.activity = false;\n        emit JobDisputed(jobHash, block.timestamp);\n    }\n\n    /**\n     * @dev Internal function to lock tokens, callable from other functions\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        uint256 totalLocked = validators[validatorId].locked;\n\n        emit TokensLocked(sender, amount);\n    }\n\n    /**\n     * @dev Validator token unlocking, 30 day withdrawal period.\n     */\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            uint256 totalLocked = validator.locked - amount;\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    /**\n     * @dev Mint tokens for updating state rewards, distribute 40/60 among validators and workers\n     * Updates the emission rate and halving accordingly\n     */\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _workerCapacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted\n    ) external onlyValidatorMultiSig {\n        require(\n            totalSupply() + emissionRate <= MAX_SUPPLY,\n            \"Maximum supply reached!\"\n        );\n\n        if (timeSinceLastHalving >= halving) {\n            if (emissionRate > 1e18) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorRewardTotal = (emissionRate * 20) / 100;\n        uint256 workerRewardTotal = (emissionRate * 80) / 100;\n\n        // Distribute rewards for validators equally\n        uint256 validatorReward = validatorRewardTotal /\n            _validatorsVoted.length;\n\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(_validatorsVoted[v], validatorReward);\n        }\n\n        // Distribute rewards for workers\n        for (uint256 w = 0; w < _workers.length; w++) {\n            uint256 reward = ((_workerCapacities[w] * workerRewardTotal) /\n                _totalCapacity);\n            _mint(_workers[w], reward);\n        }\n\n        timeSinceLastHalving++;\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobValidators(\n        bytes32 jobHash\n    ) external view returns (address[] memory) {\n        address[] memory jobValidators = jobs[jobHash].seedValidators;\n        return jobValidators;\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32, address) {\n        require(_validatorId < validatorIdCounter, \"Invalid ID.\");\n        Validator memory _validator = validators[_validatorId];\n        bool isActive = _validatorContractInstance.isActiveValidator(\n            _validator.validatorAddress\n        );\n        return (\n            isActive,\n            _validator.publicKeyHash,\n            _validator.validatorAddress\n        );\n    }\n\n    function getValidatorBytes(\n        address validatorAddress\n    ) external view returns (bytes32) {\n        uint256 validatorId = validatorIdByAddress[validatorAddress];\n        require(validatorId > 0, \"Validator does not exist.\");\n\n        return validators[validatorId].publicKeyHash;\n    }\n\n    function getUserCount() external view returns (uint256) {\n        return userCounter - 1;\n    }\n\n    function getValidatorCount() external view returns (uint256) {\n        return validatorIdCounter - 1;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return _validatorContractInstance.getNumValidators();\n    }\n\n    function getEmissionRate() external view returns (uint256) {\n        return emissionRate;\n    }\n\n    function getSupply() external view returns (uint256) {\n        return this.totalSupply();\n    }\n\n    function isLocked(address validatorAddr) external view returns (bool) {\n        uint256 _id = validatorIdByAddress[validatorAddr];\n        return validators[_id].locked >= lockAmount;\n    }\n\n    function getProposees() external view returns (address[] memory) {\n        return _validatorContractInstance.getSelectedValidators();\n    }\n\n    function getState()\n        external\n        view\n        returns (uint256, uint256, uint256, address[] memory)\n    {\n        return _validatorContractInstance.getState();\n    }\n}\n",
  "sourceMap": "271:13668:26:-:0;;;2105:4;2080:29;;2203:6;2173:36;;2294:9;2266:37;;2383:5;2353:35;;271:13668;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}