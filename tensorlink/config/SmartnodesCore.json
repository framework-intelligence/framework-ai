{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "jobId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "JobDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "userHash",
          "type": "bytes32"
        }
      ],
      "name": "JobRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNLOCK_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "jobHash",
          "type": "bytes32"
        }
      ],
      "name": "completeJob",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_publicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_lockAmount",
          "type": "uint256"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveValidatorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halveStateTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halvingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_genesisNodes",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "jobHashToId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_workers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_capacities",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_totalCapacity",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_validatorsVoted",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "additionalReward",
          "type": "uint256"
        }
      ],
      "name": "mintTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "setValidatorContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "statesSinceLastHalving",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tailEmission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorContract",
      "outputs": [
        {
          "internalType": "contract ISmartnodesMultiSig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "locked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "publicKeyHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "24": "contracts/SmartnodesCore.sol",
    "28": "contracts/interfaces/ISmartnodesMultiSig.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "4": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartnodesCore.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        4604
      ],
      "ContextUpgradeable": [
        4361
      ],
      "ERC20Upgradeable": [
        3150
      ],
      "IERC20MetadataUpgradeable": [
        4319
      ],
      "IERC20Upgradeable": [
        4294
      ],
      "ISmartnodesMultiSig": [
        2406
      ],
      "Initializable": [
        3227
      ],
      "SmartnodesCore": [
        914
      ]
    },
    "id": 915,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:24"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 915,
        "sourceUnit": 3151,
        "src": "57:78:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ISmartnodesMultiSig.sol",
        "file": "./interfaces/ISmartnodesMultiSig.sol",
        "id": 139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 915,
        "sourceUnit": 2407,
        "src": "136:46:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 140,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "211:16:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3150,
              "src": "211:16:24"
            },
            "id": 141,
            "nodeType": "InheritanceSpecifier",
            "src": "211:16:24"
          }
        ],
        "canonicalName": "SmartnodesCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 914,
        "linearizedBaseContracts": [
          914,
          3150,
          4319,
          4294,
          4361,
          3227
        ],
        "name": "SmartnodesCore",
        "nameLocation": "193:14:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "99439089",
            "id": 144,
            "mutability": "mutable",
            "name": "validatorContract",
            "nameLocation": "261:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "234:44:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
              "typeString": "contract ISmartnodesMultiSig"
            },
            "typeName": {
              "id": 143,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 142,
                "name": "ISmartnodesMultiSig",
                "nameLocations": [
                  "234:19:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2406,
                "src": "234:19:24"
              },
              "referencedDeclaration": 2406,
              "src": "234:19:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                "typeString": "contract ISmartnodesMultiSig"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e47158c",
            "id": 146,
            "mutability": "mutable",
            "name": "proxyAdmin",
            "nameLocation": "299:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "284:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 145,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95b84bc2",
            "id": 149,
            "mutability": "mutable",
            "name": "tailEmission",
            "nameLocation": "331:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "316:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38653138",
              "id": 148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "346:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000000000000000000_by_1",
                "typeString": "int_const 8000000000000000000"
              },
              "value": "8e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "259a28cf",
            "id": 152,
            "mutability": "constant",
            "name": "UNLOCK_PERIOD",
            "nameLocation": "450:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "426:49:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 150,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "426:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f3230395f363030",
              "id": 151,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "466:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1209600_by_1",
                "typeString": "int_const 1209600"
              },
              "value": "1_209_600"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96afc450",
            "id": 154,
            "mutability": "mutable",
            "name": "emissionRate",
            "nameLocation": "519:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "504:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 153,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8df5dc1",
            "id": 156,
            "mutability": "mutable",
            "name": "lockAmount",
            "nameLocation": "552:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "537:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 155,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a3e251f",
            "id": 158,
            "mutability": "mutable",
            "name": "halvingPeriod",
            "nameLocation": "583:13:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "568:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 157,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "568:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ef046d",
            "id": 160,
            "mutability": "mutable",
            "name": "statesSinceLastHalving",
            "nameLocation": "617:22:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "602:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 159,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "602:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "56891412",
            "id": 162,
            "mutability": "mutable",
            "name": "totalLocked",
            "nameLocation": "660:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "645:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 161,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20d3a0b4",
            "id": 164,
            "mutability": "mutable",
            "name": "unlockPeriod",
            "nameLocation": "692:12:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "677:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 163,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "677:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Validator",
            "id": 173,
            "members": [
              {
                "constant": false,
                "id": 166,
                "mutability": "mutable",
                "name": "_address",
                "nameLocation": "746:8:24",
                "nodeType": "VariableDeclaration",
                "scope": 173,
                "src": "738:16:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 168,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "772:6:24",
                "nodeType": "VariableDeclaration",
                "scope": 173,
                "src": "764:14:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 167,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 170,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "796:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 173,
                "src": "788:18:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 169,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "788:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 172,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "824:13:24",
                "nodeType": "VariableDeclaration",
                "scope": 173,
                "src": "816:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 171,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "816:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "718:9:24",
            "nodeType": "StructDefinition",
            "scope": 914,
            "src": "711:133:24",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartnodesCore.Job",
            "id": 179,
            "members": [
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "capacities",
                "nameLocation": "881:10:24",
                "nodeType": "VariableDeclaration",
                "scope": 179,
                "src": "871:20:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 175,
                  "nodeType": "ArrayTypeName",
                  "src": "871:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 178,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "909:7:24",
                "nodeType": "VariableDeclaration",
                "scope": 179,
                "src": "901:15:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 177,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "857:3:24",
            "nodeType": "StructDefinition",
            "scope": 914,
            "src": "850:73:24",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b8d4090d",
            "id": 183,
            "mutability": "mutable",
            "name": "jobHashToId",
            "nameLocation": "964:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "929:46:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 182,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 180,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "937:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "929:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 181,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "948:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 188,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "1012:4:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "981:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$179_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
            },
            "typeName": {
              "id": 187,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 184,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "989:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "981:23:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$179_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 186,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 185,
                  "name": "Job",
                  "nameLocations": [
                    "1000:3:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 179,
                  "src": "1000:3:24"
                },
                "referencedDeclaration": 179,
                "src": "1000:3:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$179_storage_ptr",
                  "typeString": "struct SmartnodesCore.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 193,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "1059:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "1022:47:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
              "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
            },
            "typeName": {
              "id": 192,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 189,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1022:29:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
                "typeString": "mapping(uint256 => struct SmartnodesCore.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 191,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 190,
                  "name": "Validator",
                  "nameLocations": [
                    "1041:9:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 173,
                  "src": "1041:9:24"
                },
                "referencedDeclaration": 173,
                "src": "1041:9:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                  "typeString": "struct SmartnodesCore.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 197,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "1110:20:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "1075:55:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 196,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 194,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1083:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1075:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 195,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1094:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 199,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "1152:10:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "1137:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 198,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1137:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 201,
            "mutability": "mutable",
            "name": "userCounter",
            "nameLocation": "1183:11:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "1168:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1168:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab051190",
            "id": 203,
            "mutability": "mutable",
            "name": "validatorCounter",
            "nameLocation": "1215:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "1200:31:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 202,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1200:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a21bc3fb",
            "id": 205,
            "mutability": "mutable",
            "name": "availableCapacity",
            "nameLocation": "1252:17:24",
            "nodeType": "VariableDeclaration",
            "scope": 914,
            "src": "1237:32:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 204,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1237:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 211,
            "name": "TokensLocked",
            "nameLocation": "1282:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1303:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1295:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1322:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1314:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1294:35:24"
            },
            "src": "1276:54:24"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 217,
            "name": "UnlockInitiated",
            "nameLocation": "1341:15:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1373:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "1357:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "1392:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "1384:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:47:24"
            },
            "src": "1335:69:24"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 223,
            "name": "TokensUnlocked",
            "nameLocation": "1415:14:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1446:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1430:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1465:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "1457:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1429:43:24"
            },
            "src": "1409:64:24"
          },
          {
            "anonymous": false,
            "eventSelector": "1c6531f3b1dc9905436662823df97d3ce0c5b175e8a4c43f5df86f801a75853e",
            "id": 231,
            "name": "JobRequested",
            "nameLocation": "1484:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1505:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1497:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 227,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1520:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1512:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userHash",
                  "nameLocation": "1537:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "1529:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:50:24"
            },
            "src": "1478:69:24"
          },
          {
            "anonymous": false,
            "eventSelector": "45c386dc6524a2d9fe630455323c6a39f557c52ab01e886deee20a0b538147ac",
            "id": 237,
            "name": "JobCompleted",
            "nameLocation": "1558:12:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1579:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "1571:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "1594:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "1586:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1586:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1570:32:24"
            },
            "src": "1552:51:24"
          },
          {
            "anonymous": false,
            "eventSelector": "6e04aa702f9af7a9a398f10d27918152df25ac0cdc6d74321b9f7496374387a7",
            "id": 243,
            "name": "JobDisputed",
            "nameLocation": "1614:11:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "1642:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "1626:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1657:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "1649:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1625:42:24"
            },
            "src": "1608:60:24"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "1707:153:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 246,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1738:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1742:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1738:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 250,
                              "name": "validatorContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "1760:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            ],
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1752:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1752:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1752:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1738:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d7573742062652074686520536d6172746e6f6465734d756c74695369672e",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1792:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        },
                        "value": "Caller must be the SmartnodesMultiSig."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_080431ac0287412f1bb02f32a21e4cd0052ef1272a2ddb0572c9d01cd2b25f2b",
                          "typeString": "literal_string \"Caller must be the SmartnodesMultiSig.\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1717:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1717:125:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:125:24"
                },
                {
                  "id": 256,
                  "nodeType": "PlaceholderStatement",
                  "src": "1852:1:24"
                }
              ]
            },
            "id": 258,
            "name": "onlyValidatorMultiSig",
            "nameLocation": "1683:21:24",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1704:2:24"
            },
            "src": "1674:186:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "1892:96:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 261,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1910:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1914:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1910:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 263,
                          "name": "proxyAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "1924:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1910:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d757374206265207468652070726f78792061646d696e2e",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:33:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_449e7d9e0b4d413de840438a0fbffaf01b4884f2ed3bb2f1abf17f311517f6fa",
                          "typeString": "literal_string \"Caller must be the proxy admin.\""
                        },
                        "value": "Caller must be the proxy admin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_449e7d9e0b4d413de840438a0fbffaf01b4884f2ed3bb2f1abf17f311517f6fa",
                          "typeString": "literal_string \"Caller must be the proxy admin.\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1902:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:68:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:68:24"
                },
                {
                  "id": 268,
                  "nodeType": "PlaceholderStatement",
                  "src": "1980:1:24"
                }
              ]
            },
            "id": 270,
            "name": "onlyProxyAdmin",
            "nameLocation": "1875:14:24",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1889:2:24"
            },
            "src": "1866:122:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "2065:485:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "536d6172746e6f646573",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        "value": "Smartnodes"
                      },
                      {
                        "hexValue": "534e4f",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        },
                        "value": "SNO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e25d03001deac16cca872bcd057cb0bd163fe9b91cb60ce478ad4ce23cb39b80",
                          "typeString": "literal_string \"Smartnodes\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec5ac61dbc533023563f144bb1094c633ac0fd56c56ef2be9eaebe53d5fcf776",
                          "typeString": "literal_string \"SNO\""
                        }
                      ],
                      "id": 278,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2584,
                      "src": "2075:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:33:24"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 283,
                      "name": "proxyAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2118:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 284,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2131:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2135:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2131:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2118:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2118:23:24"
                },
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 288,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2151:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32303438653138",
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2166:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2048000000000000000000_by_1",
                        "typeString": "int_const 2048000000000000000000"
                      },
                      "value": "2048e18"
                    },
                    "src": "2151:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:22:24"
                },
                {
                  "expression": {
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 292,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2183:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530305f303030653138",
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2196:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                        "typeString": "int_const 500000000000000000000000"
                      },
                      "value": "500_000e18"
                    },
                    "src": "2183:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:23:24"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2216:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38373432",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2232:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8742_by_1",
                        "typeString": "int_const 8742"
                      },
                      "value": "8742"
                    },
                    "src": "2216:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:20:24"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2261:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2286:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2261:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:26:24"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "unlockPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "2297:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "315f3230395f363030",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2312:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1209600_by_1",
                        "typeString": "int_const 1209600"
                      },
                      "value": "1_209_600"
                    },
                    "src": "2297:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "2297:24:24"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 308,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2356:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2369:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2356:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "2356:14:24"
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2380:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2399:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2380:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:20:24"
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 316,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "2410:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2424:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2410:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:15:24"
                },
                {
                  "body": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "2484:60:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 332,
                                "name": "_genesisNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "2504:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 334,
                              "indexExpression": {
                                "id": 333,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 321,
                                "src": "2518:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2504:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 335,
                              "name": "lockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "2522:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 331,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2962,
                            "src": "2498:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2498:35:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "2498:35:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 324,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2453:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 325,
                        "name": "_genesisNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2457:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2471:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2457:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2453:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 339,
                  "initializationExpression": {
                    "assignments": [
                      321
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2446:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "2441:6:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 323,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2450:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2441:10:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2479:3:24",
                      "subExpression": {
                        "id": 328,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "2479:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 330,
                    "nodeType": "ExpressionStatement",
                    "src": "2479:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "2436:108:24"
                }
              ]
            },
            "functionSelector": "a224cee7",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 276,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 275,
                  "name": "initializer",
                  "nameLocations": [
                    "2053:11:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3201,
                  "src": "2053:11:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2053:11:24"
              }
            ],
            "name": "initialize",
            "nameLocation": "2003:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "_genesisNodes",
                  "nameLocation": "2031:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2014:30:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 271,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2014:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 272,
                    "nodeType": "ArrayTypeName",
                    "src": "2014:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2013:32:24"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2065:0:24"
            },
            "scope": 914,
            "src": "1994:556:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "2622:202:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 349,
                              "name": "validatorContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "2661:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                                "typeString": "contract ISmartnodesMultiSig"
                              }
                            ],
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2653:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 347,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2653:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2653:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2691:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2683:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 351,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2683:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2683:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2653:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206164647265737320616c7265616479207365742e",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2707:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        },
                        "value": "Validator address already set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4338b00af09b265c6eb6c7229be4a96c4559f7a27261c0b429b8f8b58c2a1f12",
                          "typeString": "literal_string \"Validator address already set.\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2632:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:117:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:117:24"
                },
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 359,
                      "name": "validatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "2759:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 361,
                          "name": "_validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "2799:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 360,
                        "name": "ISmartnodesMultiSig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "2779:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISmartnodesMultiSig_$2406_$",
                          "typeString": "type(contract ISmartnodesMultiSig)"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2779:38:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                        "typeString": "contract ISmartnodesMultiSig"
                      }
                    },
                    "src": "2759:58:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                      "typeString": "contract ISmartnodesMultiSig"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:58:24"
                }
              ]
            },
            "functionSelector": "cdf64a76",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValidatorContract",
            "nameLocation": "2565:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_validatorAddress",
                  "nameLocation": "2594:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2586:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:27:24"
            },
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2622:0:24"
            },
            "scope": 914,
            "src": "2556:268:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "2880:377:24",
              "statements": [
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 371,
                      "name": "tailEmission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "3035:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3051:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3035:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:17:24"
                },
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 375,
                      "name": "emissionRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "3062:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3078:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3062:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "3062:17:24"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 379,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "3089:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3106:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3089:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:18:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 383,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3170:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3188:11:24",
                      "memberName": "halvePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2380,
                      "src": "3170:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3170:31:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:31:24"
                }
              ]
            },
            "functionSelector": "eabd4bd7",
            "id": 389,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 368,
                  "name": "onlyProxyAdmin",
                  "nameLocations": [
                    "2865:14:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 270,
                  "src": "2865:14:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2865:14:24"
              }
            ],
            "name": "halveStateTime",
            "nameLocation": "2839:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2853:2:24"
            },
            "returnParameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2880:0:24"
            },
            "scope": 914,
            "src": "2830:427:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "4656:560:24",
              "statements": [
                {
                  "assignments": [
                    399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 399,
                      "mutability": "mutable",
                      "name": "jobId",
                      "nameLocation": "4674:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "4666:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 398,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4666:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 403,
                  "initialValue": {
                    "baseExpression": {
                      "id": 400,
                      "name": "jobHashToId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "4682:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 402,
                    "indexExpression": {
                      "id": 401,
                      "name": "jobHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "4694:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4682:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4666:36:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 404,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "4760:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4769:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4760:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "nodeType": "IfStatement",
                  "src": "4756:172:24",
                  "trueBody": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "4772:156:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4836:12:24",
                          "subExpression": {
                            "id": 407,
                            "name": "jobCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "4836:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "4836:12:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 411,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4880:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 412,
                              "name": "jobHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "4887:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 410,
                            "name": "JobCompleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "4867:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4867:28:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 414,
                        "nodeType": "EmitStatement",
                        "src": "4862:33:24"
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4916:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 397,
                        "id": 416,
                        "nodeType": "Return",
                        "src": "4909:8:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "4993:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "4982:14:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$179_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job"
                      },
                      "typeName": {
                        "id": 420,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 419,
                          "name": "Job",
                          "nameLocations": [
                            "4982:3:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 179,
                          "src": "4982:3:24"
                        },
                        "referencedDeclaration": 179,
                        "src": "4982:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$179_storage_ptr",
                          "typeString": "struct SmartnodesCore.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 425,
                  "initialValue": {
                    "baseExpression": {
                      "id": 422,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "4999:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$179_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                      }
                    },
                    "id": 424,
                    "indexExpression": {
                      "id": 423,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "5004:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4999:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$179_storage",
                      "typeString": "struct SmartnodesCore.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4982:28:24"
                },
                {
                  "assignments": [
                    427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 427,
                      "mutability": "mutable",
                      "name": "totalReward",
                      "nameLocation": "5028:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "5020:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5020:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 430,
                  "initialValue": {
                    "expression": {
                      "id": 428,
                      "name": "job",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "5042:3:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$179_memory_ptr",
                        "typeString": "struct SmartnodesCore.Job memory"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5046:7:24",
                    "memberName": "payment",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 178,
                    "src": "5042:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5020:33:24"
                },
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5083:18:24",
                    "subExpression": {
                      "baseExpression": {
                        "id": 431,
                        "name": "jobs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "5090:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$179_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Job storage ref)"
                        }
                      },
                      "id": 433,
                      "indexExpression": {
                        "id": 432,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5095:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5090:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$179_storage",
                        "typeString": "struct SmartnodesCore.Job storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:18:24"
                },
                {
                  "expression": {
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5111:27:24",
                    "subExpression": {
                      "baseExpression": {
                        "id": 436,
                        "name": "jobHashToId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "5118:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "id": 437,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "5130:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5118:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "5111:27:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "5166:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 443,
                        "name": "jobHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "5173:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 441,
                      "name": "JobCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "5153:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "EmitStatement",
                  "src": "5148:33:24"
                },
                {
                  "expression": {
                    "id": 446,
                    "name": "totalReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 427,
                    "src": "5198:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 397,
                  "id": 447,
                  "nodeType": "Return",
                  "src": "5191:18:24"
                }
              ]
            },
            "functionSelector": "991e0139",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 393,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "4616:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 258,
                  "src": "4616:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4616:21:24"
              }
            ],
            "name": "completeJob",
            "nameLocation": "4564:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "jobHash",
                  "nameLocation": "4593:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "4585:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4585:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4575:31:24"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "4647:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4647:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4646:9:24"
            },
            "scope": 914,
            "src": "4555:661:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "5461:1050:24",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 467,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "5475:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 468,
                      "name": "halvingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "5501:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5475:39:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 480,
                  "nodeType": "IfStatement",
                  "src": "5471:152:24",
                  "trueBody": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "5516:107:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 470,
                            "name": "emissionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "5534:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 471,
                            "name": "tailEmission",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "5549:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5534:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 478,
                        "nodeType": "IfStatement",
                        "src": "5530:83:24",
                        "trueBody": {
                          "id": 477,
                          "nodeType": "Block",
                          "src": "5563:50:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 473,
                                  "name": "emissionRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "5581:12:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5597:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "5581:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 476,
                              "nodeType": "ExpressionStatement",
                              "src": "5581:17:24"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "mutability": "mutable",
                      "name": "validatorReward",
                      "nameLocation": "5641:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 592,
                      "src": "5633:23:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 481,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5633:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 483,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5633:23:24"
                },
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "workerReward",
                      "nameLocation": "5674:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 592,
                      "src": "5666:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5666:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5666:20:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 487,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "5701:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5710:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5701:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5720:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5701:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 526,
                    "nodeType": "Block",
                    "src": "5833:164:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 502,
                            "name": "validatorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "5847:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 505,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 503,
                                          "name": "emissionRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 154,
                                          "src": "5867:12:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 504,
                                          "name": "additionalReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 462,
                                          "src": "5882:16:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5867:31:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 506,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5866:33:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3235",
                                    "id": 507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5902:2:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_25_by_1",
                                      "typeString": "int_const 25"
                                    },
                                    "value": "25"
                                  },
                                  "src": "5866:38:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5865:40:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5908:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5865:46:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5847:64:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "5847:64:24"
                      },
                      {
                        "expression": {
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 514,
                            "name": "workerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5925:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 517,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 515,
                                          "name": "emissionRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 154,
                                          "src": "5942:12:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 516,
                                          "name": "additionalReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 462,
                                          "src": "5957:16:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5942:31:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 518,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5941:33:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3735",
                                    "id": 519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5977:2:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_75_by_1",
                                      "typeString": "int_const 75"
                                    },
                                    "value": "75"
                                  },
                                  "src": "5941:38:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 521,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5940:40:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5983:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5940:46:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5925:61:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 525,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:61:24"
                      }
                    ]
                  },
                  "id": 527,
                  "nodeType": "IfStatement",
                  "src": "5697:300:24",
                  "trueBody": {
                    "id": 501,
                    "nodeType": "Block",
                    "src": "5723:104:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 491,
                            "name": "validatorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "5737:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 492,
                              "name": "emissionRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "5755:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 493,
                              "name": "additionalReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "5770:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5755:31:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5737:49:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "5737:49:24"
                      },
                      {
                        "expression": {
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 497,
                            "name": "workerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5800:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5815:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5800:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 500,
                        "nodeType": "ExpressionStatement",
                        "src": "5800:16:24"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 549,
                    "nodeType": "Block",
                    "src": "6061:140:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 540,
                                "name": "_validatorsVoted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 460,
                                "src": "6098:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 542,
                              "indexExpression": {
                                "id": 541,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 529,
                                "src": "6115:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6098:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 543,
                                "name": "validatorReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 482,
                                "src": "6135:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "expression": {
                                  "id": 544,
                                  "name": "_validatorsVoted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 460,
                                  "src": "6153:16:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6170:6:24",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6153:23:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6135:41:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 539,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2962,
                            "src": "6075:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6075:115:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 548,
                        "nodeType": "ExpressionStatement",
                        "src": "6075:115:24"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 532,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "6027:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 533,
                        "name": "_validatorsVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "6031:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6048:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6031:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6027:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 550,
                  "initializationExpression": {
                    "assignments": [
                      529
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "6020:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 550,
                        "src": "6012:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6012:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 531,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6024:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6012:13:24"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6056:3:24",
                      "subExpression": {
                        "id": 536,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "6056:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 538,
                    "nodeType": "ExpressionStatement",
                    "src": "6056:3:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "6007:194:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 551,
                        "name": "_workers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "6215:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6224:6:24",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6215:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6233:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6215:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 588,
                  "nodeType": "IfStatement",
                  "src": "6211:259:24",
                  "trueBody": {
                    "id": 587,
                    "nodeType": "Block",
                    "src": "6236:234:24",
                    "statements": [
                      {
                        "body": {
                          "id": 585,
                          "nodeType": "Block",
                          "src": "6296:164:24",
                          "statements": [
                            {
                              "assignments": [
                                567
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 567,
                                  "mutability": "mutable",
                                  "name": "reward",
                                  "nameLocation": "6322:6:24",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 585,
                                  "src": "6314:14:24",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 566,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6314:7:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 577,
                              "initialValue": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 572,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "baseExpression": {
                                              "id": 568,
                                              "name": "_capacities",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 455,
                                              "src": "6333:11:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 570,
                                            "indexExpression": {
                                              "id": 569,
                                              "name": "w",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 556,
                                              "src": "6345:1:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6333:14:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 571,
                                            "name": "workerReward",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 485,
                                            "src": "6350:12:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "6333:29:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 573,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6332:31:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 574,
                                      "name": "_totalCapacity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 457,
                                      "src": "6386:14:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6332:68:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 576,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6331:70:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6314:87:24"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 579,
                                      "name": "_workers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 452,
                                      "src": "6425:8:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 581,
                                    "indexExpression": {
                                      "id": 580,
                                      "name": "w",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 556,
                                      "src": "6434:1:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6425:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 582,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 567,
                                    "src": "6438:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 578,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2962,
                                  "src": "6419:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6419:26:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 584,
                              "nodeType": "ExpressionStatement",
                              "src": "6419:26:24"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 559,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "6270:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 560,
                              "name": "_workers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 452,
                              "src": "6274:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6283:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6274:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6270:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 586,
                        "initializationExpression": {
                          "assignments": [
                            556
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 556,
                              "mutability": "mutable",
                              "name": "w",
                              "nameLocation": "6263:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 586,
                              "src": "6255:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 555,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6255:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 558,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6267:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6255:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6291:3:24",
                            "subExpression": {
                              "id": 563,
                              "name": "w",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "6291:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 565,
                          "nodeType": "ExpressionStatement",
                          "src": "6291:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "6250:210:24"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6480:24:24",
                    "subExpression": {
                      "id": 589,
                      "name": "statesSinceLastHalving",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "6480:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6480:24:24"
                }
              ]
            },
            "functionSelector": "6e124888",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 465,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 464,
                  "name": "onlyValidatorMultiSig",
                  "nameLocations": [
                    "5439:21:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 258,
                  "src": "5439:21:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5439:21:24"
              }
            ],
            "name": "mintTokens",
            "nameLocation": "5231:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_workers",
                  "nameLocation": "5268:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "5251:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 450,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5251:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 451,
                    "nodeType": "ArrayTypeName",
                    "src": "5251:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_capacities",
                  "nameLocation": "5303:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "5286:28:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 453,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5286:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 454,
                    "nodeType": "ArrayTypeName",
                    "src": "5286:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_totalCapacity",
                  "nameLocation": "5332:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "5324:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5324:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "_validatorsVoted",
                  "nameLocation": "5373:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "5356:33:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 458,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5356:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 459,
                    "nodeType": "ArrayTypeName",
                    "src": "5356:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "additionalReward",
                  "nameLocation": "5407:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "5399:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5399:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5241:188:24"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5461:0:24"
            },
            "scope": 914,
            "src": "5222:1289:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "6660:448:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 602,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "6678:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6687:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6678:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6690:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6670:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6670:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "6670:56:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 610,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "6754:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 609,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2656,
                            "src": "6744:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6744:17:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 612,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "6765:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6744:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6773:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6736:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6736:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "6736:61:24"
                },
                {
                  "assignments": [
                    618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "6816:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 655,
                      "src": "6808:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 617,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6808:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 622,
                  "initialValue": {
                    "baseExpression": {
                      "id": 619,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "6830:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 621,
                    "indexExpression": {
                      "id": 620,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "6851:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6830:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6808:50:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 624,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "6876:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6891:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6876:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6894:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6868:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6868:54:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "6868:54:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "6946:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 634,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6962:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$914",
                              "typeString": "contract SmartnodesCore"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartnodesCore_$914",
                              "typeString": "contract SmartnodesCore"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6954:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6954:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6954:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 636,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "6969:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 630,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "6933:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6933:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "6933:43:24"
                },
                {
                  "expression": {
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 639,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "6986:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 641,
                        "indexExpression": {
                          "id": 640,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "6997:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6986:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$173_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7010:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 168,
                      "src": "6986:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 643,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "7020:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6986:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "6986:40:24"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 646,
                      "name": "totalLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "7036:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 647,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "7051:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7036:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7036:21:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 651,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "7086:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 652,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "7094:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 650,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "7073:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "EmitStatement",
                  "src": "7068:33:24"
                }
              ]
            },
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "6517:76:24",
              "text": " @dev Validator token unlocking, 14 day withdrawal period."
            },
            "id": 656,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockTokens",
            "nameLocation": "6607:11:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6627:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "6619:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6619:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6643:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "6635:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6635:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6618:32:24"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6660:0:24"
            },
            "scope": 914,
            "src": "6598:510:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "7159:48:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 662,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7181:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7185:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7181:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 664,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "7193:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 661,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "7169:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7169:31:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "7169:31:24"
                }
              ]
            },
            "functionSelector": "6e27d889",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "7123:10:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7142:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7134:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7134:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7133:16:24"
            },
            "returnParameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7159:0:24"
            },
            "scope": 914,
            "src": "7114:93:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 780,
              "nodeType": "Block",
              "src": "7260:1341:24",
              "statements": [
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "7278:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 780,
                      "src": "7270:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7270:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 679,
                  "initialValue": {
                    "baseExpression": {
                      "id": 675,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "7292:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 678,
                    "indexExpression": {
                      "expression": {
                        "id": 676,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7313:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7317:6:24",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7313:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7292:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7270:54:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 681,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 674,
                          "src": "7342:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7356:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7342:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120726567697374657265642076616c696461746f722e",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7359:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        },
                        "value": "Not a registered validator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_651533194a5281c4cc213591f17b0128b67c9812197c565a537458e33c8166be",
                          "typeString": "literal_string \"Not a registered validator.\""
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7334:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7334:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "7334:55:24"
                },
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "7418:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 780,
                      "src": "7400:27:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 688,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 687,
                          "name": "Validator",
                          "nameLocations": [
                            "7400:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 173,
                          "src": "7400:9:24"
                        },
                        "referencedDeclaration": 173,
                        "src": "7400:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "baseExpression": {
                      "id": 690,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "7430:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 692,
                    "indexExpression": {
                      "id": 691,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "7441:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7430:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$173_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7400:53:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 695,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "7472:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 696,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 689,
                            "src": "7482:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                              "typeString": "struct SmartnodesCore.Validator storage pointer"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7492:6:24",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 168,
                          "src": "7482:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7472:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7500:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7464:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7464:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "7464:69:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 703,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "7551:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7560:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7551:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7563:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7543:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7543:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "7543:56:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 709,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7685:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator storage pointer"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7695:10:24",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 170,
                      "src": "7685:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7709:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7685:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 778,
                    "nodeType": "Block",
                    "src": "8115:480:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 748,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8232:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8238:9:24",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8232:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 750,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 689,
                                  "src": "8251:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                                    "typeString": "struct SmartnodesCore.Validator storage pointer"
                                  }
                                },
                                "id": 751,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8261:10:24",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 170,
                                "src": "8251:20:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8232:39:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8289:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 747,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8207:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8207:122:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 755,
                        "nodeType": "ExpressionStatement",
                        "src": "8207:122:24"
                      },
                      {
                        "expression": {
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 756,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "8344:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8354:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 168,
                            "src": "8344:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 759,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "8364:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8344:26:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "8344:26:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 765,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8405:4:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SmartnodesCore_$914",
                                    "typeString": "contract SmartnodesCore"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SmartnodesCore_$914",
                                    "typeString": "contract SmartnodesCore"
                                  }
                                ],
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8397:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 763,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8397:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8397:13:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 767,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8412:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8416:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8412:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 769,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "8424:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 762,
                            "name": "transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2757,
                            "src": "8384:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8384:47:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "8384:47:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 773,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8513:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8517:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8513:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 775,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "8525:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 772,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "8498:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8498:34:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 777,
                        "nodeType": "EmitStatement",
                        "src": "8493:39:24"
                      }
                    ]
                  },
                  "id": 779,
                  "nodeType": "IfStatement",
                  "src": "7681:914:24",
                  "trueBody": {
                    "id": 746,
                    "nodeType": "Block",
                    "src": "7712:397:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 713,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "7730:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7740:6:24",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 168,
                            "src": "7730:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 715,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "7749:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7730:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 725,
                        "nodeType": "IfStatement",
                        "src": "7726:113:24",
                        "trueBody": {
                          "id": 724,
                          "nodeType": "Block",
                          "src": "7761:78:24",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 720,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7813:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7817:6:24",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7813:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 717,
                                    "name": "validatorContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 144,
                                    "src": "7779:17:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                                      "typeString": "contract ISmartnodesMultiSig"
                                    }
                                  },
                                  "id": 719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7797:15:24",
                                  "memberName": "removeValidator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2322,
                                  "src": "7779:33:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7779:45:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 723,
                              "nodeType": "ExpressionStatement",
                              "src": "7779:45:24"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 726,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 689,
                              "src": "7852:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                                "typeString": "struct SmartnodesCore.Validator storage pointer"
                              }
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7862:10:24",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 170,
                            "src": "7852:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 729,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7875:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7881:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7875:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 731,
                              "name": "unlockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "7893:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7875:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7852:53:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "7852:53:24"
                      },
                      {
                        "expression": {
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 735,
                            "name": "totalLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "7981:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 736,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "7996:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7981:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 738,
                        "nodeType": "ExpressionStatement",
                        "src": "7981:21:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 740,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8038:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8042:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8038:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 742,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 689,
                                "src": "8050:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                                  "typeString": "struct SmartnodesCore.Validator storage pointer"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8060:10:24",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 170,
                              "src": "8050:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 739,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "8022:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8022:49:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 745,
                        "nodeType": "EmitStatement",
                        "src": "8017:54:24"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7c405325",
            "id": 781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "7222:12:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7243:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "7235:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7235:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7234:16:24"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7260:0:24"
            },
            "scope": 914,
            "src": "7213:1388:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "8708:620:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 790,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8749:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8753:6:24",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8749:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 789,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2656,
                              "src": "8739:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8739:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 793,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "8764:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8739:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 795,
                            "name": "_lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "8779:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 796,
                            "name": "lockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "8794:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8779:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8739:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e63652e",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8818:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        },
                        "value": "Insufficient token balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26ac639c4934eb1f8cbe4423c3869cd791f27ea214fa7148829af0ea92cb725d",
                          "typeString": "literal_string \"Insufficient token balance.\""
                        }
                      ],
                      "id": 788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8718:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8718:139:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "8718:139:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 803,
                            "name": "validatorIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "8888:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 806,
                          "indexExpression": {
                            "expression": {
                              "id": 804,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8909:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8913:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8909:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8888:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8924:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8888:37:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c7265616479206372656174656420776974682074686973206163636f756e7421",
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8939:46:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a5cb8254c49a9072d26899a72079b0b3633f237aaea03d1c6ff784e26447f64",
                          "typeString": "literal_string \"Validator already created with this account!\""
                        },
                        "value": "Validator already created with this account!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a5cb8254c49a9072d26899a72079b0b3633f237aaea03d1c6ff784e26447f64",
                          "typeString": "literal_string \"Validator already created with this account!\""
                        }
                      ],
                      "id": 802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8867:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:128:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:128:24"
                },
                {
                  "expression": {
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 812,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "9006:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
                          "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                        }
                      },
                      "id": 814,
                      "indexExpression": {
                        "id": 813,
                        "name": "validatorCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "9017:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9006:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$173_storage",
                        "typeString": "struct SmartnodesCore.Validator storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 816,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9071:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9075:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9071:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9103:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9130:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 820,
                          "name": "_publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "9160:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 815,
                        "name": "Validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "9037:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Validator_$173_storage_ptr_$",
                          "typeString": "type(struct SmartnodesCore.Validator storage pointer)"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "9061:8:24",
                        "9095:6:24",
                        "9118:10:24",
                        "9145:13:24"
                      ],
                      "names": [
                        "_address",
                        "locked",
                        "unlockTime",
                        "publicKeyHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "9037:148:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$173_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator memory"
                      }
                    },
                    "src": "9006:179:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$173_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "9006:179:24"
                },
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 824,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "9196:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 827,
                      "indexExpression": {
                        "expression": {
                          "id": 825,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9217:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9221:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9217:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9196:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 828,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "9231:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9196:51:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "9196:51:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 832,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9269:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9273:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9269:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 834,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "9281:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 831,
                      "name": "_lockTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "9257:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9257:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "9257:35:24"
                },
                {
                  "expression": {
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "9303:18:24",
                    "subExpression": {
                      "id": 837,
                      "name": "validatorCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "9303:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "9303:18:24"
                }
              ]
            },
            "functionSelector": "497dfe63",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "8616:15:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "_publicKeyHash",
                  "nameLocation": "8649:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "8641:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8641:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_lockAmount",
                  "nameLocation": "8681:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "8673:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8673:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8631:67:24"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8708:0:24"
            },
            "scope": 914,
            "src": "8607:721:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "9407:120:24",
              "statements": [
                {
                  "assignments": [
                    849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 849,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9425:2:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 861,
                      "src": "9417:10:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 848,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9417:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 853,
                  "initialValue": {
                    "baseExpression": {
                      "id": 850,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "9430:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 852,
                    "indexExpression": {
                      "id": 851,
                      "name": "validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "9451:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9430:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9417:51:24"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 854,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "9485:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
                            "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                          }
                        },
                        "id": 856,
                        "indexExpression": {
                          "id": 855,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "9496:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9485:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$173_storage",
                          "typeString": "struct SmartnodesCore.Validator storage ref"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9500:6:24",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 168,
                      "src": "9485:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 858,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "9510:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9485:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 847,
                  "id": 860,
                  "nodeType": "Return",
                  "src": "9478:42:24"
                }
              ]
            },
            "functionSelector": "4a4fbeec",
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLocked",
            "nameLocation": "9343:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "9360:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "9352:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9352:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9351:26:24"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "9401:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9401:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9400:6:24"
            },
            "scope": 914,
            "src": "9334:193:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "9600:60:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 867,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "9617:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9635:16:24",
                      "memberName": "getNumValidators",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2352,
                      "src": "9617:34:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9617:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 866,
                  "id": 870,
                  "nodeType": "Return",
                  "src": "9610:43:24"
                }
              ]
            },
            "functionSelector": "37deea70",
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveValidatorCount",
            "nameLocation": "9542:23:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9565:2:24"
            },
            "returnParameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "9591:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9591:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9590:9:24"
            },
            "scope": 914,
            "src": "9533:127:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 912,
              "nodeType": "Block",
              "src": "9775:314:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 884,
                          "name": "_validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 874,
                          "src": "9793:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 885,
                          "name": "validatorCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "9808:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9793:31:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642049442e",
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9826:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        },
                        "value": "Invalid ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d81057a03944fc64b9a0d1ae6c7a3e1aa4a8fc3ce8136682e3a24d07152b93",
                          "typeString": "literal_string \"Invalid ID.\""
                        }
                      ],
                      "id": 883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9785:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9785:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "9785:55:24"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "mutability": "mutable",
                      "name": "_validator",
                      "nameLocation": "9867:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 912,
                      "src": "9850:27:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$173_memory_ptr",
                        "typeString": "struct SmartnodesCore.Validator"
                      },
                      "typeName": {
                        "id": 891,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 890,
                          "name": "Validator",
                          "nameLocations": [
                            "9850:9:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 173,
                          "src": "9850:9:24"
                        },
                        "referencedDeclaration": 173,
                        "src": "9850:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$173_storage_ptr",
                          "typeString": "struct SmartnodesCore.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 896,
                  "initialValue": {
                    "baseExpression": {
                      "id": 893,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "9880:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$173_storage_$",
                        "typeString": "mapping(uint256 => struct SmartnodesCore.Validator storage ref)"
                      }
                    },
                    "id": 895,
                    "indexExpression": {
                      "id": 894,
                      "name": "_validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "9891:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9880:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$173_storage",
                      "typeString": "struct SmartnodesCore.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9850:54:24"
                },
                {
                  "assignments": [
                    898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 898,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "9919:8:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 912,
                      "src": "9914:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 897,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9914:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 901,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "9979:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$173_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9990:8:24",
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 166,
                        "src": "9979:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 899,
                        "name": "validatorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "9930:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartnodesMultiSig_$2406",
                          "typeString": "contract ISmartnodesMultiSig"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9948:17:24",
                      "memberName": "isActiveValidator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2387,
                      "src": "9930:35:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9930:78:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9914:94:24"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 905,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "10026:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 906,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "10036:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$173_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10047:13:24",
                        "memberName": "publicKeyHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 172,
                        "src": "10036:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 908,
                          "name": "_validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "10062:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$173_memory_ptr",
                            "typeString": "struct SmartnodesCore.Validator memory"
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10073:8:24",
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 166,
                        "src": "10062:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 910,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10025:57:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bool,bytes32,address)"
                    }
                  },
                  "functionReturnParameters": 882,
                  "id": 911,
                  "nodeType": "Return",
                  "src": "10018:64:24"
                }
              ]
            },
            "functionSelector": "b7797537",
            "id": 913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorInfo",
            "nameLocation": "9675:16:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "_validatorId",
                  "nameLocation": "9709:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9701:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9701:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9691:36:24"
            },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9751:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9751:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9757:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9757:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9766:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9766:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9750:24:24"
            },
            "scope": 914,
            "src": "9666:423:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 915,
        "src": "184:9907:24",
        "usedErrors": [],
        "usedEvents": [
          211,
          217,
          223,
          231,
          237,
          243,
          4284,
          4293
        ]
      }
    ],
    "src": "32:10060:24"
  },
  "bytecode": "",
  "bytecodeSha1": "a7c80f59b53663767489f90a3d1f2ead1bebef1c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartnodesCore",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "131": [
            2952,
            2965,
            true
          ]
        },
        "SmartnodesCore.initialize": {
          "129": [
            2369,
            2382,
            true
          ],
          "130": [
            2369,
            2417,
            true
          ]
        }
      },
      "2": {
        "ERC20Upgradeable._approve": {
          "121": [
            10591,
            10610,
            true
          ],
          "122": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "128": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "123": [
            11303,
            11340,
            false
          ],
          "124": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "125": [
            7951,
            7969,
            true
          ],
          "126": [
            8029,
            8045,
            true
          ],
          "127": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "120": [
            7152,
            7187,
            true
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "117": [
            6678,
            6688,
            true
          ],
          "118": [
            6744,
            6771,
            true
          ],
          "119": [
            6876,
            6892,
            true
          ]
        },
        "SmartnodesCore.completeJob": {
          "114": [
            4760,
            4770,
            false
          ]
        },
        "SmartnodesCore.createValidator": {
          "101": [
            8739,
            8775,
            false
          ],
          "102": [
            8779,
            8804,
            true
          ],
          "103": [
            8888,
            8925,
            true
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "115": [
            9793,
            9824,
            true
          ]
        },
        "SmartnodesCore.mintTokens": {
          "104": [
            5475,
            5514,
            false
          ],
          "105": [
            5534,
            5561,
            false
          ],
          "106": [
            5701,
            5721,
            false
          ],
          "107": [
            6215,
            6234,
            false
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "116": [
            2653,
            2693,
            true
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "108": [
            7342,
            7357,
            true
          ],
          "109": [
            7472,
            7498,
            true
          ],
          "110": [
            7551,
            7561,
            true
          ],
          "111": [
            7685,
            7710,
            false
          ],
          "112": [
            7730,
            7759,
            false
          ],
          "113": [
            8232,
            8271,
            true
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {
        "Initializable._isConstructor": {
          "50": [
            3101,
            3153
          ]
        }
      },
      "2": {
        "ERC20Upgradeable.__ERC20_init": {
          "98": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "99": [
            2381,
            2394
          ],
          "100": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "74": [
            10583,
            10651
          ],
          "75": [
            10661,
            10729
          ],
          "76": [
            10740,
            10776
          ],
          "77": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "94": [
            8827,
            8892
          ],
          "95": [
            8963,
            8985
          ],
          "96": [
            8995,
            9023
          ],
          "97": [
            9033,
            9075
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "78": [
            11356,
            11424
          ],
          "79": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "80": [
            7943,
            8011
          ],
          "81": [
            8021,
            8085
          ],
          "82": [
            8192,
            8264
          ],
          "83": [
            8298,
            8336
          ],
          "84": [
            8356,
            8379
          ],
          "85": [
            8390,
            8421
          ],
          "86": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "4": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "7": [
            4907,
            4939
          ],
          "8": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "63": [
            7144,
            7229
          ],
          "64": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "13": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "5": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "42": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "65": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "9": [
            5712,
            5750
          ],
          "10": [
            5760,
            5787
          ],
          "11": [
            5797,
            5808
          ]
        }
      },
      "24": {
        "SmartnodesCore._lockTokens": {
          "87": [
            6670,
            6726
          ],
          "88": [
            6736,
            6797
          ],
          "89": [
            6868,
            6922
          ],
          "90": [
            6933,
            6976
          ],
          "91": [
            6986,
            7026
          ],
          "92": [
            7036,
            7057
          ],
          "93": [
            7068,
            7101
          ]
        },
        "SmartnodesCore.completeJob": {
          "43": [
            4836,
            4848
          ],
          "44": [
            4862,
            4895
          ],
          "45": [
            4909,
            4917
          ],
          "46": [
            5083,
            5101
          ],
          "47": [
            5111,
            5138
          ],
          "48": [
            5148,
            5181
          ],
          "49": [
            5191,
            5209
          ]
        },
        "SmartnodesCore.createValidator": {
          "14": [
            8718,
            8857
          ],
          "15": [
            8867,
            8995
          ],
          "16": [
            9006,
            9185
          ],
          "17": [
            9196,
            9247
          ],
          "18": [
            9257,
            9292
          ],
          "19": [
            9303,
            9321
          ]
        },
        "SmartnodesCore.getActiveValidatorCount": {
          "12": [
            9610,
            9653
          ]
        },
        "SmartnodesCore.getValidatorInfo": {
          "66": [
            9785,
            9840
          ],
          "67": [
            10018,
            10082
          ]
        },
        "SmartnodesCore.halveStateTime": {
          "70": [
            3035,
            3052
          ],
          "71": [
            3062,
            3079
          ],
          "72": [
            3089,
            3107
          ],
          "73": [
            3170,
            3201
          ]
        },
        "SmartnodesCore.initialize": {
          "51": [
            2075,
            2108
          ],
          "52": [
            2118,
            2141
          ],
          "53": [
            2151,
            2173
          ],
          "54": [
            2183,
            2206
          ],
          "55": [
            2216,
            2236
          ],
          "56": [
            2261,
            2287
          ],
          "57": [
            2297,
            2321
          ],
          "58": [
            2356,
            2370
          ],
          "59": [
            2380,
            2400
          ],
          "60": [
            2410,
            2425
          ],
          "61": [
            2498,
            2533
          ],
          "62": [
            2479,
            2482
          ]
        },
        "SmartnodesCore.isLocked": {
          "2": [
            9478,
            9520
          ]
        },
        "SmartnodesCore.lockTokens": {
          "30": [
            7169,
            7200
          ]
        },
        "SmartnodesCore.mintTokens": {
          "20": [
            5581,
            5598
          ],
          "21": [
            5737,
            5786
          ],
          "22": [
            5800,
            5816
          ],
          "23": [
            5847,
            5911
          ],
          "24": [
            5925,
            5986
          ],
          "25": [
            6075,
            6190
          ],
          "26": [
            6056,
            6059
          ],
          "27": [
            6419,
            6445
          ],
          "28": [
            6291,
            6294
          ],
          "29": [
            6480,
            6504
          ]
        },
        "SmartnodesCore.setValidatorContract": {
          "68": [
            2632,
            2749
          ],
          "69": [
            2759,
            2817
          ]
        },
        "SmartnodesCore.unlockTokens": {
          "31": [
            7334,
            7389
          ],
          "32": [
            7464,
            7533
          ],
          "33": [
            7543,
            7599
          ],
          "34": [
            7779,
            7824
          ],
          "35": [
            7852,
            7905
          ],
          "36": [
            7981,
            8002
          ],
          "37": [
            8017,
            8071
          ],
          "38": [
            8207,
            8329
          ],
          "39": [
            8344,
            8370
          ],
          "40": [
            8384,
            8431
          ],
          "41": [
            8493,
            8532
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "6": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "ISmartnodesMultiSig",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "184:9907:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:30;;1162:22;1144:41;;1132:2;1117:18;4770:197:2;1004:187:30;981:35:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1527:25:30;;;1515:2;1500:18;981:35:24;1381:177:30;3581:106:2;3668:12;;3581:106;;677:27:24;;;;;;5529:286:2;;;;;;:::i;:::-;;:::i;426:49:24:-;;466:9;426:49;;1075:55;;;;;;:::i;:::-;;;;;;;;;;;;;;3430:91:2;;;3512:2;2229:36:30;;2217:2;2202:18;3430:91:2;2087:184:30;1022:47:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1022:47:24;;;;;;;;;;;;-1:-1:-1;;;;;2525:32:30;;;2507:51;;2589:2;2574:18;;2567:34;;;;2617:18;;;2610:34;2675:2;2660:18;;2653:34;2494:3;2479:19;1022:47:24;2276:417:30;9533:127:24;;;:::i;6210:236:2:-;;;;;;:::i;:::-;;:::i;284:25:24:-;;;;;-1:-1:-1;;;;;284:25:24;;;;;;-1:-1:-1;;;;;2862:32:30;;;2844:51;;2832:2;2817:18;284:25:24;2698:203:30;8607:721:24;;;;;;:::i;:::-;;:::i;:::-;;9334:193;;;;;;:::i;:::-;-1:-1:-1;;;;;9430:38:24;9401:4;9430:38;;;:20;:38;;;;;;;;;9510:10;;9485:14;;;:10;:14;;;;;;:21;;;:35;;;9334:193;1137:25;;;;;;645:26;;;;;;568:28;;;;;;5222:1289;;;;;;:::i;:::-;;:::i;7114:93::-;;;;;;:::i;:::-;;:::i;3745:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;7213:1388:24;;;;;;:::i;:::-;;:::i;602:37::-;;;;;;316:34;;;;;;2704:102:2;;;:::i;504:27:24:-;;;;;;4555:661;;;;;;:::i;:::-;;:::i;234:44::-;;;;;-1:-1:-1;;;;;234:44:24;;;1237:32;;;;;;1994:556;;;;;;:::i;:::-;;:::i;6933:429:2:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1200:31:24:-;;;;;;9666:423;;;;;;:::i;:::-;;:::i;:::-;;;;6940:14:30;;6933:22;6915:41;;6987:2;6972:18;;6965:34;;;;-1:-1:-1;;;;;7035:32:30;7015:18;;;7008:60;6903:2;6888:18;9666:423:24;6719:355:30;929:46:24;;;;;;:::i;:::-;;;;;;;;;;;;;;2556:268;;;;;;:::i;:::-;;:::i;537:25::-;;;;;;4313:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;2830:427:24;;;:::i;1168:26::-;;;;;;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;5529:286::-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;9533:127:24:-;9617:17;;:36;;;-1:-1:-1;;;9617:36:24;;;;9591:7;;-1:-1:-1;;;;;9617:17:24;;:34;;:36;;;;;;;;;;;;;;:17;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9610:43;;9533:127;:::o;6210:236:2:-;929:10:6;6298:4:2;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:2;;;;;;;;;;6298:4;;929:10:6;6352:66:2;;929:10:6;;6377:27:2;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;8607:721:24:-;8749:10;3819:7:2;3845:18;;;:9;:18;;;;;;8764:11:24;-1:-1:-1;8739:36:24;:65;;;;;8794:10;;8779:11;:25;;8739:65;8718:139;;;;-1:-1:-1;;;8718:139:24;;8382:2:30;8718:139:24;;;8364:21:30;8421:2;8401:18;;;8394:30;8460:29;8440:18;;;8433:57;8507:18;;8718:139:24;;;;;;;;;8909:10;8888:32;;;;:20;:32;;;;;;:37;8867:128;;;;-1:-1:-1;;;8867:128:24;;8738:2:30;8867:128:24;;;8720:21:30;8777:2;8757:18;;;8750:30;8816:34;8796:18;;;8789:62;-1:-1:-1;;;8867:18:30;;;8860:42;8919:19;;8867:128:24;8536:408:30;8867:128:24;9037:148;;;;;;;;9071:10;9037:148;;;-1:-1:-1;9037:148:24;;;;;;;;;;;;;;;;;;;9017:16;;;9006:28;;:10;:28;;;;;:179;;;;-1:-1:-1;;;;;;9006:179:24;-1:-1:-1;;;;;9006:179:24;;;;;;;;-1:-1:-1;9006:179:24;;;;;;;;;;;;;;;;;;9231:16;;9196:32;;;:20;:32;;;;;;;:51;9281:10;;9257:35;;9071:10;9257:11;:35::i;:::-;9303:16;:18;;;:16;:18;;;:::i;:::-;;;;;;8607:721;;:::o;5222:1289::-;1760:17;;-1:-1:-1;;;;;1760:17:24;1738:10;:40;1717:125;;;;-1:-1:-1;;;1717:125:24;;;;;;;:::i;:::-;5501:13:::1;;5475:22;;:39;5471:152;;5549:12;;5534;;:27;5530:83;;;5597:1;5581:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5530:83:24::1;5633:23;5666:20:::0;5701:8:::1;:15;5720:1;5701:20:::0;5697:300:::1;;5770:16;5755:12;;:31;;;;:::i;:::-;5737:49;;5815:1;5800:16;;5697:300;;;5908:3;5882:16;5867:12;;:31;;;;:::i;:::-;5866:38;::::0;5902:2:::1;5866:38;:::i;:::-;5865:46;;;;:::i;:::-;5847:64;;5983:3;5957:16;5942:12;;:31;;;;:::i;:::-;5941:38;::::0;5977:2:::1;5941:38;:::i;:::-;5940:46;;;;:::i;:::-;5925:61;;5697:300;6012:9;6007:194;6031:16;:23;6027:1;:27;6007:194;;;6075:115;6098:16;6115:1;6098:19;;;;;;;;:::i;:::-;;;;;;;6153:16;:23;6135:15;:41;;;;:::i;:::-;6075:5;:115::i;:::-;6056:3;;6007:194;;;-1:-1:-1::0;6215:15:24;;:19;6211:259:::1;;6255:9;6250:210;6274:8;:15;6270:1;:19;6250:210;;;6314:14;6386;6350:12;6333:11;6345:1;6333:14;;;;;;;;:::i;:::-;;;;;;;:29;;;;:::i;:::-;6332:68;;;;:::i;:::-;6314:87;;6419:26;6425:8;6434:1;6425:11;;;;;;;;:::i;:::-;;;;;;;6438:6;6419:5;:26::i;:::-;-1:-1:-1::0;6291:3:24::1;;6250:210;;;;6211:259;6480:22;:24:::0;;;:22:::1;:24;::::0;::::1;:::i;:::-;;;;;;5461:1050;;5222:1289:::0;;;;;:::o;7114:93::-;7169:31;7181:10;7193:6;7169:11;:31::i;:::-;7114:93;:::o;7213:1388::-;7313:10;7270:19;7292:32;;;:20;:32;;;;;;7342:15;7334:55;;;;-1:-1:-1;;;7334:55:24;;10225:2:30;7334:55:24;;;10207:21:30;10264:2;10244:18;;;10237:30;10303:29;10283:18;;;10276:57;10350:18;;7334:55:24;10023:351:30;7334:55:24;7400:27;7430:23;;;:10;:23;;;;;7482:16;;;;7472:26;;;7464:69;;;;-1:-1:-1;;;7464:69:24;;10581:2:30;7464:69:24;;;10563:21:30;10620:2;10600:18;;;10593:30;10659:32;10639:18;;;10632:60;10709:18;;7464:69:24;10379:354:30;7464:69:24;7560:1;7551:6;:10;7543:56;;;;-1:-1:-1;;;7543:56:24;;;;;;;:::i;:::-;7685:9;:20;;;7709:1;7685:25;7681:914;;7749:10;;7730:9;:16;;;:29;7726:113;;;7779:17;;:45;;-1:-1:-1;;;7779:45:24;;7813:10;7779:45;;;2844:51:30;-1:-1:-1;;;;;7779:17:24;;;;:33;;2817:18:30;;7779:45:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7726:113;7893:12;;7875:30;;:15;:30;:::i;:::-;7852:9;:20;;:53;;;;7996:6;7981:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;8050:20:24;;;;8022:49;;1527:25:30;;;8038:10:24;;8022:49;;1515:2:30;1500:18;8022:49:24;;;;;;;;7260:1341;;7213:1388;:::o;7681:914::-;8251:9;:20;;;8232:15;:39;;8207:122;;;;-1:-1:-1;;;8207:122:24;;11475:2:30;8207:122:24;;;11457:21:30;11514:2;11494:18;;;11487:30;11553:26;11533:18;;;11526:54;11597:18;;8207:122:24;11273:348:30;8207:122:24;8364:6;8344:9;:16;;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;8384:47:24;;-1:-1:-1;8405:4:24;8412:10;8424:6;8384:12;:47::i;:::-;-1:-1:-1;8498:34:24;;1527:25:30;;;8513:10:24;;8498:34;;1515:2:30;1500:18;8498:34:24;1381:177:30;7681:914:24;7260:1341;;7213:1388;:::o;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;4555:661:24:-;1760:17;;4647:7;;-1:-1:-1;;;;;1760:17:24;1738:10;:40;1717:125;;;;-1:-1:-1;;;1717:125:24;;;;;;;:::i;:::-;4666:13:::1;4682:20:::0;;;:11:::1;:20;::::0;;;;;;4760:10;;;4756:172:::1;;4836:10;:12:::0;;;:10:::1;:12;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4867:28:24::1;::::0;;11800:25:30;;;11856:2;11841:18;;11834:34;;;4867:28:24::1;::::0;11773:18:30;4867:28:24::1;;;;;;;-1:-1:-1::0;4916:1:24::1;::::0;4555:661;-1:-1:-1;;4555:661:24:o;4756:172::-:1;4982:14;4999:11:::0;;;:4:::1;:11;::::0;;;;;;;4982:28;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;4999:11;;4982:28;;4999:11;;4982:28;;;4999:11;4982:28;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4982:28:24;;;-1:-1:-1;;4982:28:24::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;5042:11;;::::1;::::0;-1:-1:-1;5090:11:24;;;:4:::1;:11:::0;;;;;;4982:28;;-1:-1:-1;5042:11:24;5090;5083:18:::1;5090:11:::0;-1:-1:-1;5083:18:24::1;:::i;:::-;-1:-1:-1::0;5083:18:24::1;;::::0;;;::::1;::::0;;;5118:20;;;:11:::1;:20;::::0;;;;;;;5111:27;;;;5153:28;;11800:25:30;;;11841:18;;;11834:34;;;5153:28:24::1;::::0;11773:18:30;5153:28:24::1;;;;;;;5198:11:::0;-1:-1:-1;;;1852:1:24::1;4555:661:::0;;;:::o;1994:556::-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:5;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;12081:2:30;2361:107:1;;;12063:21:30;12120:2;12100:18;;;12093:30;12159:34;12139:18;;;12132:62;-1:-1:-1;;;12210:18:30;;;12203:44;12264:19;;2361:107:1;11879:410:30;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;2075:33:24::1;;;;;;;;;;;;;;-1:-1:-1::0;;;2075:33:24::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2075:33:24::1;;::::0;:12:::1;:33::i;:::-;2118:10;:23:::0;;-1:-1:-1;;;;;;2118:23:24::1;2131:10;2118:23;::::0;;2166:7:::1;2151:12;:22:::0;2196:10:::1;2183;:23:::0;2232:4:::1;2216:13;:20:::0;2118:10:::1;2261:22;:26:::0;;;2312:9:::1;2297:12;:24:::0;2118:23;2356:10:::1;:14:::0;;;2380:16:::1;:20:::0;;;2410:11:::1;:15:::0;2436:108:::1;2457:13;:20;2453:1;:24;2436:108;;;2498:35;2504:13;2518:1;2504:16;;;;;;;;:::i;:::-;;;;;;;2522:10;;2498:5;:35::i;:::-;2479:3;;2436:108;;;;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1994:556:24;:::o;6933:429:2:-;929:10:6;7026:4:2;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:2;;;;;;;;;;7026:4;;929:10:6;7152:35:2;;;;7144:85;;;;-1:-1:-1;;;7144:85:2;;12496:2:30;7144:85:2;;;12478:21:30;12535:2;12515:18;;;12508:30;12574:34;12554:18;;;12547:62;-1:-1:-1;;;12625:18:30;;;12618:35;12670:19;;7144:85:2;12294:401:30;7144:85:2;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;9666:423:24:-;9751:4;9757:7;9766;9808:16;;9793:12;:31;9785:55;;;;-1:-1:-1;;;9785:55:24;;12902:2:30;9785:55:24;;;12884:21:30;12941:2;12921:18;;;12914:30;-1:-1:-1;;;12960:18:30;;;12953:41;13011:18;;9785:55:24;12700:335:30;9785:55:24;9850:27;9880:24;;;:10;:24;;;;;;;;9850:54;;;;;;;;;-1:-1:-1;;;;;9850:54:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9930:17;;:78;;-1:-1:-1;;;9930:78:24;;;;;2844:51:30;;;;9850:54:24;:27;9930:17;;;:35;;2817:18:30;;9930:78:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10036:24;;;;10062:19;;9914:94;;10036:24;;-1:-1:-1;10062:19:24;-1:-1:-1;9666:423:24;;-1:-1:-1;;;9666:423:24:o;2556:268::-;2661:17;;-1:-1:-1;;;;;2661:17:24;2653:40;2632:117;;;;-1:-1:-1;;;2632:117:24;;13524:2:30;2632:117:24;;;13506:21:30;13563:2;13543:18;;;13536:30;13602:32;13582:18;;;13575:60;13652:18;;2632:117:24;13322:354:30;2632:117:24;2759:17;:58;;-1:-1:-1;;;;;;2759:58:24;-1:-1:-1;;;;;2759:58:24;;;;;;;;;;2556:268::o;2830:427::-;1924:10;;-1:-1:-1;;;;;1924:10:24;1910;:24;1902:68;;;;-1:-1:-1;;;1902:68:24;;13883:2:30;1902:68:24;;;13865:21:30;13922:2;13902:18;;;13895:30;13961:33;13941:18;;;13934:61;14012:18;;1902:68:24;13681:355:30;1902:68:24;3051:1:::1;3035:12;;:17;;;;;;;:::i;:::-;;;;;;;;3078:1;3062:12;;:17;;;;;;;:::i;:::-;;;;;;;;3106:1;3089:13;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3170:17:24::1;::::0;:31:::1;::::0;;-1:-1:-1;;;3170:31:24;;;;-1:-1:-1;;;;;3170:17:24;;::::1;::::0;:29:::1;::::0;:31:::1;::::0;;::::1;::::0;:17:::1;::::0;:31;;;;;;;;:17;;:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2830:427::o:0;10460:370:2:-;-1:-1:-1;;;;;10591:19:2;;10583:68;;;;-1:-1:-1;;;10583:68:2;;14243:2:30;10583:68:2;;;14225:21:30;14282:2;14262:18;;;14255:30;14321:34;14301:18;;;14294:62;-1:-1:-1;;;14372:18:30;;;14365:34;14416:19;;10583:68:2;14041:400:30;10583:68:2;-1:-1:-1;;;;;10669:21:2;;10661:68;;;;-1:-1:-1;;;10661:68:2;;14648:2:30;10661:68:2;;;14630:21:30;14687:2;14667:18;;;14660:30;14726:34;14706:18;;;14699:62;-1:-1:-1;;;14777:18:30;;;14770:32;14819:19;;10661:68:2;14446:398:30;10661:68:2;-1:-1:-1;;;;;10740:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1527:25:30;;;10791:32:2;;1500:18:30;10791:32:2;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:2;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:2;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;15051:2:30;11356:68:2;;;15033:21:30;15090:2;15070:18;;;15063:30;15129:31;15109:18;;;15102:59;15178:18;;11356:68:2;14849:353:30;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;7825:651::-;-1:-1:-1;;;;;7951:18:2;;7943:68;;;;-1:-1:-1;;;7943:68:2;;15409:2:30;7943:68:2;;;15391:21:30;15448:2;15428:18;;;15421:30;15487:34;15467:18;;;15460:62;-1:-1:-1;;;15538:18:30;;;15531:35;15583:19;;7943:68:2;15207:401:30;7943:68:2;-1:-1:-1;;;;;8029:16:2;;8021:64;;;;-1:-1:-1;;;8021:64:2;;15815:2:30;8021:64:2;;;15797:21:30;15854:2;15834:18;;;15827:30;15893:34;15873:18;;;15866:62;-1:-1:-1;;;15944:18:30;;;15937:33;15987:19;;8021:64:2;15613:399:30;8021:64:2;-1:-1:-1;;;;;8167:15:2;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:2;;16219:2:30;8192:72:2;;;16201:21:30;16258:2;16238:18;;;16231:30;16297:34;16277:18;;;16270:62;-1:-1:-1;;;16348:18:30;;;16341:36;16394:19;;8192:72:2;16017:402:30;8192:72:2;-1:-1:-1;;;;;8298:15:2;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:2;8404:4;-1:-1:-1;;;;;8395:26:2;;8414:6;8395:26;;;;1527:25:30;;1515:2;1500:18;;1381:177;8395:26:2;;;;;;;;8432:37;7213:1388:24;6598:510;6687:1;6678:6;:10;6670:56;;;;-1:-1:-1;;;6670:56:24;;;;;;;:::i;:::-;6765:6;6744:17;6754:6;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;6744:17:24;:27;;6736:61;;;;-1:-1:-1;;;6736:61:24;;16626:2:30;6736:61:24;;;16608:21:30;16665:2;16645:18;;;16638:30;-1:-1:-1;;;16684:18:30;;;16677:51;16745:18;;6736:61:24;16424:345:30;6736:61:24;-1:-1:-1;;;;;6830:28:24;;6808:19;6830:28;;;:20;:28;;;;;;;6876:16;;;6868:54;;;;-1:-1:-1;;;6868:54:24;;16976:2:30;6868:54:24;;;16958:21:30;17015:2;16995:18;;;16988:30;17054:27;17034:18;;;17027:55;17099:18;;6868:54:24;16774:349:30;6868:54:24;6933:43;6946:6;6962:4;6969:6;6933:12;:43::i;:::-;-1:-1:-1;6986:23:24;;;;:10;:23;;;;;:30;;:40;;7020:6;;6986:23;:40;;7020:6;;6986:40;:::i;:::-;;;;;;;;7051:6;7036:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;7073:28:24;;;-1:-1:-1;;;;;17320:32:30;;17302:51;;17384:2;17369:18;;17362:34;;;7073:28:24;;17275:18:30;7073:28:24;;;;;;;6660:448;6598:510;;:::o;8752:389:2:-;-1:-1:-1;;;;;8835:21:2;;8827:65;;;;-1:-1:-1;;;8827:65:2;;17609:2:30;8827:65:2;;;17591:21:30;17648:2;17628:18;;;17621:30;17687:33;17667:18;;;17660:61;17738:18;;8827:65:2;17407:355:30;8827:65:2;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:2;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:2;;1527:25:30;;;-1:-1:-1;;;;;9038:37:2;;;9055:1;;9038:37;;1515:2:30;1500:18;9038:37:2;;;;;;;2080:637:1;1994:556:24;:::o;2116:147:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2952:13:1::0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;2381:5:2::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:2::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:548:30:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:30;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:30:o;1196:180::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;-1:-1:-1;1347:23:30;;1196:180;-1:-1:-1;1196:180:30:o;1563:328::-;1640:6;1648;1656;1709:2;1697:9;1688:7;1684:23;1680:32;1677:52;;;1725:1;1722;1715:12;1677:52;1748:29;1767:9;1748:29;:::i;:::-;1738:39;;1796:38;1830:2;1819:9;1815:18;1796:38;:::i;:::-;1786:48;;1881:2;1870:9;1866:18;1853:32;1843:42;;1563:328;;;;;:::o;1896:186::-;1955:6;2008:2;1996:9;1987:7;1983:23;1979:32;1976:52;;;2024:1;2021;2014:12;1976:52;2047:29;2066:9;2047:29;:::i;:::-;2037:39;1896:186;-1:-1:-1;;;1896:186:30:o;2906:248::-;2974:6;2982;3035:2;3023:9;3014:7;3010:23;3006:32;3003:52;;;3051:1;3048;3041:12;3003:52;-1:-1:-1;;3074:23:30;;;3144:2;3129:18;;;3116:32;;-1:-1:-1;2906:248:30:o;3159:127::-;3220:10;3215:3;3211:20;3208:1;3201:31;3251:4;3248:1;3241:15;3275:4;3272:1;3265:15;3291:275;3362:2;3356:9;3427:2;3408:13;;-1:-1:-1;;3404:27:30;3392:40;;3462:18;3447:34;;3483:22;;;3444:62;3441:88;;;3509:18;;:::i;:::-;3545:2;3538:22;3291:275;;-1:-1:-1;3291:275:30:o;3571:183::-;3631:4;3664:18;3656:6;3653:30;3650:56;;;3686:18;;:::i;:::-;-1:-1:-1;3731:1:30;3727:14;3743:4;3723:25;;3571:183::o;3759:674::-;3813:5;3866:3;3859:4;3851:6;3847:17;3843:27;3833:55;;3884:1;3881;3874:12;3833:55;3920:6;3907:20;3946:4;3970:60;3986:43;4026:2;3986:43;:::i;:::-;3970:60;:::i;:::-;4052:3;4076:2;4071:3;4064:15;4104:4;4099:3;4095:14;4088:21;;4161:4;4155:2;4152:1;4148:10;4140:6;4136:23;4132:34;4118:48;;4189:3;4181:6;4178:15;4175:35;;;4206:1;4203;4196:12;4175:35;4242:4;4234:6;4230:17;4256:148;4272:6;4267:3;4264:15;4256:148;;;4338:23;4357:3;4338:23;:::i;:::-;4326:36;;4382:12;;;;4289;;4256:148;;;-1:-1:-1;4422:5:30;3759:674;-1:-1:-1;;;;;;3759:674:30:o;4438:1502::-;4608:6;4616;4624;4632;4640;4693:3;4681:9;4672:7;4668:23;4664:33;4661:53;;;4710:1;4707;4700:12;4661:53;4750:9;4737:23;4779:18;4820:2;4812:6;4809:14;4806:34;;;4836:1;4833;4826:12;4806:34;4859:61;4912:7;4903:6;4892:9;4888:22;4859:61;:::i;:::-;4849:71;;4939:2;4929:12;;4994:2;4983:9;4979:18;4966:32;5023:2;5013:8;5010:16;5007:36;;;5039:1;5036;5029:12;5007:36;5062:24;;5117:4;5109:13;;5105:27;-1:-1:-1;5095:55:30;;5146:1;5143;5136:12;5095:55;5182:2;5169:16;5205:60;5221:43;5261:2;5221:43;:::i;5205:60::-;5299:15;;;5381:1;5377:10;;;;5369:19;;5365:28;;;5330:12;;;;5405:19;;;5402:39;;;5437:1;5434;5427:12;5402:39;5461:11;;;;5481:142;5497:6;5492:3;5489:15;5481:142;;;5563:17;;5551:30;;5514:12;;;;5601;;;;5481:142;;;5642:5;-1:-1:-1;;;;5694:2:30;5679:18;;5666:32;;-1:-1:-1;5751:2:30;5736:18;;5723:32;;-1:-1:-1;5767:16:30;;;5764:36;;;5796:1;5793;5786:12;5764:36;;5819:63;5874:7;5863:8;5852:9;5848:24;5819:63;:::i;:::-;4438:1502;;;;-1:-1:-1;4438:1502:30;;5929:3;5914:19;5901:33;;4438:1502;-1:-1:-1;;;4438:1502:30:o;6366:348::-;6450:6;6503:2;6491:9;6482:7;6478:23;6474:32;6471:52;;;6519:1;6516;6509:12;6471:52;6559:9;6546:23;6592:18;6584:6;6581:30;6578:50;;;6624:1;6621;6614:12;6578:50;6647:61;6700:7;6691:6;6680:9;6676:22;6647:61;:::i;:::-;6637:71;6366:348;-1:-1:-1;;;;6366:348:30:o;7079:260::-;7147:6;7155;7208:2;7196:9;7187:7;7183:23;7179:32;7176:52;;;7224:1;7221;7214:12;7176:52;7247:29;7266:9;7247:29;:::i;:::-;7237:39;;7295:38;7329:2;7318:9;7314:18;7295:38;:::i;:::-;7285:48;;7079:260;;;;;:::o;7344:380::-;7423:1;7419:12;;;;7466;;;7487:61;;7541:4;7533:6;7529:17;7519:27;;7487:61;7594:2;7586:6;7583:14;7563:18;7560:38;7557:161;;7640:10;7635:3;7631:20;7628:1;7621:31;7675:4;7672:1;7665:15;7703:4;7700:1;7693:15;7557:161;;7344:380;;;:::o;7729:184::-;7799:6;7852:2;7840:9;7831:7;7827:23;7823:32;7820:52;;;7868:1;7865;7858:12;7820:52;-1:-1:-1;7891:16:30;;7729:184;-1:-1:-1;7729:184:30:o;7918:127::-;7979:10;7974:3;7970:20;7967:1;7960:31;8010:4;8007:1;8000:15;8034:4;8031:1;8024:15;8050:125;8115:9;;;8136:10;;;8133:36;;;8149:18;;:::i;8949:135::-;8988:3;9009:17;;;9006:43;;9029:18;;:::i;:::-;-1:-1:-1;9076:1:30;9065:13;;8949:135::o;9089:402::-;9291:2;9273:21;;;9330:2;9310:18;;;9303:30;9369:34;9364:2;9349:18;;9342:62;-1:-1:-1;;;9435:2:30;9420:18;;9413:36;9481:3;9466:19;;9089:402::o;9496:217::-;9536:1;9562;9552:132;;9606:10;9601:3;9597:20;9594:1;9587:31;9641:4;9638:1;9631:15;9669:4;9666:1;9659:15;9552:132;-1:-1:-1;9698:9:30;;9496:217::o;9718:168::-;9791:9;;;9822;;9839:15;;;9833:22;;9819:37;9809:71;;9860:18;;:::i;9891:127::-;9952:10;9947:3;9943:20;9940:1;9933:31;9983:4;9980:1;9973:15;10007:4;10004:1;9997:15;10738:397;10940:2;10922:21;;;10979:2;10959:18;;;10952:30;11018:34;11013:2;10998:18;;10991:62;-1:-1:-1;;;11084:2:30;11069:18;;11062:31;11125:3;11110:19;;10738:397::o;11140:128::-;11207:9;;;11228:11;;;11225:37;;;11242:18;;:::i;13040:277::-;13107:6;13160:2;13148:9;13139:7;13135:23;13131:32;13128:52;;;13176:1;13173;13166:12;13128:52;13208:9;13202:16;13261:5;13254:13;13247:21;13240:5;13237:32;13227:60;;13283:1;13280;13273:12;17767:407;17969:2;17951:21;;;18008:2;17988:18;;;17981:30;18047:34;18042:2;18027:18;;18020:62;-1:-1:-1;;;18113:2:30;18098:18;;18091:41;18164:3;18149:19;;17767:407::o;18305:543::-;18407:2;18402:3;18399:11;18396:446;;;18443:1;18467:5;18464:1;18457:16;18511:4;18508:1;18498:18;18581:2;18569:10;18565:19;18562:1;18558:27;18552:4;18548:38;18617:4;18605:10;18602:20;18599:47;;;-1:-1:-1;18640:4:30;18599:47;18695:2;18690:3;18686:12;18683:1;18679:20;18673:4;18669:31;18659:41;;18750:82;18768:2;18761:5;18758:13;18750:82;;;18813:17;;;18794:1;18783:13;18750:82;;;18754:3;;;18305:543;;;:::o;19024:1345::-;19150:3;19144:10;19177:18;19169:6;19166:30;19163:56;;;19199:18;;:::i;:::-;19228:97;19318:6;19278:38;19310:4;19304:11;19278:38;:::i;:::-;19272:4;19228:97;:::i;:::-;19380:4;;19437:2;19426:14;;19454:1;19449:663;;;;20156:1;20173:6;20170:89;;;-1:-1:-1;20225:19:30;;;20219:26;20170:89;-1:-1:-1;;18981:1:30;18977:11;;;18973:24;18969:29;18959:40;19005:1;19001:11;;;18956:57;20272:81;;19419:944;;19449:663;18252:1;18245:14;;;18289:4;18276:18;;-1:-1:-1;;19485:20:30;;;19603:236;19617:7;19614:1;19611:14;19603:236;;;19706:19;;;19700:26;19685:42;;19798:27;;;;19766:1;19754:14;;;;19633:19;;19603:236;;;19607:3;19867:6;19858:7;19855:19;19852:201;;;19928:19;;;19922:26;-1:-1:-1;;20011:1:30;20007:14;;;20023:3;20003:24;19999:37;19995:42;19980:58;19965:74;;19852:201;-1:-1:-1;;;;;20099:1:30;20083:14;;;20079:22;20066:36;;-1:-1:-1;19024:1345:30:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    184,
    10091
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCDF64A76 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCDF64A76 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xD8DF5DC1 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xEABD4BD7 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xF0C37A59 EQ PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xAB051190 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xB7797537 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xB8D4090D EQ PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96AFC450 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x96AFC450 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x991E0139 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xA21BC3FB EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xA224CEE7 EQ PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x7C405325 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x88EF046D EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x95B84BC2 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37DEEA70 GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x50355D76 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x56891412 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x5A3E251F EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x6E124888 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x6E27D889 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x37DEEA70 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x3E47158C EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x497DFE63 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x259A28CF EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x20D3A0B4 EQ PUSH2 0x2C7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x19E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x6F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x6D SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2B1 PUSH3 0x127500 DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x69 SLOAD SWAP1 DUP5 MSTORE PUSH1 0x70 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BEC JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH2 0x3B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x75 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x103D JUMP JUMPDEST PUSH2 0x27E PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x74 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x544 PUSH2 0x53F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x578 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x5FF SWAP1 PUSH2 0x1D4A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62B SWAP1 PUSH2 0x1D4A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x678 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x678 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x690 DUP2 DUP6 DUP6 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6AA DUP6 DUP3 DUP6 PUSH2 0x148A JUMP JUMPDEST PUSH2 0x6B5 DUP6 DUP6 DUP6 PUSH2 0x1516 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x48F17129 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x91E2E252 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x690 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x76D SWAP1 DUP8 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH2 0x1366 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x793 JUMPI POP PUSH1 0x69 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C7265616479206372656174656420776974682074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x686973206163636F756E7421 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP10 DUP2 MSTORE PUSH1 0x74 DUP1 SLOAD DUP7 MSTORE PUSH1 0x70 DUP6 MSTORE DUP9 DUP7 KECCAK256 SWAP8 MLOAD DUP9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP9 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP3 SLOAD DUP3 DUP3 MSTORE PUSH1 0x71 SWAP1 SWAP4 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SSTORE PUSH1 0x69 SLOAD PUSH2 0x8D8 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x74 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x8E8 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x6B SLOAD LT PUSH2 0x94B JUMPI PUSH1 0x67 SLOAD PUSH1 0x68 SLOAD GT ISZERO PUSH2 0x94B JUMPI PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD PUSH1 0x0 SUB PUSH2 0x970 JUMPI DUP3 PUSH1 0x68 SLOAD PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x68 SLOAD PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH2 0x98B SWAP1 PUSH1 0x19 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST SWAP2 POP PUSH1 0x64 DUP4 PUSH1 0x68 SLOAD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH2 0x9B2 SWAP1 PUSH1 0x4B PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA02 JUMPI PUSH2 0x9FA DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9E0 JUMPI PUSH2 0x9E0 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 MLOAD DUP6 PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9C2 JUMP JUMPDEST POP DUP7 MLOAD ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP7 DUP4 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA2C JUMPI PUSH2 0xA2C PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST SWAP1 POP PUSH2 0xA6D DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA5F JUMPI PUSH2 0xA5F PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1865 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA0D JUMP JUMPDEST POP JUMPDEST PUSH1 0x6B DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xA88 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAA0 CALLER DUP3 PUSH2 0x16E4 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120726567697374657265642076616C696461746F722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1E74 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xC66 JUMPI PUSH1 0x69 SLOAD DUP2 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40A141FF PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40A141FF SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x6D SLOAD PUSH2 0xC07 SWAP1 TIMESTAMP PUSH2 0x1DB3 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6C PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCCE SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xCDF SWAP1 POP ADDRESS CALLER DUP6 PUSH2 0x69C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0xC59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x5FF SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xDC1 JUMPI PUSH1 0x72 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD7A DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE1F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE0B JUMPI JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 DUP2 ADD MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6F SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH2 0xE55 DUP3 DUP3 PUSH2 0x19B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE DUP6 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xECF JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xED3 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xF9F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x536D6172746E6F646573 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534E4F PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH9 0x6F05B59D3B20000000 PUSH1 0x68 SSTORE PUSH10 0x69E10DE76676D0800000 PUSH1 0x69 SSTORE PUSH2 0x2226 PUSH1 0x6A SSTORE PUSH1 0x0 PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH3 0x127500 PUSH1 0x6D SSTORE PUSH1 0x1 PUSH1 0x72 DUP2 SWAP1 SSTORE PUSH1 0x74 DUP2 SWAP1 SSTORE PUSH1 0x73 SSTORE JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1026 JUMPI PUSH2 0x101E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x100E JUMPI PUSH2 0x100E PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x69 SLOAD PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFF0 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x6B5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x690 DUP2 DUP6 DUP6 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x74 SLOAD DUP5 LT PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x24B73B30B634B21024A217 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x65 SLOAD SWAP3 MLOAD PUSH4 0x10154287 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x40550A1C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD SWAP3 MLOAD SWAP1 SWAP8 SWAP3 SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206164647265737320616C7265616479207365742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D757374206265207468652070726F78792061646D696E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x67 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12CD SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x68 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1301 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x762193B9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xEC432772 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1360 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1360 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x1360 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x157A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x168B SWAP1 DUP5 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x16D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1E74 JUMP JUMPDEST DUP1 PUSH2 0x1724 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x71 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x17DE DUP4 ADDRESS DUP5 PUSH2 0x69C JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x70 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1800 SWAP1 DUP5 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6C PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1819 SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DB JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18CD SWAP2 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x18FA SWAP1 DUP5 SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x196B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1039 DUP3 DUP3 PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DB SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x36 PUSH2 0x19A3 DUP4 DUP3 PUSH2 0x1F85 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xD12 DUP3 DUP3 PUSH2 0x1F85 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xAA0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19DE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19CA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A10 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x19F4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A64 DUP4 PUSH2 0x1A31 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA9 DUP5 PUSH2 0x1A31 JUMP JUMPDEST SWAP3 POP PUSH2 0x1AB7 PUSH1 0x20 DUP6 ADD PUSH2 0x1A31 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE2 DUP3 PUSH2 0x1A31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B4A JUMPI PUSH2 0x1B4A PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6C PUSH2 0x1B0B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1B9C PUSH2 0x1B97 DUP4 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x1B21 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1BBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1BE1 JUMPI PUSH2 0x1BD4 DUP2 PUSH2 0x1A31 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1BC3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C28 DUP10 DUP4 DUP11 ADD PUSH2 0x1B76 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 SWAP2 POP DUP2 DUP9 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 ADD PUSH1 0x1F DUP2 ADD DUP11 SGT PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1C5E PUSH2 0x1B97 DUP3 PUSH2 0x1B52 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0x1C7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1C9B JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP9 POP POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC8 DUP9 DUP3 DUP10 ADD PUSH2 0x1B76 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D0F DUP5 DUP3 DUP6 ADD PUSH2 0x1B76 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D33 DUP4 PUSH2 0x1A31 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D41 PUSH1 0x20 DUP5 ADD PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1DD8 JUMPI PUSH2 0x1DD8 PUSH2 0x1D9D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3A34A9B4B397 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1D9D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD12 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1F5E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F7D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1F6A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9F PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH2 0x1FAD DUP5 SLOAD PUSH2 0x1D4A JUMP JUMPDEST DUP5 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1FD0 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2017 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1FF8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2035 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD4 0x21 PUSH13 0x9AB17F45F147469E6F13A3968E PUSH10 0x27569684E83CD2C5E0D5 DUP11 PUSH28 0x506C64736F6C63430008190033000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x248"
    },
    "25": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13B"
    },
    "42": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCDF64A76"
    },
    "60": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xCDF64A76"
    },
    "71": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x58A"
    },
    "75": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8DF5DC1"
    },
    "82": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x59D"
    },
    "86": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5A6"
    },
    "97": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xEABD4BD7"
    },
    "104": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5DF"
    },
    "108": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "110": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xF0C37A59"
    },
    "115": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "116": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5E7"
    },
    "119": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "120": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "123": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "124": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "125": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "126": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA457C2D7"
    },
    "131": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "132": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x502"
    },
    "135": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "136": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "137": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA9059CBB"
    },
    "142": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x515"
    },
    "146": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "147": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "148": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xAB051190"
    },
    "153": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x528"
    },
    "157": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "158": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "159": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB7797537"
    },
    "164": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "165": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x531"
    },
    "168": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "169": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "170": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB8D4090D"
    },
    "175": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "176": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x56A"
    },
    "179": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "180": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "183": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "184": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "185": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "186": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "191": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "192": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "196": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "197": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x96AFC450"
    },
    "202": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "203": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4B7"
    },
    "206": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "207": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "208": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x991E0139"
    },
    "213": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "214": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4C0"
    },
    "217": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "218": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "219": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x99439089"
    },
    "224": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "225": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4D3"
    },
    "228": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "229": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "230": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA21BC3FB"
    },
    "235": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "236": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E6"
    },
    "239": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "240": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "241": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA224CEE7"
    },
    "246": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "247": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4EF"
    },
    "250": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "251": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "254": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "255": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "256": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "257": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "262": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "263": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x461"
    },
    "266": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "267": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "268": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7C405325"
    },
    "273": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "274": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x48A"
    },
    "277": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "278": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "279": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x88EF046D"
    },
    "284": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "285": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x49D"
    },
    "288": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "289": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "290": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95B84BC2"
    },
    "295": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "296": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4A6"
    },
    "299": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "300": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "301": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95D89B41"
    },
    "306": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "307": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4AF"
    },
    "310": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "311": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "314": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "315": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "316": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "317": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x37DEEA70"
    },
    "322": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "323": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C9"
    },
    "326": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "327": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "328": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x50355D76"
    },
    "333": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "334": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x18D"
    },
    "337": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "338": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "339": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x50355D76"
    },
    "344": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "345": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x420"
    },
    "348": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "349": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "350": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x56891412"
    },
    "355": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "356": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x429"
    },
    "359": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "360": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "361": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5A3E251F"
    },
    "366": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "367": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x432"
    },
    "370": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "371": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "372": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6E124888"
    },
    "377": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "378": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x43B"
    },
    "381": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "382": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "383": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6E27D889"
    },
    "388": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "389": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x44E"
    },
    "392": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "393": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "395": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "396": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "397": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "398": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "399": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x37DEEA70"
    },
    "404": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "405": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x385"
    },
    "408": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "409": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "410": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x39509351"
    },
    "415": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "416": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x38D"
    },
    "419": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "420": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "421": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x3E47158C"
    },
    "426": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "427": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3A0"
    },
    "430": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "431": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "432": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x497DFE63"
    },
    "437": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "438": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3CB"
    },
    "441": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "442": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "443": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x4A4FBEEC"
    },
    "448": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "449": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3E0"
    },
    "452": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "453": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "456": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "457": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "458": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "459": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "464": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "GT",
      "path": "24"
    },
    "465": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x210"
    },
    "468": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "469": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "470": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "475": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "476": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D0"
    },
    "479": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "480": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "481": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x259A28CF"
    },
    "486": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "487": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E3"
    },
    "490": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "491": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "492": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x27764547"
    },
    "497": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "498": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2ED"
    },
    "501": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "502": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "503": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x313CE567"
    },
    "508": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "509": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x30D"
    },
    "512": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "513": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "514": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x35AA2E44"
    },
    "519": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "520": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x31C"
    },
    "523": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "524": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "526": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "527": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "528": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "529": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "530": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6FDDE03"
    },
    "535": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "536": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x24D"
    },
    "539": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "540": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "541": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95EA7B3"
    },
    "546": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "547": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26B"
    },
    "550": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "551": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "552": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x180AEDF3"
    },
    "557": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "558": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28E"
    },
    "561": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "562": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "563": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x18160DDD"
    },
    "568": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "569": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BF"
    },
    "572": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "573": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "574": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x20D3A0B4"
    },
    "579": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "EQ",
      "path": "24"
    },
    "580": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C7"
    },
    "583": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "584": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "585": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "587": {
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "DUP1",
      "path": "24"
    },
    "588": {
      "first_revert": true,
      "fn": null,
      "offset": [
        184,
        10091
      ],
      "op": "REVERT",
      "path": "24"
    },
    "589": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "590": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255"
    },
    "593": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F0"
    },
    "596": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "597": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "598": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262"
    },
    "604": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "605": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "606": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E2"
    },
    "609": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "610": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "613": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "614": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "616": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "618": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "619": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "620": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "623": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279"
    },
    "626": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "627": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "629": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A48"
    },
    "632": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "633": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "634": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x682"
    },
    "637": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "638": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "639": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "641": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "ISZERO"
    },
    "644": {
      "op": "ISZERO"
    },
    "645": {
      "op": "DUP2"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262"
    },
    "653": {
      "op": "JUMP"
    },
    "654": {
      "offset": [
        981,
        1016
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "655": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "658": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29C"
    },
    "661": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "662": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "664": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "667": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        981,
        1016
      ],
      "op": "JUMP",
      "path": "24"
    },
    "668": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "669": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "671": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "673": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "674": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "676": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "677": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "DUP2",
      "path": "24"
    },
    "678": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "679": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "681": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "682": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "683": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "685": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "ADD",
      "path": "24"
    },
    "686": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "687": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "DUP2",
      "path": "24"
    },
    "688": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "JUMP",
      "path": "24"
    },
    "689": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "690": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "692": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        981,
        1016
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "693": {
      "op": "SWAP1"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "offset": [
        981,
        1016
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x262"
    },
    "702": {
      "op": "JUMP"
    },
    "703": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "706": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "707": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "710": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "711": {
      "offset": [
        677,
        704
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "712": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "715": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "717": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "718": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "DUP2",
      "path": "24"
    },
    "719": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        677,
        704
      ],
      "op": "JUMP",
      "path": "24"
    },
    "720": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "721": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "724": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DE"
    },
    "727": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "728": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "730": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8B"
    },
    "733": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "734": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "735": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69C"
    },
    "738": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "739": {
      "offset": [
        426,
        475
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "740": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        426,
        475
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "743": {
      "offset": [
        466,
        475
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0x127500"
    },
    "747": {
      "offset": [
        426,
        475
      ],
      "op": "DUP2",
      "path": "24"
    },
    "748": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        426,
        475
      ],
      "op": "JUMP",
      "path": "24"
    },
    "749": {
      "offset": [
        1075,
        1130
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "750": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "753": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2FB"
    },
    "756": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "757": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "759": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AC7"
    },
    "762": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1075,
        1130
      ],
      "op": "JUMP",
      "path": "24"
    },
    "763": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "764": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "766": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "769": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "771": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "772": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "DUP2",
      "path": "24"
    },
    "773": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "774": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "776": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "777": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "778": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "779": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "DUP2",
      "path": "24"
    },
    "780": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1075,
        1130
      ],
      "op": "JUMP",
      "path": "24"
    },
    "781": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "782": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "784": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "785": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "787": {
      "op": "DUP2"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "791": {
      "op": "ADD"
    },
    "792": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262"
    },
    "795": {
      "op": "JUMP"
    },
    "796": {
      "offset": [
        1022,
        1069
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "797": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x35B"
    },
    "800": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x32A"
    },
    "803": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "804": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "806": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "809": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        1022,
        1069
      ],
      "op": "JUMP",
      "path": "24"
    },
    "810": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "811": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "813": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "815": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "816": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "818": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "819": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "DUP2",
      "path": "24"
    },
    "820": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "821": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "824": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "825": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "DUP1",
      "path": "24"
    },
    "826": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "827": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "829": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "DUP3",
      "path": "24"
    },
    "830": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "ADD",
      "path": "24"
    },
    "831": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "832": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "834": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "DUP4",
      "path": "24"
    },
    "835": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "ADD",
      "path": "24"
    },
    "836": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "837": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "839": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "840": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "841": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "ADD",
      "path": "24"
    },
    "842": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "SUB"
    },
    "851": {
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "852": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "853": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "AND",
      "path": "24"
    },
    "854": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "855": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "856": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "857": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "DUP5",
      "path": "24"
    },
    "858": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "JUMP",
      "path": "24"
    },
    "859": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "860": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "862": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "DUP1",
      "path": "24"
    },
    "863": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1022,
        1069
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "op": "SWAP1"
    },
    "873": {
      "op": "SWAP6"
    },
    "874": {
      "op": "AND"
    },
    "875": {
      "op": "DUP6"
    },
    "876": {
      "op": "MSTORE"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "879": {
      "op": "DUP6"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "op": "SWAP4"
    },
    "882": {
      "op": "SWAP1"
    },
    "883": {
      "op": "SWAP4"
    },
    "884": {
      "op": "MSTORE"
    },
    "885": {
      "op": "SWAP2"
    },
    "886": {
      "op": "DUP4"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "offset": [
        1022,
        1069
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x262"
    },
    "900": {
      "op": "JUMP"
    },
    "901": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9533,
        9660
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "902": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9533,
        9660
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "905": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9533,
        9660
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6C0"
    },
    "908": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        9533,
        9660
      ],
      "op": "JUMP",
      "path": "24"
    },
    "909": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "910": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "913": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39B"
    },
    "916": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "917": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "919": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A48"
    },
    "922": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "923": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "924": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x733"
    },
    "927": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "928": {
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "929": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "931": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "932": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3B3"
    },
    "935": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "op": "SUB"
    },
    "944": {
      "offset": [
        284,
        309
      ],
      "op": "AND",
      "path": "24"
    },
    "945": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "DUP2",
      "path": "24"
    },
    "946": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "JUMP",
      "path": "24"
    },
    "947": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "948": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "950": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        284,
        309
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "op": "SWAP1"
    },
    "960": {
      "op": "SWAP2"
    },
    "961": {
      "op": "AND"
    },
    "962": {
      "op": "DUP2"
    },
    "963": {
      "op": "MSTORE"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "offset": [
        284,
        309
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x262"
    },
    "970": {
      "op": "JUMP"
    },
    "971": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "972": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "975": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3D9"
    },
    "978": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "979": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "981": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AE9"
    },
    "984": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMP",
      "path": "24"
    },
    "985": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "986": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x772"
    },
    "989": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMP",
      "path": "24"
    },
    "990": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "991": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "STOP",
      "path": "24"
    },
    "992": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "993": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27E"
    },
    "996": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3EE"
    },
    "999": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1000": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1002": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AC7"
    },
    "1005": {
      "fn": "SmartnodesCore.isLocked",
      "jump": "i",
      "offset": [
        9334,
        9527
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1006": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1013": {
      "op": "SHL"
    },
    "1014": {
      "op": "SUB"
    },
    "1015": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "AND",
      "path": "24"
    },
    "1016": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9401,
        9405
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1018": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1019": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1020": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1021": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9450
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "1023": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1025": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1026": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1027": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1028": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1030": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1031": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1032": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1033": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9430,
        9468
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1034": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9510,
        9520
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 2,
      "value": "0x69"
    },
    "1036": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9510,
        9520
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1037": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1038": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1039": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1040": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9495
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "1042": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1043": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1044": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1045": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1046": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1047": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9499
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1048": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9506
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1050": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9506
      ],
      "op": "ADD",
      "path": "24"
    },
    "1051": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9506
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1052": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9520
      ],
      "op": "LT",
      "path": "24"
    },
    "1053": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9520
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1054": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9485,
        9520
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1055": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        9334,
        9527
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1056": {
      "offset": [
        1137,
        1162
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1057": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1137,
        1162
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1060": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1137,
        1162
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x72"
    },
    "1062": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1137,
        1162
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1063": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1137,
        1162
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1064": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        1137,
        1162
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1065": {
      "offset": [
        645,
        671
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1066": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1069": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "1071": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1072": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1073": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        645,
        671
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1074": {
      "offset": [
        568,
        596
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1075": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1078": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "1080": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1081": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1082": {
      "fn": "SmartnodesCore.isLocked",
      "offset": [
        568,
        596
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1083": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1084": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "1087": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x449"
    },
    "1090": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1091": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1093": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1BEC"
    },
    "1096": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5222,
        6511
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1097": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1098": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8F1"
    },
    "1101": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5222,
        6511
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1102": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1103": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "1106": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x45C"
    },
    "1109": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1110": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1112": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "1115": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7114,
        7207
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1116": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1117": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA96"
    },
    "1120": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7114,
        7207
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1121": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1122": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "1125": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46F"
    },
    "1128": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1129": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1131": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC7"
    },
    "1134": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1135": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "op": "SUB"
    },
    "1144": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 3
    },
    "1145": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1147": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1148": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1149": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1150": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1152": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1154": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1155": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1157": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1158": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1159": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1160": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1161": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1162": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1163": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "1166": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x498"
    },
    "1169": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1170": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1172": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "1175": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1176": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1177": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAA3"
    },
    "1180": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1181": {
      "offset": [
        602,
        639
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1182": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1185": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "1187": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1188": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1189": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        602,
        639
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1190": {
      "offset": [
        316,
        350
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1191": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1194": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "1196": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1197": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1198": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        316,
        350
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1199": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1200": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255"
    },
    "1203": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD17"
    },
    "1206": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1207": {
      "offset": [
        504,
        531
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1208": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1211": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "1213": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1214": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1215": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        504,
        531
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1216": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1217": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1220": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4CE"
    },
    "1223": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1224": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1226": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "1229": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1230": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1231": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD26"
    },
    "1234": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1235": {
      "offset": [
        234,
        278
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1236": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "1238": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1239": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3B3"
    },
    "1242": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "offset": [
        234,
        278
      ],
      "op": "AND",
      "path": "24"
    },
    "1252": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1253": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        234,
        278
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1254": {
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1255": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1258": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x75"
    },
    "1260": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1237,
        1269
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1261": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1262": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1263": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1264": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "1267": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4FD"
    },
    "1270": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1271": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1273": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1CDA"
    },
    "1276": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1277": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1278": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEB4"
    },
    "1281": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1282": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1283": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "1286": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x510"
    },
    "1289": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1290": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1292": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A48"
    },
    "1295": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1296": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1297": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103D"
    },
    "1300": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1301": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1302": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "1305": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x523"
    },
    "1308": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1309": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1311": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A48"
    },
    "1314": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1315": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1316": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10CF"
    },
    "1319": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1320": {
      "offset": [
        1200,
        1231
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1321": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1200,
        1231
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1324": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1200,
        1231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "1326": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1200,
        1231
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1327": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1200,
        1231
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1328": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1200,
        1231
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1329": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1330": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x544"
    },
    "1333": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x53F"
    },
    "1336": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1337": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1339": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "1342": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1343": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1344": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10DD"
    },
    "1347": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1348": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1349": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1351": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1352": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1353": {
      "op": "SWAP4"
    },
    "1354": {
      "op": "ISZERO"
    },
    "1355": {
      "op": "ISZERO"
    },
    "1356": {
      "op": "DUP5"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1360": {
      "op": "DUP5"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "SWAP3"
    },
    "1363": {
      "op": "SWAP1"
    },
    "1364": {
      "op": "SWAP3"
    },
    "1365": {
      "op": "MSTORE"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "op": "AND"
    },
    "1375": {
      "op": "SWAP1"
    },
    "1376": {
      "op": "DUP3"
    },
    "1377": {
      "op": "ADD"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x262"
    },
    "1385": {
      "op": "JUMP"
    },
    "1386": {
      "offset": [
        929,
        975
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1387": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1390": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x578"
    },
    "1393": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1394": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1396": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A72"
    },
    "1399": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        929,
        975
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1400": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1401": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "1403": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1405": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1406": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1408": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1409": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1410": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1411": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1413": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1414": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1415": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1416": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1417": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        929,
        975
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1418": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1419": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "1422": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x598"
    },
    "1425": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1426": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1428": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AC7"
    },
    "1431": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2556,
        2824
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1432": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1433": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11E5"
    },
    "1436": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "i",
      "offset": [
        2556,
        2824
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1437": {
      "offset": [
        537,
        562
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1438": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1441": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "1443": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1444": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1445": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        537,
        562
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1446": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1447": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "1450": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B4"
    },
    "1453": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1454": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1456": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D17"
    },
    "1459": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1460": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 4
    },
    "1470": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1471": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "1472": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1474": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1475": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1476": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1477": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "1479": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1481": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1482": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1483": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1484": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1486": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1487": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1488": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1489": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1490": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1491": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1492": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "1493": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1494": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1495": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1496": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1497": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1498": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1499": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1500": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1501": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1502": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1503": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2830,
        3257
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1504": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2830,
        3257
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3DE"
    },
    "1507": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2830,
        3257
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1260"
    },
    "1510": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        2830,
        3257
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1511": {
      "offset": [
        1168,
        1194
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1512": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1168,
        1194
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B1"
    },
    "1515": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1168,
        1194
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x73"
    },
    "1517": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1168,
        1194
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1518": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1168,
        1194
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1519": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1168,
        1194
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1520": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1521": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1523": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x36"
    },
    "1525": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1526": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1527": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "1530": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1531": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4A"
    },
    "1534": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1535": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1536": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1537": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1539": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1540": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1542": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1543": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1544": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "1545": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "1546": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1548": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1549": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1551": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1552": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1553": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1554": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1555": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1557": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1558": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1559": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1560": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1561": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1562": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1563": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1564": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1565": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1567": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1568": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1569": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1570": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1571": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62B"
    },
    "1574": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1575": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4A"
    },
    "1578": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1579": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1580": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1581": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1582": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x678"
    },
    "1585": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1586": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1587": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1589": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "1590": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64D"
    },
    "1593": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1594": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1597": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1598": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "1601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "1602": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1603": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1604": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1605": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1607": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1608": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1609": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x678"
    },
    "1612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1613": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1614": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1616": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1618": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1620": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1621": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1623": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1625": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1626": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1627": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1628": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1629": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1630": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1631": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1632": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1633": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1635": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1636": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1639": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1640": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1641": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1642": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "1643": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65B"
    },
    "1646": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1647": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1648": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1649": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "1650": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1652": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "1653": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1654": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "1655": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1656": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1657": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1658": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1659": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1660": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1661": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1662": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1663": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "1664": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1665": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1666": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1667": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1669": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 6
    },
    "1670": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x690"
    },
    "1673": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1674": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1675": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1676": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1366"
    },
    "1679": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1680": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1681": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "1683": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1684": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "1685": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "2"
    },
    "1686": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1687": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1688": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1689": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "1690": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "2"
    },
    "1691": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1692": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1693": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1695": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1696": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x6AA"
    },
    "1699": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1700": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1701": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1702": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148A"
    },
    "1705": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1706": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1707": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x6B5"
    },
    "1710": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1711": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1712": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1713": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1516"
    },
    "1716": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1717": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x1"
    },
    "1721": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1722": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1723": {
      "op": "POP"
    },
    "1724": {
      "op": "POP"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1728": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9533,
        9660
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1729": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9634
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 12,
      "value": "0x65"
    },
    "1731": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9634
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1732": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1734": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1735": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1736": {
      "op": "PUSH4",
      "value": "0x48F17129"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1745": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1746": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1747": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1748": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9591,
        9598
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1750": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9591,
        9598
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "SUB"
    },
    "1759": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9634
      ],
      "op": "AND",
      "path": "24"
    },
    "1760": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9634
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1761": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9651
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x91E2E252"
    },
    "1766": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9651
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1767": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1769": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1770": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1771": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ADD",
      "path": "24"
    },
    "1772": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1773": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1775": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1776": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1777": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1778": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1779": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1780": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SUB",
      "path": "24"
    },
    "1781": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ADD",
      "path": "24"
    },
    "1782": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1783": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9634
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1784": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "GAS",
      "path": "24"
    },
    "1785": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "1786": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1787": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1788": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1789": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x70A"
    },
    "1792": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1793": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1794": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1796": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1797": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "1798": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1799": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1801": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1802": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1803": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "POP",
      "path": "24"
    },
    "1804": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "POP",
      "path": "24"
    },
    "1805": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "POP",
      "path": "24"
    },
    "1806": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "POP",
      "path": "24"
    },
    "1807": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1809": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1810": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1811": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "1813": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "NOT",
      "path": "24"
    },
    "1814": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "1816": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1817": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ADD",
      "path": "24"
    },
    "1818": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "AND",
      "path": "24"
    },
    "1819": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1820": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ADD",
      "path": "24"
    },
    "1821": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1822": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1824": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1825": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "POP",
      "path": "24"
    },
    "1826": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1827": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "ADD",
      "path": "24"
    },
    "1828": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1829": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x72E"
    },
    "1832": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1833": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1834": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D84"
    },
    "1837": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "i",
      "offset": [
        9617,
        9653
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1838": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9617,
        9653
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1839": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9610,
        9653
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1840": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9610,
        9653
      ],
      "op": "POP",
      "path": "24"
    },
    "1841": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "offset": [
        9533,
        9660
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1842": {
      "fn": "SmartnodesCore.getActiveValidatorCount",
      "jump": "o",
      "offset": [
        9533,
        9660
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1843": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1844": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1845": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1847": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 13
    },
    "1848": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1849": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1850": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "1852": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1854": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1855": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1856": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1857": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1859": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1860": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1861": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1871": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "2"
    },
    "1872": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1873": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1874": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1875": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1876": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1877": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1878": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1879": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1880": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1881": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1882": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1883": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x690"
    },
    "1886": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1887": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1888": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1889": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1890": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1891": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x76D"
    },
    "1894": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1895": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1896": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1897": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB3"
    },
    "1900": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1901": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1902": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1366"
    },
    "1905": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1906": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1907": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8749,
        8759
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 14
    },
    "1908": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1910": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1911": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1912": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1913": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1915": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1917": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1918": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1920": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1921": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1922": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1923": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8764,
        8775
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1924": {
      "op": "GT"
    },
    "1925": {
      "branch": 101,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8775
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1926": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8804
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1927": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8804
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1928": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8804
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x793"
    },
    "1931": {
      "branch": 101,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8804
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1932": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8804
      ],
      "op": "POP",
      "path": "24"
    },
    "1933": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8794,
        8804
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "1935": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8794,
        8804
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1936": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8779,
        8790
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1937": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8779,
        8804
      ],
      "op": "LT",
      "path": "24"
    },
    "1938": {
      "branch": 102,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8779,
        8804
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1939": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8739,
        8804
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1940": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7E4"
    },
    "1943": {
      "branch": 102,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1944": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1946": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1953": {
      "op": "SHL"
    },
    "1954": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1955": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1958": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1960": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1961": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "ADD",
      "path": "24"
    },
    "1962": {
      "op": "MSTORE"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1967": {
      "op": "DUP3"
    },
    "1968": {
      "op": "ADD"
    },
    "1969": {
      "op": "MSTORE"
    },
    "1970": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420746F6B656E2062616C616E63652E0000000000"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2005": {
      "op": "DUP3"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2010": {
      "op": "ADD"
    },
    "2011": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2012": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2014": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2015": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2016": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2017": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "SUB",
      "path": "24"
    },
    "2018": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2019": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "24"
    },
    "2020": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8718,
        8857
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2021": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8909,
        8919
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 15
    },
    "2022": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2024": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2025": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2026": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2027": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8908
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "2029": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2031": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2032": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2034": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2035": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2036": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8920
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2037": {
      "branch": 103,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8888,
        8925
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2038": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x856"
    },
    "2041": {
      "branch": 103,
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2042": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2044": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2051": {
      "op": "SHL"
    },
    "2052": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2053": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2056": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2058": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2059": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "ADD",
      "path": "24"
    },
    "2060": {
      "op": "MSTORE"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2065": {
      "op": "DUP3"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "MSTORE"
    },
    "2068": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C7265616479206372656174656420776974682074"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "MSTORE"
    },
    "2106": {
      "op": "PUSH12",
      "value": "0x686973206163636F756E7421"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "2133": {
      "op": "JUMP"
    },
    "2134": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8867,
        8995
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2135": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 16,
      "value": "0x40"
    },
    "2137": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2138": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2139": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2141": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2142": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2143": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2144": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2145": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9071,
        9081
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2146": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2147": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2148": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2151": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2153": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2154": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2155": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2156": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2157": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2158": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2159": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2160": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2161": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2162": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2163": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2164": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2165": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2167": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2168": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2169": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2170": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2171": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9037,
        9185
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2172": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9017,
        9033
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x74"
    },
    "2174": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9017,
        9033
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2175": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9017,
        9033
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2176": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2177": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2178": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "2180": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2181": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2182": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2183": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2184": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9034
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2185": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "2186": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2187": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2188": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "op": "SUB"
    },
    "2197": {
      "op": "NOT"
    },
    "2198": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "AND",
      "path": "24"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "op": "SUB"
    },
    "2207": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2208": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2209": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "AND",
      "path": "24"
    },
    "2210": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "OR",
      "path": "24"
    },
    "2211": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2212": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2213": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2214": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2218": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2219": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2220": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2221": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2222": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2224": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2225": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2226": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2227": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2228": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2230": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2231": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "2232": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "ADD",
      "path": "24"
    },
    "2233": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2234": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2235": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2236": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9006,
        9185
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2237": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9231,
        9247
      ],
      "op": "SWAP3",
      "path": "24",
      "statement": 17
    },
    "2238": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9231,
        9247
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2239": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2240": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2241": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2242": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9216
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "2244": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2245": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2246": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2247": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2248": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2249": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2250": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9228
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2251": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9196,
        9247
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2252": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9281,
        9291
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 18,
      "value": "0x69"
    },
    "2254": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9281,
        9291
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2255": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9257,
        9292
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8D8"
    },
    "2258": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9257,
        9292
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2259": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9071,
        9081
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2260": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9257,
        9268
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16E4"
    },
    "2263": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        9257,
        9292
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2264": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9257,
        9292
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2265": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9319
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 19,
      "value": "0x74"
    },
    "2267": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2268": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2269": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2270": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9319
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2272": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8E8"
    },
    "2275": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2276": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DC6"
    },
    "2279": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "i",
      "offset": [
        9303,
        9321
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2280": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2281": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2282": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2283": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "POP",
      "path": "24"
    },
    "2284": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2285": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        9303,
        9321
      ],
      "op": "POP",
      "path": "24"
    },
    "2286": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "POP",
      "path": "24"
    },
    "2287": {
      "fn": "SmartnodesCore.createValidator",
      "offset": [
        8607,
        9328
      ],
      "op": "POP",
      "path": "24"
    },
    "2288": {
      "fn": "SmartnodesCore.createValidator",
      "jump": "o",
      "offset": [
        8607,
        9328
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2289": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2290": {
      "offset": [
        1760,
        1777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "2292": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1760,
        1777
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "op": "SUB"
    },
    "2301": {
      "offset": [
        1760,
        1777
      ],
      "op": "AND",
      "path": "24"
    },
    "2302": {
      "offset": [
        1738,
        1748
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2303": {
      "offset": [
        1738,
        1778
      ],
      "op": "EQ",
      "path": "24"
    },
    "2304": {
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x91B"
    },
    "2307": {
      "offset": [
        1717,
        1842
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2308": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2310": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "offset": [
        1717,
        1842
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2319": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2320": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2322": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "ADD",
      "path": "24"
    },
    "2323": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "2326": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2327": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DDF"
    },
    "2330": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        1717,
        1842
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2331": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        1717,
        1842
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2332": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5501,
        5514
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "2334": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5501,
        5514
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2335": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5475,
        5497
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6B"
    },
    "2337": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5475,
        5497
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2338": {
      "branch": 104,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5475,
        5514
      ],
      "op": "LT",
      "path": "24"
    },
    "2339": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5471,
        5623
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x94B"
    },
    "2342": {
      "branch": 104,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5471,
        5623
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2343": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5549,
        5561
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "2345": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5549,
        5561
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2346": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5534,
        5546
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2348": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5534,
        5546
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2349": {
      "branch": 105,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5534,
        5561
      ],
      "op": "GT",
      "path": "24"
    },
    "2350": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5530,
        5613
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2351": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5530,
        5613
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x94B"
    },
    "2354": {
      "branch": 105,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5530,
        5613
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2355": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5597,
        5598
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 20,
      "value": "0x2"
    },
    "2357": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5593
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2359": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5593
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2361": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2362": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2363": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2364": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x945"
    },
    "2367": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2368": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2369": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "2372": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5581,
        5598
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2373": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2374": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2375": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2376": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5581,
        5598
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5530,
        5613
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2380": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5633,
        5656
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2382": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5666,
        5686
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2383": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5701,
        5709
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2384": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5701,
        5716
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2385": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5720,
        5721
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2387": {
      "branch": 106,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5701,
        5721
      ],
      "op": "SUB",
      "path": "24"
    },
    "2388": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5697,
        5997
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x970"
    },
    "2391": {
      "branch": 106,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5697,
        5997
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2392": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5770,
        5786
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 21
    },
    "2393": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5767
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2395": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5767
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2396": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5786
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x965"
    },
    "2399": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5786
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2400": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5786
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2401": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5786
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DB3"
    },
    "2404": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5755,
        5786
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2405": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5755,
        5786
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2406": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5737,
        5786
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2407": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5737,
        5786
      ],
      "op": "POP",
      "path": "24"
    },
    "2408": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5815,
        5816
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 22,
      "value": "0x0"
    },
    "2410": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5800,
        5816
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2411": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5800,
        5816
      ],
      "op": "POP",
      "path": "24"
    },
    "2412": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5697,
        5997
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9BF"
    },
    "2415": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5697,
        5997
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2416": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5697,
        5997
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2417": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5908,
        5911
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 23,
      "value": "0x64"
    },
    "2419": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5882,
        5898
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2420": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5879
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2422": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5879
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2423": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5898
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x980"
    },
    "2426": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5898
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2427": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5898
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2428": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5898
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DB3"
    },
    "2431": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5867,
        5898
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2432": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5867,
        5898
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2433": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5866,
        5904
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x98B"
    },
    "2436": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5866,
        5904
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2437": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5902,
        5904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x19"
    },
    "2439": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5866,
        5904
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E47"
    },
    "2442": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5866,
        5904
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2443": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5866,
        5904
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2444": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5865,
        5911
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x995"
    },
    "2447": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5865,
        5911
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2448": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5865,
        5911
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2449": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5865,
        5911
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "2452": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5865,
        5911
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2453": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5865,
        5911
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2454": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5847,
        5911
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2455": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5847,
        5911
      ],
      "op": "POP",
      "path": "24"
    },
    "2456": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5983,
        5986
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 24,
      "value": "0x64"
    },
    "2458": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5957,
        5973
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2459": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5954
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "2461": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5954
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2462": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5973
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9A7"
    },
    "2465": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5973
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2466": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5973
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2467": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5973
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DB3"
    },
    "2470": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5942,
        5973
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2471": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5942,
        5973
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2472": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5941,
        5979
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B2"
    },
    "2475": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5941,
        5979
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2476": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5977,
        5979
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4B"
    },
    "2478": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5941,
        5979
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E47"
    },
    "2481": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5941,
        5979
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2482": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5941,
        5979
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2483": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5940,
        5986
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9BC"
    },
    "2486": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5940,
        5986
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2487": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5940,
        5986
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2488": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5940,
        5986
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "2491": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        5940,
        5986
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2492": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5940,
        5986
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2493": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5925,
        5986
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2494": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5925,
        5986
      ],
      "op": "POP",
      "path": "24"
    },
    "2495": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5697,
        5997
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2496": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6012,
        6021
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2498": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2499": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6031,
        6047
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2500": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6031,
        6054
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2501": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6027,
        6028
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2502": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6027,
        6054
      ],
      "op": "LT",
      "path": "24"
    },
    "2503": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2504": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA02"
    },
    "2507": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2508": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6075,
        6190
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 25,
      "value": "0x9FA"
    },
    "2511": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6114
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2512": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6115,
        6116
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2513": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2514": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2515": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2516": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "LT",
      "path": "24"
    },
    "2517": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9E0"
    },
    "2520": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2521": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9E0"
    },
    "2524": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E5E"
    },
    "2527": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6098,
        6117
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2528": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2529": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2531": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "MUL",
      "path": "24"
    },
    "2532": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2534": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "ADD",
      "path": "24"
    },
    "2535": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "ADD",
      "path": "24"
    },
    "2536": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6098,
        6117
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2537": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6153,
        6169
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2538": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6153,
        6176
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2539": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6135,
        6150
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2540": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6135,
        6176
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9F5"
    },
    "2543": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6135,
        6176
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2544": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6135,
        6176
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2545": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6135,
        6176
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "2548": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6135,
        6176
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2549": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6135,
        6176
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2550": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6075,
        6080
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1865"
    },
    "2553": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6075,
        6190
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2554": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6075,
        6190
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2555": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6056,
        6059
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 26,
      "value": "0x1"
    },
    "2557": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6056,
        6059
      ],
      "op": "ADD",
      "path": "24"
    },
    "2558": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9C2"
    },
    "2561": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2562": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6007,
        6201
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6215,
        6230
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2565": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6215,
        6230
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2566": {
      "branch": 107,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6215,
        6234
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2567": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6211,
        6470
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA78"
    },
    "2570": {
      "branch": 107,
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6211,
        6470
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2571": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6255,
        6264
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2573": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2574": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6274,
        6282
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2575": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6274,
        6289
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2576": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6271
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2577": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6270,
        6289
      ],
      "op": "LT",
      "path": "24"
    },
    "2578": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2579": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA76"
    },
    "2582": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2583": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6314,
        6328
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2585": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6386,
        6400
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2586": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6350,
        6362
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2587": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6344
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2588": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6345,
        6346
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2589": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2590": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2591": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2592": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "LT",
      "path": "24"
    },
    "2593": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA2C"
    },
    "2596": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2597": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA2C"
    },
    "2600": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E5E"
    },
    "2603": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6333,
        6347
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2604": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2605": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2607": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "MUL",
      "path": "24"
    },
    "2608": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2610": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "ADD",
      "path": "24"
    },
    "2611": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "ADD",
      "path": "24"
    },
    "2612": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6347
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2613": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6362
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA3E"
    },
    "2616": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6362
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2617": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6362
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2618": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6362
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E47"
    },
    "2621": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6333,
        6362
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2622": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6333,
        6362
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2623": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6332,
        6400
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA48"
    },
    "2626": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6332,
        6400
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2627": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6332,
        6400
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2628": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6332,
        6400
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "2631": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6332,
        6400
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2632": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6332,
        6400
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2633": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6314,
        6401
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2634": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6314,
        6401
      ],
      "op": "POP",
      "path": "24"
    },
    "2635": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6419,
        6445
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 27,
      "value": "0xA6D"
    },
    "2638": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6433
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2639": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6434,
        6435
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2640": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2641": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2642": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2643": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "LT",
      "path": "24"
    },
    "2644": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA5F"
    },
    "2647": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2648": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA5F"
    },
    "2651": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E5E"
    },
    "2654": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6425,
        6436
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2655": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2656": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2658": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "MUL",
      "path": "24"
    },
    "2659": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2661": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "ADD",
      "path": "24"
    },
    "2662": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "ADD",
      "path": "24"
    },
    "2663": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6425,
        6436
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2664": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6438,
        6444
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2665": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6419,
        6424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1865"
    },
    "2668": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6419,
        6445
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2669": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6419,
        6445
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6291,
        6294
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 28,
      "value": "0x1"
    },
    "2673": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6291,
        6294
      ],
      "op": "ADD",
      "path": "24"
    },
    "2674": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA0D"
    },
    "2677": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2678": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2679": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6250,
        6460
      ],
      "op": "POP",
      "path": "24"
    },
    "2680": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6211,
        6470
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2681": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6502
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 29,
      "value": "0x6B"
    },
    "2683": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2684": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2685": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2686": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6502
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2688": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA88"
    },
    "2691": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2692": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DC6"
    },
    "2695": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "i",
      "offset": [
        6480,
        6504
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2696": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2697": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2698": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2699": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "POP",
      "path": "24"
    },
    "2700": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2701": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        6480,
        6504
      ],
      "op": "POP",
      "path": "24"
    },
    "2702": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5461,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2703": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5461,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2704": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2705": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2706": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2707": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2708": {
      "fn": "SmartnodesCore.mintTokens",
      "offset": [
        5222,
        6511
      ],
      "op": "POP",
      "path": "24"
    },
    "2709": {
      "fn": "SmartnodesCore.mintTokens",
      "jump": "o",
      "offset": [
        5222,
        6511
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2710": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2711": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7169,
        7200
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 30,
      "value": "0xAA0"
    },
    "2714": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7181,
        7191
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2715": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7193,
        7199
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2716": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7169,
        7180
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16E4"
    },
    "2719": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "i",
      "offset": [
        7169,
        7200
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2720": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7169,
        7200
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2721": {
      "fn": "SmartnodesCore.lockTokens",
      "offset": [
        7114,
        7207
      ],
      "op": "POP",
      "path": "24"
    },
    "2722": {
      "fn": "SmartnodesCore.lockTokens",
      "jump": "o",
      "offset": [
        7114,
        7207
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2723": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2724": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7313,
        7323
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2725": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7270,
        7289
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2727": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2728": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2729": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2730": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7312
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "2732": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2734": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2735": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2737": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2738": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2739": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7292,
        7324
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2740": {
      "branch": 108,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7342,
        7357
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 31
    },
    "2741": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB00"
    },
    "2744": {
      "branch": 108,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2745": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2747": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2756": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2759": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2761": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2762": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "ADD",
      "path": "24"
    },
    "2763": {
      "op": "MSTORE"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2768": {
      "op": "DUP3"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "MSTORE"
    },
    "2771": {
      "op": "PUSH32",
      "value": "0x4E6F74206120726567697374657265642076616C696461746F722E0000000000"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2806": {
      "op": "DUP3"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "op": "MSTORE"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "2815": {
      "op": "JUMP"
    },
    "2816": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7334,
        7389
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2817": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7400,
        7427
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2819": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2820": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2821": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2822": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7440
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "2824": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2826": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2827": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2829": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2830": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7430,
        7453
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2831": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7482,
        7498
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 32,
      "value": "0x1"
    },
    "2833": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7482,
        7498
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2834": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7482,
        7498
      ],
      "op": "ADD",
      "path": "24"
    },
    "2835": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7482,
        7498
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2836": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7472,
        7498
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2837": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7472,
        7498
      ],
      "op": "GT",
      "path": "24"
    },
    "2838": {
      "branch": 109,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7472,
        7498
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2839": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB62"
    },
    "2842": {
      "branch": 109,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2843": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2845": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2854": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2857": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2859": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2860": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "ADD",
      "path": "24"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2866": {
      "op": "DUP3"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2904": {
      "op": "DUP3"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2909": {
      "op": "ADD"
    },
    "2910": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "2913": {
      "op": "JUMP"
    },
    "2914": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7464,
        7533
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2915": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7560,
        7561
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 33,
      "value": "0x0"
    },
    "2917": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7551,
        7557
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2918": {
      "branch": 110,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7551,
        7561
      ],
      "op": "GT",
      "path": "24"
    },
    "2919": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB82"
    },
    "2922": {
      "branch": 110,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2923": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2925": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2932": {
      "op": "SHL"
    },
    "2933": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2934": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2935": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2937": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "ADD",
      "path": "24"
    },
    "2938": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "2941": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2942": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E74"
    },
    "2945": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7543,
        7599
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2946": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7543,
        7599
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2947": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7685,
        7694
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2948": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7685,
        7705
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2950": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7685,
        7705
      ],
      "op": "ADD",
      "path": "24"
    },
    "2951": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7685,
        7705
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2952": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7709,
        7710
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2954": {
      "branch": 111,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7685,
        7710
      ],
      "op": "SUB",
      "path": "24"
    },
    "2955": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7681,
        8595
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC66"
    },
    "2958": {
      "branch": 111,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7681,
        8595
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2959": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7749,
        7759
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "2961": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7749,
        7759
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2962": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7730,
        7739
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2963": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7730,
        7746
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2965": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7730,
        7746
      ],
      "op": "ADD",
      "path": "24"
    },
    "2966": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7730,
        7746
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2967": {
      "branch": 112,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7730,
        7759
      ],
      "op": "LT",
      "path": "24"
    },
    "2968": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7726,
        7839
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2969": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7726,
        7839
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBFA"
    },
    "2972": {
      "branch": 112,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7726,
        7839
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2973": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7796
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 34,
      "value": "0x65"
    },
    "2975": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7796
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2976": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2978": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2979": {
      "op": "PUSH4",
      "value": "0x40A141FF"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2986": {
      "op": "SHL"
    },
    "2987": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2988": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2989": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7813,
        7823
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2990": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2992": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2993": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "ADD",
      "path": "24"
    },
    "2994": {
      "op": "MSTORE"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3001": {
      "op": "SHL"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7796
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3004": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7796
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3005": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7796
      ],
      "op": "AND",
      "path": "24"
    },
    "3006": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7796
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3007": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7812
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40A141FF"
    },
    "3012": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7812
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3018": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3020": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3021": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3022": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3023": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "SUB",
      "path": "24"
    },
    "3024": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3025": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3027": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP8",
      "path": "24"
    },
    "3028": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3029": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "3030": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3031": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3032": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3033": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBE1"
    },
    "3036": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3037": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3039": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3040": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3041": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3042": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "POP",
      "path": "24"
    },
    "3043": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "GAS",
      "path": "24"
    },
    "3044": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "CALL",
      "path": "24"
    },
    "3045": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3046": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3047": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3048": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBF5"
    },
    "3051": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3052": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3053": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3055": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3056": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3057": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3058": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3060": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3061": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3062": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "POP",
      "path": "24"
    },
    "3063": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "POP",
      "path": "24"
    },
    "3064": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "POP",
      "path": "24"
    },
    "3065": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7779,
        7824
      ],
      "op": "POP",
      "path": "24"
    },
    "3066": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7726,
        7839
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3067": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7893,
        7905
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 35,
      "value": "0x6D"
    },
    "3069": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7893,
        7905
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3070": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC07"
    },
    "3073": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3074": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7875,
        7890
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "3075": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DB3"
    },
    "3078": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7875,
        7905
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3079": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7875,
        7905
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3080": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7861
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3081": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7872
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3083": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7872
      ],
      "op": "ADD",
      "path": "24"
    },
    "3084": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7905
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3085": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7905
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3086": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7905
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3087": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7852,
        7905
      ],
      "op": "POP",
      "path": "24"
    },
    "3088": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7996,
        8002
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 36
    },
    "3089": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        7992
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "3091": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        7992
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3093": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3094": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3095": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3096": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC21"
    },
    "3099": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3100": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3101": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EB5"
    },
    "3104": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        7981,
        8002
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3105": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3106": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3107": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3108": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7981,
        8002
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "op": "POP"
    },
    "3111": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8050,
        8070
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 37,
      "value": "0x2"
    },
    "3113": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8050,
        8070
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3114": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8050,
        8070
      ],
      "op": "ADD",
      "path": "24"
    },
    "3115": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8050,
        8070
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3116": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3118": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3119": {
      "op": "SWAP1"
    },
    "3120": {
      "op": "DUP2"
    },
    "3121": {
      "op": "MSTORE"
    },
    "3122": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8038,
        8048
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3123": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8038,
        8048
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3124": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "3157": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3162": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3164": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3165": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3166": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3167": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "SUB",
      "path": "24"
    },
    "3168": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3169": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8022,
        8071
      ],
      "op": "LOG2",
      "path": "24"
    },
    "3170": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        8601
      ],
      "op": "POP",
      "path": "24"
    },
    "3171": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        8601
      ],
      "op": "POP",
      "path": "24"
    },
    "3172": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "POP",
      "path": "24"
    },
    "3173": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3174": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7681,
        8595
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3175": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8260
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 38
    },
    "3176": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8271
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3178": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8271
      ],
      "op": "ADD",
      "path": "24"
    },
    "3179": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8251,
        8271
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3180": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8232,
        8247
      ],
      "op": "TIMESTAMP",
      "path": "24"
    },
    "3181": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8232,
        8271
      ],
      "op": "LT",
      "path": "24"
    },
    "3182": {
      "branch": 113,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8232,
        8271
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3183": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCBA"
    },
    "3186": {
      "branch": 113,
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3187": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3189": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3198": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3201": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3203": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3204": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "ADD",
      "path": "24"
    },
    "3205": {
      "op": "MSTORE"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3210": {
      "op": "DUP3"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3248": {
      "op": "DUP3"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "op": "MSTORE"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3253": {
      "op": "ADD"
    },
    "3254": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "3257": {
      "op": "JUMP"
    },
    "3258": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8207,
        8329
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3259": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8364,
        8370
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 39
    },
    "3260": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8353
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3261": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8360
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3263": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8360
      ],
      "op": "ADD",
      "path": "24"
    },
    "3264": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8360
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3266": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3267": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3268": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3269": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCCE"
    },
    "3272": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3273": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3274": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EB5"
    },
    "3277": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8344,
        8370
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3278": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3279": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3280": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3281": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8344,
        8370
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3282": {
      "op": "POP"
    },
    "3283": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8384,
        8431
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 40,
      "value": "0xCDF"
    },
    "3286": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8384,
        8431
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3287": {
      "op": "POP"
    },
    "3288": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8405,
        8409
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "3289": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8412,
        8422
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3290": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8424,
        8430
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3291": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8384,
        8396
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x69C"
    },
    "3294": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "i",
      "offset": [
        8384,
        8431
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3295": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8384,
        8431
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8498,
        8532
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 41,
      "value": "0x40"
    },
    "3299": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8498,
        8532
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3300": {
      "op": "DUP4"
    },
    "3301": {
      "op": "DUP2"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8513,
        8523
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3304": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8513,
        8523
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3305": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8498,
        8532
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "3338": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8498,
        8532
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        8498,
        8532
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC59"
    },
    "3345": {
      "op": "JUMP"
    },
    "3346": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7681,
        8595
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3347": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        8601
      ],
      "op": "POP",
      "path": "24"
    },
    "3348": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7260,
        8601
      ],
      "op": "POP",
      "path": "24"
    },
    "3349": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "POP",
      "path": "24"
    },
    "3350": {
      "fn": "SmartnodesCore.unlockTokens",
      "jump": "o",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3351": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3352": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3354": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x37"
    },
    "3356": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3357": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3358": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FF"
    },
    "3361": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3362": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4A"
    },
    "3365": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3366": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3367": {
      "offset": [
        1760,
        1777
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "3369": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1760,
        1777
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3370": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4647,
        4654
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3372": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4647,
        4654
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "offset": [
        1760,
        1777
      ],
      "op": "AND",
      "path": "24"
    },
    "3382": {
      "offset": [
        1738,
        1748
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3383": {
      "offset": [
        1738,
        1778
      ],
      "op": "EQ",
      "path": "24"
    },
    "3384": {
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD53"
    },
    "3387": {
      "offset": [
        1717,
        1842
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3388": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3390": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3397": {
      "op": "SHL"
    },
    "3398": {
      "offset": [
        1717,
        1842
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3399": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3400": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3402": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "ADD",
      "path": "24"
    },
    "3403": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "3406": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3407": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DDF"
    },
    "3410": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        1717,
        1842
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3411": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        1717,
        1842
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3412": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4666,
        4679
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3414": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3415": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3416": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3417": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4693
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "3419": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3421": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3422": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3424": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3425": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3426": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3427": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4682,
        4702
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3428": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4760,
        4770
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3429": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4760,
        4770
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3430": {
      "branch": 114,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4760,
        4770
      ],
      "op": "SUB",
      "path": "24"
    },
    "3431": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4756,
        4928
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDC1"
    },
    "3434": {
      "branch": 114,
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4756,
        4928
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3435": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4846
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 43,
      "value": "0x72"
    },
    "3437": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3438": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3439": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3440": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4846
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3442": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD7A"
    },
    "3445": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3446": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DC6"
    },
    "3449": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        4836,
        4848
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3450": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3451": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3452": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3453": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4836,
        4848
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 44,
      "value": "0x40"
    },
    "3458": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3459": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3460": {
      "op": "DUP3"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "ADD"
    },
    "3467": {
      "op": "DUP6"
    },
    "3468": {
      "op": "SWAP1"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC"
    },
    "3503": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3504": {
      "op": "ADD"
    },
    "3505": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3507": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3508": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3509": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3510": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "SUB",
      "path": "24"
    },
    "3511": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3512": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4867,
        4895
      ],
      "op": "LOG1",
      "path": "24"
    },
    "3513": {
      "op": "POP"
    },
    "3514": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4916,
        4917
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 45,
      "value": "0x0"
    },
    "3516": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4916,
        4917
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3517": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3521": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4756,
        4928
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3522": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        4996
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3524": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3525": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3526": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3527": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5003
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3529": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3531": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3532": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3533": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3534": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3536": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3537": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3538": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3539": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3540": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3541": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3542": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3543": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3545": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "3546": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3547": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MUL",
      "path": "24"
    },
    "3548": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3549": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3550": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3551": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3552": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3553": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3554": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3555": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3556": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3557": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3558": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3559": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3560": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3561": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3562": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3563": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3564": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3565": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3566": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3567": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3568": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3569": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3570": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3571": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4999,
        5010
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3572": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3573": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3574": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3575": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE1F"
    },
    "3578": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3579": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3581": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MUL",
      "path": "24"
    },
    "3582": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3583": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3584": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3585": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3586": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3588": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3589": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3591": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3593": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3594": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3595": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3596": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3597": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3598": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3599": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3600": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3602": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3603": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3604": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3606": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3607": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3608": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3609": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3610": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "GT",
      "path": "24"
    },
    "3611": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE0B"
    },
    "3614": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3615": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3620": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3621": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "op": "POP"
    },
    "3624": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3626": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3627": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3628": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3629": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3630": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3631": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3633": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3634": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3635": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "ADD",
      "path": "24"
    },
    "3636": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3637": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5042,
        5053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3638": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5042,
        5053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3639": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5042,
        5053
      ],
      "op": "ADD",
      "path": "24"
    },
    "3640": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5042,
        5053
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3643": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "DUP6",
      "path": "24",
      "statement": 46
    },
    "3644": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3645": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3646": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6F"
    },
    "3648": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3649": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3650": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3651": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3653": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3654": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3655": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3656": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4982,
        5010
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5042,
        5053
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3659": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3660": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE55"
    },
    "3663": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5090,
        5101
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3664": {
      "op": "DUP3"
    },
    "3665": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19B0"
    },
    "3668": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "i",
      "offset": [
        5083,
        5101
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3669": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3670": {
      "op": "POP"
    },
    "3671": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3673": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3675": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3676": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3677": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3678": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "ADD",
      "path": "24"
    },
    "3679": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3680": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3681": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5083,
        5101
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3682": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "DUP6",
      "path": "24",
      "statement": 47
    },
    "3683": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3684": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3685": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5129
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6E"
    },
    "3687": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3689": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3690": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3691": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3692": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3694": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3695": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3696": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5118,
        5138
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3697": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5111,
        5138
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3698": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5111,
        5138
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3699": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5111,
        5138
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3700": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5111,
        5138
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3701": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 48
    },
    "3702": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3703": {
      "op": "DUP6"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "MSTORE"
    },
    "3706": {
      "op": "SWAP1"
    },
    "3707": {
      "op": "DUP2"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "op": "DUP8"
    },
    "3710": {
      "op": "SWAP1"
    },
    "3711": {
      "op": "MSTORE"
    },
    "3712": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x45C386DC6524A2D9FE630455323C6A39F557C52AB01E886DEEE20A0B538147AC"
    },
    "3745": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3749": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3750": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3751": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3752": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "SUB",
      "path": "24"
    },
    "3753": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3754": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5153,
        5181
      ],
      "op": "LOG1",
      "path": "24"
    },
    "3755": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        5198,
        5209
      ],
      "op": "SWAP3",
      "path": "24",
      "statement": 49
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "offset": [
        1852,
        1853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3760": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3761": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3762": {
      "fn": "SmartnodesCore.completeJob",
      "offset": [
        4555,
        5216
      ],
      "op": "POP",
      "path": "24"
    },
    "3763": {
      "fn": "SmartnodesCore.completeJob",
      "jump": "o",
      "offset": [
        4555,
        5216
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3764": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3765": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3767": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3768": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3771": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3772": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "3773": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3775": {
      "branch": 129,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "3776": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xECF"
    },
    "3779": {
      "branch": 129,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3780": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3782": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3783": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3785": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "3786": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3787": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED3"
    },
    "3790": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3791": {
      "branch": 130,
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3792": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 50
    },
    "3793": {
      "op": "EXTCODESIZE"
    },
    "3794": {
      "op": "ISZERO"
    },
    "3795": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3796": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF36"
    },
    "3799": {
      "branch": 130,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3800": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3802": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3809": {
      "op": "SHL"
    },
    "3810": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3811": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3814": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3816": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3817": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "ADD"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "ADD"
    },
    "3863": {
      "op": "MSTORE"
    },
    "3864": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3881": {
      "op": "SHL"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3889": {
      "op": "ADD"
    },
    "3890": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DB"
    },
    "3893": {
      "op": "JUMP"
    },
    "3894": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3895": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3897": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3898": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3901": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3902": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "3903": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3905": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "3906": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3907": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3908": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3909": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF58"
    },
    "3912": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3913": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3915": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3916": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3920": {
      "op": "NOT"
    },
    "3921": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "3922": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "3925": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "3926": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3927": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3928": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3929": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 51,
      "value": "0xF9F"
    },
    "3932": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3934": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3935": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3936": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3938": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "ADD",
      "path": "24"
    },
    "3939": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3941": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3942": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3943": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "3945": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3946": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3947": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3949": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "ADD",
      "path": "24"
    },
    "3950": {
      "op": "PUSH10",
      "value": "0x536D6172746E6F646573"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3963": {
      "op": "SHL"
    },
    "3964": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3965": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3966": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "POP",
      "path": "24"
    },
    "3967": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3969": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3970": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3971": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3973": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "ADD",
      "path": "24"
    },
    "3974": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3976": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3977": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3978": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "3980": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3981": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3982": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3984": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "ADD",
      "path": "24"
    },
    "3985": {
      "op": "PUSH3",
      "value": "0x534E4F"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3991": {
      "op": "SHL"
    },
    "3992": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3993": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3994": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "POP",
      "path": "24"
    },
    "3995": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2087
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1944"
    },
    "3998": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2075,
        2108
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3999": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2075,
        2108
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4000": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2128
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 52,
      "value": "0x66"
    },
    "4002": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4003": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4010": {
      "op": "SHL"
    },
    "4011": {
      "op": "SUB"
    },
    "4012": {
      "op": "NOT"
    },
    "4013": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "AND",
      "path": "24"
    },
    "4014": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2131,
        2141
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4015": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "OR",
      "path": "24"
    },
    "4016": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4017": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4018": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2166,
        2173
      ],
      "op": "PUSH9",
      "path": "24",
      "statement": 53,
      "value": "0x6F05B59D3B20000000"
    },
    "4028": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2151,
        2163
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4030": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2151,
        2173
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4031": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2196,
        2206
      ],
      "op": "PUSH10",
      "path": "24",
      "statement": 54,
      "value": "0x69E10DE76676D0800000"
    },
    "4042": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2183,
        2193
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "4044": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2183,
        2206
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4045": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2232,
        2236
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 55,
      "value": "0x2226"
    },
    "4048": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2216,
        2229
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "4050": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2216,
        2236
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4051": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2128
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4053": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2261,
        2283
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 56,
      "value": "0x6B"
    },
    "4055": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2261,
        2287
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4056": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2261,
        2287
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4057": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2261,
        2287
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4058": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2312,
        2321
      ],
      "op": "PUSH3",
      "path": "24",
      "statement": 57,
      "value": "0x127500"
    },
    "4062": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2297,
        2309
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6D"
    },
    "4064": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2297,
        2321
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4065": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2118,
        2141
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "4067": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2356,
        2366
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 58,
      "value": "0x72"
    },
    "4069": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2356,
        2370
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4070": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2356,
        2370
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4071": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2356,
        2370
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4072": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2380,
        2396
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 59,
      "value": "0x74"
    },
    "4074": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2380,
        2400
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4075": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2380,
        2400
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4076": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2380,
        2400
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4077": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2410,
        2421
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 60,
      "value": "0x73"
    },
    "4079": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2410,
        2425
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4080": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4081": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2457,
        2470
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4082": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2457,
        2477
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4083": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2453,
        2454
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4084": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2453,
        2477
      ],
      "op": "LT",
      "path": "24"
    },
    "4085": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4086": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1026"
    },
    "4089": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4090": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2533
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 61,
      "value": "0x101E"
    },
    "4093": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2517
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4094": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2518,
        2519
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4095": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4096": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4097": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4098": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "LT",
      "path": "24"
    },
    "4099": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100E"
    },
    "4102": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4103": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100E"
    },
    "4106": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E5E"
    },
    "4109": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2504,
        2520
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4110": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4111": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4113": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "MUL",
      "path": "24"
    },
    "4114": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4116": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "ADD",
      "path": "24"
    },
    "4117": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "ADD",
      "path": "24"
    },
    "4118": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2504,
        2520
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4119": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2522,
        2532
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x69"
    },
    "4121": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2522,
        2532
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4122": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2503
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1865"
    },
    "4125": {
      "fn": "SmartnodesCore.initialize",
      "jump": "i",
      "offset": [
        2498,
        2533
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4126": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2498,
        2533
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4127": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2479,
        2482
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 62,
      "value": "0x1"
    },
    "4129": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2479,
        2482
      ],
      "op": "ADD",
      "path": "24"
    },
    "4130": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFF0"
    },
    "4133": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4134": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4135": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2436,
        2544
      ],
      "op": "POP",
      "path": "24"
    },
    "4136": {
      "offset": [
        2649,
        2663
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4137": {
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4138": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1039"
    },
    "4141": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4142": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4144": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4145": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4146": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4149": {
      "op": "NOT"
    },
    "4150": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "4151": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4152": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4153": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4154": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "4155": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "POP",
      "path": "24"
    },
    "4156": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4157": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4158": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4159": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4161": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4162": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4163": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4164": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "4166": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4168": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4169": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4170": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4171": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4173": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4174": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4175": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4182": {
      "op": "SHL"
    },
    "4183": {
      "op": "SUB"
    },
    "4184": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4185": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "2"
    },
    "4186": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4187": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4188": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4189": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4190": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4191": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4192": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4193": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4194": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4195": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4196": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4197": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 63
    },
    "4198": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4199": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "2"
    },
    "4200": {
      "branch": 120,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4201": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C2"
    },
    "4204": {
      "branch": 120,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4205": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4207": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4214": {
      "op": "SHL"
    },
    "4215": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4216": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4219": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4221": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4222": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "2"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4266": {
      "op": "DUP3"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "op": "MSTORE"
    },
    "4269": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4277": {
      "op": "SHL"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4280": {
      "op": "DUP3"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4285": {
      "op": "ADD"
    },
    "4286": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "4289": {
      "op": "JUMP"
    },
    "4290": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4291": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 64,
      "value": "0x6B5"
    },
    "4294": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4295": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4296": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4297": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4298": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "2"
    },
    "4299": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1366"
    },
    "4302": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4303": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4304": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4306": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4307": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 65,
      "value": "0x690"
    },
    "4310": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4311": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4312": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4313": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1516"
    },
    "4316": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4317": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4318": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9751,
        9755
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4320": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9757,
        9764
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4321": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9766,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4323": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9808,
        9824
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 66,
      "value": "0x74"
    },
    "4325": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9808,
        9824
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4326": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9793,
        9805
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4327": {
      "branch": 115,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9793,
        9824
      ],
      "op": "LT",
      "path": "24"
    },
    "4328": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1121"
    },
    "4331": {
      "branch": 115,
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4332": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4334": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4343": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4346": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4348": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4349": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "ADD",
      "path": "24"
    },
    "4350": {
      "op": "MSTORE"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4355": {
      "op": "DUP3"
    },
    "4356": {
      "op": "ADD"
    },
    "4357": {
      "op": "MSTORE"
    },
    "4358": {
      "op": "PUSH11",
      "value": "0x24B73B30B634B21024A217"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4372": {
      "op": "SHL"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4375": {
      "op": "DUP3"
    },
    "4376": {
      "op": "ADD"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "4384": {
      "op": "JUMP"
    },
    "4385": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9785,
        9840
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4386": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9877
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4388": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4389": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4390": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4391": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9890
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "4393": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4395": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4396": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4397": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4398": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4400": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4401": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4402": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9880,
        9904
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4403": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4404": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4405": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "4407": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4408": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4409": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4410": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4411": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4412": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4419": {
      "op": "SHL"
    },
    "4420": {
      "op": "SUB"
    },
    "4421": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4422": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4423": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "AND",
      "path": "24"
    },
    "4424": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4425": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4426": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4427": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "4429": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4430": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4431": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4432": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4433": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4434": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4435": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4436": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4437": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "4438": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4439": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4441": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4442": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4443": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4444": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4445": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4446": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4447": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4448": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4450": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4451": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4452": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4453": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4454": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "4456": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4457": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "ADD",
      "path": "24"
    },
    "4458": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4459": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9947
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x65"
    },
    "4461": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9947
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4462": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4463": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4464": {
      "op": "PUSH4",
      "value": "0x10154287"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4473": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4474": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4476": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4477": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "ADD",
      "path": "24"
    },
    "4478": {
      "op": "SWAP5"
    },
    "4479": {
      "op": "SWAP1"
    },
    "4480": {
      "op": "SWAP5"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9904
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4483": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9850,
        9877
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4484": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9947
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4485": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9947
      ],
      "op": "AND",
      "path": "24"
    },
    "4486": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9947
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4487": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9965
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x40550A1C"
    },
    "4492": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        9965
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4498": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4500": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4501": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4502": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4503": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "SUB",
      "path": "24"
    },
    "4504": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4505": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4506": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "GAS",
      "path": "24"
    },
    "4507": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "4508": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4509": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4510": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4511": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11AC"
    },
    "4514": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4515": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4516": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4518": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4519": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "4520": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4521": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4523": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4524": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4525": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "POP",
      "path": "24"
    },
    "4526": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "POP",
      "path": "24"
    },
    "4527": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "POP",
      "path": "24"
    },
    "4528": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "POP",
      "path": "24"
    },
    "4529": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4531": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4532": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4533": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "4535": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "NOT",
      "path": "24"
    },
    "4536": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "4538": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4539": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "ADD",
      "path": "24"
    },
    "4540": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "AND",
      "path": "24"
    },
    "4541": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4542": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "ADD",
      "path": "24"
    },
    "4543": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4544": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4546": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4547": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "POP",
      "path": "24"
    },
    "4548": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4549": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "ADD",
      "path": "24"
    },
    "4550": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4551": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11D0"
    },
    "4554": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4555": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4556": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1EC8"
    },
    "4559": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "i",
      "offset": [
        9930,
        10008
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4560": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9930,
        10008
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4561": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10036,
        10060
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 67,
      "value": "0x60"
    },
    "4563": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10036,
        10060
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4564": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10036,
        10060
      ],
      "op": "ADD",
      "path": "24"
    },
    "4565": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10036,
        10060
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4566": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10062,
        10081
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4567": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10062,
        10081
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4568": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9914,
        10008
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4569": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9914,
        10008
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "4570": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10036,
        10060
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4571": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10036,
        10060
      ],
      "op": "SWAP7",
      "path": "24"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        10062,
        10081
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4576": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "offset": [
        9666,
        10089
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "fn": "SmartnodesCore.getValidatorInfo",
      "jump": "o",
      "offset": [
        9666,
        10089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4581": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2556,
        2824
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4582": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2661,
        2678
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 68,
      "value": "0x65"
    },
    "4584": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2661,
        2678
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "op": "SUB"
    },
    "4593": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2661,
        2678
      ],
      "op": "AND",
      "path": "24"
    },
    "4594": {
      "branch": 116,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2653,
        2693
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4595": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x123E"
    },
    "4598": {
      "branch": 116,
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4599": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4601": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4608": {
      "op": "SHL"
    },
    "4609": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4610": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4613": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4615": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4616": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "ADD",
      "path": "24"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4622": {
      "op": "DUP3"
    },
    "4623": {
      "op": "ADD"
    },
    "4624": {
      "op": "MSTORE"
    },
    "4625": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206164647265737320616C7265616479207365742E0000"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4660": {
      "op": "DUP3"
    },
    "4661": {
      "op": "ADD"
    },
    "4662": {
      "op": "MSTORE"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "4669": {
      "op": "JUMP"
    },
    "4670": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2632,
        2749
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4671": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2776
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 69,
      "value": "0x65"
    },
    "4673": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4674": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4681": {
      "op": "SHL"
    },
    "4682": {
      "op": "SUB"
    },
    "4683": {
      "op": "NOT"
    },
    "4684": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "AND",
      "path": "24"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4691": {
      "op": "SHL"
    },
    "4692": {
      "op": "SUB"
    },
    "4693": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4694": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4695": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4696": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "AND",
      "path": "24"
    },
    "4697": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4698": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4699": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4700": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "OR",
      "path": "24"
    },
    "4701": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4702": {
      "fn": "SmartnodesCore.setValidatorContract",
      "offset": [
        2759,
        2817
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4703": {
      "fn": "SmartnodesCore.setValidatorContract",
      "jump": "o",
      "offset": [
        2556,
        2824
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4704": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        2830,
        3257
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4705": {
      "offset": [
        1924,
        1934
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x66"
    },
    "4707": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1924,
        1934
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "op": "SUB"
    },
    "4716": {
      "offset": [
        1924,
        1934
      ],
      "op": "AND",
      "path": "24"
    },
    "4717": {
      "offset": [
        1910,
        1920
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4718": {
      "offset": [
        1910,
        1934
      ],
      "op": "EQ",
      "path": "24"
    },
    "4719": {
      "offset": [
        1902,
        1970
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12BA"
    },
    "4722": {
      "offset": [
        1902,
        1970
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4723": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1902,
        1970
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4725": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1902,
        1970
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "offset": [
        1902,
        1970
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4734": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1902,
        1970
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4737": {
      "offset": [
        1902,
        1970
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4739": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1902,
        1970
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4740": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        1902,
        1970
      ],
      "op": "ADD",
      "path": "24"
    },
    "4741": {
      "op": "MSTORE"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4746": {
      "op": "DUP3"
    },
    "4747": {
      "op": "ADD"
    },
    "4748": {
      "op": "MSTORE"
    },
    "4749": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D757374206265207468652070726F78792061646D696E2E00"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4784": {
      "op": "DUP3"
    },
    "4785": {
      "op": "ADD"
    },
    "4786": {
      "op": "MSTORE"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "offset": [
        1902,
        1970
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "4793": {
      "op": "JUMP"
    },
    "4794": {
      "offset": [
        1902,
        1970
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4795": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3051,
        3052
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 70,
      "value": "0x2"
    },
    "4797": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3047
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x67"
    },
    "4799": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3047
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4801": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4802": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4803": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4804": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12CD"
    },
    "4807": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4808": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4809": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "4812": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        3035,
        3052
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4813": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4814": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4815": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "POP",
      "path": "24"
    },
    "4816": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "POP",
      "path": "24"
    },
    "4817": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4818": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4819": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4820": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3035,
        3052
      ],
      "op": "POP",
      "path": "24"
    },
    "4821": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 71,
      "value": "0x2"
    },
    "4823": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3074
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x68"
    },
    "4825": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3074
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4827": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4828": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4829": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4830": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12E7"
    },
    "4833": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4834": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4835": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E25"
    },
    "4838": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        3062,
        3079
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4839": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4840": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4841": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "POP",
      "path": "24"
    },
    "4842": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "POP",
      "path": "24"
    },
    "4843": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4844": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4845": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4846": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3062,
        3079
      ],
      "op": "POP",
      "path": "24"
    },
    "4847": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3106,
        3107
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 72,
      "value": "0x2"
    },
    "4849": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3102
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6A"
    },
    "4851": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3102
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4853": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4854": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4855": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4856": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1301"
    },
    "4859": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4860": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4861": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E47"
    },
    "4864": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "i",
      "offset": [
        3089,
        3107
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4865": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4866": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4867": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4868": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3089,
        3107
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "op": "POP"
    },
    "4871": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 73,
      "value": "0x65"
    },
    "4873": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4874": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4876": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4877": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4878": {
      "op": "PUSH4",
      "value": "0x762193B9"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4885": {
      "op": "SHL"
    },
    "4886": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4887": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4888": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4889": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4896": {
      "op": "SHL"
    },
    "4897": {
      "op": "SUB"
    },
    "4898": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4899": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4900": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "AND",
      "path": "24"
    },
    "4901": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4902": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3199
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xEC432772"
    },
    "4907": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3199
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4908": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4910": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4911": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4912": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "ADD",
      "path": "24"
    },
    "4913": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4914": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4916": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4917": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4918": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4919": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4920": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4921": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4922": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "SUB",
      "path": "24"
    },
    "4923": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "ADD",
      "path": "24"
    },
    "4924": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4925": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4926": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3187
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4927": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4928": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "4929": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4930": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4931": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4932": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x134C"
    },
    "4935": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4936": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4938": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4939": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4940": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4941": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "POP",
      "path": "24"
    },
    "4942": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "GAS",
      "path": "24"
    },
    "4943": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "CALL",
      "path": "24"
    },
    "4944": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4945": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4946": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4947": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1360"
    },
    "4950": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4951": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4952": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4954": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4955": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "4956": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4957": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4959": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4960": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4961": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "POP",
      "path": "24"
    },
    "4962": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "POP",
      "path": "24"
    },
    "4963": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "POP",
      "path": "24"
    },
    "4964": {
      "fn": "SmartnodesCore.halveStateTime",
      "offset": [
        3170,
        3201
      ],
      "op": "POP",
      "path": "24"
    },
    "4965": {
      "fn": "SmartnodesCore.halveStateTime",
      "jump": "o",
      "offset": [
        2830,
        3257
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4966": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "op": "SUB"
    },
    "4975": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 74
    },
    "4976": {
      "branch": 121,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "2"
    },
    "4977": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C8"
    },
    "4980": {
      "branch": 121,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4981": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4983": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4990": {
      "op": "SHL"
    },
    "4991": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4992": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4995": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4997": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4998": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "2"
    },
    "4999": {
      "op": "MSTORE"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5002": {
      "op": "DUP1"
    },
    "5003": {
      "op": "DUP3"
    },
    "5004": {
      "op": "ADD"
    },
    "5005": {
      "op": "MSTORE"
    },
    "5006": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5041": {
      "op": "DUP3"
    },
    "5042": {
      "op": "ADD"
    },
    "5043": {
      "op": "MSTORE"
    },
    "5044": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5051": {
      "op": "SHL"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5054": {
      "op": "DUP3"
    },
    "5055": {
      "op": "ADD"
    },
    "5056": {
      "op": "MSTORE"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5059": {
      "op": "ADD"
    },
    "5060": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "5063": {
      "op": "JUMP"
    },
    "5064": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5071": {
      "op": "SHL"
    },
    "5072": {
      "op": "SUB"
    },
    "5073": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 75
    },
    "5074": {
      "branch": 122,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "2"
    },
    "5075": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1429"
    },
    "5078": {
      "branch": 122,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5079": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5081": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5088": {
      "op": "SHL"
    },
    "5089": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5090": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5093": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5095": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5096": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "2"
    },
    "5097": {
      "op": "MSTORE"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "MSTORE"
    },
    "5105": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "ADD"
    },
    "5142": {
      "op": "MSTORE"
    },
    "5143": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5148": {
      "op": "SHL"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5151": {
      "op": "DUP3"
    },
    "5152": {
      "op": "ADD"
    },
    "5153": {
      "op": "MSTORE"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5156": {
      "op": "ADD"
    },
    "5157": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "5160": {
      "op": "JUMP"
    },
    "5161": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5168": {
      "op": "SHL"
    },
    "5169": {
      "op": "SUB"
    },
    "5170": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 76
    },
    "5171": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5172": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "2"
    },
    "5173": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5175": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5176": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5177": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5178": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5180": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5182": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5183": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5184": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5185": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5187": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5188": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5189": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5190": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5191": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5192": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "5193": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5194": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5195": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5196": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5197": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5198": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5199": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5200": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5201": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5202": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5203": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5204": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5205": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5206": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 77
    },
    "5207": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5208": {
      "op": "DUP5"
    },
    "5209": {
      "op": "DUP2"
    },
    "5210": {
      "op": "MSTORE"
    },
    "5211": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5244": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5245": {
      "op": "ADD"
    },
    "5246": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5248": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5249": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5250": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5251": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "5252": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5253": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5254": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "5255": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "5256": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "2"
    },
    "5257": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5258": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5265": {
      "op": "SHL"
    },
    "5266": {
      "op": "SUB"
    },
    "5267": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5268": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5269": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "5270": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5272": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5273": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5274": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5275": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "5277": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5279": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5280": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5281": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5282": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5284": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5285": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5286": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5287": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5288": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5289": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "5290": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5291": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5292": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5293": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5294": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5295": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5296": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5299": {
      "op": "NOT"
    },
    "5300": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5301": {
      "branch": 123,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "5302": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1360"
    },
    "5305": {
      "branch": 123,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5306": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 78
    },
    "5307": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5308": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "5309": {
      "branch": 124,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5310": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1509"
    },
    "5313": {
      "branch": 124,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5314": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5316": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5323": {
      "op": "SHL"
    },
    "5324": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5325": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5328": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5330": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5331": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "5332": {
      "op": "MSTORE"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5337": {
      "op": "DUP3"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "op": "MSTORE"
    },
    "5340": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5375": {
      "op": "DUP3"
    },
    "5376": {
      "op": "ADD"
    },
    "5377": {
      "op": "MSTORE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "5384": {
      "op": "JUMP"
    },
    "5385": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5386": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 79,
      "value": "0x1360"
    },
    "5389": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5390": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5391": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5392": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5393": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "5394": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1366"
    },
    "5397": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5398": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5405": {
      "op": "SHL"
    },
    "5406": {
      "op": "SUB"
    },
    "5407": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 80
    },
    "5408": {
      "branch": 125,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "2"
    },
    "5409": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x157A"
    },
    "5412": {
      "branch": 125,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5413": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5415": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5422": {
      "op": "SHL"
    },
    "5423": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5424": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5427": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5429": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5430": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "2"
    },
    "5431": {
      "op": "MSTORE"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5436": {
      "op": "DUP3"
    },
    "5437": {
      "op": "ADD"
    },
    "5438": {
      "op": "MSTORE"
    },
    "5439": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5474": {
      "op": "DUP3"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "MSTORE"
    },
    "5477": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5488": {
      "op": "DUP3"
    },
    "5489": {
      "op": "ADD"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5493": {
      "op": "ADD"
    },
    "5494": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "5497": {
      "op": "JUMP"
    },
    "5498": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "op": "SUB"
    },
    "5507": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 81
    },
    "5508": {
      "branch": 126,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "2"
    },
    "5509": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15DC"
    },
    "5512": {
      "branch": 126,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5513": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5515": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5522": {
      "op": "SHL"
    },
    "5523": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5524": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5527": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5529": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5530": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "2"
    },
    "5531": {
      "op": "MSTORE"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5536": {
      "op": "DUP3"
    },
    "5537": {
      "op": "ADD"
    },
    "5538": {
      "op": "MSTORE"
    },
    "5539": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5574": {
      "op": "DUP3"
    },
    "5575": {
      "op": "ADD"
    },
    "5576": {
      "op": "MSTORE"
    },
    "5577": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5583": {
      "op": "SHL"
    },
    "5584": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5586": {
      "op": "DUP3"
    },
    "5587": {
      "op": "ADD"
    },
    "5588": {
      "op": "MSTORE"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5591": {
      "op": "ADD"
    },
    "5592": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "5595": {
      "op": "JUMP"
    },
    "5596": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5603": {
      "op": "SHL"
    },
    "5604": {
      "op": "SUB"
    },
    "5605": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5606": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "2"
    },
    "5607": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5609": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5610": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5611": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5612": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "5614": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5616": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5617": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5619": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5620": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5621": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5622": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 82
    },
    "5623": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5624": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "2"
    },
    "5625": {
      "branch": 127,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5626": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1654"
    },
    "5629": {
      "branch": 127,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5630": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5632": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5633": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5639": {
      "op": "SHL"
    },
    "5640": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5641": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5646": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5647": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "2"
    },
    "5648": {
      "op": "MSTORE"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5653": {
      "op": "DUP3"
    },
    "5654": {
      "op": "ADD"
    },
    "5655": {
      "op": "MSTORE"
    },
    "5656": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5691": {
      "op": "DUP3"
    },
    "5692": {
      "op": "ADD"
    },
    "5693": {
      "op": "MSTORE"
    },
    "5694": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5703": {
      "op": "SHL"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5706": {
      "op": "DUP3"
    },
    "5707": {
      "op": "ADD"
    },
    "5708": {
      "op": "MSTORE"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "5715": {
      "op": "JUMP"
    },
    "5716": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "SUB"
    },
    "5725": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 83
    },
    "5726": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5727": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "5728": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5730": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5731": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5732": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5733": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "5735": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5737": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5738": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5740": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5741": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5742": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5743": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5744": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5745": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "2"
    },
    "5746": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5747": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5748": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 84
    },
    "5749": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5750": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "2"
    },
    "5751": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5752": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5753": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5754": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5755": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5756": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5757": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5758": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5759": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5760": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5761": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x168B"
    },
    "5764": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5765": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5766": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB3"
    },
    "5770": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5771": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5772": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5773": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "5774": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "5775": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5776": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5777": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5778": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "2"
    },
    "5779": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 85
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5786": {
      "op": "SHL"
    },
    "5787": {
      "op": "SUB"
    },
    "5788": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "5789": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5796": {
      "op": "SHL"
    },
    "5797": {
      "op": "SUB"
    },
    "5798": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "2"
    },
    "5799": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5832": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5833": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5835": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5836": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D7"
    },
    "5839": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5840": {
      "op": "DUP2"
    },
    "5841": {
      "op": "MSTORE"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5844": {
      "op": "ADD"
    },
    "5845": {
      "op": "SWAP1"
    },
    "5846": {
      "op": "JUMP"
    },
    "5847": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5848": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5850": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5851": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5852": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5853": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "2"
    },
    "5854": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5855": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5856": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 86,
      "value": "0x1360"
    },
    "5859": {
      "fn": "SmartnodesCore.unlockTokens",
      "offset": [
        7213,
        8601
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5860": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6598,
        7108
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5861": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6687,
        6688
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 87,
      "value": "0x0"
    },
    "5863": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6678,
        6684
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5864": {
      "branch": 117,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6678,
        6688
      ],
      "op": "GT",
      "path": "24"
    },
    "5865": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1704"
    },
    "5868": {
      "branch": 117,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5869": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5871": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5878": {
      "op": "SHL"
    },
    "5879": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5880": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5881": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5883": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "ADD",
      "path": "24"
    },
    "5884": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "5887": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5888": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E74"
    },
    "5891": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6670,
        6726
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5892": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6670,
        6726
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5893": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6765,
        6771
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 88
    },
    "5894": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6744,
        6761
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1724"
    },
    "5897": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6754,
        6760
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5904": {
      "op": "SHL"
    },
    "5905": {
      "op": "SUB"
    },
    "5906": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2"
    },
    "5907": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5909": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5910": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5911": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5912": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "5914": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5916": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5917": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5919": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5920": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5921": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5922": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5923": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5924": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6744,
        6761
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5925": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6744,
        6771
      ],
      "op": "LT",
      "path": "24"
    },
    "5926": {
      "branch": 118,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6744,
        6771
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5927": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x176A"
    },
    "5930": {
      "branch": 118,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5931": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5933": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5940": {
      "op": "SHL"
    },
    "5941": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5942": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5945": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5947": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5948": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "ADD",
      "path": "24"
    },
    "5949": {
      "op": "MSTORE"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5952": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5954": {
      "op": "DUP3"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "op": "MSTORE"
    },
    "5957": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "5981": {
      "op": "SHL"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5984": {
      "op": "DUP3"
    },
    "5985": {
      "op": "ADD"
    },
    "5986": {
      "op": "MSTORE"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5989": {
      "op": "ADD"
    },
    "5990": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "5993": {
      "op": "JUMP"
    },
    "5994": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6736,
        6797
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6001": {
      "op": "SHL"
    },
    "6002": {
      "op": "SUB"
    },
    "6003": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6004": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "AND",
      "path": "24"
    },
    "6005": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6808,
        6827
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6007": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6008": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6009": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6010": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6850
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x71"
    },
    "6012": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6014": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6015": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6017": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6018": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6019": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6020": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6830,
        6858
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6021": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6876,
        6892
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 89
    },
    "6022": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6876,
        6892
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6023": {
      "branch": 119,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6876,
        6892
      ],
      "op": "SUB",
      "path": "24"
    },
    "6024": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17D3"
    },
    "6027": {
      "branch": 119,
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "6028": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6030": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6037": {
      "op": "SHL"
    },
    "6038": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6039": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6042": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6044": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6045": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "ADD",
      "path": "24"
    },
    "6046": {
      "op": "MSTORE"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6051": {
      "op": "DUP3"
    },
    "6052": {
      "op": "ADD"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6089": {
      "op": "DUP3"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "op": "MSTORE"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6094": {
      "op": "ADD"
    },
    "6095": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DB"
    },
    "6098": {
      "op": "JUMP"
    },
    "6099": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6868,
        6922
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6100": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6933,
        6976
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 90,
      "value": "0x17DE"
    },
    "6103": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6946,
        6952
      ],
      "op": "DUP4",
      "path": "24"
    },
    "6104": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6962,
        6966
      ],
      "op": "ADDRESS",
      "path": "24"
    },
    "6105": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6969,
        6975
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6106": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6933,
        6945
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x69C"
    },
    "6109": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6933,
        6976
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6110": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6933,
        6976
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6111": {
      "op": "POP"
    },
    "6112": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 91,
      "value": "0x0"
    },
    "6114": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6115": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6116": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6117": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        6996
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x70"
    },
    "6119": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6121": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6122": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6124": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6125": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "6126": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7016
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "6128": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7016
      ],
      "op": "ADD",
      "path": "24"
    },
    "6129": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6130": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6131": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7020,
        7026
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6132": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7020,
        7026
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6133": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7009
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6134": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1800"
    },
    "6137": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6138": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7020,
        7026
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6139": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7020,
        7026
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6140": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DB3"
    },
    "6143": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        6986,
        7026
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6144": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6145": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "6146": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "POP",
      "path": "24"
    },
    "6147": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "POP",
      "path": "24"
    },
    "6148": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6149": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6150": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6151": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6986,
        7026
      ],
      "op": "POP",
      "path": "24"
    },
    "6152": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7051,
        7057
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 92
    },
    "6153": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7047
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "6155": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7047
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "6157": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6158": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6159": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6160": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1819"
    },
    "6163": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6164": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6165": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DB3"
    },
    "6168": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "i",
      "offset": [
        7036,
        7057
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6169": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6170": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6171": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6172": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7036,
        7057
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6173": {
      "op": "POP"
    },
    "6174": {
      "op": "POP"
    },
    "6175": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 93,
      "value": "0x40"
    },
    "6177": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6178": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6185": {
      "op": "SHL"
    },
    "6186": {
      "op": "SUB"
    },
    "6187": {
      "op": "DUP6"
    },
    "6188": {
      "op": "AND"
    },
    "6189": {
      "op": "DUP2"
    },
    "6190": {
      "op": "MSTORE"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6193": {
      "op": "DUP2"
    },
    "6194": {
      "op": "ADD"
    },
    "6195": {
      "op": "DUP5"
    },
    "6196": {
      "op": "SWAP1"
    },
    "6197": {
      "op": "MSTORE"
    },
    "6198": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "6231": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6232": {
      "op": "ADD"
    },
    "6233": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6235": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6236": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6237": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6238": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "SUB",
      "path": "24"
    },
    "6239": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6240": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        7073,
        7101
      ],
      "op": "LOG1",
      "path": "24"
    },
    "6241": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6660,
        7108
      ],
      "op": "POP",
      "path": "24"
    },
    "6242": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6598,
        7108
      ],
      "op": "POP",
      "path": "24"
    },
    "6243": {
      "fn": "SmartnodesCore._lockTokens",
      "offset": [
        6598,
        7108
      ],
      "op": "POP",
      "path": "24"
    },
    "6244": {
      "fn": "SmartnodesCore._lockTokens",
      "jump": "o",
      "offset": [
        6598,
        7108
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6245": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6252": {
      "op": "SHL"
    },
    "6253": {
      "op": "SUB"
    },
    "6254": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 94
    },
    "6255": {
      "branch": 128,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "2"
    },
    "6256": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18BB"
    },
    "6259": {
      "branch": 128,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6260": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6262": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6263": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6269": {
      "op": "SHL"
    },
    "6270": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6271": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6274": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6276": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6277": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "2"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6283": {
      "op": "DUP3"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "op": "MSTORE"
    },
    "6286": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6321": {
      "op": "DUP3"
    },
    "6322": {
      "op": "ADD"
    },
    "6323": {
      "op": "MSTORE"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6326": {
      "op": "ADD"
    },
    "6327": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DB"
    },
    "6330": {
      "op": "JUMP"
    },
    "6331": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6332": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 95
    },
    "6333": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x35"
    },
    "6335": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6337": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6338": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6339": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6340": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18CD"
    },
    "6343": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6344": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6345": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB3"
    },
    "6348": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6349": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6350": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6351": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6352": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6353": {
      "op": "POP"
    },
    "6354": {
      "op": "POP"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "op": "SUB"
    },
    "6363": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 96
    },
    "6364": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "2"
    },
    "6365": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6367": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6368": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6369": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6370": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "6372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6374": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6375": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6377": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6378": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6379": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6380": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6381": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6382": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6383": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6384": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18FA"
    },
    "6387": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6388": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6389": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6390": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB3"
    },
    "6393": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6394": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6395": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6396": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6397": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6398": {
      "op": "POP"
    },
    "6399": {
      "op": "POP"
    },
    "6400": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 97,
      "value": "0x40"
    },
    "6402": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6403": {
      "op": "DUP2"
    },
    "6404": {
      "op": "DUP2"
    },
    "6405": {
      "op": "MSTORE"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "op": "SUB"
    },
    "6414": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6415": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "2"
    },
    "6416": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6417": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6419": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6420": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6453": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6456": {
      "op": "ADD"
    },
    "6457": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6459": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6460": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6461": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6462": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "2"
    },
    "6463": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6464": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6465": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "6466": {
      "fn": "SmartnodesCore.initialize",
      "offset": [
        1994,
        2550
      ],
      "op": "POP",
      "path": "24"
    },
    "6467": {
      "fn": "SmartnodesCore.initialize",
      "jump": "o",
      "offset": [
        1994,
        2550
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6468": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6469": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6471": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6472": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "6475": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6476": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "6477": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6479": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "6480": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196B"
    },
    "6483": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6484": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6486": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6493": {
      "op": "SHL"
    },
    "6494": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6495": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6496": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6498": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "6499": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DB"
    },
    "6502": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6503": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EEA"
    },
    "6506": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6507": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6508": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 98,
      "value": "0x1039"
    },
    "6511": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6512": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6513": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6515": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6516": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "6519": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6520": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "6521": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6523": {
      "branch": 131,
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "6524": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1997"
    },
    "6527": {
      "branch": 131,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6528": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6530": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6537": {
      "op": "SHL"
    },
    "6538": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6539": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6540": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6542": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "6543": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DB"
    },
    "6546": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6547": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EEA"
    },
    "6550": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6551": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6552": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x36"
    },
    "6554": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19A3"
    },
    "6557": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6558": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6559": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F85"
    },
    "6562": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6563": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6564": {
      "op": "POP"
    },
    "6565": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 100,
      "value": "0x37"
    },
    "6567": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD12"
    },
    "6570": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6571": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6572": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F85"
    },
    "6575": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6576": {
      "op": "JUMPDEST"
    },
    "6577": {
      "op": "POP"
    },
    "6578": {
      "op": "DUP1"
    },
    "6579": {
      "op": "SLOAD"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6582": {
      "op": "DUP3"
    },
    "6583": {
      "op": "SSTORE"
    },
    "6584": {
      "op": "SWAP1"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6587": {
      "op": "MSTORE"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6592": {
      "op": "KECCAK256"
    },
    "6593": {
      "op": "SWAP1"
    },
    "6594": {
      "op": "DUP2"
    },
    "6595": {
      "op": "ADD"
    },
    "6596": {
      "op": "SWAP1"
    },
    "6597": {
      "op": "PUSH2",
      "value": "0xAA0"
    },
    "6600": {
      "op": "SWAP2"
    },
    "6601": {
      "op": "SWAP1"
    },
    "6602": {
      "op": "JUMPDEST"
    },
    "6603": {
      "op": "DUP1"
    },
    "6604": {
      "op": "DUP3"
    },
    "6605": {
      "op": "GT"
    },
    "6606": {
      "op": "ISZERO"
    },
    "6607": {
      "op": "PUSH2",
      "value": "0x19DE"
    },
    "6610": {
      "op": "JUMPI"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6613": {
      "op": "DUP2"
    },
    "6614": {
      "op": "SSTORE"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6617": {
      "op": "ADD"
    },
    "6618": {
      "op": "PUSH2",
      "value": "0x19CA"
    },
    "6621": {
      "op": "JUMP"
    },
    "6622": {
      "op": "JUMPDEST"
    },
    "6623": {
      "op": "POP"
    },
    "6624": {
      "op": "SWAP1"
    },
    "6625": {
      "jump": "o",
      "op": "JUMP"
    },
    "6626": {
      "op": "JUMPDEST"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6631": {
      "op": "DUP1"
    },
    "6632": {
      "op": "DUP4"
    },
    "6633": {
      "op": "MSTORE"
    },
    "6634": {
      "op": "DUP4"
    },
    "6635": {
      "op": "MLOAD"
    },
    "6636": {
      "op": "DUP1"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6639": {
      "op": "DUP6"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "op": "MSTORE"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6644": {
      "op": "JUMPDEST"
    },
    "6645": {
      "op": "DUP2"
    },
    "6646": {
      "op": "DUP2"
    },
    "6647": {
      "op": "LT"
    },
    "6648": {
      "op": "ISZERO"
    },
    "6649": {
      "op": "PUSH2",
      "value": "0x1A10"
    },
    "6652": {
      "op": "JUMPI"
    },
    "6653": {
      "op": "DUP6"
    },
    "6654": {
      "op": "DUP2"
    },
    "6655": {
      "op": "ADD"
    },
    "6656": {
      "op": "DUP4"
    },
    "6657": {
      "op": "ADD"
    },
    "6658": {
      "op": "MLOAD"
    },
    "6659": {
      "op": "DUP6"
    },
    "6660": {
      "op": "DUP3"
    },
    "6661": {
      "op": "ADD"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6664": {
      "op": "ADD"
    },
    "6665": {
      "op": "MSTORE"
    },
    "6666": {
      "op": "DUP3"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "PUSH2",
      "value": "0x19F4"
    },
    "6671": {
      "op": "JUMP"
    },
    "6672": {
      "op": "JUMPDEST"
    },
    "6673": {
      "op": "POP"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6678": {
      "op": "DUP3"
    },
    "6679": {
      "op": "DUP7"
    },
    "6680": {
      "op": "ADD"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "op": "MSTORE"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6687": {
      "op": "NOT"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6690": {
      "op": "DUP4"
    },
    "6691": {
      "op": "ADD"
    },
    "6692": {
      "op": "AND"
    },
    "6693": {
      "op": "DUP6"
    },
    "6694": {
      "op": "ADD"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "SWAP3"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "op": "POP"
    },
    "6699": {
      "op": "POP"
    },
    "6700": {
      "op": "SWAP3"
    },
    "6701": {
      "op": "SWAP2"
    },
    "6702": {
      "op": "POP"
    },
    "6703": {
      "op": "POP"
    },
    "6704": {
      "jump": "o",
      "op": "JUMP"
    },
    "6705": {
      "op": "JUMPDEST"
    },
    "6706": {
      "op": "DUP1"
    },
    "6707": {
      "op": "CALLDATALOAD"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6714": {
      "op": "SHL"
    },
    "6715": {
      "op": "SUB"
    },
    "6716": {
      "op": "DUP2"
    },
    "6717": {
      "op": "AND"
    },
    "6718": {
      "op": "DUP2"
    },
    "6719": {
      "op": "EQ"
    },
    "6720": {
      "op": "PUSH2",
      "value": "0xEAF"
    },
    "6723": {
      "op": "JUMPI"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6726": {
      "op": "DUP1"
    },
    "6727": {
      "op": "REVERT"
    },
    "6728": {
      "op": "JUMPDEST"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6731": {
      "op": "DUP1"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6734": {
      "op": "DUP4"
    },
    "6735": {
      "op": "DUP6"
    },
    "6736": {
      "op": "SUB"
    },
    "6737": {
      "op": "SLT"
    },
    "6738": {
      "op": "ISZERO"
    },
    "6739": {
      "op": "PUSH2",
      "value": "0x1A5B"
    },
    "6742": {
      "op": "JUMPI"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6745": {
      "op": "DUP1"
    },
    "6746": {
      "op": "REVERT"
    },
    "6747": {
      "op": "JUMPDEST"
    },
    "6748": {
      "op": "PUSH2",
      "value": "0x1A64"
    },
    "6751": {
      "op": "DUP4"
    },
    "6752": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "6755": {
      "jump": "i",
      "op": "JUMP"
    },
    "6756": {
      "op": "JUMPDEST"
    },
    "6757": {
      "op": "SWAP5"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6760": {
      "op": "SWAP4"
    },
    "6761": {
      "op": "SWAP1"
    },
    "6762": {
      "op": "SWAP4"
    },
    "6763": {
      "op": "ADD"
    },
    "6764": {
      "op": "CALLDATALOAD"
    },
    "6765": {
      "op": "SWAP4"
    },
    "6766": {
      "op": "POP"
    },
    "6767": {
      "op": "POP"
    },
    "6768": {
      "op": "POP"
    },
    "6769": {
      "jump": "o",
      "op": "JUMP"
    },
    "6770": {
      "op": "JUMPDEST"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6775": {
      "op": "DUP3"
    },
    "6776": {
      "op": "DUP5"
    },
    "6777": {
      "op": "SUB"
    },
    "6778": {
      "op": "SLT"
    },
    "6779": {
      "op": "ISZERO"
    },
    "6780": {
      "op": "PUSH2",
      "value": "0x1A84"
    },
    "6783": {
      "op": "JUMPI"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6786": {
      "op": "DUP1"
    },
    "6787": {
      "op": "REVERT"
    },
    "6788": {
      "op": "JUMPDEST"
    },
    "6789": {
      "op": "POP"
    },
    "6790": {
      "op": "CALLDATALOAD"
    },
    "6791": {
      "op": "SWAP2"
    },
    "6792": {
      "op": "SWAP1"
    },
    "6793": {
      "op": "POP"
    },
    "6794": {
      "jump": "o",
      "op": "JUMP"
    },
    "6795": {
      "op": "JUMPDEST"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6798": {
      "op": "DUP1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6803": {
      "op": "DUP5"
    },
    "6804": {
      "op": "DUP7"
    },
    "6805": {
      "op": "SUB"
    },
    "6806": {
      "op": "SLT"
    },
    "6807": {
      "op": "ISZERO"
    },
    "6808": {
      "op": "PUSH2",
      "value": "0x1AA0"
    },
    "6811": {
      "op": "JUMPI"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6814": {
      "op": "DUP1"
    },
    "6815": {
      "op": "REVERT"
    },
    "6816": {
      "op": "JUMPDEST"
    },
    "6817": {
      "op": "PUSH2",
      "value": "0x1AA9"
    },
    "6820": {
      "op": "DUP5"
    },
    "6821": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "6824": {
      "jump": "i",
      "op": "JUMP"
    },
    "6825": {
      "op": "JUMPDEST"
    },
    "6826": {
      "op": "SWAP3"
    },
    "6827": {
      "op": "POP"
    },
    "6828": {
      "op": "PUSH2",
      "value": "0x1AB7"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6833": {
      "op": "DUP6"
    },
    "6834": {
      "op": "ADD"
    },
    "6835": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "6838": {
      "jump": "i",
      "op": "JUMP"
    },
    "6839": {
      "op": "JUMPDEST"
    },
    "6840": {
      "op": "SWAP2"
    },
    "6841": {
      "op": "POP"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6844": {
      "op": "DUP5"
    },
    "6845": {
      "op": "ADD"
    },
    "6846": {
      "op": "CALLDATALOAD"
    },
    "6847": {
      "op": "SWAP1"
    },
    "6848": {
      "op": "POP"
    },
    "6849": {
      "op": "SWAP3"
    },
    "6850": {
      "op": "POP"
    },
    "6851": {
      "op": "SWAP3"
    },
    "6852": {
      "op": "POP"
    },
    "6853": {
      "op": "SWAP3"
    },
    "6854": {
      "jump": "o",
      "op": "JUMP"
    },
    "6855": {
      "op": "JUMPDEST"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6860": {
      "op": "DUP3"
    },
    "6861": {
      "op": "DUP5"
    },
    "6862": {
      "op": "SUB"
    },
    "6863": {
      "op": "SLT"
    },
    "6864": {
      "op": "ISZERO"
    },
    "6865": {
      "op": "PUSH2",
      "value": "0x1AD9"
    },
    "6868": {
      "op": "JUMPI"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6871": {
      "op": "DUP1"
    },
    "6872": {
      "op": "REVERT"
    },
    "6873": {
      "op": "JUMPDEST"
    },
    "6874": {
      "op": "PUSH2",
      "value": "0x1AE2"
    },
    "6877": {
      "op": "DUP3"
    },
    "6878": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "6881": {
      "jump": "i",
      "op": "JUMP"
    },
    "6882": {
      "op": "JUMPDEST"
    },
    "6883": {
      "op": "SWAP4"
    },
    "6884": {
      "op": "SWAP3"
    },
    "6885": {
      "op": "POP"
    },
    "6886": {
      "op": "POP"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "jump": "o",
      "op": "JUMP"
    },
    "6889": {
      "op": "JUMPDEST"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6892": {
      "op": "DUP1"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6895": {
      "op": "DUP4"
    },
    "6896": {
      "op": "DUP6"
    },
    "6897": {
      "op": "SUB"
    },
    "6898": {
      "op": "SLT"
    },
    "6899": {
      "op": "ISZERO"
    },
    "6900": {
      "op": "PUSH2",
      "value": "0x1AFC"
    },
    "6903": {
      "op": "JUMPI"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6906": {
      "op": "DUP1"
    },
    "6907": {
      "op": "REVERT"
    },
    "6908": {
      "op": "JUMPDEST"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "op": "POP"
    },
    "6911": {
      "op": "DUP1"
    },
    "6912": {
      "op": "CALLDATALOAD"
    },
    "6913": {
      "op": "SWAP3"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6916": {
      "op": "SWAP1"
    },
    "6917": {
      "op": "SWAP2"
    },
    "6918": {
      "op": "ADD"
    },
    "6919": {
      "op": "CALLDATALOAD"
    },
    "6920": {
      "op": "SWAP2"
    },
    "6921": {
      "op": "POP"
    },
    "6922": {
      "jump": "o",
      "op": "JUMP"
    },
    "6923": {
      "op": "JUMPDEST"
    },
    "6924": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6931": {
      "op": "SHL"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6934": {
      "op": "MSTORE"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6939": {
      "op": "MSTORE"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6944": {
      "op": "REVERT"
    },
    "6945": {
      "op": "JUMPDEST"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6948": {
      "op": "MLOAD"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6951": {
      "op": "DUP3"
    },
    "6952": {
      "op": "ADD"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6955": {
      "op": "NOT"
    },
    "6956": {
      "op": "AND"
    },
    "6957": {
      "op": "DUP2"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6968": {
      "op": "DUP2"
    },
    "6969": {
      "op": "GT"
    },
    "6970": {
      "op": "DUP3"
    },
    "6971": {
      "op": "DUP3"
    },
    "6972": {
      "op": "LT"
    },
    "6973": {
      "op": "OR"
    },
    "6974": {
      "op": "ISZERO"
    },
    "6975": {
      "op": "PUSH2",
      "value": "0x1B4A"
    },
    "6978": {
      "op": "JUMPI"
    },
    "6979": {
      "op": "PUSH2",
      "value": "0x1B4A"
    },
    "6982": {
      "op": "PUSH2",
      "value": "0x1B0B"
    },
    "6985": {
      "jump": "i",
      "op": "JUMP"
    },
    "6986": {
      "op": "JUMPDEST"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6989": {
      "op": "MSTORE"
    },
    "6990": {
      "op": "SWAP2"
    },
    "6991": {
      "op": "SWAP1"
    },
    "6992": {
      "op": "POP"
    },
    "6993": {
      "jump": "o",
      "op": "JUMP"
    },
    "6994": {
      "op": "JUMPDEST"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6997": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7006": {
      "op": "DUP3"
    },
    "7007": {
      "op": "GT"
    },
    "7008": {
      "op": "ISZERO"
    },
    "7009": {
      "op": "PUSH2",
      "value": "0x1B6C"
    },
    "7012": {
      "op": "JUMPI"
    },
    "7013": {
      "op": "PUSH2",
      "value": "0x1B6C"
    },
    "7016": {
      "op": "PUSH2",
      "value": "0x1B0B"
    },
    "7019": {
      "jump": "i",
      "op": "JUMP"
    },
    "7020": {
      "op": "JUMPDEST"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7024": {
      "op": "SHL"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7027": {
      "op": "ADD"
    },
    "7028": {
      "op": "SWAP1"
    },
    "7029": {
      "jump": "o",
      "op": "JUMP"
    },
    "7030": {
      "op": "JUMPDEST"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7033": {
      "op": "DUP3"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7036": {
      "op": "DUP4"
    },
    "7037": {
      "op": "ADD"
    },
    "7038": {
      "op": "SLT"
    },
    "7039": {
      "op": "PUSH2",
      "value": "0x1B87"
    },
    "7042": {
      "op": "JUMPI"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7045": {
      "op": "DUP1"
    },
    "7046": {
      "op": "REVERT"
    },
    "7047": {
      "op": "JUMPDEST"
    },
    "7048": {
      "op": "DUP2"
    },
    "7049": {
      "op": "CALLDATALOAD"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7052": {
      "op": "PUSH2",
      "value": "0x1B9C"
    },
    "7055": {
      "op": "PUSH2",
      "value": "0x1B97"
    },
    "7058": {
      "op": "DUP4"
    },
    "7059": {
      "op": "PUSH2",
      "value": "0x1B52"
    },
    "7062": {
      "jump": "i",
      "op": "JUMP"
    },
    "7063": {
      "op": "JUMPDEST"
    },
    "7064": {
      "op": "PUSH2",
      "value": "0x1B21"
    },
    "7067": {
      "jump": "i",
      "op": "JUMP"
    },
    "7068": {
      "op": "JUMPDEST"
    },
    "7069": {
      "op": "DUP1"
    },
    "7070": {
      "op": "DUP4"
    },
    "7071": {
      "op": "DUP3"
    },
    "7072": {
      "op": "MSTORE"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7075": {
      "op": "DUP3"
    },
    "7076": {
      "op": "ADD"
    },
    "7077": {
      "op": "SWAP2"
    },
    "7078": {
      "op": "POP"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7081": {
      "op": "DUP5"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7084": {
      "op": "SHL"
    },
    "7085": {
      "op": "DUP8"
    },
    "7086": {
      "op": "ADD"
    },
    "7087": {
      "op": "ADD"
    },
    "7088": {
      "op": "SWAP4"
    },
    "7089": {
      "op": "POP"
    },
    "7090": {
      "op": "DUP7"
    },
    "7091": {
      "op": "DUP5"
    },
    "7092": {
      "op": "GT"
    },
    "7093": {
      "op": "ISZERO"
    },
    "7094": {
      "op": "PUSH2",
      "value": "0x1BBE"
    },
    "7097": {
      "op": "JUMPI"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7100": {
      "op": "DUP1"
    },
    "7101": {
      "op": "REVERT"
    },
    "7102": {
      "op": "JUMPDEST"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7105": {
      "op": "DUP7"
    },
    "7106": {
      "op": "ADD"
    },
    "7107": {
      "op": "JUMPDEST"
    },
    "7108": {
      "op": "DUP5"
    },
    "7109": {
      "op": "DUP2"
    },
    "7110": {
      "op": "LT"
    },
    "7111": {
      "op": "ISZERO"
    },
    "7112": {
      "op": "PUSH2",
      "value": "0x1BE1"
    },
    "7115": {
      "op": "JUMPI"
    },
    "7116": {
      "op": "PUSH2",
      "value": "0x1BD4"
    },
    "7119": {
      "op": "DUP2"
    },
    "7120": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "7123": {
      "jump": "i",
      "op": "JUMP"
    },
    "7124": {
      "op": "JUMPDEST"
    },
    "7125": {
      "op": "DUP4"
    },
    "7126": {
      "op": "MSTORE"
    },
    "7127": {
      "op": "SWAP2"
    },
    "7128": {
      "op": "DUP4"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "op": "SWAP2"
    },
    "7131": {
      "op": "DUP4"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "PUSH2",
      "value": "0x1BC3"
    },
    "7136": {
      "op": "JUMP"
    },
    "7137": {
      "op": "JUMPDEST"
    },
    "7138": {
      "op": "POP"
    },
    "7139": {
      "op": "SWAP7"
    },
    "7140": {
      "op": "SWAP6"
    },
    "7141": {
      "op": "POP"
    },
    "7142": {
      "op": "POP"
    },
    "7143": {
      "op": "POP"
    },
    "7144": {
      "op": "POP"
    },
    "7145": {
      "op": "POP"
    },
    "7146": {
      "op": "POP"
    },
    "7147": {
      "jump": "o",
      "op": "JUMP"
    },
    "7148": {
      "op": "JUMPDEST"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7151": {
      "op": "DUP1"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7154": {
      "op": "DUP1"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7159": {
      "op": "DUP7"
    },
    "7160": {
      "op": "DUP9"
    },
    "7161": {
      "op": "SUB"
    },
    "7162": {
      "op": "SLT"
    },
    "7163": {
      "op": "ISZERO"
    },
    "7164": {
      "op": "PUSH2",
      "value": "0x1C04"
    },
    "7167": {
      "op": "JUMPI"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7170": {
      "op": "DUP1"
    },
    "7171": {
      "op": "REVERT"
    },
    "7172": {
      "op": "JUMPDEST"
    },
    "7173": {
      "op": "DUP6"
    },
    "7174": {
      "op": "CALLDATALOAD"
    },
    "7175": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7184": {
      "op": "DUP1"
    },
    "7185": {
      "op": "DUP3"
    },
    "7186": {
      "op": "GT"
    },
    "7187": {
      "op": "ISZERO"
    },
    "7188": {
      "op": "PUSH2",
      "value": "0x1C1C"
    },
    "7191": {
      "op": "JUMPI"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7194": {
      "op": "DUP1"
    },
    "7195": {
      "op": "REVERT"
    },
    "7196": {
      "op": "JUMPDEST"
    },
    "7197": {
      "op": "PUSH2",
      "value": "0x1C28"
    },
    "7200": {
      "op": "DUP10"
    },
    "7201": {
      "op": "DUP4"
    },
    "7202": {
      "op": "DUP11"
    },
    "7203": {
      "op": "ADD"
    },
    "7204": {
      "op": "PUSH2",
      "value": "0x1B76"
    },
    "7207": {
      "jump": "i",
      "op": "JUMP"
    },
    "7208": {
      "op": "JUMPDEST"
    },
    "7209": {
      "op": "SWAP7"
    },
    "7210": {
      "op": "POP"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7213": {
      "op": "SWAP2"
    },
    "7214": {
      "op": "POP"
    },
    "7215": {
      "op": "DUP2"
    },
    "7216": {
      "op": "DUP9"
    },
    "7217": {
      "op": "ADD"
    },
    "7218": {
      "op": "CALLDATALOAD"
    },
    "7219": {
      "op": "DUP2"
    },
    "7220": {
      "op": "DUP2"
    },
    "7221": {
      "op": "GT"
    },
    "7222": {
      "op": "ISZERO"
    },
    "7223": {
      "op": "PUSH2",
      "value": "0x1C3F"
    },
    "7226": {
      "op": "JUMPI"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7229": {
      "op": "DUP1"
    },
    "7230": {
      "op": "REVERT"
    },
    "7231": {
      "op": "JUMPDEST"
    },
    "7232": {
      "op": "DUP9"
    },
    "7233": {
      "op": "ADD"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7236": {
      "op": "DUP2"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "DUP11"
    },
    "7239": {
      "op": "SGT"
    },
    "7240": {
      "op": "PUSH2",
      "value": "0x1C50"
    },
    "7243": {
      "op": "JUMPI"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7246": {
      "op": "DUP1"
    },
    "7247": {
      "op": "REVERT"
    },
    "7248": {
      "op": "JUMPDEST"
    },
    "7249": {
      "op": "DUP1"
    },
    "7250": {
      "op": "CALLDATALOAD"
    },
    "7251": {
      "op": "PUSH2",
      "value": "0x1C5E"
    },
    "7254": {
      "op": "PUSH2",
      "value": "0x1B97"
    },
    "7257": {
      "op": "DUP3"
    },
    "7258": {
      "op": "PUSH2",
      "value": "0x1B52"
    },
    "7261": {
      "jump": "i",
      "op": "JUMP"
    },
    "7262": {
      "op": "JUMPDEST"
    },
    "7263": {
      "op": "DUP2"
    },
    "7264": {
      "op": "DUP2"
    },
    "7265": {
      "op": "MSTORE"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7268": {
      "op": "SWAP2"
    },
    "7269": {
      "op": "SWAP1"
    },
    "7270": {
      "op": "SWAP2"
    },
    "7271": {
      "op": "SHL"
    },
    "7272": {
      "op": "DUP3"
    },
    "7273": {
      "op": "ADD"
    },
    "7274": {
      "op": "DUP5"
    },
    "7275": {
      "op": "ADD"
    },
    "7276": {
      "op": "SWAP1"
    },
    "7277": {
      "op": "DUP5"
    },
    "7278": {
      "op": "DUP2"
    },
    "7279": {
      "op": "ADD"
    },
    "7280": {
      "op": "SWAP1"
    },
    "7281": {
      "op": "DUP13"
    },
    "7282": {
      "op": "DUP4"
    },
    "7283": {
      "op": "GT"
    },
    "7284": {
      "op": "ISZERO"
    },
    "7285": {
      "op": "PUSH2",
      "value": "0x1C7D"
    },
    "7288": {
      "op": "JUMPI"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7291": {
      "op": "DUP1"
    },
    "7292": {
      "op": "REVERT"
    },
    "7293": {
      "op": "JUMPDEST"
    },
    "7294": {
      "op": "SWAP3"
    },
    "7295": {
      "op": "DUP6"
    },
    "7296": {
      "op": "ADD"
    },
    "7297": {
      "op": "SWAP3"
    },
    "7298": {
      "op": "JUMPDEST"
    },
    "7299": {
      "op": "DUP3"
    },
    "7300": {
      "op": "DUP5"
    },
    "7301": {
      "op": "LT"
    },
    "7302": {
      "op": "ISZERO"
    },
    "7303": {
      "op": "PUSH2",
      "value": "0x1C9B"
    },
    "7306": {
      "op": "JUMPI"
    },
    "7307": {
      "op": "DUP4"
    },
    "7308": {
      "op": "CALLDATALOAD"
    },
    "7309": {
      "op": "DUP3"
    },
    "7310": {
      "op": "MSTORE"
    },
    "7311": {
      "op": "SWAP3"
    },
    "7312": {
      "op": "DUP6"
    },
    "7313": {
      "op": "ADD"
    },
    "7314": {
      "op": "SWAP3"
    },
    "7315": {
      "op": "SWAP1"
    },
    "7316": {
      "op": "DUP6"
    },
    "7317": {
      "op": "ADD"
    },
    "7318": {
      "op": "SWAP1"
    },
    "7319": {
      "op": "PUSH2",
      "value": "0x1C82"
    },
    "7322": {
      "op": "JUMP"
    },
    "7323": {
      "op": "JUMPDEST"
    },
    "7324": {
      "op": "SWAP9"
    },
    "7325": {
      "op": "POP"
    },
    "7326": {
      "op": "POP"
    },
    "7327": {
      "op": "POP"
    },
    "7328": {
      "op": "POP"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7331": {
      "op": "DUP9"
    },
    "7332": {
      "op": "ADD"
    },
    "7333": {
      "op": "CALLDATALOAD"
    },
    "7334": {
      "op": "SWAP5"
    },
    "7335": {
      "op": "POP"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7338": {
      "op": "DUP9"
    },
    "7339": {
      "op": "ADD"
    },
    "7340": {
      "op": "CALLDATALOAD"
    },
    "7341": {
      "op": "SWAP2"
    },
    "7342": {
      "op": "POP"
    },
    "7343": {
      "op": "DUP1"
    },
    "7344": {
      "op": "DUP3"
    },
    "7345": {
      "op": "GT"
    },
    "7346": {
      "op": "ISZERO"
    },
    "7347": {
      "op": "PUSH2",
      "value": "0x1CBB"
    },
    "7350": {
      "op": "JUMPI"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7353": {
      "op": "DUP1"
    },
    "7354": {
      "op": "REVERT"
    },
    "7355": {
      "op": "JUMPDEST"
    },
    "7356": {
      "op": "POP"
    },
    "7357": {
      "op": "PUSH2",
      "value": "0x1CC8"
    },
    "7360": {
      "op": "DUP9"
    },
    "7361": {
      "op": "DUP3"
    },
    "7362": {
      "op": "DUP10"
    },
    "7363": {
      "op": "ADD"
    },
    "7364": {
      "op": "PUSH2",
      "value": "0x1B76"
    },
    "7367": {
      "jump": "i",
      "op": "JUMP"
    },
    "7368": {
      "op": "JUMPDEST"
    },
    "7369": {
      "op": "SWAP6"
    },
    "7370": {
      "op": "SWAP9"
    },
    "7371": {
      "op": "SWAP5"
    },
    "7372": {
      "op": "SWAP8"
    },
    "7373": {
      "op": "POP"
    },
    "7374": {
      "op": "SWAP3"
    },
    "7375": {
      "op": "SWAP6"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "op": "CALLDATALOAD"
    },
    "7380": {
      "op": "SWAP4"
    },
    "7381": {
      "op": "SWAP3"
    },
    "7382": {
      "op": "POP"
    },
    "7383": {
      "op": "POP"
    },
    "7384": {
      "op": "POP"
    },
    "7385": {
      "jump": "o",
      "op": "JUMP"
    },
    "7386": {
      "op": "JUMPDEST"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7391": {
      "op": "DUP3"
    },
    "7392": {
      "op": "DUP5"
    },
    "7393": {
      "op": "SUB"
    },
    "7394": {
      "op": "SLT"
    },
    "7395": {
      "op": "ISZERO"
    },
    "7396": {
      "op": "PUSH2",
      "value": "0x1CEC"
    },
    "7399": {
      "op": "JUMPI"
    },
    "7400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7402": {
      "op": "DUP1"
    },
    "7403": {
      "op": "REVERT"
    },
    "7404": {
      "op": "JUMPDEST"
    },
    "7405": {
      "op": "DUP2"
    },
    "7406": {
      "op": "CALLDATALOAD"
    },
    "7407": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7416": {
      "op": "DUP2"
    },
    "7417": {
      "op": "GT"
    },
    "7418": {
      "op": "ISZERO"
    },
    "7419": {
      "op": "PUSH2",
      "value": "0x1D03"
    },
    "7422": {
      "op": "JUMPI"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7425": {
      "op": "DUP1"
    },
    "7426": {
      "op": "REVERT"
    },
    "7427": {
      "op": "JUMPDEST"
    },
    "7428": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7431": {
      "op": "DUP5"
    },
    "7432": {
      "op": "DUP3"
    },
    "7433": {
      "op": "DUP6"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "op": "PUSH2",
      "value": "0x1B76"
    },
    "7438": {
      "jump": "i",
      "op": "JUMP"
    },
    "7439": {
      "op": "JUMPDEST"
    },
    "7440": {
      "op": "SWAP5"
    },
    "7441": {
      "op": "SWAP4"
    },
    "7442": {
      "op": "POP"
    },
    "7443": {
      "op": "POP"
    },
    "7444": {
      "op": "POP"
    },
    "7445": {
      "op": "POP"
    },
    "7446": {
      "jump": "o",
      "op": "JUMP"
    },
    "7447": {
      "op": "JUMPDEST"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7450": {
      "op": "DUP1"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7453": {
      "op": "DUP4"
    },
    "7454": {
      "op": "DUP6"
    },
    "7455": {
      "op": "SUB"
    },
    "7456": {
      "op": "SLT"
    },
    "7457": {
      "op": "ISZERO"
    },
    "7458": {
      "op": "PUSH2",
      "value": "0x1D2A"
    },
    "7461": {
      "op": "JUMPI"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7464": {
      "op": "DUP1"
    },
    "7465": {
      "op": "REVERT"
    },
    "7466": {
      "op": "JUMPDEST"
    },
    "7467": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "7470": {
      "op": "DUP4"
    },
    "7471": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "7474": {
      "jump": "i",
      "op": "JUMP"
    },
    "7475": {
      "op": "JUMPDEST"
    },
    "7476": {
      "op": "SWAP2"
    },
    "7477": {
      "op": "POP"
    },
    "7478": {
      "op": "PUSH2",
      "value": "0x1D41"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7483": {
      "op": "DUP5"
    },
    "7484": {
      "op": "ADD"
    },
    "7485": {
      "op": "PUSH2",
      "value": "0x1A31"
    },
    "7488": {
      "jump": "i",
      "op": "JUMP"
    },
    "7489": {
      "op": "JUMPDEST"
    },
    "7490": {
      "op": "SWAP1"
    },
    "7491": {
      "op": "POP"
    },
    "7492": {
      "op": "SWAP3"
    },
    "7493": {
      "op": "POP"
    },
    "7494": {
      "op": "SWAP3"
    },
    "7495": {
      "op": "SWAP1"
    },
    "7496": {
      "op": "POP"
    },
    "7497": {
      "jump": "o",
      "op": "JUMP"
    },
    "7498": {
      "op": "JUMPDEST"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7501": {
      "op": "DUP2"
    },
    "7502": {
      "op": "DUP2"
    },
    "7503": {
      "op": "SHR"
    },
    "7504": {
      "op": "SWAP1"
    },
    "7505": {
      "op": "DUP3"
    },
    "7506": {
      "op": "AND"
    },
    "7507": {
      "op": "DUP1"
    },
    "7508": {
      "op": "PUSH2",
      "value": "0x1D5E"
    },
    "7511": {
      "op": "JUMPI"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7514": {
      "op": "DUP3"
    },
    "7515": {
      "op": "AND"
    },
    "7516": {
      "op": "SWAP2"
    },
    "7517": {
      "op": "POP"
    },
    "7518": {
      "op": "JUMPDEST"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7521": {
      "op": "DUP3"
    },
    "7522": {
      "op": "LT"
    },
    "7523": {
      "op": "DUP2"
    },
    "7524": {
      "op": "SUB"
    },
    "7525": {
      "op": "PUSH2",
      "value": "0x1D7E"
    },
    "7528": {
      "op": "JUMPI"
    },
    "7529": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7536": {
      "op": "SHL"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7539": {
      "op": "MSTORE"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7544": {
      "op": "MSTORE"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7549": {
      "op": "REVERT"
    },
    "7550": {
      "op": "JUMPDEST"
    },
    "7551": {
      "op": "POP"
    },
    "7552": {
      "op": "SWAP2"
    },
    "7553": {
      "op": "SWAP1"
    },
    "7554": {
      "op": "POP"
    },
    "7555": {
      "jump": "o",
      "op": "JUMP"
    },
    "7556": {
      "op": "JUMPDEST"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7561": {
      "op": "DUP3"
    },
    "7562": {
      "op": "DUP5"
    },
    "7563": {
      "op": "SUB"
    },
    "7564": {
      "op": "SLT"
    },
    "7565": {
      "op": "ISZERO"
    },
    "7566": {
      "op": "PUSH2",
      "value": "0x1D96"
    },
    "7569": {
      "op": "JUMPI"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7572": {
      "op": "DUP1"
    },
    "7573": {
      "op": "REVERT"
    },
    "7574": {
      "op": "JUMPDEST"
    },
    "7575": {
      "op": "POP"
    },
    "7576": {
      "op": "MLOAD"
    },
    "7577": {
      "op": "SWAP2"
    },
    "7578": {
      "op": "SWAP1"
    },
    "7579": {
      "op": "POP"
    },
    "7580": {
      "jump": "o",
      "op": "JUMP"
    },
    "7581": {
      "op": "JUMPDEST"
    },
    "7582": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7589": {
      "op": "SHL"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7592": {
      "op": "MSTORE"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7597": {
      "op": "MSTORE"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7602": {
      "op": "REVERT"
    },
    "7603": {
      "op": "JUMPDEST"
    },
    "7604": {
      "op": "DUP1"
    },
    "7605": {
      "op": "DUP3"
    },
    "7606": {
      "op": "ADD"
    },
    "7607": {
      "op": "DUP1"
    },
    "7608": {
      "op": "DUP3"
    },
    "7609": {
      "op": "GT"
    },
    "7610": {
      "op": "ISZERO"
    },
    "7611": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "7614": {
      "op": "JUMPI"
    },
    "7615": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "7618": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7621": {
      "jump": "i",
      "op": "JUMP"
    },
    "7622": {
      "op": "JUMPDEST"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7627": {
      "op": "DUP3"
    },
    "7628": {
      "op": "ADD"
    },
    "7629": {
      "op": "PUSH2",
      "value": "0x1DD8"
    },
    "7632": {
      "op": "JUMPI"
    },
    "7633": {
      "op": "PUSH2",
      "value": "0x1DD8"
    },
    "7636": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7639": {
      "jump": "i",
      "op": "JUMP"
    },
    "7640": {
      "op": "JUMPDEST"
    },
    "7641": {
      "op": "POP"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "ADD"
    },
    "7645": {
      "op": "SWAP1"
    },
    "7646": {
      "jump": "o",
      "op": "JUMP"
    },
    "7647": {
      "op": "JUMPDEST"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7650": {
      "op": "DUP1"
    },
    "7651": {
      "op": "DUP3"
    },
    "7652": {
      "op": "MSTORE"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7655": {
      "op": "SWAP1"
    },
    "7656": {
      "op": "DUP3"
    },
    "7657": {
      "op": "ADD"
    },
    "7658": {
      "op": "MSTORE"
    },
    "7659": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206D7573742062652074686520536D6172746E6F6465734D756C"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7694": {
      "op": "DUP3"
    },
    "7695": {
      "op": "ADD"
    },
    "7696": {
      "op": "MSTORE"
    },
    "7697": {
      "op": "PUSH6",
      "value": "0x3A34A9B4B397"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "7706": {
      "op": "SHL"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7709": {
      "op": "DUP3"
    },
    "7710": {
      "op": "ADD"
    },
    "7711": {
      "op": "MSTORE"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7714": {
      "op": "ADD"
    },
    "7715": {
      "op": "SWAP1"
    },
    "7716": {
      "jump": "o",
      "op": "JUMP"
    },
    "7717": {
      "op": "JUMPDEST"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7720": {
      "op": "DUP3"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1E42"
    },
    "7724": {
      "op": "JUMPI"
    },
    "7725": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7732": {
      "op": "SHL"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7735": {
      "op": "MSTORE"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7740": {
      "op": "MSTORE"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7745": {
      "op": "REVERT"
    },
    "7746": {
      "op": "JUMPDEST"
    },
    "7747": {
      "op": "POP"
    },
    "7748": {
      "op": "DIV"
    },
    "7749": {
      "op": "SWAP1"
    },
    "7750": {
      "jump": "o",
      "op": "JUMP"
    },
    "7751": {
      "op": "JUMPDEST"
    },
    "7752": {
      "op": "DUP1"
    },
    "7753": {
      "op": "DUP3"
    },
    "7754": {
      "op": "MUL"
    },
    "7755": {
      "op": "DUP2"
    },
    "7756": {
      "op": "ISZERO"
    },
    "7757": {
      "op": "DUP3"
    },
    "7758": {
      "op": "DUP3"
    },
    "7759": {
      "op": "DIV"
    },
    "7760": {
      "op": "DUP5"
    },
    "7761": {
      "op": "EQ"
    },
    "7762": {
      "op": "OR"
    },
    "7763": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "7766": {
      "op": "JUMPI"
    },
    "7767": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "7770": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7773": {
      "jump": "i",
      "op": "JUMP"
    },
    "7774": {
      "op": "JUMPDEST"
    },
    "7775": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7785": {
      "op": "MSTORE"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7790": {
      "op": "MSTORE"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7795": {
      "op": "REVERT"
    },
    "7796": {
      "op": "JUMPDEST"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7799": {
      "op": "DUP1"
    },
    "7800": {
      "op": "DUP3"
    },
    "7801": {
      "op": "MSTORE"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7804": {
      "op": "SWAP1"
    },
    "7805": {
      "op": "DUP3"
    },
    "7806": {
      "op": "ADD"
    },
    "7807": {
      "op": "MSTORE"
    },
    "7808": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7843": {
      "op": "DUP3"
    },
    "7844": {
      "op": "ADD"
    },
    "7845": {
      "op": "MSTORE"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "7850": {
      "op": "SHL"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7853": {
      "op": "DUP3"
    },
    "7854": {
      "op": "ADD"
    },
    "7855": {
      "op": "MSTORE"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7858": {
      "op": "ADD"
    },
    "7859": {
      "op": "SWAP1"
    },
    "7860": {
      "jump": "o",
      "op": "JUMP"
    },
    "7861": {
      "op": "JUMPDEST"
    },
    "7862": {
      "op": "DUP2"
    },
    "7863": {
      "op": "DUP2"
    },
    "7864": {
      "op": "SUB"
    },
    "7865": {
      "op": "DUP2"
    },
    "7866": {
      "op": "DUP2"
    },
    "7867": {
      "op": "GT"
    },
    "7868": {
      "op": "ISZERO"
    },
    "7869": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "7872": {
      "op": "JUMPI"
    },
    "7873": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "7876": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7879": {
      "jump": "i",
      "op": "JUMP"
    },
    "7880": {
      "op": "JUMPDEST"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7885": {
      "op": "DUP3"
    },
    "7886": {
      "op": "DUP5"
    },
    "7887": {
      "op": "SUB"
    },
    "7888": {
      "op": "SLT"
    },
    "7889": {
      "op": "ISZERO"
    },
    "7890": {
      "op": "PUSH2",
      "value": "0x1EDA"
    },
    "7893": {
      "op": "JUMPI"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7896": {
      "op": "DUP1"
    },
    "7897": {
      "op": "REVERT"
    },
    "7898": {
      "op": "JUMPDEST"
    },
    "7899": {
      "op": "DUP2"
    },
    "7900": {
      "op": "MLOAD"
    },
    "7901": {
      "op": "DUP1"
    },
    "7902": {
      "op": "ISZERO"
    },
    "7903": {
      "op": "ISZERO"
    },
    "7904": {
      "op": "DUP2"
    },
    "7905": {
      "op": "EQ"
    },
    "7906": {
      "op": "PUSH2",
      "value": "0x1AE2"
    },
    "7909": {
      "op": "JUMPI"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7912": {
      "op": "DUP1"
    },
    "7913": {
      "op": "REVERT"
    },
    "7914": {
      "op": "JUMPDEST"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7917": {
      "op": "DUP1"
    },
    "7918": {
      "op": "DUP3"
    },
    "7919": {
      "op": "MSTORE"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "7922": {
      "op": "SWAP1"
    },
    "7923": {
      "op": "DUP3"
    },
    "7924": {
      "op": "ADD"
    },
    "7925": {
      "op": "MSTORE"
    },
    "7926": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7961": {
      "op": "DUP3"
    },
    "7962": {
      "op": "ADD"
    },
    "7963": {
      "op": "MSTORE"
    },
    "7964": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7978": {
      "op": "SHL"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7981": {
      "op": "DUP3"
    },
    "7982": {
      "op": "ADD"
    },
    "7983": {
      "op": "MSTORE"
    },
    "7984": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7986": {
      "op": "ADD"
    },
    "7987": {
      "op": "SWAP1"
    },
    "7988": {
      "jump": "o",
      "op": "JUMP"
    },
    "7989": {
      "op": "JUMPDEST"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7992": {
      "op": "DUP3"
    },
    "7993": {
      "op": "GT"
    },
    "7994": {
      "op": "ISZERO"
    },
    "7995": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "7998": {
      "op": "JUMPI"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8001": {
      "op": "DUP2"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8004": {
      "op": "MSTORE"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8009": {
      "op": "KECCAK256"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8012": {
      "op": "DUP6"
    },
    "8013": {
      "op": "ADD"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8016": {
      "op": "SHR"
    },
    "8017": {
      "op": "DUP2"
    },
    "8018": {
      "op": "ADD"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8021": {
      "op": "DUP7"
    },
    "8022": {
      "op": "LT"
    },
    "8023": {
      "op": "ISZERO"
    },
    "8024": {
      "op": "PUSH2",
      "value": "0x1F5E"
    },
    "8027": {
      "op": "JUMPI"
    },
    "8028": {
      "op": "POP"
    },
    "8029": {
      "op": "DUP1"
    },
    "8030": {
      "op": "JUMPDEST"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8033": {
      "op": "DUP6"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8037": {
      "op": "SHR"
    },
    "8038": {
      "op": "DUP3"
    },
    "8039": {
      "op": "ADD"
    },
    "8040": {
      "op": "SWAP2"
    },
    "8041": {
      "op": "POP"
    },
    "8042": {
      "op": "JUMPDEST"
    },
    "8043": {
      "op": "DUP2"
    },
    "8044": {
      "op": "DUP2"
    },
    "8045": {
      "op": "LT"
    },
    "8046": {
      "op": "ISZERO"
    },
    "8047": {
      "op": "PUSH2",
      "value": "0x1F7D"
    },
    "8050": {
      "op": "JUMPI"
    },
    "8051": {
      "op": "DUP3"
    },
    "8052": {
      "op": "DUP2"
    },
    "8053": {
      "op": "SSTORE"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8056": {
      "op": "ADD"
    },
    "8057": {
      "op": "PUSH2",
      "value": "0x1F6A"
    },
    "8060": {
      "op": "JUMP"
    },
    "8061": {
      "op": "JUMPDEST"
    },
    "8062": {
      "op": "POP"
    },
    "8063": {
      "op": "POP"
    },
    "8064": {
      "op": "POP"
    },
    "8065": {
      "op": "POP"
    },
    "8066": {
      "op": "POP"
    },
    "8067": {
      "op": "POP"
    },
    "8068": {
      "jump": "o",
      "op": "JUMP"
    },
    "8069": {
      "op": "JUMPDEST"
    },
    "8070": {
      "op": "DUP2"
    },
    "8071": {
      "op": "MLOAD"
    },
    "8072": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8081": {
      "op": "DUP2"
    },
    "8082": {
      "op": "GT"
    },
    "8083": {
      "op": "ISZERO"
    },
    "8084": {
      "op": "PUSH2",
      "value": "0x1F9F"
    },
    "8087": {
      "op": "JUMPI"
    },
    "8088": {
      "op": "PUSH2",
      "value": "0x1F9F"
    },
    "8091": {
      "op": "PUSH2",
      "value": "0x1B0B"
    },
    "8094": {
      "jump": "i",
      "op": "JUMP"
    },
    "8095": {
      "op": "JUMPDEST"
    },
    "8096": {
      "op": "PUSH2",
      "value": "0x1FB3"
    },
    "8099": {
      "op": "DUP2"
    },
    "8100": {
      "op": "PUSH2",
      "value": "0x1FAD"
    },
    "8103": {
      "op": "DUP5"
    },
    "8104": {
      "op": "SLOAD"
    },
    "8105": {
      "op": "PUSH2",
      "value": "0x1D4A"
    },
    "8108": {
      "jump": "i",
      "op": "JUMP"
    },
    "8109": {
      "op": "JUMPDEST"
    },
    "8110": {
      "op": "DUP5"
    },
    "8111": {
      "op": "PUSH2",
      "value": "0x1F35"
    },
    "8114": {
      "jump": "i",
      "op": "JUMP"
    },
    "8115": {
      "op": "JUMPDEST"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8118": {
      "op": "DUP1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8121": {
      "op": "DUP4"
    },
    "8122": {
      "op": "GT"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8125": {
      "op": "DUP2"
    },
    "8126": {
      "op": "EQ"
    },
    "8127": {
      "op": "PUSH2",
      "value": "0x1FE8"
    },
    "8130": {
      "op": "JUMPI"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8133": {
      "op": "DUP5"
    },
    "8134": {
      "op": "ISZERO"
    },
    "8135": {
      "op": "PUSH2",
      "value": "0x1FD0"
    },
    "8138": {
      "op": "JUMPI"
    },
    "8139": {
      "op": "POP"
    },
    "8140": {
      "op": "DUP6"
    },
    "8141": {
      "op": "DUP4"
    },
    "8142": {
      "op": "ADD"
    },
    "8143": {
      "op": "MLOAD"
    },
    "8144": {
      "op": "JUMPDEST"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8147": {
      "op": "NOT"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8150": {
      "op": "DUP7"
    },
    "8151": {
      "op": "SWAP1"
    },
    "8152": {
      "op": "SHL"
    },
    "8153": {
      "op": "SHR"
    },
    "8154": {
      "op": "NOT"
    },
    "8155": {
      "op": "AND"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8158": {
      "op": "DUP6"
    },
    "8159": {
      "op": "SWAP1"
    },
    "8160": {
      "op": "SHL"
    },
    "8161": {
      "op": "OR"
    },
    "8162": {
      "op": "DUP6"
    },
    "8163": {
      "op": "SSTORE"
    },
    "8164": {
      "op": "PUSH2",
      "value": "0x1F7D"
    },
    "8167": {
      "op": "JUMP"
    },
    "8168": {
      "op": "JUMPDEST"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8171": {
      "op": "DUP6"
    },
    "8172": {
      "op": "DUP2"
    },
    "8173": {
      "op": "MSTORE"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8176": {
      "op": "DUP2"
    },
    "8177": {
      "op": "KECCAK256"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8180": {
      "op": "NOT"
    },
    "8181": {
      "op": "DUP7"
    },
    "8182": {
      "op": "AND"
    },
    "8183": {
      "op": "SWAP2"
    },
    "8184": {
      "op": "JUMPDEST"
    },
    "8185": {
      "op": "DUP3"
    },
    "8186": {
      "op": "DUP2"
    },
    "8187": {
      "op": "LT"
    },
    "8188": {
      "op": "ISZERO"
    },
    "8189": {
      "op": "PUSH2",
      "value": "0x2017"
    },
    "8192": {
      "op": "JUMPI"
    },
    "8193": {
      "op": "DUP9"
    },
    "8194": {
      "op": "DUP7"
    },
    "8195": {
      "op": "ADD"
    },
    "8196": {
      "op": "MLOAD"
    },
    "8197": {
      "op": "DUP3"
    },
    "8198": {
      "op": "SSTORE"
    },
    "8199": {
      "op": "SWAP5"
    },
    "8200": {
      "op": "DUP5"
    },
    "8201": {
      "op": "ADD"
    },
    "8202": {
      "op": "SWAP5"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8205": {
      "op": "SWAP1"
    },
    "8206": {
      "op": "SWAP2"
    },
    "8207": {
      "op": "ADD"
    },
    "8208": {
      "op": "SWAP1"
    },
    "8209": {
      "op": "DUP5"
    },
    "8210": {
      "op": "ADD"
    },
    "8211": {
      "op": "PUSH2",
      "value": "0x1FF8"
    },
    "8214": {
      "op": "JUMP"
    },
    "8215": {
      "op": "JUMPDEST"
    },
    "8216": {
      "op": "POP"
    },
    "8217": {
      "op": "DUP6"
    },
    "8218": {
      "op": "DUP3"
    },
    "8219": {
      "op": "LT"
    },
    "8220": {
      "op": "ISZERO"
    },
    "8221": {
      "op": "PUSH2",
      "value": "0x2035"
    },
    "8224": {
      "op": "JUMPI"
    },
    "8225": {
      "op": "DUP8"
    },
    "8226": {
      "op": "DUP6"
    },
    "8227": {
      "op": "ADD"
    },
    "8228": {
      "op": "MLOAD"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8231": {
      "op": "NOT"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8234": {
      "op": "DUP9"
    },
    "8235": {
      "op": "SWAP1"
    },
    "8236": {
      "op": "SHL"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8239": {
      "op": "AND"
    },
    "8240": {
      "op": "SHR"
    },
    "8241": {
      "op": "NOT"
    },
    "8242": {
      "op": "AND"
    },
    "8243": {
      "op": "DUP2"
    },
    "8244": {
      "op": "SSTORE"
    },
    "8245": {
      "op": "JUMPDEST"
    },
    "8246": {
      "op": "POP"
    },
    "8247": {
      "op": "POP"
    },
    "8248": {
      "op": "POP"
    },
    "8249": {
      "op": "POP"
    },
    "8250": {
      "op": "POP"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8253": {
      "op": "SWAP1"
    },
    "8254": {
      "op": "DUP2"
    },
    "8255": {
      "op": "SHL"
    },
    "8256": {
      "op": "ADD"
    },
    "8257": {
      "op": "SWAP1"
    },
    "8258": {
      "op": "SSTORE"
    },
    "8259": {
      "op": "POP"
    },
    "8260": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9ae23c3f3bd815e6a1c9f4488b4742badc12f56f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"./interfaces/ISmartnodesMultiSig.sol\";\n\ncontract SmartnodesCore is ERC20Upgradeable {\n    ISmartnodesMultiSig public validatorContract;\n    address public proxyAdmin;\n\n    uint256 public tailEmission = 8e18; // a relative number as the state-time can be adjusted. Equivalent to\n    uint256 public constant UNLOCK_PERIOD = 1_209_600; // 14 days in seconds\n\n    uint256 public emissionRate;\n    uint256 public lockAmount;\n    uint256 public halvingPeriod;\n    uint256 public statesSinceLastHalving;\n    uint256 public totalLocked;\n    uint256 public unlockPeriod;\n\n    struct Validator {\n        address _address;\n        uint256 locked;\n        uint256 unlockTime;\n        bytes32 publicKeyHash;\n    }\n\n    struct Job {\n        uint256[] capacities;\n        uint256 payment;\n    }\n\n    mapping(bytes32 => uint256) public jobHashToId;\n    mapping(uint256 => Job) public jobs;\n    mapping(uint256 => Validator) public validators;\n    mapping(address => uint256) public validatorIdByAddress;\n\n    uint256 public jobCounter;\n    uint256 public userCounter;\n    uint256 public validatorCounter;\n    uint256 public availableCapacity;\n\n    event TokensLocked(address validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event JobRequested(uint256 jobId, bytes32 jobHash, bytes32 userHash);\n    event JobCompleted(uint256 jobId, bytes32 jobHash);\n    event JobDisputed(bytes32 indexed jobId, uint256 timestamp);\n\n    modifier onlyValidatorMultiSig() {\n        require(\n            msg.sender == address(validatorContract),\n            \"Caller must be the SmartnodesMultiSig.\"\n        );\n        _;\n    }\n\n    modifier onlyProxyAdmin() {\n        require(msg.sender == proxyAdmin, \"Caller must be the proxy admin.\");\n        _;\n    }\n\n    function initialize(address[] memory _genesisNodes) public initializer {\n        __ERC20_init(\"Smartnodes\", \"SNO\");\n        proxyAdmin = msg.sender;\n        emissionRate = 2048e18;\n        lockAmount = 500_000e18;\n        halvingPeriod = 8742; // 364.25 * 24\n        statesSinceLastHalving = 0;\n        unlockPeriod = 1_209_600; // (14 days in seconds)\n\n        jobCounter = 1;\n        validatorCounter = 1;\n        userCounter = 1;\n\n        for (uint i = 0; i < _genesisNodes.length; i++) {\n            _mint(_genesisNodes[i], lockAmount);\n        }\n    }\n\n    function setValidatorContract(address _validatorAddress) external {\n        require(\n            address(validatorContract) == address(0),\n            \"Validator address already set.\"\n        );\n        validatorContract = ISmartnodesMultiSig(_validatorAddress);\n    }\n\n    function halveStateTime() external onlyProxyAdmin {\n        // By reducing the state time in half, we must reduce emissions (ie. state reward)\n        // by half, including the tail emission value\n        tailEmission /= 2;\n        emissionRate /= 2;\n        halvingPeriod *= 2; // Double the state updates requied between halvings\n        validatorContract.halvePeriod(); // Halve the time required between state updates\n    }\n\n    // Request a job and associate a payment with it\n    // function requestJob(\n    //     bytes32 userHash,\n    //     bytes32 jobHash,\n    //     uint256[] calldata capacities,\n    //     uint256 paymentAmount // Accept payment in tokens\n    // ) external {\n    //     require(jobHashToId[jobHash] == 0, \"Job already created!\");\n    //     require(capacities.length > 0, \"Job must have a capacity.\");\n    //     jobHashToId[jobHash] = jobCounter;\n\n    //     // Require a payment for the job\n    //     require(paymentAmount > 0, \"Payment must be greater than zero.\");\n    //     require(\n    //         balanceOf(msg.sender) >= paymentAmount,\n    //         \"Insufficient token balance.\"\n    //     );\n    //     require(capacities.length > 0, \"\");\n\n    //     // Transfer the payment tokens and burn them\n    //     _transfer(msg.sender, address(0), paymentAmount); // Burn the tokens by sending to zero address\n\n    //     // Store the job with associated payment\n    //     jobs[jobCounter] = Job({\n    //         capacities: capacities,\n    //         payment: paymentAmount // Store the payment amount\n    //     });\n\n    //     emit JobRequested(jobCounter, jobHash, userHash);\n    //     jobCounter++;\n    // }\n\n    // Complete the job and distribute payment to validators/workers\n    function completeJob(\n        bytes32 jobHash\n    ) external onlyValidatorMultiSig returns (uint256) {\n        uint256 jobId = jobHashToId[jobHash];\n\n        // If we have a user-requested job\n        if (jobId == 0) {\n            // If not, we can log the job counter\n            jobCounter++;\n            emit JobCompleted(jobId, jobHash);\n            return 0;\n        }\n\n        // Get the job and calculate reward\n        Job memory job = jobs[jobId];\n        uint256 totalReward = job.payment;\n\n        // Cleanup\n        delete jobs[jobId];\n        delete jobHashToId[jobHash];\n        emit JobCompleted(jobId, jobHash);\n        return totalReward;\n    }\n\n    function mintTokens(\n        address[] memory _workers,\n        uint256[] memory _capacities,\n        uint256 _totalCapacity,\n        address[] memory _validatorsVoted,\n        uint256 additionalReward\n    ) external onlyValidatorMultiSig {\n        if (statesSinceLastHalving >= halvingPeriod) {\n            if (emissionRate > tailEmission) {\n                emissionRate /= 2;\n            }\n        }\n\n        uint256 validatorReward;\n        uint256 workerReward;\n\n        if (_workers.length == 0) {\n            validatorReward = emissionRate + additionalReward;\n            workerReward = 0;\n        } else {\n            validatorReward = ((emissionRate + additionalReward) * 25) / 100;\n            workerReward = ((emissionRate + additionalReward) * 75) / 100;\n        }\n\n        for (uint256 v = 0; v < _validatorsVoted.length; v++) {\n            _mint(\n                _validatorsVoted[v],\n                validatorReward / _validatorsVoted.length\n            );\n        }\n\n        if (_workers.length > 0) {\n            for (uint256 w = 0; w < _workers.length; w++) {\n                uint256 reward = ((_capacities[w] * workerReward) /\n                    _totalCapacity);\n                _mint(_workers[w], reward);\n            }\n        }\n\n        statesSinceLastHalving++;\n    }\n\n    /**\n     * @dev Validator token unlocking, 14 day withdrawal period.\n     */\n    function _lockTokens(address sender, uint256 amount) internal {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n\n        transferFrom(sender, address(this), amount);\n        validators[validatorId].locked += amount;\n        totalLocked += amount;\n\n        emit TokensLocked(sender, amount);\n    }\n\n    function lockTokens(uint256 amount) external {\n        _lockTokens(msg.sender, amount);\n    }\n\n    function unlockTokens(uint256 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId > 0, \"Not a registered validator.\");\n\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            if (validator.locked < lockAmount) {\n                validatorContract.removeValidator(msg.sender);\n            }\n            validator.unlockTime = block.timestamp + unlockPeriod; // unlocking period\n\n            // Update multisig validator\n            totalLocked -= amount;\n\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            transferFrom(address(this), msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    function createValidator(\n        bytes32 _publicKeyHash,\n        uint256 _lockAmount\n    ) external {\n        require(\n            balanceOf(msg.sender) >= _lockAmount && _lockAmount >= lockAmount,\n            \"Insufficient token balance.\"\n        );\n        require(\n            validatorIdByAddress[msg.sender] == 0,\n            \"Validator already created with this account!\"\n        );\n\n        validators[validatorCounter] = Validator({\n            _address: msg.sender,\n            locked: 0,\n            unlockTime: 0,\n            publicKeyHash: _publicKeyHash\n        });\n\n        validatorIdByAddress[msg.sender] = validatorCounter;\n        _lockTokens(msg.sender, lockAmount);\n\n        validatorCounter++;\n    }\n\n    function isLocked(address validatorAddress) external view returns (bool) {\n        uint256 id = validatorIdByAddress[validatorAddress];\n        return validators[id].locked >= lockAmount;\n    }\n\n    function getActiveValidatorCount() external view returns (uint256) {\n        return validatorContract.getNumValidators();\n    }\n\n    function getValidatorInfo(\n        uint256 _validatorId\n    ) external view returns (bool, bytes32, address) {\n        require(_validatorId < validatorCounter, \"Invalid ID.\");\n        Validator memory _validator = validators[_validatorId];\n        bool isActive = validatorContract.isActiveValidator(\n            _validator._address\n        );\n        return (isActive, _validator.publicKeyHash, _validator._address);\n    }\n}\n",
  "sourceMap": "184:9907:24:-:0;;;346:4;316:34;;184:9907;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartnodesCore.sol",
  "type": "contract"
}