name: Lint and Format

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  format-and-lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4  # Update to latest version
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black isort autopep8  # Add isort for import sorting

      - name: Run Pylint
        run: |
          pylint $(git ls-files '*.py') | tee pylint-report.txt
        continue-on-error: true  # Allow workflow to continue if Pylint finds issues

      - name: Run Black
        run: black .

      - name: Run isort
        run: isort .

      - name: Run autopep8
        run: autopep8 --in-place --recursive .

      - name: Commit changes if any
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check for changes
          git diff --exit-code || {
            echo "Changes detected. Commiting changes..."
          
            # Configure Git user
            git config --global user.name "github-actions"
            git config --global user.email "actions@github.com" 
            
            # Stage changes
            git add .
          
            # Commit changes
            git commit -m "Applying code formatting and linting fixes"
            
            # Push changes
            git push origin HEAD
          }
