{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "JobCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "validatorId",
          "type": "uint256"
        }
      ],
      "name": "ValidatorActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "ValidatorCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "validatorId",
          "type": "uint256"
        }
      ],
      "name": "ValidatorDeactivated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "approveJobCreation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "jobId",
          "type": "uint256"
        }
      ],
      "name": "completeJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        }
      ],
      "name": "createValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reqId",
          "type": "uint256"
        }
      ],
      "name": "getJobRequestValidators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        }
      ],
      "name": "getUserId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValidatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "validatorId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getjobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jobCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobRequests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jobs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isCompleted",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "completeCount",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        }
      ],
      "name": "lockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxValidators",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValidators",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nValidators",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        }
      ],
      "name": "requestJob",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        }
      ],
      "name": "unlockTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userIdByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validatorHashById",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorIdByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "validatorIdByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validatorStateById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "publicKeyHash",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "locked",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "reputation",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "1": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "2": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "3": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "5": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol",
    "6": "contracts/SmartNodes.sol"
  },
  "ast": {
    "absolutePath": "contracts/SmartNodes.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2213
      ],
      "ContextUpgradeable": [
        2358
      ],
      "ERC20Upgradeable": [
        1970
      ],
      "IERC20MetadataUpgradeable": [
        2316
      ],
      "IERC20Upgradeable": [
        2291
      ],
      "Initializable": [
        1357
      ],
      "SmartNodes": [
        1283
      ]
    },
    "id": 1284,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:6"
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1284,
        "sourceUnit": 1971,
        "src": "61:78:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/matthewhawken/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1284,
        "sourceUnit": 1358,
        "src": "140:75:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Initializable",
              "nameLocations": [
                "240:13:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1357,
              "src": "240:13:6"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "240:13:6"
          },
          {
            "baseName": {
              "id": 6,
              "name": "ERC20Upgradeable",
              "nameLocations": [
                "255:16:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1970,
              "src": "255:16:6"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "255:16:6"
          }
        ],
        "canonicalName": "SmartNodes",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1283,
        "linearizedBaseContracts": [
          1283,
          1970,
          2316,
          2291,
          2358,
          1357
        ],
        "name": "SmartNodes",
        "nameLocation": "226:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SmartNodes.Validator",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "675:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "667:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "667:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "validatorAddress",
                "nameLocation": "695:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "687:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "687:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "728:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "721:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "721:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "locked",
                "nameLocation": "758:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "751:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "751:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "unlockTime",
                "nameLocation": "782:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "774:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "774:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "808:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "802:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "802:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "isActive",
                "nameLocation": "833:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "828:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "828:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Validator",
            "nameLocation": "647:9:6",
            "nodeType": "StructDefinition",
            "scope": 1283,
            "src": "640:208:6",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.User",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "884:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "876:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "876:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "904:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "896:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "896:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "publicKeyHash",
                "nameLocation": "932:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "925:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 27,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "925:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "reputation",
                "nameLocation": "961:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "955:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "955:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "861:4:6",
            "nodeType": "StructDefinition",
            "scope": 1283,
            "src": "854:124:6",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.Job",
            "id": 49,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1013:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1005:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1005:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1033:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1025:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1025:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "1056:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1048:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1048:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "validatorAddresses",
                "nameLocation": "1084:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1074:28:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 39,
                  "nodeType": "ArrayTypeName",
                  "src": "1074:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "isCompleted",
                "nameLocation": "1117:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1112:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1112:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "completeConfirmations",
                "nameLocation": "1163:21:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1138:46:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 45,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1138:24:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 44,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "completeCount",
                "nameLocation": "1200:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "1194:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1194:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Job",
            "nameLocation": "991:3:6",
            "nodeType": "StructDefinition",
            "scope": 1283,
            "src": "984:236:6",
            "visibility": "public"
          },
          {
            "canonicalName": "SmartNodes.JobRequest",
            "id": 63,
            "members": [
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1262:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "1254:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1254:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "1282:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "1274:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1274:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "capacity",
                "nameLocation": "1307:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "1299:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1299:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "validatorAddresses",
                "nameLocation": "1335:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "1325:28:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ArrayTypeName",
                  "src": "1325:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "signatures",
                "nameLocation": "1388:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 63,
                "src": "1363:35:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 61,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1363:24:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "JobRequest",
            "nameLocation": "1233:10:6",
            "nodeType": "StructDefinition",
            "scope": 1283,
            "src": "1226:179:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35aa2e44",
            "id": 68,
            "mutability": "mutable",
            "name": "validators",
            "nameLocation": "1474:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1437:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Validator)"
            },
            "typeName": {
              "id": 67,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 64,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1445:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1437:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Validator)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 66,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65,
                  "name": "Validator",
                  "nameLocations": [
                    "1456:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22,
                  "src": "1456:9:6"
                },
                "referencedDeclaration": 22,
                "src": "1456:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                  "typeString": "struct SmartNodes.Validator"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27764547",
            "id": 72,
            "mutability": "mutable",
            "name": "validatorIdByAddress",
            "nameLocation": "1525:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1490:55:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 71,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1498:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1490:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 70,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1509:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2130a16f",
            "id": 76,
            "mutability": "mutable",
            "name": "validatorIdByHash",
            "nameLocation": "1585:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1551:51:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 75,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 73,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1559:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1551:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1569:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "62ac03e9",
            "id": 80,
            "mutability": "mutable",
            "name": "validatorHashById",
            "nameLocation": "1642:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1608:51:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 79,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 77,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1616:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1608:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 78,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1627:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "751df890",
            "id": 84,
            "mutability": "mutable",
            "name": "validatorStateById",
            "nameLocation": "1700:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1665:53:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 83,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 81,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1673:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1665:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 82,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1684:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 89,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "1778:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1746:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$31_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.User)"
            },
            "typeName": {
              "id": 88,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 85,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1754:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1746:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$31_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 87,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86,
                  "name": "User",
                  "nameLocations": [
                    "1765:4:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1765:4:6"
                },
                "referencedDeclaration": 31,
                "src": "1765:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$31_storage_ptr",
                  "typeString": "struct SmartNodes.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4b759088",
            "id": 93,
            "mutability": "mutable",
            "name": "userIdByAddress",
            "nameLocation": "1824:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1789:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 92,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 90,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1797:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1789:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 91,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1808:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32d40160",
            "id": 97,
            "mutability": "mutable",
            "name": "userIdByHash",
            "nameLocation": "1879:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1845:46:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 96,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 94,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1853:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1845:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1863:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "180aedf3",
            "id": 102,
            "mutability": "mutable",
            "name": "jobs",
            "nameLocation": "1949:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1918:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$49_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.Job)"
            },
            "typeName": {
              "id": 101,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 98,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1926:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1918:23:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$49_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.Job)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 100,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 99,
                  "name": "Job",
                  "nameLocations": [
                    "1937:3:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "1937:3:6"
                },
                "referencedDeclaration": 49,
                "src": "1937:3:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                  "typeString": "struct SmartNodes.Job"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bb9642ed",
            "id": 107,
            "mutability": "mutable",
            "name": "jobRequests",
            "nameLocation": "1997:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "1959:49:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
              "typeString": "mapping(uint256 => struct SmartNodes.JobRequest)"
            },
            "typeName": {
              "id": 106,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1967:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1959:30:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                "typeString": "mapping(uint256 => struct SmartNodes.JobRequest)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 105,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 104,
                  "name": "JobRequest",
                  "nameLocations": [
                    "1978:10:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63,
                  "src": "1978:10:6"
                },
                "referencedDeclaration": 63,
                "src": "1978:10:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                  "typeString": "struct SmartNodes.JobRequest"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f029d5e",
            "id": 109,
            "mutability": "mutable",
            "name": "validatorIdCounter",
            "nameLocation": "2056:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "2041:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2041:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2faba6ae",
            "id": 111,
            "mutability": "mutable",
            "name": "userIdCounter",
            "nameLocation": "2095:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "2080:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2080:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50355d76",
            "id": 113,
            "mutability": "mutable",
            "name": "jobCounter",
            "nameLocation": "2129:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "2114:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2114:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c5ab2241",
            "id": 115,
            "mutability": "mutable",
            "name": "minValidators",
            "nameLocation": "2218:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "2205:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 114,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2205:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ac5256",
            "id": 117,
            "mutability": "mutable",
            "name": "maxValidators",
            "nameLocation": "2250:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1283,
            "src": "2237:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 116,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2237:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c278abaf901ee66c9c5ad86c559c69d95b3121ab80ffa1bb4a0097a9b9aee6a2",
            "id": 123,
            "name": "ValidatorCreated",
            "nameLocation": "2290:16:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2323:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2307:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validatorAddress",
                  "nameLocation": "2335:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2327:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2306:46:6"
            },
            "src": "2284:69:6"
          },
          {
            "anonymous": false,
            "eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
            "id": 129,
            "name": "TokensLocked",
            "nameLocation": "2364:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2393:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "2377:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2412:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "2404:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2404:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2376:43:6"
            },
            "src": "2358:62:6"
          },
          {
            "anonymous": false,
            "eventSelector": "77635f8f13ee1a01d11246347c649817c6ee9fa7620ce4c6adfa2452bfa162b2",
            "id": 135,
            "name": "UnlockInitiated",
            "nameLocation": "2431:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2463:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2447:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2447:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "2482:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2474:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2446:47:6"
            },
            "src": "2425:69:6"
          },
          {
            "anonymous": false,
            "eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
            "id": 141,
            "name": "TokensUnlocked",
            "nameLocation": "2505:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2536:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "2520:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2555:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "2547:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2519:43:6"
            },
            "src": "2499:64:6"
          },
          {
            "anonymous": false,
            "eventSelector": "e2a191ee805447bcf5adabadd39cb816b1b46de1364263aef69980bdafd8370f",
            "id": 145,
            "name": "ValidatorActivated",
            "nameLocation": "2574:18:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "2609:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "2593:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2593:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2592:29:6"
            },
            "src": "2568:54:6"
          },
          {
            "anonymous": false,
            "eventSelector": "12048e179cb277774d73abb2f522205e0fcd471ab52fa6feb7b5b5508dd26a21",
            "id": 149,
            "name": "ValidatorDeactivated",
            "nameLocation": "2633:20:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "2670:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2654:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:29:6"
            },
            "src": "2627:56:6"
          },
          {
            "anonymous": false,
            "eventSelector": "02244c8529cb95e213ee542e76e7776342b3dabd10203d01472bbf4441be8929",
            "id": 153,
            "name": "JobCompleted",
            "nameLocation": "2694:12:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "2723:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2707:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:23:6"
            },
            "src": "2688:42:6"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "2777:222:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54656e736f724c696e6b",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2800:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8bc9c6d9e8bd5a83e7acb5070de9bfdc1c6375836d7e67b61959643c7d8186",
                          "typeString": "literal_string \"TensorLink\""
                        },
                        "value": "TensorLink"
                      },
                      {
                        "hexValue": "544c494e4b",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2814:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19d2e54141d87ceb8f8978b6873d61274bfdf61b39f48e34d15d0be8b934f204",
                          "typeString": "literal_string \"TLINK\""
                        },
                        "value": "TLINK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_be8bc9c6d9e8bd5a83e7acb5070de9bfdc1c6375836d7e67b61959643c7d8186",
                          "typeString": "literal_string \"TensorLink\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19d2e54141d87ceb8f8978b6873d61274bfdf61b39f48e34d15d0be8b934f204",
                          "typeString": "literal_string \"TLINK\""
                        }
                      ],
                      "id": 158,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "2787:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:35:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2838:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2842:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2838:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2850:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 163,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1782,
                      "src": "2832:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:22:6"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 169,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2864:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2885:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2864:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:22:6"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2896:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2912:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2896:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:17:6"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 177,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2923:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2936:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2923:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:14:6"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 181,
                      "name": "minValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "2947:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2963:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2947:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2947:17:6"
                },
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "maxValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "2974:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3132",
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2990:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "2974:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:18:6"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 155,
                  "name": "initializer",
                  "nameLocations": [
                    "2765:11:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1331,
                  "src": "2765:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2765:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "2745:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:2:6"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2777:0:6"
            },
            "scope": 1283,
            "src": "2736:263:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3111:381:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 196,
                            "name": "userIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "3129:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 199,
                          "indexExpression": {
                            "expression": {
                              "id": 197,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3145:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3149:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3145:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3129:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3160:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3129:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c726561647920726567697374657265642e",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3163:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        },
                        "value": "User already registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9956ea0a9e056cf6c8fd5c9ac4d812fa4610218efefab4828dc8b105a6653c1",
                          "typeString": "literal_string \"User already registered.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3121:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:69:6"
                },
                {
                  "expression": {
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 205,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "3200:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$31_storage_$",
                          "typeString": "mapping(uint256 => struct SmartNodes.User storage ref)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "id": 206,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3206:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3200:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$31_storage",
                        "typeString": "struct SmartNodes.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 209,
                          "name": "userIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "3246:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3286:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3290:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3286:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3322:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 213,
                          "name": "publicKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "3352:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 208,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "3223:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_User_$31_storage_ptr_$",
                          "typeString": "type(struct SmartNodes.User storage pointer)"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3242:2:6",
                        "3273:11:6",
                        "3310:10:6",
                        "3337:13:6"
                      ],
                      "names": [
                        "id",
                        "userAddress",
                        "reputation",
                        "publicKeyHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3223:153:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$31_memory_ptr",
                        "typeString": "struct SmartNodes.User memory"
                      }
                    },
                    "src": "3200:176:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$31_storage",
                      "typeString": "struct SmartNodes.User storage ref"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:176:6"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 217,
                        "name": "userIdByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "3387:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "id": 218,
                        "name": "publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "3400:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3387:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "userIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3417:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3387:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3387:43:6"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 223,
                        "name": "userIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "3440:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "expression": {
                          "id": 224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3456:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3460:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3456:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3440:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3470:15:6",
                      "subExpression": {
                        "id": 227,
                        "name": "userIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3470:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3440:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:45:6"
                }
              ]
            },
            "functionSelector": "507ffba5",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nameLocation": "3062:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "publicKeyHash",
                  "nameLocation": "3087:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3073:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3072:29:6"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3111:0:6"
            },
            "scope": 1283,
            "src": "3053:439:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "3561:734:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 238,
                            "name": "validatorIdByHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "3592:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 240,
                          "indexExpression": {
                            "id": 239,
                            "name": "publicKeyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "3610:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3592:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3628:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3592:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220776974682074686973207075626c69634b65794861736820616c7265616479206578697374732e",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3643:51:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f348e78850222b1375114861425ad358500dccf245b44b65209a1ab739c76dff",
                          "typeString": "literal_string \"Validator with this publicKeyHash already exists.\""
                        },
                        "value": "Validator with this publicKeyHash already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f348e78850222b1375114861425ad358500dccf245b44b65209a1ab739c76dff",
                          "typeString": "literal_string \"Validator with this publicKeyHash already exists.\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3571:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:133:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "3571:133:6"
                },
                {
                  "assignments": [
                    248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "3733:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 312,
                      "src": "3715:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 247,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 246,
                          "name": "Validator",
                          "nameLocations": [
                            "3715:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22,
                          "src": "3715:9:6"
                        },
                        "referencedDeclaration": 22,
                        "src": "3715:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "baseExpression": {
                      "id": 249,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3745:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 251,
                    "indexExpression": {
                      "id": 250,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "3756:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3745:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$22_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3715:60:6"
                },
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 253,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "3785:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3795:2:6",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "3785:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 256,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "3800:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3785:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3785:33:6"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 259,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "3828:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3838:16:6",
                      "memberName": "validatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "3828:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 262,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3857:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3861:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3857:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3828:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3828:39:6"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 266,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "3877:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3887:13:6",
                      "memberName": "publicKeyHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3877:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 269,
                      "name": "publicKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "3903:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3877:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:39:6"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 272,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "3926:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3936:8:6",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3926:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3947:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3926:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3926:25:6"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 278,
                        "name": "validatorIdByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3962:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "expression": {
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3983:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3987:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3983:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3962:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 282,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "3997:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3962:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3962:53:6"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 285,
                        "name": "validatorIdByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "4025:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 287,
                      "indexExpression": {
                        "id": 286,
                        "name": "publicKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "4043:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4025:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 288,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "4060:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4025:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:53:6"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 291,
                        "name": "validatorHashById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "4088:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 293,
                      "indexExpression": {
                        "id": 292,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4106:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4088:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "publicKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "4128:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4088:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:53:6"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 297,
                        "name": "validatorStateById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "4151:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "id": 298,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4170:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4151:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4192:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4151:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:42:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "validatorIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4226:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 305,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4246:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4250:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4246:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 303,
                      "name": "ValidatorCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "4209:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4209:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "EmitStatement",
                  "src": "4204:53:6"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4268:20:6",
                    "subExpression": {
                      "id": 309,
                      "name": "validatorIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "4268:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:20:6"
                }
              ]
            },
            "functionSelector": "cf6acd47",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createValidator",
            "nameLocation": "3507:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "publicKeyHash",
                  "nameLocation": "3537:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "3523:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3522:29:6"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3561:0:6"
            },
            "scope": 1283,
            "src": "3498:797:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "4395:547:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 320,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 316,
                          "src": "4413:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4422:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4413:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4425:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4405:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 328,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4489:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4493:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4489:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 327,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "4479:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4479:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 331,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 316,
                          "src": "4504:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4479:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4512:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4471:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:65:6"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "4555:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "4547:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4547:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "baseExpression": {
                      "id": 338,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "4569:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 341,
                    "indexExpression": {
                      "expression": {
                        "id": 339,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4590:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4594:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4590:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4569:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4547:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 344,
                          "name": "validatorId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "4619:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4634:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4619:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220646f6573206e6f742065786973742e",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4637:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        },
                        "value": "Validator does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9a13ac2253025fa1da9b9d9dba94417b6c9852ad9affcb4ad9791354dbcd9a0",
                          "typeString": "literal_string \"Validator does not exist.\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4611:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4611:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:54:6"
                },
                {
                  "assignments": [
                    352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "4693:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "4675:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 351,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 350,
                          "name": "Validator",
                          "nameLocations": [
                            "4675:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22,
                          "src": "4675:9:6"
                        },
                        "referencedDeclaration": 22,
                        "src": "4675:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 353,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4705:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 355,
                    "indexExpression": {
                      "id": 354,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "4716:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4705:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$22_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4675:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "4746:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                            "typeString": "struct SmartNodes.Validator storage pointer"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4756:8:6",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "4746:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206973206e6f74206163746976652e",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4766:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        },
                        "value": "Validator is not active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4738:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 364,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4817:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4821:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4817:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 368,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4837:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartNodes_$1283",
                              "typeString": "contract SmartNodes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartNodes_$1283",
                              "typeString": "contract SmartNodes"
                            }
                          ],
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4829:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 366,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4829:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4829:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "4844:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 363,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "4804:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "4804:47:6"
                },
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 373,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "4861:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4871:6:6",
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "4861:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 376,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "4881:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4861:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "4861:26:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 380,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4916:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4920:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4916:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 382,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "4928:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 379,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "4903:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "4898:37:6"
                }
              ]
            },
            "documentation": {
              "id": 314,
              "nodeType": "StructuredDocumentation",
              "src": "4301:45:6",
              "text": "Validator Token Locking and Unlocking ///"
            },
            "functionSelector": "ec81560f",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockTokens",
            "nameLocation": "4360:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4378:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4371:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4371:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4370:15:6"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4395:0:6"
            },
            "scope": 1283,
            "src": "4351:591:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "4994:1049:6",
              "statements": [
                {
                  "assignments": [
                    392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 392,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "5012:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "5004:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 391,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5004:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "baseExpression": {
                      "id": 393,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "5026:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 396,
                    "indexExpression": {
                      "expression": {
                        "id": 394,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5047:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5051:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5047:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5026:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5004:54:6"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "5086:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "5068:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 399,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 398,
                          "name": "Validator",
                          "nameLocations": [
                            "5068:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22,
                          "src": "5068:9:6"
                        },
                        "referencedDeclaration": 22,
                        "src": "5068:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "initialValue": {
                    "baseExpression": {
                      "id": 401,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "5098:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 403,
                    "indexExpression": {
                      "id": 402,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "5109:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5098:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$22_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5068:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 406,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "5140:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 407,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "5150:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                              "typeString": "struct SmartNodes.Validator storage pointer"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5160:6:6",
                          "memberName": "locked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "5150:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "5140:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473206c6f636b65642062616c616e63652e",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5168:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        },
                        "value": "Amount exceeds locked balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_063df6901c618308fab14606f14936f5e92e367105330137e8dfec42473ac685",
                          "typeString": "literal_string \"Amount exceeds locked balance.\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5132:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:69:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 414,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "5219:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5228:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5219:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5231:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        },
                        "value": "Amount must be greater than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
                          "typeString": "literal_string \"Amount must be greater than zero.\""
                        }
                      ],
                      "id": 413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5211:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5211:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5211:56:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 420,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "5353:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5363:10:6",
                      "memberName": "unlockTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "5353:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5377:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5353:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 468,
                    "nodeType": "Block",
                    "src": "5579:458:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 442,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5696:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5702:9:6",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5696:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 444,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "5715:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                    "typeString": "struct SmartNodes.Validator storage pointer"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5725:10:6",
                                "memberName": "unlockTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17,
                                "src": "5715:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5696:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320617265207374696c6c206c6f636b65642e",
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5753:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              },
                              "value": "Tokens are still locked."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23ddeec2fa41e3b97ca2f54266d46ddce4de9eb3f030584086c22306bdaa14fc",
                                "typeString": "literal_string \"Tokens are still locked.\""
                              }
                            ],
                            "id": 441,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5671:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5671:122:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "5671:122:6"
                      },
                      {
                        "expression": {
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 450,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "5808:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                "typeString": "struct SmartNodes.Validator storage pointer"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5818:6:6",
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "5808:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 453,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "5828:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5808:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 455,
                        "nodeType": "ExpressionStatement",
                        "src": "5808:26:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 457,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5854:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5858:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5854:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 459,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "5866:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 456,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1782,
                            "src": "5848:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5848:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 461,
                        "nodeType": "ExpressionStatement",
                        "src": "5848:25:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 463,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5955:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5959:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5955:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 465,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "5967:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 462,
                            "name": "TokensUnlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "5940:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5940:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 467,
                        "nodeType": "EmitStatement",
                        "src": "5935:39:6"
                      }
                    ]
                  },
                  "id": 469,
                  "nodeType": "IfStatement",
                  "src": "5349:688:6",
                  "trueBody": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "5380:193:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 424,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "5394:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                "typeString": "struct SmartNodes.Validator storage pointer"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5404:10:6",
                            "memberName": "unlockTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "5394:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 427,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5417:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5423:9:6",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5417:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3530343030",
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5435:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50400_by_1",
                                "typeString": "int_const 50400"
                              },
                              "value": "50400"
                            },
                            "src": "5417:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5394:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "5394:46:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 434,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5502:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5506:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5502:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 436,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "5514:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                  "typeString": "struct SmartNodes.Validator storage pointer"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5524:10:6",
                              "memberName": "unlockTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "5514:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 433,
                            "name": "UnlockInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "5486:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5486:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "EmitStatement",
                        "src": "5481:54:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "44c6957b",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokens",
            "nameLocation": "4957:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4977:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "4970:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4969:15:6"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4994:0:6"
            },
            "scope": 1283,
            "src": "4948:1095:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "6191:1118:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 482,
                            "name": "userIdByAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "6209:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 485,
                          "indexExpression": {
                            "expression": {
                              "id": 483,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6225:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6229:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6225:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6209:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6240:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6209:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420726567697374657265642e",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6243:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        },
                        "value": "User not registered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7a837b81caae033a7be9ec4534e99638cf106c36592583903313f147edcb04b",
                          "typeString": "literal_string \"User not registered.\""
                        }
                      ],
                      "id": 481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6201:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6201:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 492,
                          "name": "capacity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "6284:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6295:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6284:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4361706163697479206d7573742062652067726561746572207a65726f2e",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6298:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        },
                        "value": "Capacity must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d67a2b63bf08c8a27d4d4c3289870fbee0c39d6545436840dd88f43aae8ac11",
                          "typeString": "literal_string \"Capacity must be greater zero.\""
                        }
                      ],
                      "id": 491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6276:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6276:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "6276:55:6"
                },
                {
                  "assignments": [
                    500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 500,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "6408:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "6389:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                        "typeString": "struct SmartNodes.JobRequest"
                      },
                      "typeName": {
                        "id": 499,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 498,
                          "name": "JobRequest",
                          "nameLocations": [
                            "6389:10:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63,
                          "src": "6389:10:6"
                        },
                        "referencedDeclaration": 63,
                        "src": "6389:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 504,
                  "initialValue": {
                    "baseExpression": {
                      "id": 501,
                      "name": "jobRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "6418:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.JobRequest storage ref)"
                      }
                    },
                    "id": 503,
                    "indexExpression": {
                      "id": 502,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "6430:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6418:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobRequest_$63_storage",
                      "typeString": "struct SmartNodes.JobRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6389:52:6"
                },
                {
                  "expression": {
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 505,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "6451:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest storage pointer"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6459:2:6",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "6451:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 508,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "6464:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6451:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "6451:23:6"
                },
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 511,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "6484:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest storage pointer"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6492:7:6",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53,
                      "src": "6484:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 514,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6502:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6506:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6502:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6484:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "6484:28:6"
                },
                {
                  "expression": {
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 518,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "6522:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest storage pointer"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6530:8:6",
                      "memberName": "capacity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "6522:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 521,
                      "name": "capacity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "6541:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6522:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "6522:27:6"
                },
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "selectedValidatorIds",
                      "nameLocation": "6621:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "6604:37:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 526,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6604:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 527,
                        "nodeType": "ArrayTypeName",
                        "src": "6604:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 532,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 530,
                        "name": "nValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "6689:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 529,
                      "name": "_pseudorandomValidatorSelection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "6644:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint8) returns (uint256[] memory)"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6644:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6604:106:6"
                },
                {
                  "assignments": [
                    537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "selectedValidators",
                      "nameLocation": "6738:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "6721:35:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6721:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 536,
                        "nodeType": "ArrayTypeName",
                        "src": "6721:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 541,
                          "name": "selectedValidatorIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 528,
                          "src": "6786:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6807:6:6",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6786:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6759:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 538,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6763:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 539,
                        "nodeType": "ArrayTypeName",
                        "src": "6763:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6759:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6721:102:6"
                },
                {
                  "body": {
                    "id": 567,
                    "nodeType": "Block",
                    "src": "6980:118:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 556,
                              "name": "selectedValidators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "6994:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 558,
                            "indexExpression": {
                              "id": 557,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 546,
                              "src": "7013:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6994:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 559,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "7018:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                                  "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                                }
                              },
                              "id": 563,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 560,
                                  "name": "selectedValidatorIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 528,
                                  "src": "7029:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 562,
                                "indexExpression": {
                                  "id": 561,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "7050:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7029:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7018:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Validator_$22_storage",
                                "typeString": "struct SmartNodes.Validator storage ref"
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7071:16:6",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "7018:69:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6994:93:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 566,
                        "nodeType": "ExpressionStatement",
                        "src": "6994:93:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 549,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "6942:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 550,
                        "name": "selectedValidatorIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "6946:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6967:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6946:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6942:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 568,
                  "initializationExpression": {
                    "assignments": [
                      546
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6935:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 568,
                        "src": "6927:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6927:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 548,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6939:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6927:13:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6975:3:6",
                      "subExpression": {
                        "id": 553,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "6975:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 555,
                    "nodeType": "ExpressionStatement",
                    "src": "6975:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "6922:176:6"
                },
                {
                  "expression": {
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 569,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "7108:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest storage pointer"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7116:18:6",
                      "memberName": "validatorAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "7108:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 572,
                      "name": "selectedValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "7137:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "7108:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "7108:47:6"
                },
                {
                  "expression": {
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7198:12:6",
                    "subExpression": {
                      "id": 575,
                      "name": "jobCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "7198:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "7198:12:6"
                },
                {
                  "expression": {
                    "id": 578,
                    "name": "selectedValidatorIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "7282:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "7275:27:6"
                }
              ]
            },
            "functionSelector": "0c97cf81",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestJob",
            "nameLocation": "6085:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "nValidators",
                  "nameLocation": "6111:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6105:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6105:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "capacity",
                  "nameLocation": "6140:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6132:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6132:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6095:59:6"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6173:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 477,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6173:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 478,
                    "nodeType": "ArrayTypeName",
                    "src": "6173:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6172:18:6"
            },
            "scope": 1283,
            "src": "6076:1233:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 693,
              "nodeType": "Block",
              "src": "7404:956:6",
              "statements": [
                {
                  "assignments": [
                    587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 587,
                      "mutability": "mutable",
                      "name": "validatorId",
                      "nameLocation": "7422:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "7414:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 586,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7414:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 592,
                  "initialValue": {
                    "baseExpression": {
                      "id": 588,
                      "name": "validatorIdByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "7436:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 591,
                    "indexExpression": {
                      "expression": {
                        "id": 589,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7457:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7461:6:6",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7457:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7436:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7414:54:6"
                },
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "7496:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "7478:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 593,
                          "name": "Validator",
                          "nameLocations": [
                            "7478:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22,
                          "src": "7478:9:6"
                        },
                        "referencedDeclaration": 22,
                        "src": "7478:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "baseExpression": {
                      "id": 596,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "7508:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 598,
                    "indexExpression": {
                      "id": 597,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "7519:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7508:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$22_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7478:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 601,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "7549:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                            "typeString": "struct SmartNodes.Validator storage pointer"
                          }
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7559:8:6",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "7549:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206973206e6f74206163746976652e",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7569:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        },
                        "value": "Validator is not active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9797bee2e6537791420a173c338dd49d009732d4333462ab1d571b8551ad2166",
                          "typeString": "literal_string \"Validator is not active.\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7541:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7541:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "7541:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 607,
                              "name": "jobRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "7627:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.JobRequest storage ref)"
                              }
                            },
                            "id": 609,
                            "indexExpression": {
                              "id": 608,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "7639:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7627:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JobRequest_$63_storage",
                              "typeString": "struct SmartNodes.JobRequest storage ref"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7646:2:6",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51,
                          "src": "7627:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 611,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "7652:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7627:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f62206372656174696f6e207265717565737420646f6573206e6f742065786973742e",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7671:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90bb02a42f5e3f861985752c50f35389179fbb8eca283c7be021f1873b49c6f8",
                          "typeString": "literal_string \"Job creation request does not exist.\""
                        },
                        "value": "Job creation request does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90bb02a42f5e3f861985752c50f35389179fbb8eca283c7be021f1873b49c6f8",
                          "typeString": "literal_string \"Job creation request does not exist.\""
                        }
                      ],
                      "id": 606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7606:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7606:113:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "7606:113:6"
                },
                {
                  "assignments": [
                    618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "7749:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "7730:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                        "typeString": "struct SmartNodes.JobRequest"
                      },
                      "typeName": {
                        "id": 617,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 616,
                          "name": "JobRequest",
                          "nameLocations": [
                            "7730:10:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63,
                          "src": "7730:10:6"
                        },
                        "referencedDeclaration": 63,
                        "src": "7730:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 622,
                  "initialValue": {
                    "baseExpression": {
                      "id": 619,
                      "name": "jobRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "7759:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.JobRequest storage ref)"
                      }
                    },
                    "id": 621,
                    "indexExpression": {
                      "id": 620,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "7771:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7759:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobRequest_$63_storage",
                      "typeString": "struct SmartNodes.JobRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7730:47:6"
                },
                {
                  "assignments": [
                    624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 624,
                      "mutability": "mutable",
                      "name": "nValidators",
                      "nameLocation": "7793:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "7787:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 623,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7787:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 631,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 627,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "7813:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                              "typeString": "struct SmartNodes.JobRequest storage pointer"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7821:18:6",
                          "memberName": "validatorAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "7813:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7840:6:6",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7813:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7807:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7807:5:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7807:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7787:60:6"
                },
                {
                  "expression": {
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 632,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "7857:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                            "typeString": "struct SmartNodes.JobRequest storage pointer"
                          }
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7865:10:6",
                        "memberName": "signatures",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62,
                        "src": "7857:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 637,
                      "indexExpression": {
                        "expression": {
                          "id": 634,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7876:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7880:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7876:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7857:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7890:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7857:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "7857:37:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 642,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "8022:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                            "typeString": "struct SmartNodes.JobRequest storage pointer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                            "typeString": "struct SmartNodes.JobRequest storage pointer"
                          }
                        ],
                        "id": 641,
                        "name": "_countSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "8005:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_JobRequest_$63_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct SmartNodes.JobRequest storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8005:25:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 644,
                      "name": "nValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "8034:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8005:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 692,
                  "nodeType": "IfStatement",
                  "src": "8001:353:6",
                  "trueBody": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "8047:307:6",
                    "statements": [
                      {
                        "assignments": [
                          648
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 648,
                            "mutability": "mutable",
                            "name": "job",
                            "nameLocation": "8073:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 691,
                            "src": "8061:15:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                              "typeString": "struct SmartNodes.Job"
                            },
                            "typeName": {
                              "id": 647,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 646,
                                "name": "Job",
                                "nameLocations": [
                                  "8061:3:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 49,
                                "src": "8061:3:6"
                              },
                              "referencedDeclaration": 49,
                              "src": "8061:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 652,
                        "initialValue": {
                          "baseExpression": {
                            "id": 649,
                            "name": "jobs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "8079:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$49_storage_$",
                              "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                            }
                          },
                          "id": 651,
                          "indexExpression": {
                            "id": 650,
                            "name": "jobId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "8084:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8079:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Job_$49_storage",
                            "typeString": "struct SmartNodes.Job storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8061:29:6"
                      },
                      {
                        "expression": {
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 653,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "8104:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8108:2:6",
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "8104:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 656,
                            "name": "jobId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "8113:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8104:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 658,
                        "nodeType": "ExpressionStatement",
                        "src": "8104:14:6"
                      },
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 659,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "8132:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8136:5:6",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "8132:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 662,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 618,
                              "src": "8144:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                                "typeString": "struct SmartNodes.JobRequest storage pointer"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8152:7:6",
                            "memberName": "creator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53,
                            "src": "8144:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8132:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "8132:27:6"
                      },
                      {
                        "expression": {
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 666,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "8173:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8177:8:6",
                            "memberName": "capacity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "8173:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 669,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 618,
                              "src": "8188:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                                "typeString": "struct SmartNodes.JobRequest storage pointer"
                              }
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8196:8:6",
                            "memberName": "capacity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "8188:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8173:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "8173:31:6"
                      },
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 673,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "8218:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8222:18:6",
                            "memberName": "validatorAddresses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40,
                            "src": "8218:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 676,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 618,
                              "src": "8243:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                                "typeString": "struct SmartNodes.JobRequest storage pointer"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8251:18:6",
                            "memberName": "validatorAddresses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "8243:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "src": "8218:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "8218:51:6"
                      },
                      {
                        "expression": {
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 680,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "8283:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8287:13:6",
                            "memberName": "completeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48,
                            "src": "8283:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8303:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8283:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 685,
                        "nodeType": "ExpressionStatement",
                        "src": "8283:21:6"
                      },
                      {
                        "expression": {
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8318:25:6",
                          "subExpression": {
                            "baseExpression": {
                              "id": 686,
                              "name": "jobRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "8325:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.JobRequest storage ref)"
                              }
                            },
                            "id": 688,
                            "indexExpression": {
                              "id": 687,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "8337:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8325:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JobRequest_$63_storage",
                              "typeString": "struct SmartNodes.JobRequest storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 690,
                        "nodeType": "ExpressionStatement",
                        "src": "8318:25:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e061fe02",
            "id": 694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveJobCreation",
            "nameLocation": "7361:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "7388:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 694,
                  "src": "7380:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7380:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7379:15:6"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7404:0:6"
            },
            "scope": 1283,
            "src": "7352:1008:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 834,
              "nodeType": "Block",
              "src": "8450:1377:6",
              "statements": [
                {
                  "assignments": [
                    701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 701,
                      "mutability": "mutable",
                      "name": "job",
                      "nameLocation": "8472:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 834,
                      "src": "8460:15:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                        "typeString": "struct SmartNodes.Job"
                      },
                      "typeName": {
                        "id": 700,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 699,
                          "name": "Job",
                          "nameLocations": [
                            "8460:3:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49,
                          "src": "8460:3:6"
                        },
                        "referencedDeclaration": 49,
                        "src": "8460:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                          "typeString": "struct SmartNodes.Job"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 705,
                  "initialValue": {
                    "baseExpression": {
                      "id": 702,
                      "name": "jobs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "8478:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Job_$49_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Job storage ref)"
                      }
                    },
                    "id": 704,
                    "indexExpression": {
                      "id": 703,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "8483:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8478:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Job_$49_storage",
                      "typeString": "struct SmartNodes.Job storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8460:29:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 707,
                            "name": "job",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "8507:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                              "typeString": "struct SmartNodes.Job storage pointer"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8511:2:6",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "8507:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 709,
                          "name": "jobId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "8517:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8507:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f6220646f6573206e6f742065786973742e",
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8524:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8882afc5a3b598f639483f17e6f05d7eeb671c83e8df7509ce48bede66c11f",
                          "typeString": "literal_string \"Job does not exist.\""
                        },
                        "value": "Job does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8882afc5a3b598f639483f17e6f05d7eeb671c83e8df7509ce48bede66c11f",
                          "typeString": "literal_string \"Job does not exist.\""
                        }
                      ],
                      "id": 706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8499:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8499:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "8499:47:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 715,
                            "name": "job",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "8564:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                              "typeString": "struct SmartNodes.Job storage pointer"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8568:11:6",
                          "memberName": "isCompleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "8564:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8583:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "8564:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4a6f6220697320616c726561647920636f6d706c657465642e",
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8590:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16c9725e255c24343b945c24c2d0ccc65d5c4a65e17cb243a1a20190b8a00f09",
                          "typeString": "literal_string \"Job is already completed.\""
                        },
                        "value": "Job is already completed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16c9725e255c24343b945c24c2d0ccc65d5c4a65e17cb243a1a20190b8a00f09",
                          "typeString": "literal_string \"Job is already completed.\""
                        }
                      ],
                      "id": 714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8556:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8556:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "8556:62:6"
                },
                {
                  "assignments": [
                    723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 723,
                      "mutability": "mutable",
                      "name": "isValidator",
                      "nameLocation": "8686:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 834,
                      "src": "8681:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 722,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8681:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 725,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8700:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8681:24:6"
                },
                {
                  "body": {
                    "id": 752,
                    "nodeType": "Block",
                    "src": "8772:143:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 738,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8790:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8794:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8790:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 740,
                                "name": "job",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "8804:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                  "typeString": "struct SmartNodes.Job storage pointer"
                                }
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8808:18:6",
                              "memberName": "validatorAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "8804:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 743,
                            "indexExpression": {
                              "id": 742,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 727,
                              "src": "8827:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8804:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8790:39:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 751,
                        "nodeType": "IfStatement",
                        "src": "8786:119:6",
                        "trueBody": {
                          "id": 750,
                          "nodeType": "Block",
                          "src": "8831:74:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 745,
                                  "name": "isValidator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 723,
                                  "src": "8849:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8863:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "8849:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 748,
                              "nodeType": "ExpressionStatement",
                              "src": "8849:18:6"
                            },
                            {
                              "id": 749,
                              "nodeType": "Break",
                              "src": "8885:5:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 730,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "8732:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 731,
                          "name": "job",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "8736:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                            "typeString": "struct SmartNodes.Job storage pointer"
                          }
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8740:18:6",
                        "memberName": "validatorAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "8736:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8759:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8736:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8732:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 753,
                  "initializationExpression": {
                    "assignments": [
                      727
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 727,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8725:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "8720:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8720:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 729,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8729:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8720:10:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8767:3:6",
                      "subExpression": {
                        "id": 735,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "8767:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 737,
                    "nodeType": "ExpressionStatement",
                    "src": "8767:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "8715:200:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "isValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 723,
                        "src": "8946:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792076616c696461746f7273206f662074686973206a6f62206d61792063616c6c20746869732066756e6374696f6e",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8971:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6728cfe73b7ac9fe4cf248856590c52106a1c071464ea90f9a5e75a51b5b1af",
                          "typeString": "literal_string \"Only validators of this job may call this function\""
                        },
                        "value": "Only validators of this job may call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6728cfe73b7ac9fe4cf248856590c52106a1c071464ea90f9a5e75a51b5b1af",
                          "typeString": "literal_string \"Only validators of this job may call this function\""
                        }
                      ],
                      "id": 754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8925:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:108:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:108:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "expression": {
                              "id": 760,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "9064:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 761,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9068:21:6",
                            "memberName": "completeConfirmations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46,
                            "src": "9064:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 764,
                          "indexExpression": {
                            "expression": {
                              "id": 762,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9090:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9094:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9090:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9064:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9104:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "9064:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c726561647920636f6e6669726d65642e",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9123:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_962f31f876310032ac03d4f1d3fdb0921185531cd90baf8a60c6d0cc8a342cd1",
                          "typeString": "literal_string \"Validator already confirmed.\""
                        },
                        "value": "Validator already confirmed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_962f31f876310032ac03d4f1d3fdb0921185531cd90baf8a60c6d0cc8a342cd1",
                          "typeString": "literal_string \"Validator already confirmed.\""
                        }
                      ],
                      "id": 759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9043:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9043:120:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "9043:120:6"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 770,
                          "name": "job",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "9174:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                            "typeString": "struct SmartNodes.Job storage pointer"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9178:21:6",
                        "memberName": "completeConfirmations",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46,
                        "src": "9174:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 775,
                      "indexExpression": {
                        "expression": {
                          "id": 772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9200:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9204:6:6",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9200:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9174:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9214:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9174:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "9174:44:6"
                },
                {
                  "expression": {
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "9228:19:6",
                    "subExpression": {
                      "expression": {
                        "id": 779,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "9228:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                          "typeString": "struct SmartNodes.Job storage pointer"
                        }
                      },
                      "id": 781,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9232:13:6",
                      "memberName": "completeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "9228:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "9228:19:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 784,
                        "name": "job",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "9335:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                          "typeString": "struct SmartNodes.Job storage pointer"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9339:13:6",
                      "memberName": "completeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "9335:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 786,
                          "name": "job",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "9356:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                            "typeString": "struct SmartNodes.Job storage pointer"
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9360:18:6",
                        "memberName": "validatorAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "9356:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9379:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9356:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9335:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 833,
                  "nodeType": "IfStatement",
                  "src": "9331:490:6",
                  "trueBody": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "9387:434:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 790,
                              "name": "job",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "9401:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                "typeString": "struct SmartNodes.Job storage pointer"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9405:11:6",
                            "memberName": "isCompleted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42,
                            "src": "9401:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9419:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9401:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 795,
                        "nodeType": "ExpressionStatement",
                        "src": "9401:22:6"
                      },
                      {
                        "body": {
                          "id": 826,
                          "nodeType": "Block",
                          "src": "9552:220:6",
                          "statements": [
                            {
                              "assignments": [
                                810
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 810,
                                  "mutability": "mutable",
                                  "name": "validator",
                                  "nameLocation": "9588:9:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 826,
                                  "src": "9570:27:6",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                    "typeString": "struct SmartNodes.Validator"
                                  },
                                  "typeName": {
                                    "id": 809,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 808,
                                      "name": "Validator",
                                      "nameLocations": [
                                        "9570:9:6"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 22,
                                      "src": "9570:9:6"
                                    },
                                    "referencedDeclaration": 22,
                                    "src": "9570:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                      "typeString": "struct SmartNodes.Validator"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 819,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 811,
                                  "name": "validators",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "9600:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                                    "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                                  }
                                },
                                "id": 818,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 812,
                                    "name": "validatorIdByAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "9632:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 817,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 813,
                                        "name": "job",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 701,
                                        "src": "9653:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                          "typeString": "struct SmartNodes.Job storage pointer"
                                        }
                                      },
                                      "id": 814,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9657:18:6",
                                      "memberName": "validatorAddresses",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 40,
                                      "src": "9653:22:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 816,
                                    "indexExpression": {
                                      "id": 815,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 797,
                                      "src": "9676:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9653:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9632:47:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9600:97:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Validator_$22_storage",
                                  "typeString": "struct SmartNodes.Validator storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9570:127:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 821,
                                      "name": "validator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 810,
                                      "src": "9737:9:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                                        "typeString": "struct SmartNodes.Validator storage pointer"
                                      }
                                    },
                                    "id": 822,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9747:2:6",
                                    "memberName": "id",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9,
                                    "src": "9737:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 823,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9751:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 820,
                                  "name": "_updateValidatorState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1066,
                                  "src": "9715:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                                    "typeString": "function (uint256,bool)"
                                  }
                                },
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9715:42:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 825,
                              "nodeType": "ExpressionStatement",
                              "src": "9715:42:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 800,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "9512:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 801,
                                "name": "job",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "9516:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Job_$49_storage_ptr",
                                  "typeString": "struct SmartNodes.Job storage pointer"
                                }
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9520:18:6",
                              "memberName": "validatorAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "9516:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9539:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9516:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9512:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 827,
                        "initializationExpression": {
                          "assignments": [
                            797
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 797,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9505:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 827,
                              "src": "9500:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 796,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9500:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 799,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9509:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9500:10:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9547:3:6",
                            "subExpression": {
                              "id": 805,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "9547:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 807,
                          "nodeType": "ExpressionStatement",
                          "src": "9547:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "9495:277:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 829,
                              "name": "jobId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "9804:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 828,
                            "name": "JobCompleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "9791:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9791:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 831,
                        "nodeType": "EmitStatement",
                        "src": "9786:24:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a1c0d32f",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeJob",
            "nameLocation": "8414:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "jobId",
                  "nameLocation": "8434:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "8426:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8426:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8425:15:6"
            },
            "returnParameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8450:0:6"
            },
            "scope": 1283,
            "src": "8405:1422:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "9933:249:6",
              "statements": [
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "9951:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "9943:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9943:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 846,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9959:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9943:17:6"
                },
                {
                  "body": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "10034:119:6",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "expression": {
                              "id": 859,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 838,
                              "src": "10052:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                                "typeString": "struct SmartNodes.JobRequest storage pointer"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10060:10:6",
                            "memberName": "signatures",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62,
                            "src": "10052:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 865,
                          "indexExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 861,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "10071:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                                  "typeString": "struct SmartNodes.JobRequest storage pointer"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10079:18:6",
                              "memberName": "validatorAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "10071:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 864,
                            "indexExpression": {
                              "id": 863,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 848,
                              "src": "10098:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10071:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10052:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 870,
                        "nodeType": "IfStatement",
                        "src": "10048:95:6",
                        "trueBody": {
                          "id": 869,
                          "nodeType": "Block",
                          "src": "10103:40:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "10121:7:6",
                                "subExpression": {
                                  "id": 866,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "10121:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 868,
                              "nodeType": "ExpressionStatement",
                              "src": "10121:7:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 851,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "9990:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 852,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "9994:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                            "typeString": "struct SmartNodes.JobRequest storage pointer"
                          }
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10002:18:6",
                        "memberName": "validatorAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58,
                        "src": "9994:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10021:6:6",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9994:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9990:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 872,
                  "initializationExpression": {
                    "assignments": [
                      848
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 848,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9983:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "9975:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 847,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9975:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 850,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9987:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9975:13:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10029:3:6",
                      "subExpression": {
                        "id": 856,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "10029:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 858,
                    "nodeType": "ExpressionStatement",
                    "src": "10029:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "9970:183:6"
                },
                {
                  "expression": {
                    "id": 873,
                    "name": "count",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "10170:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 842,
                  "id": 874,
                  "nodeType": "Return",
                  "src": "10163:12:6"
                }
              ]
            },
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_countSignatures",
            "nameLocation": "9842:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "9887:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "9868:26:6",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                    "typeString": "struct SmartNodes.JobRequest"
                  },
                  "typeName": {
                    "id": 837,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 836,
                      "name": "JobRequest",
                      "nameLocations": [
                        "9868:10:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63,
                      "src": "9868:10:6"
                    },
                    "referencedDeclaration": 63,
                    "src": "9868:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                      "typeString": "struct SmartNodes.JobRequest"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9858:42:6"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "9924:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9924:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9923:9:6"
            },
            "scope": 1283,
            "src": "9833:349:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 997,
              "nodeType": "Block",
              "src": "10342:1295:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 885,
                            "name": "nValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "10373:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 886,
                            "name": "minValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "10388:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "10373:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 888,
                            "name": "nValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "10405:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 889,
                            "name": "maxValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "10420:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "10405:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10373:60:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e56616c696461746f7273206d757374206265206265747765656e206d696e56616c696461746f7220616e64206d617856616c696461746f72",
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10447:59:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea0b66ca0b3302963dd029b5e78be3b92c2d1ba8597320aef66e831f206f10a5",
                          "typeString": "literal_string \"nValidators must be between minValidator and maxValidator\""
                        },
                        "value": "nValidators must be between minValidator and maxValidator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea0b66ca0b3302963dd029b5e78be3b92c2d1ba8597320aef66e831f206f10a5",
                          "typeString": "literal_string \"nValidators must be between minValidator and maxValidator\""
                        }
                      ],
                      "id": 884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10352:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10352:164:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "10352:164:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 896,
                            "name": "nValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "10547:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10561:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10547:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 899,
                            "name": "nValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "10566:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 900,
                            "name": "validatorIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "10581:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10566:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10547:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820617661696c61626c652076616c696461746f727320666f72206a6f622c20706c656173652074727920616761696e206c617465722e",
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10613:66:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fbcc69acea2b0c9de00db0d15e15a10e4cdfe4f461599421125c5075c4c01d3",
                          "typeString": "literal_string \"Not enough available validators for job, please try again later.\""
                        },
                        "value": "Not enough available validators for job, please try again later."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4fbcc69acea2b0c9de00db0d15e15a10e4cdfe4f461599421125c5075c4c01d3",
                          "typeString": "literal_string \"Not enough available validators for job, please try again later.\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10526:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10526:163:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "10526:163:6"
                },
                {
                  "assignments": [
                    910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 910,
                      "mutability": "mutable",
                      "name": "selectedValidators",
                      "nameLocation": "10717:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 997,
                      "src": "10700:35:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 908,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10700:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 909,
                        "nodeType": "ArrayTypeName",
                        "src": "10700:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 916,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 914,
                        "name": "nValidators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "10752:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10738:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10742:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 912,
                        "nodeType": "ArrayTypeName",
                        "src": "10742:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10738:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10700:64:6"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "selectedCount",
                      "nameLocation": "10782:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 997,
                      "src": "10774:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10774:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 920,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10798:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10774:25:6"
                },
                {
                  "body": {
                    "id": 993,
                    "nodeType": "Block",
                    "src": "10852:743:6",
                    "statements": [
                      {
                        "assignments": [
                          932
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 932,
                            "mutability": "mutable",
                            "name": "nonce",
                            "nameLocation": "10874:5:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 993,
                            "src": "10866:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 931,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10866:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 934,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10882:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10866:17:6"
                      },
                      {
                        "body": {
                          "id": 991,
                          "nodeType": "Block",
                          "src": "10924:661:6",
                          "statements": [
                            {
                              "assignments": [
                                939
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 939,
                                  "mutability": "mutable",
                                  "name": "randId",
                                  "nameLocation": "10950:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 991,
                                  "src": "10942:14:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 938,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10942:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 956,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 945,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "11040:5:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 946,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "11046:9:6",
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "11040:15:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 947,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "11057:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 948,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "11061:6:6",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "11057:10:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 950,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "++",
                                              "prefix": false,
                                              "src": "11069:7:6",
                                              "subExpression": {
                                                "id": 949,
                                                "name": "nonce",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 932,
                                                "src": "11069:5:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 943,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "11023:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 944,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "11027:12:6",
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "11023:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 951,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11023:54:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 942,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "10988:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 952,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10988:111:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10959:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 940,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10959:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10959:158:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 954,
                                  "name": "validatorIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "11120:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10959:179:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10942:196:6"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 957,
                                    "name": "validatorStateById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "11161:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 959,
                                  "indexExpression": {
                                    "id": 958,
                                    "name": "randId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 939,
                                    "src": "11180:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11161:26:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11191:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "11161:31:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 979,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 977,
                                    "name": "nonce",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 932,
                                    "src": "11424:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "hexValue": "3530",
                                    "id": 978,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11432:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50_by_1",
                                      "typeString": "int_const 50"
                                    },
                                    "value": "50"
                                  },
                                  "src": "11424:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 988,
                                  "nodeType": "Block",
                                  "src": "11490:81:6",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "4d61782076616c696461746f722072657175657374732072656163686564",
                                            "id": 985,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11519:32:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_1d4e52447913d05b3916910838e4ab5624d221b8f0478d1c22f5f437f344fbb9",
                                              "typeString": "literal_string \"Max validator requests reached\""
                                            },
                                            "value": "Max validator requests reached"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_1d4e52447913d05b3916910838e4ab5624d221b8f0478d1c22f5f437f344fbb9",
                                              "typeString": "literal_string \"Max validator requests reached\""
                                            }
                                          ],
                                          "id": 984,
                                          "name": "revert",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -19,
                                            -19
                                          ],
                                          "referencedDeclaration": -19,
                                          "src": "11512:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (string memory) pure"
                                          }
                                        },
                                        "id": 986,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11512:40:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 987,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11512:40:6"
                                    }
                                  ]
                                },
                                "id": 989,
                                "nodeType": "IfStatement",
                                "src": "11420:151:6",
                                "trueBody": {
                                  "id": 983,
                                  "nodeType": "Block",
                                  "src": "11436:48:6",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 981,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "11458:7:6",
                                        "subExpression": {
                                          "id": 980,
                                          "name": "nonce",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 932,
                                          "src": "11458:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 982,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11458:7:6"
                                    }
                                  ]
                                }
                              },
                              "id": 990,
                              "nodeType": "IfStatement",
                              "src": "11157:414:6",
                              "trueBody": {
                                "id": 976,
                                "nodeType": "Block",
                                "src": "11194:220:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 963,
                                          "name": "randId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 939,
                                          "src": "11293:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "hexValue": "74727565",
                                          "id": 964,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "bool",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11301:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "value": "true"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 962,
                                        "name": "_updateValidatorState",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1066,
                                        "src": "11271:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                                          "typeString": "function (uint256,bool)"
                                        }
                                      },
                                      "id": 965,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11271:35:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 966,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11271:35:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 971,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 967,
                                          "name": "selectedValidators",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 910,
                                          "src": "11328:18:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 969,
                                        "indexExpression": {
                                          "id": 968,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 922,
                                          "src": "11347:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "11328:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 970,
                                        "name": "randId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 939,
                                        "src": "11352:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11328:30:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 972,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11328:30:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 974,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "11380:15:6",
                                      "subExpression": {
                                        "id": 973,
                                        "name": "selectedCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 918,
                                        "src": "11380:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 975,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11380:15:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 935,
                            "name": "selectedCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "10904:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 936,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 922,
                            "src": "10921:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10904:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 992,
                        "nodeType": "WhileStatement",
                        "src": "10897:688:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 925,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "10830:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 926,
                      "name": "nValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "10834:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10830:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 994,
                  "initializationExpression": {
                    "assignments": [
                      922
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10823:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 994,
                        "src": "10815:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10815:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 924,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10827:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10815:13:6"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10847:3:6",
                      "subExpression": {
                        "id": 928,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "10847:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 930,
                    "nodeType": "ExpressionStatement",
                    "src": "10847:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "10810:785:6"
                },
                {
                  "expression": {
                    "id": 995,
                    "name": "selectedValidators",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 910,
                    "src": "11612:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 996,
                  "nodeType": "Return",
                  "src": "11605:25:6"
                }
              ]
            },
            "id": 998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pseudorandomValidatorSelection",
            "nameLocation": "10241:31:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "nValidators",
                  "nameLocation": "10288:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "10282:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10282:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10272:33:6"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "10324:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 880,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10324:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 881,
                    "nodeType": "ArrayTypeName",
                    "src": "10324:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10323:18:6"
            },
            "scope": 1283,
            "src": "10232:1405:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1065,
              "nodeType": "Block",
              "src": "11741:868:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1006,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "11772:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11786:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11772:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1009,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "11791:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1010,
                            "name": "validatorIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "11805:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11791:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11772:51:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642056616c696461746f724964",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11837:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f49811a98034812265e2a64b44a4768dfa4ff0b9c509813cbd399d02faf8aac1",
                          "typeString": "literal_string \"Invalid ValidatorId\""
                        },
                        "value": "Invalid ValidatorId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f49811a98034812265e2a64b44a4768dfa4ff0b9c509813cbd399d02faf8aac1",
                          "typeString": "literal_string \"Invalid ValidatorId\""
                        }
                      ],
                      "id": 1005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11751:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11751:117:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "11751:117:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1017,
                            "name": "validatorStateById",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "11899:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1019,
                          "indexExpression": {
                            "id": 1018,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "11918:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11899:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11933:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11899:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206973206e6f74206f6e6c696e652e",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11948:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42fa9b1355d329c6133928e9440819dae07c2c71cb1dcb2d495d9010c06bf1b6",
                          "typeString": "literal_string \"Validator is not online.\""
                        },
                        "value": "Validator is not online."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42fa9b1355d329c6133928e9440819dae07c2c71cb1dcb2d495d9010c06bf1b6",
                          "typeString": "literal_string \"Validator is not online.\""
                        }
                      ],
                      "id": 1016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11878:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11878:106:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "11878:106:6"
                },
                {
                  "condition": {
                    "id": 1025,
                    "name": "activate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1002,
                    "src": "11999:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1063,
                    "nodeType": "Block",
                    "src": "12314:289:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1045,
                              "name": "validatorStateById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "12408:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1047,
                            "indexExpression": {
                              "id": 1046,
                              "name": "validatorId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "12427:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12408:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12443:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "12408:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1061,
                          "nodeType": "Block",
                          "src": "12520:73:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "56616c696461746f7220697320616c726561647920696e61637469766521",
                                    "id": 1058,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12545:32:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b4d748851b44b93d6e4ca6ae4d853c07bdb7d3fea896b05649b81ffbc3712314",
                                      "typeString": "literal_string \"Validator is already inactive!\""
                                    },
                                    "value": "Validator is already inactive!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_b4d748851b44b93d6e4ca6ae4d853c07bdb7d3fea896b05649b81ffbc3712314",
                                      "typeString": "literal_string \"Validator is already inactive!\""
                                    }
                                  ],
                                  "id": 1057,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "12538:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12538:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1060,
                              "nodeType": "ExpressionStatement",
                              "src": "12538:40:6"
                            }
                          ]
                        },
                        "id": 1062,
                        "nodeType": "IfStatement",
                        "src": "12404:189:6",
                        "trueBody": {
                          "id": 1056,
                          "nodeType": "Block",
                          "src": "12446:68:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1050,
                                    "name": "validatorStateById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "12464:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1052,
                                  "indexExpression": {
                                    "id": 1051,
                                    "name": "validatorId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1000,
                                    "src": "12483:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12464:31:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12498:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12464:35:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1055,
                              "nodeType": "ExpressionStatement",
                              "src": "12464:35:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1064,
                  "nodeType": "IfStatement",
                  "src": "11995:608:6",
                  "trueBody": {
                    "id": 1044,
                    "nodeType": "Block",
                    "src": "12009:299:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1026,
                              "name": "validatorStateById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "12099:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1028,
                            "indexExpression": {
                              "id": 1027,
                              "name": "validatorId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "12118:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12099:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12134:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12099:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1042,
                          "nodeType": "Block",
                          "src": "12211:87:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "56616c696461746f72206265696e672061637469766174656420697320616c72656164792061637469766521",
                                    "id": 1039,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12236:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5916381880a088f58eb826fa2ebfc0af2c35bb8fc4c73a48393b3f43e03a54f0",
                                      "typeString": "literal_string \"Validator being activated is already active!\""
                                    },
                                    "value": "Validator being activated is already active!"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5916381880a088f58eb826fa2ebfc0af2c35bb8fc4c73a48393b3f43e03a54f0",
                                      "typeString": "literal_string \"Validator being activated is already active!\""
                                    }
                                  ],
                                  "id": 1038,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "12229:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12229:54:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1041,
                              "nodeType": "ExpressionStatement",
                              "src": "12229:54:6"
                            }
                          ]
                        },
                        "id": 1043,
                        "nodeType": "IfStatement",
                        "src": "12095:203:6",
                        "trueBody": {
                          "id": 1037,
                          "nodeType": "Block",
                          "src": "12137:68:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1031,
                                    "name": "validatorStateById",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "12155:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1033,
                                  "indexExpression": {
                                    "id": 1032,
                                    "name": "validatorId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1000,
                                    "src": "12174:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12155:31:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 1034,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12189:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "12155:35:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1036,
                              "nodeType": "ExpressionStatement",
                              "src": "12155:35:6"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateValidatorState",
            "nameLocation": "11652:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "11691:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "11683:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11683:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "activate",
                  "nameLocation": "11717:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "11712:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11712:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11673:58:6"
            },
            "returnParameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11741:0:6"
            },
            "scope": 1283,
            "src": "11643:966:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "12673:399:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "30",
                            "id": 1072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12704:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1073,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "12708:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12704:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1075,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "12723:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1076,
                            "name": "validatorIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "12737:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12723:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12704:51:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72204944206d7573742062652076616c69642e",
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12769:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d91bc4bd37e479be1dad8cbce16d406bde12460b0933e2f26730fc3289b2bb91",
                          "typeString": "literal_string \"Validator ID must be valid.\""
                        },
                        "value": "Validator ID must be valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d91bc4bd37e479be1dad8cbce16d406bde12460b0933e2f26730fc3289b2bb91",
                          "typeString": "literal_string \"Validator ID must be valid.\""
                        }
                      ],
                      "id": 1071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12683:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12683:125:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "12683:125:6"
                },
                {
                  "assignments": [
                    1084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1084,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "12837:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1112,
                      "src": "12819:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 1083,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1082,
                          "name": "Validator",
                          "nameLocations": [
                            "12819:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22,
                          "src": "12819:9:6"
                        },
                        "referencedDeclaration": 22,
                        "src": "12819:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1088,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1085,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "12849:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 1087,
                    "indexExpression": {
                      "id": 1086,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "12860:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12849:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$22_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12819:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12890:19:6",
                        "subExpression": {
                          "expression": {
                            "id": 1090,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "12891:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                              "typeString": "struct SmartNodes.Validator storage pointer"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12901:8:6",
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "12891:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f7220616c72656164792061637469766521",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12911:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a446ef3143fee30786d8185c252e5459b69f3f3da48ec5ebb495f31010954e83",
                          "typeString": "literal_string \"Validator already active!\""
                        },
                        "value": "Validator already active!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a446ef3143fee30786d8185c252e5459b69f3f3da48ec5ebb495f31010954e83",
                          "typeString": "literal_string \"Validator already active!\""
                        }
                      ],
                      "id": 1089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12882:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12882:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "12882:57:6"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1096,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "12949:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12959:8:6",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "12949:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12970:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12949:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "12949:25:6"
                },
                {
                  "expression": {
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1102,
                        "name": "validatorStateById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "12984:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1104,
                      "indexExpression": {
                        "id": 1103,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "13003:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12984:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13018:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12984:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "12984:35:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1109,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "13053:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1108,
                      "name": "ValidatorActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "13034:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13034:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "EmitStatement",
                  "src": "13029:36:6"
                }
              ]
            },
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_activateValidator",
            "nameLocation": "12624:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "12651:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "12643:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12643:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12642:21:6"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12673:0:6"
            },
            "scope": 1283,
            "src": "12615:457:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1158,
              "nodeType": "Block",
              "src": "13138:396:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "30",
                            "id": 1119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13169:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1120,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "13173:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13169:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1122,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "13188:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1123,
                            "name": "validatorIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "13202:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13188:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13169:51:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72204944206d7573742062652076616c69642e",
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13234:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d91bc4bd37e479be1dad8cbce16d406bde12460b0933e2f26730fc3289b2bb91",
                          "typeString": "literal_string \"Validator ID must be valid.\""
                        },
                        "value": "Validator ID must be valid."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d91bc4bd37e479be1dad8cbce16d406bde12460b0933e2f26730fc3289b2bb91",
                          "typeString": "literal_string \"Validator ID must be valid.\""
                        }
                      ],
                      "id": 1118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13148:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13148:125:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "13148:125:6"
                },
                {
                  "assignments": [
                    1131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1131,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "13301:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "13283:27:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                        "typeString": "struct SmartNodes.Validator"
                      },
                      "typeName": {
                        "id": 1130,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1129,
                          "name": "Validator",
                          "nameLocations": [
                            "13283:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 22,
                          "src": "13283:9:6"
                        },
                        "referencedDeclaration": 22,
                        "src": "13283:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1135,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1132,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "13313:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Validator_$22_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.Validator storage ref)"
                      }
                    },
                    "id": 1134,
                    "indexExpression": {
                      "id": 1133,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "13324:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13313:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Validator_$22_storage",
                      "typeString": "struct SmartNodes.Validator storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13283:53:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1137,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "13355:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                            "typeString": "struct SmartNodes.Validator storage pointer"
                          }
                        },
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13365:8:6",
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "13355:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696461746f72206e6f742061637469766521",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13375:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df4ae4f1edfac3a899eae941ce539bc4aaf0b586681ea06285a703963bc454fb",
                          "typeString": "literal_string \"Validator not active!\""
                        },
                        "value": "Validator not active!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df4ae4f1edfac3a899eae941ce539bc4aaf0b586681ea06285a703963bc454fb",
                          "typeString": "literal_string \"Validator not active!\""
                        }
                      ],
                      "id": 1136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13347:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13347:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "13347:52:6"
                },
                {
                  "expression": {
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1142,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1131,
                        "src": "13409:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Validator_$22_storage_ptr",
                          "typeString": "struct SmartNodes.Validator storage pointer"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13419:8:6",
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "13409:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13430:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13409:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "13409:26:6"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1148,
                        "name": "validatorStateById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "13446:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1150,
                      "indexExpression": {
                        "id": 1149,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "13465:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13446:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13480:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13446:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "13446:35:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1155,
                        "name": "validatorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "13515:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1154,
                      "name": "ValidatorActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "13496:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13496:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1157,
                  "nodeType": "EmitStatement",
                  "src": "13491:36:6"
                }
              ]
            },
            "id": 1159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deactivateValidator",
            "nameLocation": "13087:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "13116:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "13108:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13108:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13107:21:6"
            },
            "returnParameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13138:0:6"
            },
            "scope": 1283,
            "src": "13078:456:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "13590:79:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "components": [
                                  {
                                    "expression": {
                                      "id": 1169,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "13643:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1170,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13649:9:6",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "13643:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1171,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13642:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1167,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "13625:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13629:12:6",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "13625:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13625:35:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1166,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "13615:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13615:46:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "13607:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13607:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13607:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1163,
                  "id": 1175,
                  "nodeType": "Return",
                  "src": "13600:62:6"
                }
              ]
            },
            "functionSelector": "5ec01e4d",
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nameLocation": "13549:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13555:2:6"
            },
            "returnParameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "13581:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13581:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13580:9:6"
            },
            "scope": 1283,
            "src": "13540:129:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "13732:34:6",
              "statements": [
                {
                  "expression": {
                    "id": 1182,
                    "name": "jobCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 113,
                    "src": "13749:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1181,
                  "id": 1183,
                  "nodeType": "Return",
                  "src": "13742:17:6"
                }
              ]
            },
            "functionSelector": "911ab494",
            "id": 1185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getjobCounter",
            "nameLocation": "13684:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13697:2:6"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "13723:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13723:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13722:9:6"
            },
            "scope": 1283,
            "src": "13675:91:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1192,
              "nodeType": "Block",
              "src": "13837:42:6",
              "statements": [
                {
                  "expression": {
                    "id": 1190,
                    "name": "validatorIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109,
                    "src": "13854:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1189,
                  "id": 1191,
                  "nodeType": "Return",
                  "src": "13847:25:6"
                }
              ]
            },
            "functionSelector": "d56c907d",
            "id": 1193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorIdCounter",
            "nameLocation": "13781:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13802:2:6"
            },
            "returnParameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "13828:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13828:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13827:9:6"
            },
            "scope": 1283,
            "src": "13772:107:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1200,
              "nodeType": "Block",
              "src": "13945:37:6",
              "statements": [
                {
                  "expression": {
                    "id": 1198,
                    "name": "userIdCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "13962:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1197,
                  "id": 1199,
                  "nodeType": "Return",
                  "src": "13955:20:6"
                }
              ]
            },
            "functionSelector": "32412baf",
            "id": 1201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserIdCounter",
            "nameLocation": "13894:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13910:2:6"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "13936:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13936:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13935:9:6"
            },
            "scope": 1283,
            "src": "13885:97:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "14082:51:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1208,
                      "name": "userIdByHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "14099:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 1210,
                    "indexExpression": {
                      "id": 1209,
                      "name": "publicKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "14112:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14099:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1207,
                  "id": 1211,
                  "nodeType": "Return",
                  "src": "14092:34:6"
                }
              ]
            },
            "functionSelector": "db1ef71f",
            "id": 1213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserId",
            "nameLocation": "13997:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "publicKeyHash",
                  "nameLocation": "14030:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "14016:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14016:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14006:43:6"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "14073:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14073:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14072:9:6"
            },
            "scope": 1283,
            "src": "13988:145:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1235,
              "nodeType": "Block",
              "src": "14233:183:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1221,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "14264:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14278:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14264:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1224,
                            "name": "validatorId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "14283:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1225,
                            "name": "validatorIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "14297:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14283:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14264:51:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642056616c696461746f72496421",
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14329:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c99a6e3d0ab1179799e926f2d04d5d89edafdebaf7d9cb3ca4285989d5922362",
                          "typeString": "literal_string \"Invalid ValidatorId!\""
                        },
                        "value": "Invalid ValidatorId!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c99a6e3d0ab1179799e926f2d04d5d89edafdebaf7d9cb3ca4285989d5922362",
                          "typeString": "literal_string \"Invalid ValidatorId!\""
                        }
                      ],
                      "id": 1220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14243:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14243:118:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "14243:118:6"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1231,
                      "name": "validatorStateById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "14378:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 1233,
                    "indexExpression": {
                      "id": 1232,
                      "name": "validatorId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1215,
                      "src": "14397:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14378:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1219,
                  "id": 1234,
                  "nodeType": "Return",
                  "src": "14371:38:6"
                }
              ]
            },
            "functionSelector": "616d7173",
            "id": 1236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorState",
            "nameLocation": "14148:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "validatorId",
                  "nameLocation": "14183:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "14175:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14175:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14165:35:6"
            },
            "returnParameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1236,
                  "src": "14224:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14224:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14223:9:6"
            },
            "scope": 1283,
            "src": "14139:277:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1281,
              "nodeType": "Block",
              "src": "14596:370:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1245,
                          "name": "reqId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1238,
                          "src": "14614:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1246,
                          "name": "jobCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "14622:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14614:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206a6f6252657175657374204944",
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14634:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a00af8a2064b4182f4334ebfdcac95def2a5dfbb751c3218b96b2f8736758c7",
                          "typeString": "literal_string \"Invalid jobRequest ID\""
                        },
                        "value": "Invalid jobRequest ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a00af8a2064b4182f4334ebfdcac95def2a5dfbb751c3218b96b2f8736758c7",
                          "typeString": "literal_string \"Invalid jobRequest ID\""
                        }
                      ],
                      "id": 1244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14606:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14606:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1250,
                  "nodeType": "ExpressionStatement",
                  "src": "14606:52:6"
                },
                {
                  "assignments": [
                    1253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1253,
                      "mutability": "mutable",
                      "name": "jobReq",
                      "nameLocation": "14687:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1281,
                      "src": "14668:25:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                        "typeString": "struct SmartNodes.JobRequest"
                      },
                      "typeName": {
                        "id": 1252,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1251,
                          "name": "JobRequest",
                          "nameLocations": [
                            "14668:10:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63,
                          "src": "14668:10:6"
                        },
                        "referencedDeclaration": 63,
                        "src": "14668:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1257,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1254,
                      "name": "jobRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "14696:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                        "typeString": "mapping(uint256 => struct SmartNodes.JobRequest storage ref)"
                      }
                    },
                    "id": 1256,
                    "indexExpression": {
                      "id": 1255,
                      "name": "reqId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1238,
                      "src": "14708:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14696:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_JobRequest_$63_storage",
                      "typeString": "struct SmartNodes.JobRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14668:46:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1258,
                        "name": "jobReq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "14728:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JobRequest_$63_storage_ptr",
                          "typeString": "struct SmartNodes.JobRequest storage pointer"
                        }
                      },
                      "id": 1259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14735:2:6",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "14728:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1260,
                      "name": "reqId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1238,
                      "src": "14741:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14728:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "14904:56:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4a6f6252657175657374206e6f7420666f756e6421",
                              "id": 1276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14925:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_29520f43c02a19756bb4ea3f5852a7599d5568fb1ebbf21758524dc55d21374b",
                                "typeString": "literal_string \"JobRequest not found!\""
                              },
                              "value": "JobRequest not found!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_29520f43c02a19756bb4ea3f5852a7599d5568fb1ebbf21758524dc55d21374b",
                                "typeString": "literal_string \"JobRequest not found!\""
                              }
                            ],
                            "id": 1275,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "14918:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14918:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1278,
                        "nodeType": "ExpressionStatement",
                        "src": "14918:31:6"
                      }
                    ]
                  },
                  "id": 1280,
                  "nodeType": "IfStatement",
                  "src": "14724:236:6",
                  "trueBody": {
                    "id": 1274,
                    "nodeType": "Block",
                    "src": "14748:150:6",
                    "statements": [
                      {
                        "assignments": [
                          1266
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1266,
                            "mutability": "mutable",
                            "name": "jobReqAddresses",
                            "nameLocation": "14779:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1274,
                            "src": "14762:32:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1264,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14762:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1265,
                              "nodeType": "ArrayTypeName",
                              "src": "14762:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1271,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1267,
                              "name": "jobRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "14797:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_JobRequest_$63_storage_$",
                                "typeString": "mapping(uint256 => struct SmartNodes.JobRequest storage ref)"
                              }
                            },
                            "id": 1269,
                            "indexExpression": {
                              "id": 1268,
                              "name": "reqId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1238,
                              "src": "14809:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14797:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JobRequest_$63_storage",
                              "typeString": "struct SmartNodes.JobRequest storage ref"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14833:18:6",
                          "memberName": "validatorAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "14797:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14762:89:6"
                      },
                      {
                        "expression": {
                          "id": 1272,
                          "name": "jobReqAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "14872:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 1243,
                        "id": 1273,
                        "nodeType": "Return",
                        "src": "14865:22:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f13ff544",
            "id": 1282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getJobRequestValidators",
            "nameLocation": "14502:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "reqId",
                  "nameLocation": "14543:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1282,
                  "src": "14535:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14535:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14525:29:6"
            },
            "returnParameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1282,
                  "src": "14578:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1240,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14578:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1241,
                    "nodeType": "ArrayTypeName",
                    "src": "14578:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14577:18:6"
            },
            "scope": 1283,
            "src": "14493:473:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1284,
        "src": "217:14751:6",
        "usedErrors": [],
        "usedEvents": [
          123,
          129,
          135,
          141,
          145,
          149,
          153,
          2281,
          2290
        ]
      }
    ],
    "src": "36:14933:6"
  },
  "bytecode": "",
  "bytecodeSha1": "919bbebdb486d73c1dbddce0a886ed0b95116abe",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "SmartNodes",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "178": [
            2952,
            2965,
            true
          ]
        },
        "SmartNodes.initialize": {
          "176": [
            2369,
            2382,
            true
          ],
          "177": [
            2369,
            2417,
            true
          ]
        }
      },
      "1": {
        "ERC20Upgradeable._approve": {
          "168": [
            10591,
            10610,
            true
          ],
          "169": [
            10669,
            10690,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "175": [
            8835,
            8856,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "170": [
            11303,
            11340,
            false
          ],
          "171": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "172": [
            7951,
            7969,
            true
          ],
          "173": [
            8029,
            8045,
            true
          ],
          "174": [
            8200,
            8221,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "167": [
            7152,
            7187,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {},
      "6": {
        "SmartNodes._countSignatures": {
          "166": [
            10052,
            10101,
            false
          ]
        },
        "SmartNodes._pseudorandomValidatorSelection": {
          "155": [
            10373,
            10401,
            false
          ],
          "156": [
            10405,
            10433,
            true
          ],
          "157": [
            10547,
            10562,
            false
          ],
          "158": [
            10566,
            10599,
            true
          ],
          "159": [
            11161,
            11192,
            false
          ],
          "160": [
            11424,
            11434,
            false
          ]
        },
        "SmartNodes._updateValidatorState": {
          "161": [
            11772,
            11787,
            false
          ],
          "162": [
            11791,
            11823,
            true
          ],
          "163": [
            11999,
            12007,
            false
          ],
          "164": [
            12099,
            12135,
            false
          ],
          "165": [
            12408,
            12444,
            false
          ]
        },
        "SmartNodes.approveJobCreation": {
          "146": [
            7549,
            7567,
            true
          ],
          "147": [
            7627,
            7657,
            true
          ],
          "148": [
            8005,
            8045,
            false
          ]
        },
        "SmartNodes.completeJob": {
          "140": [
            8507,
            8522,
            true
          ],
          "141": [
            8564,
            8588,
            true
          ],
          "142": [
            8790,
            8829,
            false
          ],
          "143": [
            8946,
            8957,
            true
          ],
          "144": [
            9064,
            9109,
            true
          ]
        },
        "SmartNodes.createUser": {
          "137": [
            3129,
            3161,
            true
          ]
        },
        "SmartNodes.createValidator": {
          "145": [
            3592,
            3629,
            true
          ]
        },
        "SmartNodes.getJobRequestValidators": {
          "153": [
            14614,
            14632,
            true
          ],
          "154": [
            14728,
            14746,
            false
          ]
        },
        "SmartNodes.getValidatorState": {
          "138": [
            14264,
            14279,
            false
          ],
          "139": [
            14283,
            14315,
            true
          ]
        },
        "SmartNodes.lockTokens": {
          "149": [
            4413,
            4423,
            true
          ],
          "150": [
            4479,
            4510,
            true
          ],
          "151": [
            4619,
            4635,
            true
          ],
          "152": [
            4746,
            4764,
            true
          ]
        },
        "SmartNodes.requestJob": {
          "131": [
            6209,
            6241,
            true
          ],
          "132": [
            6284,
            6296,
            true
          ]
        },
        "SmartNodes.unlockTokens": {
          "133": [
            5140,
            5166,
            true
          ],
          "134": [
            5219,
            5229,
            true
          ],
          "135": [
            5353,
            5378,
            false
          ],
          "136": [
            5696,
            5735,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Initializable._isConstructor": {
          "40": [
            3101,
            3153
          ]
        }
      },
      "1": {
        "ERC20Upgradeable.__ERC20_init": {
          "119": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "129": [
            2381,
            2394
          ],
          "130": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "92": [
            10583,
            10651
          ],
          "93": [
            10661,
            10729
          ],
          "94": [
            10740,
            10776
          ],
          "95": [
            10786,
            10823
          ]
        },
        "ERC20Upgradeable._mint": {
          "114": [
            8827,
            8892
          ],
          "115": [
            8963,
            8985
          ],
          "116": [
            8995,
            9023
          ],
          "117": [
            9033,
            9075
          ],
          "118": [
            9086,
            9134
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "105": [
            11356,
            11424
          ],
          "106": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "107": [
            7943,
            8011
          ],
          "108": [
            8021,
            8085
          ],
          "109": [
            8192,
            8264
          ],
          "110": [
            8298,
            8336
          ],
          "111": [
            8356,
            8379
          ],
          "112": [
            8390,
            8421
          ],
          "113": [
            8432,
            8469
          ]
        },
        "ERC20Upgradeable.allowance": {
          "7": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "10": [
            4907,
            4939
          ],
          "11": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "4": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "59": [
            7144,
            7229
          ],
          "60": [
            7263,
            7323
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "25": [
            6352,
            6418
          ]
        },
        "ERC20Upgradeable.name": {
          "8": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "48": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "61": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "22": [
            5712,
            5750
          ],
          "23": [
            5760,
            5787
          ],
          "24": [
            5797,
            5808
          ]
        }
      },
      "2": {},
      "3": {},
      "5": {
        "ContextUpgradeable._msgSender": {
          "9": [
            922,
            939
          ]
        }
      },
      "6": {
        "SmartNodes._countSignatures": {
          "126": [
            10121,
            10128
          ],
          "127": [
            10029,
            10032
          ],
          "128": [
            10163,
            10175
          ]
        },
        "SmartNodes._pseudorandomValidatorSelection": {
          "96": [
            10352,
            10516
          ],
          "97": [
            10526,
            10689
          ],
          "98": [
            11271,
            11306
          ],
          "99": [
            11328,
            11358
          ],
          "100": [
            11380,
            11395
          ],
          "101": [
            11458,
            11465
          ],
          "102": [
            11512,
            11552
          ],
          "103": [
            10847,
            10850
          ],
          "104": [
            11605,
            11630
          ]
        },
        "SmartNodes._updateValidatorState": {
          "120": [
            11751,
            11868
          ],
          "121": [
            11878,
            11984
          ],
          "122": [
            12155,
            12190
          ],
          "123": [
            12229,
            12283
          ],
          "124": [
            12464,
            12499
          ],
          "125": [
            12538,
            12578
          ]
        },
        "SmartNodes.approveJobCreation": {
          "74": [
            7541,
            7596
          ],
          "75": [
            7606,
            7719
          ],
          "76": [
            7857,
            7894
          ],
          "77": [
            8104,
            8118
          ],
          "78": [
            8132,
            8159
          ],
          "79": [
            8173,
            8204
          ],
          "80": [
            8218,
            8269
          ],
          "81": [
            8283,
            8304
          ],
          "82": [
            8318,
            8343
          ]
        },
        "SmartNodes.completeJob": {
          "49": [
            8499,
            8546
          ],
          "50": [
            8556,
            8618
          ],
          "51": [
            8849,
            8867
          ],
          "52": [
            8885,
            8890
          ],
          "53": [
            8767,
            8770
          ],
          "54": [
            8925,
            9033
          ],
          "55": [
            9043,
            9163
          ],
          "56": [
            9715,
            9757
          ],
          "57": [
            9547,
            9550
          ],
          "58": [
            9786,
            9810
          ]
        },
        "SmartNodes.createUser": {
          "34": [
            3121,
            3190
          ],
          "35": [
            3200,
            3376
          ],
          "36": [
            3387,
            3430
          ],
          "37": [
            3440,
            3485
          ]
        },
        "SmartNodes.createValidator": {
          "62": [
            3571,
            3704
          ],
          "63": [
            3785,
            3818
          ],
          "64": [
            3828,
            3867
          ],
          "65": [
            3877,
            3916
          ],
          "66": [
            3926,
            3951
          ],
          "67": [
            3962,
            4015
          ],
          "68": [
            4025,
            4078
          ],
          "69": [
            4088,
            4141
          ],
          "70": [
            4151,
            4193
          ],
          "71": [
            4204,
            4257
          ],
          "72": [
            4268,
            4288
          ]
        },
        "SmartNodes.getJobRequestValidators": {
          "90": [
            14606,
            14658
          ],
          "91": [
            14918,
            14949
          ]
        },
        "SmartNodes.getUserId": {
          "73": [
            14092,
            14126
          ]
        },
        "SmartNodes.getUserIdCounter": {
          "2": [
            13955,
            13975
          ]
        },
        "SmartNodes.getValidatorIdCounter": {
          "6": [
            13847,
            13872
          ]
        },
        "SmartNodes.getValidatorState": {
          "38": [
            14243,
            14361
          ],
          "39": [
            14371,
            14409
          ]
        },
        "SmartNodes.getjobCounter": {
          "5": [
            13742,
            13759
          ]
        },
        "SmartNodes.initialize": {
          "41": [
            2787,
            2822
          ],
          "42": [
            2832,
            2854
          ],
          "43": [
            2864,
            2886
          ],
          "44": [
            2896,
            2913
          ],
          "45": [
            2923,
            2937
          ],
          "46": [
            2947,
            2964
          ],
          "47": [
            2974,
            2992
          ]
        },
        "SmartNodes.lockTokens": {
          "83": [
            4405,
            4461
          ],
          "84": [
            4471,
            4536
          ],
          "85": [
            4611,
            4665
          ],
          "86": [
            4738,
            4793
          ],
          "87": [
            4804,
            4851
          ],
          "88": [
            4861,
            4887
          ],
          "89": [
            4898,
            4935
          ]
        },
        "SmartNodes.random": {
          "3": [
            13600,
            13662
          ]
        },
        "SmartNodes.requestJob": {
          "12": [
            6201,
            6266
          ],
          "13": [
            6276,
            6331
          ],
          "14": [
            6451,
            6474
          ],
          "15": [
            6484,
            6512
          ],
          "16": [
            6522,
            6549
          ],
          "17": [
            6994,
            7087
          ],
          "18": [
            6975,
            6978
          ],
          "19": [
            7108,
            7155
          ],
          "20": [
            7198,
            7210
          ],
          "21": [
            7275,
            7302
          ]
        },
        "SmartNodes.unlockTokens": {
          "26": [
            5132,
            5201
          ],
          "27": [
            5211,
            5267
          ],
          "28": [
            5394,
            5440
          ],
          "29": [
            5481,
            5535
          ],
          "30": [
            5671,
            5793
          ],
          "31": [
            5808,
            5834
          ],
          "32": [
            5848,
            5873
          ],
          "33": [
            5935,
            5974
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/IERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "217:14751:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2237:26:6;;;;;;;;;;;;;;;942:4:7;930:17;;;912:36;;900:2;885:18;2237:26:6;770:184:7;4770:197:1;;;;;;:::i;:::-;;:::i;:::-;;;1561:14:7;;1554:22;1536:41;;1524:2;1509:18;4770:197:1;1396:187:7;6076:1233:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1918:35::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1918:35:6;;;;;;;;;;;;;;;;;;3001:25:7;;;-1:-1:-1;;;;;3062:32:7;;;3057:2;3042:18;;3035:60;3111:18;;;3104:34;;;;3181:14;3174:22;3169:2;3154:18;;3147:50;3246:4;3234:17;3228:3;3213:19;;3206:46;2988:3;2973:19;1918:35:6;2752:506:7;3581:106:1;3668:12;;3581:106;;;3409:25:7;;;3397:2;3382:18;3581:106:1;3263:177:7;1551:51:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5529:286:1;;;;;;:::i;:::-;;:::i;1490:55:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;2080:28;;;;;;3430:91:1;3512:2;3430:91;;13885:97:6;13962:13;;13885:97;;1845:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1437:47;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;1746:37::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;6210:236:1:-;;;;;;:::i;:::-;;:::i;4948:1095:6:-;;;;;;:::i;:::-;;:::i;:::-;;1789:50;;;;;;:::i;:::-;;;;;;;;;;;;;;2114:25;;;;;;3053:439;;;;;;:::i;:::-;;:::i;13540:129::-;13625:35;;;13643:15;13625:35;;;;13864:19:7;;;;13625:35:6;;;;;;;;;13899:12:7;;;13625:35:6;;;13615:46;;;;;13540:129;;14139:277;;;;;;:::i;:::-;;:::i;1608:51::-;;;;;;:::i;:::-;;:::i;3745:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:1;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1665:53:6;;;;;;:::i;:::-;;;;;;;;;;;;;;2736:263;;;:::i;2041:33::-;;;;;;13675:91;13749:10;;13675:91;;2704:102:1;;;:::i;8405:1422:6:-;;;;;;:::i;:::-;;:::i;6933:429:1:-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1959:49:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1959:49:6;;;;;;;;6698:25:7;;;-1:-1:-1;;;;;6759:32:7;;;6754:2;6739:18;;6732:60;6808:18;;;6801:34;6686:2;6671:18;1959:49:6;6496:345:7;2205:26:6;;;;;;;;;3498:797;;;;;;:::i;:::-;;:::i;13772:107::-;13854:18;;13772:107;;13988:145;;;;;;:::i;:::-;;:::i;4313:149:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:1;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;7352:1008:6;;;;;;:::i;:::-;;:::i;4351:591::-;;;;;;:::i;:::-;;:::i;14493:473::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2493:98:1:-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:5;4907:32:1;929:10:5;4923:7:1;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;6076:1233:6:-;6225:10;6209:27;;;;:15;:27;;;;;;6173:16;;6209:32;6201:65;;;;-1:-1:-1;;;6201:65:6;;8361:2:7;6201:65:6;;;8343:21:7;8400:2;8380:18;;;8373:30;-1:-1:-1;;;8419:18:7;;;8412:50;8479:18;;6201:65:6;;;;;;;;;6295:1;6284:8;:12;6276:55;;;;-1:-1:-1;;;6276:55:6;;8710:2:7;6276:55:6;;;8692:21:7;8749:2;8729:18;;;8722:30;8788:32;8768:18;;;8761:60;8838:18;;6276:55:6;8508:354:7;6276:55:6;6430:10;;6389:26;6418:23;;;:11;:23;;;;;6451;;;6484:15;;;:28;;-1:-1:-1;;;;;;6484:28:6;6502:10;6484:28;;;6522:16;;;:27;;;6644:66;6689:11;6644:31;:66::i;:::-;6604:106;;6721:35;6786:20;:27;6759:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6759:64:6;;6721:102;;6927:9;6922:176;6946:20;:27;6942:1;:31;6922:176;;;7018:10;:35;7029:20;7050:1;7029:23;;;;;;;;:::i;:::-;;;;;;;7018:35;;;;;;;;;;;:69;;;;;;;;;;-1:-1:-1;;;;;7018:69:6;6994:18;7013:1;6994:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6994:93:6;;;:21;;;;;;;;;;;:93;6975:3;;6922:176;;;-1:-1:-1;7108:47:6;;;;:26;;;;:47;;;;;:::i;:::-;-1:-1:-1;7198:10:6;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;7282:20:6;;6076:1233;-1:-1:-1;;;;;;6076:1233:6:o;5529:286:1:-;5656:4;929:10:5;5712:38:1;5728:4;929:10:5;5743:6:1;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:1;;5529:286;-1:-1:-1;;;;5529:286:1:o;1437:47:6:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:47:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1437:47:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1437:47:6;;;;;;;;;;:::o;1746:37::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1746:37:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1746:37:6;;;;;;;-1:-1:-1;;1746:37:6;;;:::o;6210:236:1:-;929:10:5;6298:4:1;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:1;;;;;;;;;;6298:4;;929:10:5;6352:66:1;;929:10:5;;6377:27:1;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;4948:1095:6:-;5047:10;5004:19;5026:32;;;:20;:32;;;;;;;;;5098:23;;;:10;:23;;;;;;5150:16;;;;;;;;5140:26;;;;;5132:69;;;;-1:-1:-1;;;5132:69:6;;9603:2:7;5132:69:6;;;9585:21:7;9642:2;9622:18;;;9615:30;9681:32;9661:18;;;9654:60;9731:18;;5132:69:6;9401:354:7;5132:69:6;5228:1;5219:6;:10;;;5211:56;;;;-1:-1:-1;;;5211:56:6;;;;;;;:::i;:::-;5353:9;:20;;;5377:1;5353:25;5349:688;;5417:23;:15;5435:5;5417:23;:::i;:::-;5394:20;;;:46;;;5486:49;;3409:25:7;;;5502:10:6;;5486:49;;3397:2:7;3382:18;5486:49:6;;;;;;;;4994:1049;;4948:1095;:::o;5349:688::-;5715:9;:20;;;5696:15;:39;;5671:122;;;;-1:-1:-1;;;5671:122:6;;10364:2:7;5671:122:6;;;10346:21:7;10403:2;10383:18;;;10376:30;10442:26;10422:18;;;10415:54;10486:18;;5671:122:6;10162:348:7;5671:122:6;5808:16;;;:26;;5828:6;;5808:16;;;:26;;5828:6;;5808:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5848:25;5854:10;5866:6;5848:25;;:5;:25::i;:::-;5940:34;;10870:10:7;10858:23;;10840:42;;5955:10:6;;5940:34;;10828:2:7;10813:18;5940:34:6;10695:193:7;5349:688:6;4994:1049;;4948:1095;:::o;3053:439::-;3145:10;3129:27;;;;:15;:27;;;;;;:32;3121:69;;;;-1:-1:-1;;;3121:69:6;;11095:2:7;3121:69:6;;;11077:21:7;11134:2;11114:18;;;11107:30;11173:26;11153:18;;;11146:54;11217:18;;3121:69:6;10893:348:7;3121:69:6;3223:153;;;;;;;;3246:13;;3223:153;;;3286:10;3223:153;;;;;;;;;;;;;-1:-1:-1;3223:153:6;;;;;;3200:20;;;:5;:20;;;;;;;:176;;;;;;;;;;;-1:-1:-1;;;;;;3200:176:6;-1:-1:-1;;;;;3200:176:6;;;;;;;;;;;3223:153;;3200:20;:176;;;;;;;;:::i;:::-;-1:-1:-1;3200:176:6;;;;;;;;;;;;-1:-1:-1;;3200:176:6;;;;;;;;;;;3417:13;;3387:27;;:12;;:27;;3400:13;;3387:27;:::i;:::-;;;;;;;;;;;;;;:43;3470:13;:15;;;:13;:15;;;:::i;:::-;;;;-1:-1:-1;3456:10:6;3440:27;;;;:15;:27;;;;;:45;-1:-1:-1;3053:439:6:o;14139:277::-;14224:7;14278:1;14264:11;:15;:51;;;;;14297:18;;14283:11;:32;14264:51;14243:118;;;;-1:-1:-1;;;14243:118:6;;14124:2:7;14243:118:6;;;14106:21:7;14163:2;14143:18;;;14136:30;-1:-1:-1;;;14182:18:7;;;14175:50;14242:18;;14243:118:6;13922:344:7;14243:118:6;-1:-1:-1;14378:31:6;;;;:18;:31;;;;;;;14139:277::o;1608:51::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2736:263::-;2369:13:0;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:4;:23;2385:16:0;2361:107;;;;-1:-1:-1;;;2361:107:0;;14473:2:7;2361:107:0;;;14455:21:7;14512:2;14492:18;;;14485:30;14551:34;14531:18;;;14524:62;-1:-1:-1;;;14602:18:7;;;14595:44;14656:19;;2361:107:0;14271:410:7;2361:107:0;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:0;;;;;2525:98;2787:35:6::1;;;;;;;;;;;;;;-1:-1:-1::0;;;2787:35:6::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2787:35:6::1;;::::0;:12:::1;:35::i;:::-;2832:22;2838:10;2850:3;2832:5;:22::i;:::-;2885:1;2864:18;:22:::0;;;2896:13:::1;:17:::0;;;2923:10:::1;:14:::0;2947:13:::1;:17:::0;;-1:-1:-1;;2974:18:6;;;;;2645:66:0;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:0;;;2645:66;2080:637;2736:263:6:o;2704:102:1:-;2760:13;2792:7;2785:14;;;;;:::i;8405:1422:6:-;8460:15;8478:11;;;:4;:11;;;;;8507:6;;:15;;8499:47;;;;-1:-1:-1;;;8499:47:6;;14888:2:7;8499:47:6;;;14870:21:7;14927:2;14907:18;;;14900:30;-1:-1:-1;;;14946:18:7;;;14939:49;15005:18;;8499:47:6;14686:343:7;8499:47:6;8564:15;;;;;;:24;8556:62;;;;-1:-1:-1;;;8556:62:6;;15236:2:7;8556:62:6;;;15218:21:7;15275:2;15255:18;;;15248:30;15314:27;15294:18;;;15287:55;15359:18;;8556:62:6;15034:349:7;8556:62:6;8681:16;8720:6;8715:200;8736:22;;;:29;8732:33;;8715:200;;;8804:3;:22;;8827:1;8804:25;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8804:25:6;8790:10;:39;8786:119;;8863:4;8849:18;;8885:5;;8786:119;8767:3;;8715:200;;;;8946:11;8925:108;;;;-1:-1:-1;;;8925:108:6;;15590:2:7;8925:108:6;;;15572:21:7;15629:2;15609:18;;;15602:30;15668:34;15648:18;;;15641:62;-1:-1:-1;;;15719:18:7;;;15712:48;15777:19;;8925:108:6;15388:414:7;8925:108:6;9090:10;9104:5;9064:37;;;:25;;;:37;;;;;:45;;-1:-1:-1;;9064:45:6;;;9043:120;;-1:-1:-1;;;9043:120:6;;;;;;16009:2:7;15991:21;;;16048:2;16028:18;;;16021:30;16087;16082:2;16067:18;;16060:58;16150:2;16135:18;;15807:352;9495:277:6;9516:22;;;:29;9512:33;;9495:277;;;9570:27;9600:10;:97;9632:20;:47;9653:3;:22;;9676:1;9653:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;9653:25:6;9632:47;;;;;;;;;;;;;;;;9600:97;;;;;;;;;;;;;9737:12;;9600:97;;-1:-1:-1;9715:42:6;;:21;:42::i;:::-;-1:-1:-1;9547:3:6;;9495:277;;;-1:-1:-1;9791:19:6;;9804:5;;9791:19;;;;;8450:1377;;8405:1422;:::o;6933:429:1:-;929:10:5;7026:4:1;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:1;;;;;;;;;;7026:4;;929:10:5;7152:35:1;;;;7144:85;;;;-1:-1:-1;;;7144:85:1;;16546:2:7;7144:85:1;;;16528:21:7;16585:2;16565:18;;;16558:30;16624:34;16604:18;;;16597:62;-1:-1:-1;;;16675:18:7;;;16668:35;16720:19;;7144:85:1;16344:401:7;7144:85:1;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:5;4199:28:1;929:10:5;4216:2:1;4220:6;4199:9;:28::i;3498:797:6:-;3592:17;3610:13;3592:32;;;;;;:::i;:::-;;;;;;;;;;;;;;3628:1;3592:37;3571:133;;;;-1:-1:-1;;;3571:133:6;;16952:2:7;3571:133:6;;;16934:21:7;16991:2;16971:18;;;16964:30;17030:34;17010:18;;;17003:62;-1:-1:-1;;;17081:18:7;;;17074:47;17138:19;;3571:133:6;16750:413:7;3571:133:6;3756:18;;3715:27;3745:30;;;:10;:30;;;;;3785:33;;;3828:26;;;:39;;-1:-1:-1;;;;;;3828:39:6;3857:10;3828:39;;;3877:23;;;:39;3903:13;3877:23;:39;:::i;:::-;-1:-1:-1;3926:18:6;;;:25;;-1:-1:-1;;3926:25:6;;;;;3997:18;;3983:10;3926:25;3962:32;;;:20;:32;;;;;;;:53;;;4025:32;:17;;:32;;4043:13;;4025:32;:::i;:::-;;;;;;;;;;;;;;;;:53;;;;4106:18;;4088:37;;;;:17;:37;;;;:53;4128:13;4088:37;:53;:::i;:::-;-1:-1:-1;4170:18:6;;;4151:38;;;;:18;:38;;;;;;;;;4192:1;4151:42;;4226:18;;4209:48;;4246:10;17314:51:7;;4226:18:6;;4209:48;;17287:18:7;4209:48:6;;;;;;;4268:18;:20;;;:18;:20;;;:::i;:::-;;;;;;3561:734;3498:797;:::o;13988:145::-;14073:7;14099:12;14112:13;14099:27;;;;;;:::i;:::-;;;;;;;;;;;;;;14092:34;;13988:145;;;:::o;7352:1008::-;7457:10;7414:19;7436:32;;;:20;:32;;;;;;;;;7508:23;;;:10;:23;;;;;;7549:18;;;;;;;;;7541:55;;;;-1:-1:-1;;;7541:55:6;;17578:2:7;7541:55:6;;;17560:21:7;17617:2;17597:18;;;17590:30;-1:-1:-1;;;17636:18:7;;;17629:54;17700:18;;7541:55:6;17376:348:7;7541:55:6;7627:18;;;;:11;:18;;;;;:21;:30;;7606:113;;;;-1:-1:-1;;;7606:113:6;;17931:2:7;7606:113:6;;;17913:21:7;17970:2;17950:18;;;17943:30;18009:34;17989:18;;;17982:62;-1:-1:-1;;;18060:18:7;;;18053:34;18104:19;;7606:113:6;17729:400:7;7606:113:6;7730:26;7759:18;;;:11;:18;;;;;;;;7813:26;;;:33;7876:10;7857:30;;:18;;;:30;;;;;:37;;-1:-1:-1;;7857:37:6;7890:4;7857:37;;;;8005:40;;:25;7759:18;8005:16;:25::i;:::-;:40;8001:353;;8061:15;8079:11;;;:4;:11;;;;;8104:14;;;8144:15;;;;;8132:9;;;:27;;-1:-1:-1;;;;;;8132:27:6;-1:-1:-1;;;;;8144:15:6;;;8132:27;;;;;;8188:16;;;;;8173:12;;;:31;8243:26;;;;8218:51;;;;:22;;;8243:26;8218:51;:::i;:::-;-1:-1:-1;8283:17:6;;;:21;;-1:-1:-1;;8283:21:6;;;8303:1;8325:18;;;:11;:18;;;;;8318:25;;;8283:21;8318:25;;;;-1:-1:-1;;;;;;8318:25:6;;;;;;;;;8325:18;8318:25;;;;8303:1;8318:25;:::i;:::-;;;8047:307;8001:353;7404:956;;;;7352:1008;:::o;4351:591::-;4422:1;4413:6;:10;;;4405:56;;;;-1:-1:-1;;;4405:56:6;;;;;;;:::i;:::-;4489:10;3819:7:1;3845:18;;;:9;:18;;;;;;4479:31:6;;;-1:-1:-1;4479:31:6;4471:65;;;;-1:-1:-1;;;4471:65:6;;18336:2:7;4471:65:6;;;18318:21:7;18375:2;18355:18;;;18348:30;-1:-1:-1;;;18394:18:7;;;18387:51;18455:18;;4471:65:6;18134:345:7;4471:65:6;4590:10;4547:19;4569:32;;;:20;:32;;;;;;;4619:16;;;4611:54;;;;-1:-1:-1;;;4611:54:6;;18686:2:7;4611:54:6;;;18668:21:7;18725:2;18705:18;;;18698:30;18764:27;18744:18;;;18737:55;18809:18;;4611:54:6;18484:349:7;4611:54:6;4675:27;4705:23;;;:10;:23;;;;;4746:18;;;;;;;;;4738:55;;;;-1:-1:-1;;;4738:55:6;;17578:2:7;4738:55:6;;;17560:21:7;17617:2;17597:18;;;17590:30;-1:-1:-1;;;17636:18:7;;;17629:54;17700:18;;4738:55:6;17376:348:7;4738:55:6;4804:47;4817:10;4837:4;4844:6;4804:47;;:12;:47::i;:::-;-1:-1:-1;4861:16:6;;;:26;;4881:6;;4861:16;;;:26;;4881:6;;4861:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4916:10;-1:-1:-1;;;;;4903:32:6;;4928:6;4903:32;;;;;10870:10:7;10858:23;;;;10840:42;;10828:2;10813:18;;10695:193;14493:473:6;14578:16;14622:10;;14614:5;:18;14606:52;;;;-1:-1:-1;;;14606:52:6;;19217:2:7;14606:52:6;;;19199:21:7;19256:2;19236:18;;;19229:30;-1:-1:-1;;;19275:18:7;;;19268:51;19336:18;;14606:52:6;19015:345:7;14606:52:6;14668:25;14696:18;;;:11;:18;;;;;14728:9;;:18;;;14724:236;;14762:32;14797:18;;;:11;:18;;;;;;;;:54;;14762:89;;;;;;;;;;;;;;;;;;;14797:54;;14762:89;;;14797:54;14762:89;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14762:89:6;;;;;;;;;;;;;;;;-1:-1:-1;14762:89:6;;14493:473;-1:-1:-1;;;;;;;;14493:473:6:o;14724:236::-;14918:31;;-1:-1:-1;;;14918:31:6;;19567:2:7;14918:31:6;;;19549:21:7;19606:2;19586:18;;;19579:30;-1:-1:-1;;;19625:18:7;;;19618:51;19686:18;;14918:31:6;19365:345:7;14724:236:6;14596:370;14493:473;;;:::o;10460:370:1:-;-1:-1:-1;;;;;10591:19:1;;10583:68;;;;-1:-1:-1;;;10583:68:1;;19917:2:7;10583:68:1;;;19899:21:7;19956:2;19936:18;;;19929:30;19995:34;19975:18;;;19968:62;-1:-1:-1;;;20046:18:7;;;20039:34;20090:19;;10583:68:1;19715:400:7;10583:68:1;-1:-1:-1;;;;;10669:21:1;;10661:68;;;;-1:-1:-1;;;10661:68:1;;20322:2:7;10661:68:1;;;20304:21:7;20361:2;20341:18;;;20334:30;20400:34;20380:18;;;20373:62;-1:-1:-1;;;20451:18:7;;;20444:32;20493:19;;10661:68:1;20120:398:7;10661:68:1;-1:-1:-1;;;;;10740:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;3409:25:7;;;10791:32:1;;3382:18:7;10791:32:1;;;;;;;10460:370;;;:::o;10232:1405:6:-;10388:13;;10324:16;;10388:13;;;;10373:28;;;;;;;:60;;-1:-1:-1;10420:13:6;;;;;;;;;10405:28;;;;;10373:60;10352:164;;;;-1:-1:-1;;;10352:164:6;;20725:2:7;10352:164:6;;;20707:21:7;20764:2;20744:18;;;20737:30;20803:34;20783:18;;;20776:62;20874:27;20854:18;;;20847:55;20919:19;;10352:164:6;20523:421:7;10352:164:6;10561:1;10547:11;:15;;;:52;;;;;10581:18;;10566:11;:33;;;;10547:52;10526:163;;;;;-1:-1:-1;;;10526:163:6;;21151:2:7;10526:163:6;;;21133:21:7;21170:18;;;21163:30;;;;21229:34;21209:18;;;21202:62;21300:34;21280:18;;;21273:62;21352:19;;10526:163:6;20949:428:7;10526:163:6;10700:35;10752:11;10738:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10738:26:6;;10700:64;;10774:21;10815:9;10810:785;10834:11;10830:15;;:1;:15;10810:785;;;10866:13;10897:688;10921:1;10904:13;:18;10897:688;;10942:14;11120:18;;11040:15;11057:10;11069:7;;;;;:::i;:::-;;;11023:54;;;;;;;;;21567:19:7;;;21624:2;21620:15;;;;-1:-1:-1;;21616:53:7;21611:2;21602:12;;21595:75;21695:2;21686:12;;21679:28;21732:2;21723:12;;21382:359;11023:54:6;;;;;;;;;;;;;10988:111;;;;;;10959:158;;:179;;;;:::i;:::-;11161:26;;;;:18;:26;;;;;;10942:196;;-1:-1:-1;11191:1:6;11161:31;11157:414;;11271:35;11293:6;11301:4;11271:21;:35::i;:::-;11352:6;11328:18;11347:1;11328:21;;;;;;;;:::i;:::-;;;;;;;;;;:30;11380:15;;;;:::i;:::-;;;;11157:414;;;11432:2;11424:5;:10;11420:151;;;11458:7;;;;:::i;:::-;;;;11420:151;;;11512:40;;-1:-1:-1;;;11512:40:6;;22162:2:7;11512:40:6;;;22144:21:7;22201:2;22181:18;;;22174:30;22240:32;22220:18;;;22213:60;22290:18;;11512:40:6;21960:354:7;11420:151:6;10924:661;10897:688;;;-1:-1:-1;10847:3:6;;10810:785;;;-1:-1:-1;11612:18:6;;10232:1405;-1:-1:-1;;;10232:1405:6:o;11107:441:1:-;-1:-1:-1;;;;;4428:18:1;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:1;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:1;;22521:2:7;11356:68:1;;;22503:21:7;22560:2;22540:18;;;22533:30;22599:31;22579:18;;;22572:59;22648:18;;11356:68:1;22319:353:7;11356:68:1;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:1;;7943:68;;;;-1:-1:-1;;;7943:68:1;;22879:2:7;7943:68:1;;;22861:21:7;22918:2;22898:18;;;22891:30;22957:34;22937:18;;;22930:62;-1:-1:-1;;;23008:18:7;;;23001:35;23053:19;;7943:68:1;22677:401:7;7943:68:1;-1:-1:-1;;;;;8029:16:1;;8021:64;;;;-1:-1:-1;;;8021:64:1;;23285:2:7;8021:64:1;;;23267:21:7;23324:2;23304:18;;;23297:30;23363:34;23343:18;;;23336:62;-1:-1:-1;;;23414:18:7;;;23407:33;23457:19;;8021:64:1;23083:399:7;8021:64:1;-1:-1:-1;;;;;8167:15:1;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:1;;23689:2:7;8192:72:1;;;23671:21:7;23728:2;23708:18;;;23701:30;23767:34;23747:18;;;23740:62;-1:-1:-1;;;23818:18:7;;;23811:36;23864:19;;8192:72:1;23487:402:7;8192:72:1;-1:-1:-1;;;;;8298:15:1;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:1;8404:4;-1:-1:-1;;;;;8395:26:1;;8414:6;8395:26;;;;3409:25:7;;3397:2;3382:18;;3263:177;8395:26:1;;;;;;;;8432:37;4948:1095:6;8752:389:1;-1:-1:-1;;;;;8835:21:1;;8827:65;;;;-1:-1:-1;;;8827:65:1;;24096:2:7;8827:65:1;;;24078:21:7;24135:2;24115:18;;;24108:30;24174:33;24154:18;;;24147:61;24225:18;;8827:65:1;23894:355:7;8827:65:1;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:1;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:1;;3409:25:7;;;-1:-1:-1;;;;;9038:37:1;;;9055:1;;9038:37;;3397:2:7;3382:18;9038:37:1;;;;;;;9086:48;8752:389;;:::o;2116:147::-;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2218:38:1::1;2241:5;2248:7;2218:22;:38::i;11643:966:6:-:0;11786:1;11772:11;:15;:51;;;;;11805:18;;11791:11;:32;11772:51;11751:117;;;;-1:-1:-1;;;11751:117:6;;24868:2:7;11751:117:6;;;24850:21:7;24907:2;24887:18;;;24880:30;-1:-1:-1;;;24926:18:7;;;24919:49;24985:18;;11751:117:6;24666:343:7;11751:117:6;11933:1;11899:31;;;:18;:31;;;;;;11878:106;;;;-1:-1:-1;;;11878:106:6;;25216:2:7;11878:106:6;;;25198:21:7;25255:2;25235:18;;;25228:30;25294:26;25274:18;;;25267:54;25338:18;;11878:106:6;25014:348:7;11878:106:6;11999:8;11995:608;;;12099:31;;;;:18;:31;;;;;;12134:1;12099:36;12095:203;;-1:-1:-1;12155:31:6;;;;:18;:31;;;;;12189:1;12155:35;;8752:389:1:o;12095:203:6:-;12229:54;;-1:-1:-1;;;12229:54:6;;25569:2:7;12229:54:6;;;25551:21:7;25608:2;25588:18;;;25581:30;25647:34;25627:18;;;25620:62;-1:-1:-1;;;25698:18:7;;;25691:42;25750:19;;12229:54:6;25367:408:7;11995:608:6;12408:31;;;;:18;:31;;;;;;12443:1;12408:36;12404:189;;-1:-1:-1;12464:31:6;;;;:18;:31;;;;;12498:1;12464:35;;8752:389:1:o;12404:189:6:-;12538:40;;-1:-1:-1;;;12538:40:6;;25982:2:7;12538:40:6;;;25964:21:7;26021:2;26001:18;;;25994:30;26060:32;26040:18;;;26033:60;26110:18;;12538:40:6;25780:354:7;9833:349:6;9924:7;;;9970:183;9994:26;;;:33;9990:37;;9970:183;;;10052:7;:18;;:49;10071:7;:26;;10098:1;10071:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;10071:29:6;10052:49;;;;;;;;;;;;;;;10048:95;;;10121:7;;;;:::i;:::-;;;;10048:95;10029:3;;9970:183;;;-1:-1:-1;10170:5:6;9833:349;-1:-1:-1;;9833:349:6:o;2269:159:1:-;2952:13:0;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:0;;;;;;;:::i;:::-;2381:5:1::1;:13;2389:5:::0;2381;:13:::1;:::i;:::-;-1:-1:-1::0;2404:7:1::1;:17;2414:7:::0;2404;:17:::1;:::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:250:7;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:7;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:7;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:7:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;:::-;706:53;545:220;-1:-1:-1;;;545:220:7:o;959:173::-;1027:20;;-1:-1:-1;;;;;1076:31:7;;1066:42;;1056:70;;1122:1;1119;1112:12;1056:70;959:173;;;:::o;1137:254::-;1205:6;1213;1266:2;1254:9;1245:7;1241:23;1237:32;1234:52;;;1282:1;1279;1272:12;1234:52;1305:29;1324:9;1305:29;:::i;:::-;1295:39;1381:2;1366:18;;;;1353:32;;-1:-1:-1;;;1137:254:7:o;1588:337::-;1654:6;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1770:9;1757:23;1820:4;1813:5;1809:16;1802:5;1799:27;1789:55;;1840:1;1837;1830:12;1930:632;2101:2;2153:21;;;2223:13;;2126:18;;;2245:22;;;2072:4;;2101:2;2324:15;;;;2298:2;2283:18;;;2072:4;2367:169;2381:6;2378:1;2375:13;2367:169;;;2442:13;;2430:26;;2511:15;;;;2476:12;;;;2403:1;2396:9;2367:169;;;-1:-1:-1;2553:3:7;;1930:632;-1:-1:-1;;;;;;1930:632:7:o;2567:180::-;2626:6;2679:2;2667:9;2658:7;2654:23;2650:32;2647:52;;;2695:1;2692;2685:12;2647:52;-1:-1:-1;2718:23:7;;2567:180;-1:-1:-1;2567:180:7:o;3445:127::-;3506:10;3501:3;3497:20;3494:1;3487:31;3537:4;3534:1;3527:15;3561:4;3558:1;3551:15;3577:922;3646:6;3699:2;3687:9;3678:7;3674:23;3670:32;3667:52;;;3715:1;3712;3705:12;3667:52;3755:9;3742:23;3784:18;3825:2;3817:6;3814:14;3811:34;;;3841:1;3838;3831:12;3811:34;3879:6;3868:9;3864:22;3854:32;;3924:7;3917:4;3913:2;3909:13;3905:27;3895:55;;3946:1;3943;3936:12;3895:55;3982:2;3969:16;4004:2;4000;3997:10;3994:36;;;4010:18;;:::i;:::-;4085:2;4079:9;4053:2;4139:13;;-1:-1:-1;;4135:22:7;;;4159:2;4131:31;4127:40;4115:53;;;4183:18;;;4203:22;;;4180:46;4177:72;;;4229:18;;:::i;:::-;4269:10;4265:2;4258:22;4304:2;4296:6;4289:18;4344:7;4339:2;4334;4330;4326:11;4322:20;4319:33;4316:53;;;4365:1;4362;4355:12;4316:53;4421:2;4416;4412;4408:11;4403:2;4395:6;4391:15;4378:46;4466:1;4444:15;;;4461:2;4440:24;4433:35;;;;-1:-1:-1;4448:6:7;3577:922;-1:-1:-1;;;;;3577:922:7:o;4504:328::-;4581:6;4589;4597;4650:2;4638:9;4629:7;4625:23;4621:32;4618:52;;;4666:1;4663;4656:12;4618:52;4689:29;4708:9;4689:29;:::i;:::-;4679:39;;4737:38;4771:2;4760:9;4756:18;4737:38;:::i;:::-;4727:48;;4822:2;4811:9;4807:18;4794:32;4784:42;;4504:328;;;;;:::o;4837:186::-;4896:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:52;;;4965:1;4962;4955:12;4917:52;4988:29;5007:9;4988:29;:::i;5028:709::-;5315:25;;;-1:-1:-1;;;;;5376:32:7;;5371:2;5356:18;;5349:60;5445:3;5440:2;5425:18;;5418:31;;;-1:-1:-1;;5466:46:7;;5492:19;;5484:6;5466:46;:::i;:::-;5458:54;;5560:10;5552:6;5548:23;5543:2;5532:9;5528:18;5521:51;5609:6;5603:3;5592:9;5588:19;5581:35;5665:4;5657:6;5653:17;5647:3;5636:9;5632:19;5625:46;5722:6;5715:14;5708:22;5702:3;5691:9;5687:19;5680:51;5028:709;;;;;;;;;;:::o;5742:468::-;5953:25;;;-1:-1:-1;;;;;6014:32:7;;6009:2;5994:18;;5987:60;6083:3;6078:2;6063:18;;6056:31;;;-1:-1:-1;;6104:46:7;;6130:19;;6122:6;6104:46;:::i;:::-;6096:54;;6198:4;6190:6;6186:17;6181:2;6170:9;6166:18;6159:45;5742:468;;;;;;;:::o;6215:276::-;6273:6;6326:2;6314:9;6305:7;6301:23;6297:32;6294:52;;;6342:1;6339;6332:12;6294:52;6381:9;6368:23;6431:10;6424:5;6420:22;6413:5;6410:33;6400:61;;6457:1;6454;6447:12;6846:260;6914:6;6922;6975:2;6963:9;6954:7;6950:23;6946:32;6943:52;;;6991:1;6988;6981:12;6943:52;7014:29;7033:9;7014:29;:::i;:::-;7004:39;;7062:38;7096:2;7085:9;7081:18;7062:38;:::i;:::-;7052:48;;6846:260;;;;;:::o;7111:658::-;7282:2;7334:21;;;7404:13;;7307:18;;;7426:22;;;7253:4;;7282:2;7505:15;;;;7479:2;7464:18;;;7253:4;7548:195;7562:6;7559:1;7556:13;7548:195;;;7627:13;;-1:-1:-1;;;;;7623:39:7;7611:52;;7718:15;;;;7683:12;;;;7659:1;7577:9;7548:195;;7774:380;7853:1;7849:12;;;;7896;;;7917:61;;7971:4;7963:6;7959:17;7949:27;;7917:61;8024:2;8016:6;8013:14;7993:18;7990:38;7987:161;;8070:10;8065:3;8061:20;8058:1;8051:31;8105:4;8102:1;8095:15;8133:4;8130:1;8123:15;8867:127;8928:10;8923:3;8919:20;8916:1;8909:31;8959:4;8956:1;8949:15;8983:4;8980:1;8973:15;8999:127;9060:10;9055:3;9051:20;9048:1;9041:31;9091:4;9088:1;9081:15;9115:4;9112:1;9105:15;9131:135;9170:3;9191:17;;;9188:43;;9211:18;;:::i;:::-;-1:-1:-1;9258:1:7;9247:13;;9131:135::o;9271:125::-;9336:9;;;9357:10;;;9354:36;;;9370:18;;:::i;9760:397::-;9962:2;9944:21;;;10001:2;9981:18;;;9974:30;10040:34;10035:2;10020:18;;10013:62;-1:-1:-1;;;10106:2:7;10091:18;;10084:31;10147:3;10132:19;;9760:397::o;10515:175::-;10583:10;10626;;;10614;;;10610:27;;10649:12;;;10646:38;;;10664:18;;:::i;11372:543::-;11474:2;11469:3;11466:11;11463:446;;;11510:1;11534:5;11531:1;11524:16;11578:4;11575:1;11565:18;11648:2;11636:10;11632:19;11629:1;11625:27;11619:4;11615:38;11684:4;11672:10;11669:20;11666:47;;;-1:-1:-1;11707:4:7;11666:47;11762:2;11757:3;11753:12;11750:1;11746:20;11740:4;11736:31;11726:41;;11817:82;11835:2;11828:5;11825:13;11817:82;;;11880:17;;;11861:1;11850:13;11817:82;;;11821:3;;;11372:543;;;:::o;12091:1345::-;12217:3;12211:10;12244:18;12236:6;12233:30;12230:56;;;12266:18;;:::i;:::-;12295:97;12385:6;12345:38;12377:4;12371:11;12345:38;:::i;:::-;12339:4;12295:97;:::i;:::-;12447:4;;12504:2;12493:14;;12521:1;12516:663;;;;13223:1;13240:6;13237:89;;;-1:-1:-1;13292:19:7;;;13286:26;13237:89;-1:-1:-1;;12048:1:7;12044:11;;;12040:24;12036:29;12026:40;12072:1;12068:11;;;12023:57;13339:81;;12486:944;;12516:663;11319:1;11312:14;;;11356:4;11343:18;;-1:-1:-1;;12552:20:7;;;12670:236;12684:7;12681:1;12678:14;12670:236;;;12773:19;;;12767:26;12752:42;;12865:27;;;;12833:1;12821:14;;;;12700:19;;12670:236;;;12674:3;12934:6;12925:7;12922:19;12919:201;;;12995:19;;;12989:26;-1:-1:-1;;13078:1:7;13074:14;;;13090:3;13070:24;13066:37;13062:42;13047:58;13032:74;;12919:201;-1:-1:-1;;;;;13166:1:7;13150:14;;;13146:22;13133:36;;-1:-1:-1;12091:1345:7:o;13441:289::-;13572:3;13610:6;13604:13;13626:66;13685:6;13680:3;13673:4;13665:6;13661:17;13626:66;:::i;:::-;13708:16;;;;;13441:289;-1:-1:-1;;13441:289:7:o;18838:172::-;18905:10;18935;;;18947;;;18931:27;;18970:11;;;18967:37;;;18984:18;;:::i;21746:209::-;21778:1;21804;21794:132;;21848:10;21843:3;21839:20;21836:1;21829:31;21883:4;21880:1;21873:15;21911:4;21908:1;21901:15;21794:132;-1:-1:-1;21940:9:7;;21746:209::o;24254:407::-;24456:2;24438:21;;;24495:2;24475:18;;;24468:30;24534:34;24529:2;24514:18;;24507:62;-1:-1:-1;;;24600:2:7;24585:18;;24578:41;24651:3;24636:19;;24254:407::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "lockTokens(uint32)": {
        "notice": "Validator Token Locking and Unlocking ///"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    217,
    14968
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EC01E4D GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD56C907D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD56C907D EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xDB1EF71F EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xE061FE02 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xEC81560F EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xF13FF544 EQ PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xBB9642ED EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xC5AB2241 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xCF6ACD47 EQ PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8129FC1C GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x8F029D5E EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x911AB494 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xA1C0D32F EQ PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EC01E4D EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0x616D7173 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x62AC03E9 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x751DF890 EQ PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x44C6957B EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x4B759088 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x50355D76 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x507FFBA5 EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x32412BAF EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x32D40160 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x35AA2E44 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x2130A16F EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x27764547 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x2FABA6AE EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8AC5256 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xC97CF81 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x180AEDF3 EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x288 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x254F JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x2573 JUMP JUMPDEST PUSH2 0x32A PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x6 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x26D JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x363 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x25E6 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x67 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E6 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x6C DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x44B PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x481 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x2787 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x481 PUSH2 0x4BA CALLDATASIZE PUSH1 0x4 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x363 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x260 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x543 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x481 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x363 PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x481 PUSH2 0x584 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x109B JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x26D JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH2 0x288 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x481 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x6F SLOAD PUSH2 0x363 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x653 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x481 PUSH2 0x68C CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x155C JUMP JUMPDEST PUSH2 0x481 PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x2787 JUMP JUMPDEST PUSH2 0x171B JUMP JUMPDEST PUSH2 0x6B7 PUSH2 0x6B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x18F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x6D3 SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FF SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x721 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x764 DUP2 DUP6 DUP6 PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B9103737BA103932B3B4B9BA32B932B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4361706163697479206D7573742062652067726561746572207A65726F2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP5 SWAP1 SSTORE PUSH2 0x854 DUP6 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x89B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x65 PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8C0 JUMPI PUSH2 0x8C0 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8FF JUMPI PUSH2 0x8FF PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x8A1 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x935 SWAP1 PUSH1 0x3 DUP6 ADD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x23CB JUMP JUMPDEST POP PUSH1 0x71 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x946 DUP4 PUSH2 0x2881 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x963 DUP6 DUP3 DUP6 PUSH2 0x1DF5 JUMP JUMPDEST PUSH2 0x96E DUP6 DUP6 DUP6 PUSH2 0x1E87 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH2 0x9AB SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D7 SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH2 0xA87 SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x764 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xB4D SWAP1 DUP8 SWAP1 PUSH2 0x289A JUMP JUMPDEST PUSH2 0x1A0B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x65 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP5 AND GT ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0x28AD JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xC4E JUMPI PUSH2 0xC0C TIMESTAMP PUSH2 0xC4E0 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x4 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH32 0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD DUP5 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xCBF SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x28EE JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xCED CALLER DUP5 PUSH4 0xFFFFFFFF AND PUSH2 0x2055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP5 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 PUSH1 0x20 ADD PUSH2 0xC41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C726561647920726567697374657265642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x70 SLOAD DUP1 DUP3 MSTORE CALLER PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP4 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE SWAP4 DUP5 MSTORE PUSH1 0x6A SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xDF6 SWAP1 DUP3 PUSH2 0x295B JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x70 SLOAD PUSH1 0x40 MLOAD PUSH1 0x6C SWAP1 PUSH2 0xE28 SWAP1 DUP5 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE PUSH1 0x70 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xE48 DUP4 PUSH2 0x2881 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT DUP1 ISZERO PUSH2 0xE71 JUMPI POP PUSH1 0x6F SLOAD DUP3 LT JUMPDEST PUSH2 0xEB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642056616C696461746F72496421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEE0 SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF0C SWAP1 PUSH2 0x2821 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF7C JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF80 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0xFE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x104E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x54656E736F724C696E6B PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x544C494E4B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x1059 CALLER PUSH1 0x64 PUSH2 0x2055 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6F DUP2 SWAP1 SSTORE PUSH1 0x70 DUP2 SWAP1 SSTORE PUSH1 0x71 SSTORE PUSH1 0x72 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xC02 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1089 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x6D3 SWAP1 PUSH2 0x2821 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 EQ PUSH2 0x10EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2537B1103237B2B9903737BA1032BC34B9BA17 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4A6F6220697320616C726561647920636F6D706C657465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1195 JUMPI DUP3 PUSH1 0x3 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1169 JUMPI PUSH2 0x1169 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x118D JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1148 JUMP JUMPDEST POP DUP1 PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792076616C696461746F7273206F662074686973206A6F62206D617920 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x31B0B636103A3434B990333AB731BA34B7B7 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220616C726561647920636F6E6669726D65642E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP8 PUSH1 0x3 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x128C JUMPI PUSH2 0x128C PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 SLOAD DUP5 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 POP PUSH2 0x12CF SWAP2 PUSH2 0x2166 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1261 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x96E DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x764 DUP2 DUP6 DUP6 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x13B9 SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220776974682074686973207075626C69634B6579486173 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x341030B63932B0B23C9032BC34B9BA3997 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x6F SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD PUSH2 0x1467 DUP4 DUP3 PUSH2 0x295B JUMP JUMPDEST POP PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x6F SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH1 0x67 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x6F SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 SWAP1 SWAP2 MSTORE KECCAK256 PUSH2 0x14CC DUP4 DUP3 PUSH2 0x295B JUMP JUMPDEST POP PUSH1 0x6F DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE SWAP2 SLOAD SWAP1 MLOAD CALLER DUP2 MSTORE SWAP1 SWAP2 PUSH32 0xC278ABAF901EE66C9C5AD86C559C69D95B3121AB80FFA1BB4A0097A9B9AEE6A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x6F DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x152B DUP4 PUSH2 0x2881 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1546 SWAP2 SWAP1 PUSH2 0x2A1B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x65 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4A6F62206372656174696F6E207265717565737420646F6573206E6F74206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B9BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD CALLER DUP6 MSTORE PUSH1 0x4 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xFF DUP2 AND PUSH2 0x1671 DUP4 PUSH2 0x2315 JUMP JUMPDEST SUB PUSH2 0x1714 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP5 ADD DUP1 SLOAD PUSH2 0x16CB SWAP3 DUP5 ADD SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST POP PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0x1710 PUSH1 0x3 DUP4 ADD DUP3 PUSH2 0x2470 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0x28AD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 AND GT ISZERO PUSH2 0x179E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x1871 CALLER ADDRESS DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x955 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD DUP1 SLOAD DUP5 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x188F SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2A37 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP5 PUSH1 0x40 MLOAD PUSH2 0xC41 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x71 SLOAD DUP3 LT PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081A9BD894995C5D595CDD081251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 SUB PUSH2 0x19C5 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x19B7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1999 JUMPI JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4A6F6252657175657374206E6F7420666F756E6421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1ACE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND LT DUP1 ISZERO SWAP1 PUSH2 0x1B59 JUMPI POP PUSH1 0x72 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND GT ISZERO JUMPDEST PUSH2 0x1BCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E56616C696461746F7273206D757374206265206265747765656E206D696E56 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C696461746F7220616E64206D617856616C696461746F7200000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x1BE3 JUMPI POP PUSH1 0x6F SLOAD DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x1C57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x4E6F7420656E6F75676820617661696C61626C652076616C696461746F727320 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x666F72206A6F622C20706C656173652074727920616761696E206C617465722E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C75 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C9E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x1DEC JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP4 SUB PUSH2 0x1DE3 JUMPI PUSH1 0x0 PUSH1 0x6F SLOAD TIMESTAMP CALLER DUP5 DUP1 PUSH2 0x1CCC SWAP1 PUSH2 0x2881 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D03 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1D26 SWAP2 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 SUB PUSH2 0x1D7A JUMPI PUSH2 0x1D4A DUP2 PUSH1 0x1 PUSH2 0x2166 JUMP JUMPDEST DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1D5D JUMPI PUSH2 0x1D5D PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP4 PUSH2 0x1D72 DUP2 PUSH2 0x2881 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x32 DUP3 LT ISZERO PUSH2 0x1D95 JUMPI DUP2 PUSH2 0x1D8D DUP2 PUSH2 0x2881 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782076616C696461746F7220726571756573747320726561636865640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST POP PUSH2 0x1CB3 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1CA5 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1E81 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1E74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x1E81 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1A0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1FC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1FFC SWAP1 DUP5 SWAP1 PUSH2 0x289A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2048 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20BD SWAP2 SWAP1 PUSH2 0x289A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x20EA SWAP1 DUP5 SWAP1 PUSH2 0x289A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x215C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x2131 DUP3 DUP3 PUSH2 0x238B JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x2177 JUMPI POP PUSH1 0x6F SLOAD DUP3 LT JUMPDEST PUSH2 0x21B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A590815985B1A59185D1BDC9259 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2214 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206973206E6F74206F6E6C696E652E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22A2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SUB PUSH2 0x2245 JUMPI POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206265696E672061637469766174656420697320616C72 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x656164792061637469766521 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SUB PUSH2 0x22CD JUMPI POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220697320616C726561647920696E616374697665210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x2384 JUMPI DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP6 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2341 JUMPI PUSH2 0x2341 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x237C JUMPI DUP2 PUSH2 0x2378 DUP2 PUSH2 0x2881 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x231A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP1 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x23BE DUP4 DUP3 PUSH2 0x295B JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xD25 DUP3 DUP3 PUSH2 0x295B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2420 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2420 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x23EB JUMP JUMPDEST POP PUSH2 0x242C SWAP3 SWAP2 POP PUSH2 0x248A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2420 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2420 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2455 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1089 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x242C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x248B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24A2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x24DB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x249F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2502 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2541 DUP4 PUSH2 0x2509 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25AB JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x258F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2636 JUMPI PUSH2 0x2636 PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x265E JUMPI PUSH2 0x265E PUSH2 0x25D0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B5 DUP5 PUSH2 0x2509 JUMP JUMPDEST SWAP3 POP PUSH2 0x26C3 PUSH1 0x20 DUP6 ADD PUSH2 0x2509 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2502 DUP3 PUSH2 0x2509 JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2718 SWAP1 DUP4 ADD DUP9 PUSH2 0x24C3 JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP5 AND PUSH1 0xA0 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2773 SWAP1 DUP4 ADD DUP6 PUSH2 0x24C3 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27C9 DUP4 PUSH2 0x2509 JUMP JUMPDEST SWAP2 POP PUSH2 0x27D7 PUSH1 0x20 DUP5 ADD PUSH2 0x2509 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25AB JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x27FC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2835 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A05 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2893 JUMPI PUSH2 0x2893 PUSH2 0x286B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x76A JUMPI PUSH2 0x76A PUSH2 0x286B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2384 JUMPI PUSH2 0x2384 PUSH2 0x286B JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2934 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2953 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2940 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2975 JUMPI PUSH2 0x2975 PUSH2 0x25D0 JUMP JUMPDEST PUSH2 0x2989 DUP2 PUSH2 0x2983 DUP5 SLOAD PUSH2 0x2821 JUMP JUMPDEST DUP5 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29BE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x29A6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29ED JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x29CE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2A0B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2A2D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x249F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2384 JUMPI PUSH2 0x2384 PUSH2 0x286B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xD7 0xDC CODESIZE 0xBA PUSH14 0x902FACC3655C023B972105CE93FF 0x4F 0xBB STATICCALL 0xE5 0x2E 0x29 0xE4 SWAP5 0x2C JUMPDEST 0xEA TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x253"
    },
    "25": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5EC01E4D"
    },
    "38": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146"
    },
    "42": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD56C907D"
    },
    "60": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD56C907D"
    },
    "71": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62A"
    },
    "75": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDB1EF71F"
    },
    "82": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x632"
    },
    "86": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x645"
    },
    "97": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE061FE02"
    },
    "104": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67E"
    },
    "108": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEC81560F"
    },
    "115": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "116": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x691"
    },
    "119": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF13FF544"
    },
    "126": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "127": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A4"
    },
    "130": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "131": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "142": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x589"
    },
    "146": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59C"
    },
    "157": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBB9642ED"
    },
    "164": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5AF"
    },
    "168": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC5AB2241"
    },
    "175": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60A"
    },
    "179": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCF6ACD47"
    },
    "186": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "187": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x617"
    },
    "190": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "191": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "194": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8129FC1C"
    },
    "202": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A"
    },
    "206": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8129FC1C"
    },
    "213": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "214": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x555"
    },
    "217": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "218": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8F029D5E"
    },
    "224": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "225": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55D"
    },
    "228": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "229": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x911AB494"
    },
    "235": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "236": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x566"
    },
    "239": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "240": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "246": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "247": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x56E"
    },
    "250": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "251": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA1C0D32F"
    },
    "257": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "258": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x576"
    },
    "261": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "262": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "265": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "266": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "267": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "268": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5EC01E4D"
    },
    "273": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "274": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BF"
    },
    "277": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x616D7173"
    },
    "284": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "285": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E6"
    },
    "288": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "289": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "290": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x62AC03E9"
    },
    "295": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "296": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F9"
    },
    "299": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "300": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "306": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "307": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50C"
    },
    "310": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "311": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "312": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x751DF890"
    },
    "317": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x535"
    },
    "321": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "324": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "325": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "326": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "327": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "328": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "333": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D4"
    },
    "337": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "338": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "339": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "344": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x198"
    },
    "348": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "349": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "350": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "355": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "356": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45B"
    },
    "359": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "360": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x44C6957B"
    },
    "366": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "367": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46E"
    },
    "370": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "371": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "372": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4B759088"
    },
    "377": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "378": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x483"
    },
    "381": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "382": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "383": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x50355D76"
    },
    "388": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "389": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A3"
    },
    "392": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "393": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "394": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x507FFBA5"
    },
    "399": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "400": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AC"
    },
    "403": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "404": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "406": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "407": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "408": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "409": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "410": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "415": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "416": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D8"
    },
    "419": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "420": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "421": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x32412BAF"
    },
    "426": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "427": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DF"
    },
    "430": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "431": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "432": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x32D40160"
    },
    "437": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "438": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E7"
    },
    "441": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "442": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "443": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x35AA2E44"
    },
    "448": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "449": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x412"
    },
    "452": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "453": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "454": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x365B98B2"
    },
    "459": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "460": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "463": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "464": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "466": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "467": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "468": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "469": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "470": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "475": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "GT",
      "path": "6"
    },
    "476": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "479": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "480": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "481": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "486": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "487": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35F"
    },
    "490": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "491": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "492": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2130A16F"
    },
    "497": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "498": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x371"
    },
    "501": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "502": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "503": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "508": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "509": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x39C"
    },
    "512": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "513": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "514": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x27764547"
    },
    "519": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "520": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AF"
    },
    "523": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "524": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "525": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2FABA6AE"
    },
    "530": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "531": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CF"
    },
    "534": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "535": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "537": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "538": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "539": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "540": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "541": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "546": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "547": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258"
    },
    "550": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "551": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "552": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8AC5256"
    },
    "557": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "558": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x276"
    },
    "561": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "562": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "563": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "568": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "569": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29A"
    },
    "572": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "573": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "574": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC97CF81"
    },
    "579": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "580": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BD"
    },
    "583": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "584": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "585": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x180AEDF3"
    },
    "590": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "EQ",
      "path": "6"
    },
    "591": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DD"
    },
    "594": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "595": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "596": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "598": {
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "599": {
      "first_revert": true,
      "fn": null,
      "offset": [
        217,
        14968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "604": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C4"
    },
    "607": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "608": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "609": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "616": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "617": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24EF"
    },
    "620": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "621": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "622": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "625": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "626": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "627": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "1"
    },
    "628": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "629": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "1"
    },
    "630": {
      "offset": [
        2237,
        2263
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "631": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "633": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "634": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x288"
    },
    "637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "638": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "641": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "642": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "DIV",
      "path": "6"
    },
    "643": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "645": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "AND",
      "path": "6"
    },
    "646": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "DUP2",
      "path": "6"
    },
    "647": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "JUMP",
      "path": "6"
    },
    "648": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "649": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "651": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2237,
        2263
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "654": {
      "op": "SWAP1"
    },
    "655": {
      "op": "SWAP2"
    },
    "656": {
      "op": "AND"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "offset": [
        2237,
        2263
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "665": {
      "op": "JUMP"
    },
    "666": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "667": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AD"
    },
    "670": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A8"
    },
    "673": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "674": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "676": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2525"
    },
    "679": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "680": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "681": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x756"
    },
    "684": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "685": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "686": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "688": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "689": {
      "op": "SWAP1"
    },
    "690": {
      "op": "ISZERO"
    },
    "691": {
      "op": "ISZERO"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "MSTORE"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "696": {
      "op": "ADD"
    },
    "697": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "700": {
      "op": "JUMP"
    },
    "701": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "702": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D0"
    },
    "705": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CB"
    },
    "708": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "709": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "711": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x254F"
    },
    "714": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "715": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "716": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x770"
    },
    "719": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "720": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "721": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "723": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "724": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "727": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "728": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "729": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2573"
    },
    "732": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "733": {
      "offset": [
        1918,
        1953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "734": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32A"
    },
    "737": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EB"
    },
    "740": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "741": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "743": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "746": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        1918,
        1953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "747": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "748": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6D"
    },
    "750": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "752": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "753": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "755": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "756": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP2",
      "path": "6"
    },
    "757": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "758": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "760": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "761": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "762": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP1",
      "path": "6"
    },
    "763": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "764": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "766": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP3",
      "path": "6"
    },
    "767": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "ADD",
      "path": "6"
    },
    "768": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "769": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "771": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP4",
      "path": "6"
    },
    "772": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "ADD",
      "path": "6"
    },
    "773": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "774": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "776": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP5",
      "path": "6"
    },
    "777": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "ADD",
      "path": "6"
    },
    "778": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "779": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "781": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "782": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "783": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "ADD",
      "path": "6"
    },
    "784": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "785": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "786": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "796": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "797": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "AND",
      "path": "6"
    },
    "798": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "799": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "800": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "801": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "803": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "804": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP2",
      "path": "6"
    },
    "805": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "AND",
      "path": "6"
    },
    "806": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "807": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "AND",
      "path": "6"
    },
    "808": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP6",
      "path": "6"
    },
    "809": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "810": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "811": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "813": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "DUP1",
      "path": "6"
    },
    "814": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        1918,
        1953
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "815": {
      "op": "SWAP6"
    },
    "816": {
      "op": "DUP7"
    },
    "817": {
      "op": "MSTORE"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "op": "SUB"
    },
    "826": {
      "op": "SWAP1"
    },
    "827": {
      "op": "SWAP5"
    },
    "828": {
      "op": "AND"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "831": {
      "op": "DUP7"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "op": "SWAP3"
    },
    "835": {
      "op": "DUP5"
    },
    "836": {
      "op": "ADD"
    },
    "837": {
      "op": "SWAP2"
    },
    "838": {
      "op": "SWAP1"
    },
    "839": {
      "op": "SWAP2"
    },
    "840": {
      "op": "MSTORE"
    },
    "841": {
      "op": "ISZERO"
    },
    "842": {
      "op": "ISZERO"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "845": {
      "op": "DUP4"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "850": {
      "op": "AND"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "853": {
      "op": "DUP3"
    },
    "854": {
      "op": "ADD"
    },
    "855": {
      "op": "MSTORE"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "858": {
      "op": "ADD"
    },
    "859": {
      "offset": [
        1918,
        1953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "862": {
      "op": "JUMP"
    },
    "863": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x35"
    },
    "866": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "867": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "868": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "870": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "871": {
      "op": "SWAP1"
    },
    "872": {
      "op": "DUP2"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "880": {
      "op": "JUMP"
    },
    "881": {
      "offset": [
        1551,
        1602
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "882": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "885": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37F"
    },
    "888": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "889": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "891": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25E6"
    },
    "894": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "i",
      "offset": [
        1551,
        1602
      ],
      "op": "JUMP",
      "path": "6"
    },
    "895": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "896": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP1",
      "path": "6"
    },
    "897": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "898": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "900": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP2",
      "path": "6"
    },
    "901": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP4",
      "path": "6"
    },
    "902": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "ADD",
      "path": "6"
    },
    "903": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP2",
      "path": "6"
    },
    "904": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "ADD",
      "path": "6"
    },
    "905": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP1",
      "path": "6"
    },
    "906": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "907": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "909": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP3",
      "path": "6"
    },
    "910": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "911": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "912": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP3",
      "path": "6"
    },
    "913": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "ADD",
      "path": "6"
    },
    "914": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "915": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "916": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "917": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "ADD",
      "path": "6"
    },
    "918": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "919": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "920": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "921": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "922": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "DUP2",
      "path": "6"
    },
    "923": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        1551,
        1602
      ],
      "op": "JUMP",
      "path": "6"
    },
    "924": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "925": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AD"
    },
    "928": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AA"
    },
    "931": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "932": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "934": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2697"
    },
    "937": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "938": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "939": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x955"
    },
    "942": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "943": {
      "offset": [
        1490,
        1545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "944": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "947": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BD"
    },
    "950": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "951": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "953": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D3"
    },
    "956": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1490,
        1545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "957": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "958": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "960": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "962": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "963": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "966": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "DUP2",
      "path": "6"
    },
    "967": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "968": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "970": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "971": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "972": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "973": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "DUP2",
      "path": "6"
    },
    "974": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1490,
        1545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "975": {
      "offset": [
        2080,
        2108
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "976": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2080,
        2108
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "979": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2080,
        2108
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "981": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2080,
        2108
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "982": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2080,
        2108
      ],
      "op": "DUP2",
      "path": "6"
    },
    "983": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        2080,
        2108
      ],
      "op": "JUMP",
      "path": "6"
    },
    "984": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "985": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "987": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x288"
    },
    "990": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMP",
      "path": "1"
    },
    "991": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        13885,
        13982
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "992": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        13962,
        13975
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x70"
    },
    "994": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        13962,
        13975
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "995": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        13885,
        13982
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "998": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        13885,
        13982
      ],
      "op": "JUMP",
      "path": "6"
    },
    "999": {
      "offset": [
        1845,
        1891
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1000": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1003": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F5"
    },
    "1006": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1007": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1009": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25E6"
    },
    "1012": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1845,
        1891
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1013": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1014": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1015": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1016": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1018": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1019": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1020": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "ADD",
      "path": "6"
    },
    "1021": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1022": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "ADD",
      "path": "6"
    },
    "1023": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1024": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1025": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "1027": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1028": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1029": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1030": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1031": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "ADD",
      "path": "6"
    },
    "1032": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1033": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1034": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1035": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "ADD",
      "path": "6"
    },
    "1036": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1037": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1038": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1039": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1040": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1041": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1845,
        1891
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1042": {
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1043": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x425"
    },
    "1046": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x420"
    },
    "1049": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1050": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1052": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1055": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1056": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1057": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x979"
    },
    "1060": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1061": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1062": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1064": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1065": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "1068": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1069": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1070": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1071": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1072": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1073": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1074": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1075": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1076": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26EE"
    },
    "1079": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1080": {
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1081": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44B"
    },
    "1084": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x446"
    },
    "1087": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1088": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1090": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1093": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1094": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1095": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA55"
    },
    "1098": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1099": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1100": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1102": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1103": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "1106": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1107": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1108": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1109": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1110": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1111": {
      "fn": "SmartNodes.getUserIdCounter",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2749"
    },
    "1114": {
      "fn": "SmartNodes.getUserIdCounter",
      "jump": "i",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1115": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1116": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AD"
    },
    "1119": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x469"
    },
    "1122": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1123": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1125": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2525"
    },
    "1128": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1129": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1130": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB13"
    },
    "1133": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1134": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1135": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1138": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47C"
    },
    "1141": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1142": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1144": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2787"
    },
    "1147": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1148": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1149": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB52"
    },
    "1152": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1153": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1154": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "STOP",
      "path": "6"
    },
    "1155": {
      "offset": [
        1789,
        1839
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1156": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1159": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x491"
    },
    "1162": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1163": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1165": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D3"
    },
    "1168": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        1789,
        1839
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1169": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1170": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "1172": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1174": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1175": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1177": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1178": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1179": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1180": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1182": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1183": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1184": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1185": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1186": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        1789,
        1839
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1187": {
      "offset": [
        2114,
        2139
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1188": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2114,
        2139
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1191": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2114,
        2139
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "1193": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2114,
        2139
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1194": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2114,
        2139
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1195": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        2114,
        2139
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1196": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1197": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1200": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BA"
    },
    "1203": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1204": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1206": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25E6"
    },
    "1209": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        3053,
        3492
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1210": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1211": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD2A"
    },
    "1214": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        3053,
        3492
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1215": {
      "fn": "SmartNodes.random",
      "offset": [
        13540,
        13669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1216": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x40"
    },
    "1218": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1219": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1220": {
      "fn": "SmartNodes.random",
      "offset": [
        13643,
        13658
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1221": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1223": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1224": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1225": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "ADD",
      "path": "6"
    },
    "1226": {
      "op": "SWAP2"
    },
    "1227": {
      "op": "SWAP1"
    },
    "1228": {
      "op": "SWAP2"
    },
    "1229": {
      "op": "MSTORE"
    },
    "1230": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1231": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1232": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1233": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1234": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "SUB",
      "path": "6"
    },
    "1235": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1236": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "ADD",
      "path": "6"
    },
    "1237": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1238": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1239": {
      "op": "SWAP2"
    },
    "1240": {
      "op": "DUP4"
    },
    "1241": {
      "op": "ADD"
    },
    "1242": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1243": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1244": {
      "fn": "SmartNodes.random",
      "offset": [
        13625,
        13660
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1245": {
      "fn": "SmartNodes.random",
      "offset": [
        13615,
        13661
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1246": {
      "fn": "SmartNodes.random",
      "offset": [
        13615,
        13661
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1247": {
      "fn": "SmartNodes.random",
      "offset": [
        13615,
        13661
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1248": {
      "fn": "SmartNodes.random",
      "offset": [
        13615,
        13661
      ],
      "op": "ADD",
      "path": "6"
    },
    "1249": {
      "fn": "SmartNodes.random",
      "offset": [
        13615,
        13661
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1250": {
      "fn": "SmartNodes.random",
      "offset": [
        13540,
        13669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1253": {
      "fn": "SmartNodes.random",
      "offset": [
        13540,
        13669
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1254": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1255": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1258": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F4"
    },
    "1261": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1262": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1264": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1267": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "i",
      "offset": [
        14139,
        14416
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1268": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1269": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE5F"
    },
    "1272": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "i",
      "offset": [
        14139,
        14416
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1273": {
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1274": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x260"
    },
    "1277": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x507"
    },
    "1280": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1281": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1283": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1286": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "i",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1287": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1288": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC7"
    },
    "1291": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "i",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1292": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1293": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x363"
    },
    "1296": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51A"
    },
    "1299": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1300": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1302": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D3"
    },
    "1305": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1306": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "SUB"
    },
    "1315": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "1",
      "statement": 4
    },
    "1316": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1318": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1320": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1321": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "1323": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1325": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1326": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1328": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1329": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1330": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1331": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1332": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1333": {
      "offset": [
        1665,
        1718
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1334": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1337": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x543"
    },
    "1340": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1341": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1343": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1346": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        1665,
        1718
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1347": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1348": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "1350": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1352": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1353": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1355": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1356": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1357": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1358": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1360": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1361": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1362": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1363": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1364": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1665,
        1718
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1365": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2736,
        2999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1366": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2736,
        2999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1369": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2736,
        2999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF61"
    },
    "1372": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        2736,
        2999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1373": {
      "offset": [
        2041,
        2074
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1374": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2041,
        2074
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1377": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2041,
        2074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "1379": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2041,
        2074
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1380": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2041,
        2074
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1381": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2041,
        2074
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1382": {
      "fn": "SmartNodes.getjobCounter",
      "offset": [
        13675,
        13766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1383": {
      "fn": "SmartNodes.getjobCounter",
      "offset": [
        13749,
        13759
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x71"
    },
    "1385": {
      "fn": "SmartNodes.getjobCounter",
      "offset": [
        13749,
        13759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1386": {
      "fn": "SmartNodes.getjobCounter",
      "offset": [
        13675,
        13766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1389": {
      "fn": "SmartNodes.getjobCounter",
      "offset": [
        13675,
        13766
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1390": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1391": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "1394": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108C"
    },
    "1397": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1398": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1399": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1402": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x584"
    },
    "1405": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1406": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1408": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1411": {
      "fn": "SmartNodes.completeJob",
      "jump": "i",
      "offset": [
        8405,
        9827
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1412": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1413": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x109B"
    },
    "1416": {
      "fn": "SmartNodes.completeJob",
      "jump": "i",
      "offset": [
        8405,
        9827
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1417": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1418": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AD"
    },
    "1421": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x597"
    },
    "1424": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1425": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1427": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2525"
    },
    "1430": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1431": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1432": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1309"
    },
    "1435": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1436": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1437": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AD"
    },
    "1440": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AA"
    },
    "1443": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1444": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1446": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2525"
    },
    "1449": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1450": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1451": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x139B"
    },
    "1454": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1455": {
      "offset": [
        1959,
        2008
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1456": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E7"
    },
    "1459": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BD"
    },
    "1462": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1463": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1465": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1468": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        1959,
        2008
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1469": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1470": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "1472": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1474": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1475": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1477": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1478": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1479": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1480": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1482": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1483": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1484": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1485": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1486": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1488": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1489": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "ADD",
      "path": "6"
    },
    "1490": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1491": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1493": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1494": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1495": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "ADD",
      "path": "6"
    },
    "1496": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1497": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1498": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "op": "SUB"
    },
    "1507": {
      "offset": [
        1959,
        2008
      ],
      "op": "AND",
      "path": "6"
    },
    "1508": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1509": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1510": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1511": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1512": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1514": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1515": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        1959,
        2008
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1516": {
      "op": "SWAP4"
    },
    "1517": {
      "op": "DUP5"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "op": "SUB"
    },
    "1527": {
      "op": "SWAP1"
    },
    "1528": {
      "op": "SWAP3"
    },
    "1529": {
      "op": "AND"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1532": {
      "op": "DUP5"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "op": "SWAP1"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "offset": [
        1959,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "1545": {
      "op": "JUMP"
    },
    "1546": {
      "offset": [
        2205,
        2231
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1547": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "1549": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1550": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x288"
    },
    "1553": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1554": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1556": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "AND",
      "path": "6"
    },
    "1557": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1558": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2205,
        2231
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1559": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1560": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1563": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x625"
    },
    "1566": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1567": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1569": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25E6"
    },
    "1572": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        3498,
        4295
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1573": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1574": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A9"
    },
    "1577": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        3498,
        4295
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1578": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        13772,
        13879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1579": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        13854,
        13872
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x6F"
    },
    "1581": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        13854,
        13872
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1582": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        13772,
        13879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1585": {
      "fn": "SmartNodes.getValidatorIdCounter",
      "offset": [
        13772,
        13879
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1586": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1587": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x363"
    },
    "1590": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x640"
    },
    "1593": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1594": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1596": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25E6"
    },
    "1599": {
      "fn": "SmartNodes.getUserId",
      "jump": "i",
      "offset": [
        13988,
        14133
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1600": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1601": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1534"
    },
    "1604": {
      "fn": "SmartNodes.getUserId",
      "jump": "i",
      "offset": [
        13988,
        14133
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1605": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1606": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x363"
    },
    "1609": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x653"
    },
    "1612": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1613": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1615": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27AD"
    },
    "1618": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1619": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1626": {
      "op": "SHL"
    },
    "1627": {
      "op": "SUB"
    },
    "1628": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 7
    },
    "1629": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1630": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "1631": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1633": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1634": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1635": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1636": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "1638": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1640": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1641": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1642": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1643": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1645": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1646": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1647": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1648": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1649": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1650": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1651": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "1652": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1653": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1654": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1655": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1656": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1657": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1658": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1659": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1660": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1661": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1662": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1663": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1666": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x68C"
    },
    "1669": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1670": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1672": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1675": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        7352,
        8360
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1676": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1677": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155C"
    },
    "1680": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        7352,
        8360
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1681": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1682": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1685": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69F"
    },
    "1688": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1689": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1691": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2787"
    },
    "1694": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        4351,
        4942
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1695": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1696": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x171B"
    },
    "1699": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        4351,
        4942
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1700": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1701": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B7"
    },
    "1704": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B2"
    },
    "1707": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1708": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1710": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B7"
    },
    "1713": {
      "fn": "SmartNodes.getJobRequestValidators",
      "jump": "i",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1714": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1715": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18F2"
    },
    "1718": {
      "fn": "SmartNodes.getJobRequestValidators",
      "jump": "i",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1719": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1720": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1722": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1723": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "1726": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1727": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1728": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27E0"
    },
    "1731": {
      "fn": "SmartNodes.getJobRequestValidators",
      "jump": "i",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1732": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1733": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1735": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x36"
    },
    "1737": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1738": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1739": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D3"
    },
    "1742": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1743": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2821"
    },
    "1746": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1747": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1748": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1749": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1751": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1752": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1754": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1755": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1756": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "1757": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "1758": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1760": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1761": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1763": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1764": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1765": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1766": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1767": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1769": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1770": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1771": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1772": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1773": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1774": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1775": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1776": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1777": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1779": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1780": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1781": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1782": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1783": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FF"
    },
    "1786": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1787": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2821"
    },
    "1790": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1791": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1792": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1793": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1794": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x74C"
    },
    "1797": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1798": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1799": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1801": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "1"
    },
    "1802": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x721"
    },
    "1805": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1806": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1809": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1810": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1811": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1812": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "1"
    },
    "1813": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "1"
    },
    "1814": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1815": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1816": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1817": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1819": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1820": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1821": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x74C"
    },
    "1824": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1825": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1826": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1827": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1828": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1829": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1830": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1832": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1833": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1835": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1838": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1839": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1840": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1841": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1842": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1843": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1844": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1845": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1847": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1848": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1849": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1851": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1852": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1853": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1854": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "1"
    },
    "1855": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72F"
    },
    "1858": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1859": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1860": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1861": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "1"
    },
    "1862": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1864": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "1"
    },
    "1865": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1866": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1867": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1868": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1869": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1870": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1871": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1872": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1873": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1874": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1875": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1876": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1877": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1878": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1879": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1881": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 9
    },
    "1882": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x764"
    },
    "1885": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1886": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1887": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1888": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0B"
    },
    "1891": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1892": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1893": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "1895": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1896": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "1897": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4949,
        4960
      ],
      "op": "POP",
      "path": "1"
    },
    "1898": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1899": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1900": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1901": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "1902": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "POP",
      "path": "1"
    },
    "1903": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1904": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1905": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6225,
        6235
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 12
    },
    "1906": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1908": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1909": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1910": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1911": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "1913": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1915": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1916": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1918": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1919": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1920": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6236
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1921": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6173,
        6189
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1923": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6173,
        6189
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1924": {
      "branch": 131,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6209,
        6241
      ],
      "op": "SUB",
      "path": "6"
    },
    "1925": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7CC"
    },
    "1928": {
      "branch": 131,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1929": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1931": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1938": {
      "op": "SHL"
    },
    "1939": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1940": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1943": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1945": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1946": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "ADD",
      "path": "6"
    },
    "1947": {
      "op": "MSTORE"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1952": {
      "op": "DUP3"
    },
    "1953": {
      "op": "ADD"
    },
    "1954": {
      "op": "MSTORE"
    },
    "1955": {
      "op": "PUSH20",
      "value": "0x2AB9B2B9103737BA103932B3B4B9BA32B932B217"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1981": {
      "op": "DUP3"
    },
    "1982": {
      "op": "ADD"
    },
    "1983": {
      "op": "MSTORE"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1988": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1990": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1991": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1992": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1993": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "SUB",
      "path": "6"
    },
    "1994": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1995": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "1996": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6201,
        6266
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1997": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6295,
        6296
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x0"
    },
    "1999": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6284,
        6292
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2000": {
      "branch": 132,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6284,
        6296
      ],
      "op": "GT",
      "path": "6"
    },
    "2001": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x81C"
    },
    "2004": {
      "branch": 132,
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2005": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2007": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2014": {
      "op": "SHL"
    },
    "2015": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2016": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2019": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2021": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2022": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "ADD",
      "path": "6"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2028": {
      "op": "DUP3"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "op": "PUSH32",
      "value": "0x4361706163697479206D7573742062652067726561746572207A65726F2E0000"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2066": {
      "op": "DUP3"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "MSTORE"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "2075": {
      "op": "JUMP"
    },
    "2076": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6276,
        6331
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2077": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6430,
        6440
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x71"
    },
    "2079": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6430,
        6440
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2080": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6389,
        6415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2082": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2083": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2084": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2085": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6429
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "2087": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2089": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2090": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2092": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2093": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6418,
        6441
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2094": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6451,
        6474
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 14
    },
    "2095": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6451,
        6474
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2096": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6451,
        6474
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2097": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6499
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x1"
    },
    "2099": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6499
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2100": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6499
      ],
      "op": "ADD",
      "path": "6"
    },
    "2101": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6512
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2102": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6512
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "op": "NOT"
    },
    "2112": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6512
      ],
      "op": "AND",
      "path": "6"
    },
    "2113": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6502,
        6512
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2114": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6512
      ],
      "op": "OR",
      "path": "6"
    },
    "2115": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6512
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2116": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6484,
        6512
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2117": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6522,
        6538
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x2"
    },
    "2119": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6522,
        6538
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2120": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6522,
        6538
      ],
      "op": "ADD",
      "path": "6"
    },
    "2121": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6522,
        6549
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2122": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6522,
        6549
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2123": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6522,
        6549
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2124": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6644,
        6710
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x854"
    },
    "2127": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6689,
        6700
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2128": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6644,
        6675
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2F"
    },
    "2131": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6644,
        6710
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2132": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6644,
        6710
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2133": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6604,
        6710
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2134": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6604,
        6710
      ],
      "op": "POP",
      "path": "6"
    },
    "2135": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6721,
        6756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2137": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6786,
        6806
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2138": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6786,
        6813
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2139": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2148": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2149": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "GT",
      "path": "6"
    },
    "2150": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2151": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x872"
    },
    "2154": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2155": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x872"
    },
    "2158": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25D0"
    },
    "2161": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6759,
        6823
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2162": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2163": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2165": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2166": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2167": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2168": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2169": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2170": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2171": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2173": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "MUL",
      "path": "6"
    },
    "2174": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2176": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "ADD",
      "path": "6"
    },
    "2177": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2178": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "ADD",
      "path": "6"
    },
    "2179": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2181": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2182": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2183": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2184": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x89B"
    },
    "2187": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2188": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2189": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2191": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "ADD",
      "path": "6"
    },
    "2192": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2194": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2195": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "MUL",
      "path": "6"
    },
    "2196": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2197": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2198": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2199": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "2200": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "ADD",
      "path": "6"
    },
    "2201": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2204": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6759,
        6823
      ],
      "op": "POP",
      "path": "6"
    },
    "2205": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6721,
        6823
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2206": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6721,
        6823
      ],
      "op": "POP",
      "path": "6"
    },
    "2207": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6927,
        6936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2209": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2210": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6946,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2211": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6946,
        6973
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2212": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6942,
        6943
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2213": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6942,
        6973
      ],
      "op": "LT",
      "path": "6"
    },
    "2214": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2215": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91F"
    },
    "2218": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2219": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7028
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x65"
    },
    "2221": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2223": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7049
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2224": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7050,
        7051
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2225": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2226": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2227": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2228": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "LT",
      "path": "6"
    },
    "2229": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C0"
    },
    "2232": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2233": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C0"
    },
    "2236": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2855"
    },
    "2239": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        7029,
        7052
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2240": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2241": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2243": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "MUL",
      "path": "6"
    },
    "2244": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2246": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "ADD",
      "path": "6"
    },
    "2247": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "ADD",
      "path": "6"
    },
    "2248": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7029,
        7052
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2249": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2250": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2251": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2253": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "ADD",
      "path": "6"
    },
    "2254": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2255": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2256": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2257": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2259": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "ADD",
      "path": "6"
    },
    "2260": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2262": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7053
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2263": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2265": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "ADD",
      "path": "6"
    },
    "2266": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2268": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2269": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2270": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2271": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2274": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "EXP",
      "path": "6"
    },
    "2275": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2276": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "DIV",
      "path": "6"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2283": {
      "op": "SHL"
    },
    "2284": {
      "op": "SUB"
    },
    "2285": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7018,
        7087
      ],
      "op": "AND",
      "path": "6"
    },
    "2286": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7012
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2287": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7013,
        7014
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2288": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2289": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2290": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2291": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "LT",
      "path": "6"
    },
    "2292": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FF"
    },
    "2295": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2296": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FF"
    },
    "2299": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2855"
    },
    "2302": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        6994,
        7015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2303": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2313": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2314": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7087
      ],
      "op": "AND",
      "path": "6"
    },
    "2315": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2317": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2318": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2319": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "MUL",
      "path": "6"
    },
    "2320": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2321": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2322": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2323": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "ADD",
      "path": "6"
    },
    "2324": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2325": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2326": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7015
      ],
      "op": "ADD",
      "path": "6"
    },
    "2327": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6994,
        7087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2328": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6975,
        6978
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x1"
    },
    "2330": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6975,
        6978
      ],
      "op": "ADD",
      "path": "6"
    },
    "2331": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A1"
    },
    "2334": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2335": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6922,
        7098
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2336": {
      "op": "POP"
    },
    "2337": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 19
    },
    "2338": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2339": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x935"
    },
    "2342": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2343": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7134
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2345": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7134
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2346": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7134
      ],
      "op": "ADD",
      "path": "6"
    },
    "2347": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2348": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2350": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2351": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "ADD",
      "path": "6"
    },
    "2352": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2353": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23CB"
    },
    "2356": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        7108,
        7155
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2357": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7108,
        7155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7208
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x71"
    },
    "2361": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2362": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2363": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2364": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7208
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2366": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x946"
    },
    "2369": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2370": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "2373": {
      "fn": "SmartNodes.requestJob",
      "jump": "i",
      "offset": [
        7198,
        7210
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2374": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2375": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2376": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2377": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7198,
        7210
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7282,
        7302
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 21
    },
    "2380": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        7282,
        7302
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2381": {
      "fn": "SmartNodes.requestJob",
      "offset": [
        6076,
        7309
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "fn": "SmartNodes.requestJob",
      "jump": "o",
      "offset": [
        6076,
        7309
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2389": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2390": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2392": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2393": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0x963"
    },
    "2396": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2397": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2398": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2399": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF5"
    },
    "2402": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2403": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2404": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 23,
      "value": "0x96E"
    },
    "2407": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2408": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2409": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2410": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E87"
    },
    "2413": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2414": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x1"
    },
    "2418": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2419": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2420": {
      "op": "POP"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "POP"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2425": {
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2426": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "2428": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2430": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2431": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2433": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2434": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2435": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2436": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2438": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2439": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2440": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2441": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2442": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2444": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2445": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2446": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2447": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2449": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2450": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2451": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2452": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2453": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2454": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2464": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2465": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "2466": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2467": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9AB"
    },
    "2470": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2471": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2821"
    },
    "2474": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2475": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2476": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2477": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2479": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2480": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2482": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2483": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2484": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DIV",
      "path": "6"
    },
    "2485": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MUL",
      "path": "6"
    },
    "2486": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2488": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2489": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2491": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2492": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2493": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2494": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2495": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2497": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2498": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2499": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2500": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2501": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2502": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2503": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2504": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2505": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2507": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2508": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2509": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2510": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2511": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D7"
    },
    "2514": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2515": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2821"
    },
    "2518": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2519": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2520": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2521": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2522": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA24"
    },
    "2525": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2526": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2527": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2529": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "LT",
      "path": "6"
    },
    "2530": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F9"
    },
    "2533": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2534": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2537": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2538": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2539": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2540": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DIV",
      "path": "6"
    },
    "2541": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MUL",
      "path": "6"
    },
    "2542": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2543": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2544": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2545": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2547": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2548": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2549": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA24"
    },
    "2552": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2553": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2554": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2555": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2556": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2557": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2558": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2560": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2561": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2563": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2565": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2566": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2567": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2568": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2569": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2570": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2571": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2572": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2573": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2575": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2576": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2577": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2579": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2580": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2581": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2582": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "GT",
      "path": "6"
    },
    "2583": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA07"
    },
    "2586": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2587": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2588": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2589": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SUB",
      "path": "6"
    },
    "2590": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2592": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "2593": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2594": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2595": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2596": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "op": "POP"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2603": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2604": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2605": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2606": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2608": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2609": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2610": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2611": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2613": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2614": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2615": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "ADD",
      "path": "6"
    },
    "2616": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2617": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2618": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2619": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2624": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2625": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2626": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "2627": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2628": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2629": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2633": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2634": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2635": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "2636": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2637": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2640": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2641": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DIV",
      "path": "6"
    },
    "2642": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "2643": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1437,
        1484
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2644": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        1437,
        1484
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2645": {
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2646": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "2648": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2650": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2651": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2653": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2654": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2655": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2656": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2658": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2659": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2660": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2661": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2662": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2664": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2665": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2666": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2667": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2669": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2670": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2671": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2672": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2673": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2674": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2684": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2685": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "AND",
      "path": "6"
    },
    "2686": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2687": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA87"
    },
    "2690": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2691": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2821"
    },
    "2694": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2695": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2696": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2697": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2699": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2700": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2702": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2703": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2704": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DIV",
      "path": "6"
    },
    "2705": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MUL",
      "path": "6"
    },
    "2706": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2708": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2709": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2711": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2712": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2713": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2714": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2715": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2717": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2718": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2719": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2720": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2721": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2722": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2723": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2724": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2725": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2727": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2728": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2729": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2730": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2731": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB3"
    },
    "2734": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2735": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2821"
    },
    "2738": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2739": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2740": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2741": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2742": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB00"
    },
    "2745": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2746": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2747": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2749": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "LT",
      "path": "6"
    },
    "2750": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD5"
    },
    "2753": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2754": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2757": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2758": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2759": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2760": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DIV",
      "path": "6"
    },
    "2761": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MUL",
      "path": "6"
    },
    "2762": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2763": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2764": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2765": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2767": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2768": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2769": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB00"
    },
    "2772": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2773": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2774": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2775": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2776": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2777": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2778": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2780": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2781": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2783": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2785": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2786": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2787": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2788": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2789": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2790": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2791": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2792": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2793": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2795": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2796": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2797": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2799": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2800": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2801": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2802": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "GT",
      "path": "6"
    },
    "2803": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE3"
    },
    "2806": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2807": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2808": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2809": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SUB",
      "path": "6"
    },
    "2810": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2812": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "AND",
      "path": "6"
    },
    "2813": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2814": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2815": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2816": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2817": {
      "op": "POP"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "op": "POP"
    },
    "2820": {
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2822": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2823": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2824": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "ADD",
      "path": "6"
    },
    "2825": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2826": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2827": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2828": {
      "op": "POP"
    },
    "2829": {
      "op": "POP"
    },
    "2830": {
      "offset": [
        1746,
        1783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2832": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "AND",
      "path": "6"
    },
    "2833": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1746,
        1783
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2834": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        1746,
        1783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2835": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2836": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2837": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2839": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 25
    },
    "2840": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2841": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2842": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "2844": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2846": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2847": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2848": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2849": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2851": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2852": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2853": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6395
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "op": "SUB"
    },
    "2862": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2863": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "AND",
      "path": "1"
    },
    "2864": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2865": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2866": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2867": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2868": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2869": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2870": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2871": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2872": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2873": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2874": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2875": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x764"
    },
    "2878": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6418
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2879": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2880": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2881": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2882": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2883": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4D"
    },
    "2886": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2887": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2888": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6407,
        6417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2889": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289A"
    },
    "2892": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2893": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2894": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0B"
    },
    "2897": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2898": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2899": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5047,
        5057
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2900": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5004,
        5023
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2902": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2903": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2904": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2905": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5046
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "2907": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2909": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2910": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2911": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2912": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2914": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2915": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2916": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2917": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5026,
        5058
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2918": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2919": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2920": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2921": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5108
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "2923": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2924": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2925": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2926": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2927": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2928": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5098,
        5121
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2929": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x3"
    },
    "2931": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2932": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "ADD",
      "path": "6"
    },
    "2933": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2934": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2939": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2940": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2941": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5150,
        5166
      ],
      "op": "AND",
      "path": "6"
    },
    "2942": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5140,
        5166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2943": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5140,
        5166
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2944": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5140,
        5166
      ],
      "op": "AND",
      "path": "6"
    },
    "2945": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5140,
        5166
      ],
      "op": "GT",
      "path": "6"
    },
    "2946": {
      "branch": 133,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5140,
        5166
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2947": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCE"
    },
    "2950": {
      "branch": 133,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2951": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2953": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2960": {
      "op": "SHL"
    },
    "2961": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2962": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2965": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2967": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2968": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "ADD",
      "path": "6"
    },
    "2969": {
      "op": "MSTORE"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2974": {
      "op": "DUP3"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "op": "MSTORE"
    },
    "2977": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473206C6F636B65642062616C616E63652E0000"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3012": {
      "op": "DUP3"
    },
    "3013": {
      "op": "ADD"
    },
    "3014": {
      "op": "MSTORE"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3017": {
      "op": "ADD"
    },
    "3018": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "3021": {
      "op": "JUMP"
    },
    "3022": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5132,
        5201
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3023": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5228,
        5229
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 27,
      "value": "0x0"
    },
    "3025": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5219,
        5225
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3026": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5219,
        5229
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3031": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5219,
        5229
      ],
      "op": "AND",
      "path": "6"
    },
    "3032": {
      "branch": 134,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5219,
        5229
      ],
      "op": "GT",
      "path": "6"
    },
    "3033": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBF4"
    },
    "3036": {
      "branch": 134,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3037": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3039": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3046": {
      "op": "SHL"
    },
    "3047": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3048": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3049": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3051": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "ADD",
      "path": "6"
    },
    "3052": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "3055": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3056": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AD"
    },
    "3059": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        5211,
        5267
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3060": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5211,
        5267
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3061": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5353,
        5362
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3062": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5353,
        5373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3064": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5353,
        5373
      ],
      "op": "ADD",
      "path": "6"
    },
    "3065": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5353,
        5373
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3066": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5377,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3068": {
      "branch": 135,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5353,
        5378
      ],
      "op": "SUB",
      "path": "6"
    },
    "3069": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5349,
        6037
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC4E"
    },
    "3072": {
      "branch": 135,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5349,
        6037
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3073": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5417,
        5440
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 28,
      "value": "0xC0C"
    },
    "3076": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5417,
        5432
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3077": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5435,
        5440
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC4E0"
    },
    "3080": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5417,
        5440
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x289A"
    },
    "3083": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        5417,
        5440
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3084": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5417,
        5440
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3085": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5394,
        5414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3087": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5394,
        5414
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3088": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5394,
        5414
      ],
      "op": "ADD",
      "path": "6"
    },
    "3089": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5394,
        5440
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3090": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5394,
        5440
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3091": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5394,
        5440
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3092": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 29,
      "value": "0x40"
    },
    "3094": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3095": {
      "op": "SWAP1"
    },
    "3096": {
      "op": "DUP2"
    },
    "3097": {
      "op": "MSTORE"
    },
    "3098": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5502,
        5512
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3099": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5502,
        5512
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3100": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x77635F8F13EE1A01D11246347C649817C6EE9FA7620CE4C6ADFA2452BFA162B2"
    },
    "3133": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3136": {
      "op": "ADD"
    },
    "3137": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3138": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3140": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3141": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3142": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3143": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "SUB",
      "path": "6"
    },
    "3144": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3145": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5486,
        5535
      ],
      "op": "LOG2",
      "path": "6"
    },
    "3146": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4994,
        6043
      ],
      "op": "POP",
      "path": "6"
    },
    "3147": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4994,
        6043
      ],
      "op": "POP",
      "path": "6"
    },
    "3148": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "POP",
      "path": "6"
    },
    "3149": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "o",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3150": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5349,
        6037
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3151": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5715,
        5724
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 30
    },
    "3152": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5715,
        5735
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3154": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5715,
        5735
      ],
      "op": "ADD",
      "path": "6"
    },
    "3155": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5715,
        5735
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3156": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5696,
        5711
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3157": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5696,
        5735
      ],
      "op": "LT",
      "path": "6"
    },
    "3158": {
      "branch": 136,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5696,
        5735
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3159": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCA2"
    },
    "3162": {
      "branch": 136,
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3163": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3165": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3172": {
      "op": "SHL"
    },
    "3173": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3174": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3177": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3179": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3180": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "ADD",
      "path": "6"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3186": {
      "op": "DUP3"
    },
    "3187": {
      "op": "ADD"
    },
    "3188": {
      "op": "MSTORE"
    },
    "3189": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320617265207374696C6C206C6F636B65642E0000000000000000"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3224": {
      "op": "DUP3"
    },
    "3225": {
      "op": "ADD"
    },
    "3226": {
      "op": "MSTORE"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3229": {
      "op": "ADD"
    },
    "3230": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "3233": {
      "op": "JUMP"
    },
    "3234": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5671,
        5793
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3235": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5824
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 31,
      "value": "0x3"
    },
    "3237": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5824
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3238": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5824
      ],
      "op": "ADD",
      "path": "6"
    },
    "3239": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3240": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3241": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5828,
        5834
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3242": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5828,
        5834
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3243": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5824
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3244": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5824
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3246": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5824
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3247": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCBF"
    },
    "3250": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3251": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5828,
        5834
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3252": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5828,
        5834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3253": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3258": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "AND",
      "path": "6"
    },
    "3259": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28EE"
    },
    "3262": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        5808,
        5834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3263": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3264": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3265": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "POP",
      "path": "6"
    },
    "3266": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "3269": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "EXP",
      "path": "6"
    },
    "3270": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3271": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3272": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3273": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3278": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "MUL",
      "path": "6"
    },
    "3279": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "NOT",
      "path": "6"
    },
    "3280": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "AND",
      "path": "6"
    },
    "3281": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3282": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3283": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3288": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "AND",
      "path": "6"
    },
    "3289": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "MUL",
      "path": "6"
    },
    "3290": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "OR",
      "path": "6"
    },
    "3291": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3292": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3293": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5808,
        5834
      ],
      "op": "POP",
      "path": "6"
    },
    "3294": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5848,
        5873
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 32,
      "value": "0xCED"
    },
    "3297": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5854,
        5864
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3298": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5866,
        5872
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3299": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5848,
        5873
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "3304": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5848,
        5873
      ],
      "op": "AND",
      "path": "6"
    },
    "3305": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5848,
        5853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2055"
    },
    "3308": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "i",
      "offset": [
        5848,
        5873
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3309": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5848,
        5873
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3310": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5940,
        5974
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0x40"
    },
    "3312": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5940,
        5974
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3313": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3318": {
      "op": "DUP5"
    },
    "3319": {
      "op": "AND"
    },
    "3320": {
      "op": "DUP2"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5955,
        5965
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3323": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5955,
        5965
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3324": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5940,
        5974
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
    },
    "3357": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5940,
        5974
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3360": {
      "op": "ADD"
    },
    "3361": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5940,
        5974
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC41"
    },
    "3364": {
      "op": "JUMP"
    },
    "3365": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        5349,
        6037
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3366": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4994,
        6043
      ],
      "op": "POP",
      "path": "6"
    },
    "3367": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4994,
        6043
      ],
      "op": "POP",
      "path": "6"
    },
    "3368": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "POP",
      "path": "6"
    },
    "3369": {
      "fn": "SmartNodes.unlockTokens",
      "jump": "o",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3370": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3053,
        3492
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3371": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3145,
        3155
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 34
    },
    "3372": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3374": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3375": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3376": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3377": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3144
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "3379": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3381": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3382": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3384": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3385": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3386": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3156
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3387": {
      "branch": 137,
      "fn": "SmartNodes.createUser",
      "offset": [
        3129,
        3161
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3388": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD87"
    },
    "3391": {
      "branch": 137,
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3392": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3394": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3403": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3406": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3408": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3409": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "ADD",
      "path": "6"
    },
    "3410": {
      "op": "MSTORE"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3415": {
      "op": "DUP3"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "MSTORE"
    },
    "3418": {
      "op": "PUSH32",
      "value": "0x5573657220616C726561647920726567697374657265642E0000000000000000"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3453": {
      "op": "DUP3"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "op": "MSTORE"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3458": {
      "op": "ADD"
    },
    "3459": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "3462": {
      "op": "JUMP"
    },
    "3463": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3121,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3464": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x40"
    },
    "3466": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3467": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3468": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "3470": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3471": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3472": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3473": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3474": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3246,
        3259
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x70"
    },
    "3476": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3246,
        3259
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3477": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3478": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3479": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3480": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3286,
        3296
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3481": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3483": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3484": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3485": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3486": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3487": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3488": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3489": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3490": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3491": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3492": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3493": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3494": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3499": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3500": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3501": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3502": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3503": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3504": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3505": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3506": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3507": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6A"
    },
    "3509": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3510": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3511": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3512": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3513": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3514": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3515": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3516": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3517": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3518": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3519": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3520": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3521": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3522": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3524": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3525": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3526": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3527": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3534": {
      "op": "SHL"
    },
    "3535": {
      "op": "SUB"
    },
    "3536": {
      "op": "NOT"
    },
    "3537": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "AND",
      "path": "6"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3544": {
      "op": "SHL"
    },
    "3545": {
      "op": "SUB"
    },
    "3546": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3547": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3548": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "AND",
      "path": "6"
    },
    "3549": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3550": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3551": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3552": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "OR",
      "path": "6"
    },
    "3553": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3554": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3555": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3556": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3557": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3558": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3223,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3559": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3220
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3560": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3562": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3563": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3564": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3565": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF6"
    },
    "3568": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3569": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3570": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295B"
    },
    "3573": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        3200,
        3376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3574": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3578": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3579": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3580": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3581": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3582": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3583": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3585": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3586": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3587": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "ADD",
      "path": "6"
    },
    "3588": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3589": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3592": {
      "op": "NOT"
    },
    "3593": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "AND",
      "path": "6"
    },
    "3594": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3596": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3597": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3598": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "AND",
      "path": "6"
    },
    "3599": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3600": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3601": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3602": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "OR",
      "path": "6"
    },
    "3603": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3604": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3200,
        3376
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3605": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3417,
        3430
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 36,
      "value": "0x70"
    },
    "3607": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3417,
        3430
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3608": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3610": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3611": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "3613": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3614": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE28"
    },
    "3617": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3618": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3400,
        3413
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3619": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3400,
        3413
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3620": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1B"
    },
    "3623": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        3387,
        3414
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3624": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3625": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3626": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3627": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3628": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3630": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3631": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3632": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3633": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3634": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "SUB",
      "path": "6"
    },
    "3635": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3637": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "ADD",
      "path": "6"
    },
    "3638": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3639": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3414
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3640": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3387,
        3430
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3641": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0x70"
    },
    "3643": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3644": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3645": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3646": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3648": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE48"
    },
    "3651": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3652": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "3655": {
      "fn": "SmartNodes.createUser",
      "jump": "i",
      "offset": [
        3470,
        3485
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3656": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3657": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3658": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3659": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3470,
        3485
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3456,
        3466
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3662": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3664": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3665": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3666": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3667": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3455
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6B"
    },
    "3669": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3671": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3672": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3674": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3675": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3467
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3676": {
      "fn": "SmartNodes.createUser",
      "offset": [
        3440,
        3485
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "fn": "SmartNodes.createUser",
      "jump": "o",
      "offset": [
        3053,
        3492
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3679": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14139,
        14416
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3680": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14224,
        14231
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3682": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14278,
        14279
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 38
    },
    "3683": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14275
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3684": {
      "branch": 138,
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14279
      ],
      "op": "GT",
      "path": "6"
    },
    "3685": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14315
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3686": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14315
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3687": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14315
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE71"
    },
    "3690": {
      "branch": 138,
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14315
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3691": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14315
      ],
      "op": "POP",
      "path": "6"
    },
    "3692": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14297,
        14315
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "3694": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14297,
        14315
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3695": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14283,
        14294
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3696": {
      "branch": 139,
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14283,
        14315
      ],
      "op": "LT",
      "path": "6"
    },
    "3697": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14264,
        14315
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3698": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEB4"
    },
    "3701": {
      "branch": 139,
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3702": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3704": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3705": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3711": {
      "op": "SHL"
    },
    "3712": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3713": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3716": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3718": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3719": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "ADD",
      "path": "6"
    },
    "3720": {
      "op": "MSTORE"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3725": {
      "op": "DUP3"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "MSTORE"
    },
    "3728": {
      "op": "PUSH20",
      "value": "0x496E76616C69642056616C696461746F72496421"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3754": {
      "op": "DUP3"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "MSTORE"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3759": {
      "op": "ADD"
    },
    "3760": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "3763": {
      "op": "JUMP"
    },
    "3764": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14243,
        14361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0x0"
    },
    "3768": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3769": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3770": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3771": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "3773": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3775": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3776": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3778": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3779": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3780": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3781": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        14378,
        14409
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3782": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "o",
      "offset": [
        14139,
        14416
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3783": {
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3784": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "3786": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3788": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3789": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3791": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3792": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3793": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3794": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3796": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3797": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3798": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3799": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3800": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEE0"
    },
    "3803": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3804": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2821"
    },
    "3807": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "i",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3808": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3809": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3810": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3812": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3813": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3815": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3816": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3817": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DIV",
      "path": "6"
    },
    "3818": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MUL",
      "path": "6"
    },
    "3819": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3821": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3822": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3824": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3825": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3826": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3827": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3828": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3830": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3831": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3832": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3833": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3834": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3835": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3836": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3837": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3838": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3840": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3841": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3842": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3843": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3844": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0C"
    },
    "3847": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3848": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2821"
    },
    "3851": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "i",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3852": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3853": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3854": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3855": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF59"
    },
    "3858": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3859": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3860": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3862": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "LT",
      "path": "6"
    },
    "3863": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF2E"
    },
    "3866": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3867": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "3870": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3871": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3872": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3873": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DIV",
      "path": "6"
    },
    "3874": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MUL",
      "path": "6"
    },
    "3875": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3876": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3877": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3878": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3880": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3881": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3882": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF59"
    },
    "3885": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3886": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3887": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3888": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3889": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3890": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3891": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3893": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3894": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3896": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3898": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3899": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3900": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3901": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3902": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3903": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3904": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3905": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3906": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3908": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3909": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3910": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3912": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3913": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3914": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3915": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "GT",
      "path": "6"
    },
    "3916": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF3C"
    },
    "3919": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3920": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3921": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3922": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SUB",
      "path": "6"
    },
    "3923": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "3925": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "AND",
      "path": "6"
    },
    "3926": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3927": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3928": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3929": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3930": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "POP",
      "path": "6"
    },
    "3931": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "POP",
      "path": "6"
    },
    "3932": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "POP",
      "path": "6"
    },
    "3933": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "POP",
      "path": "6"
    },
    "3934": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "POP",
      "path": "6"
    },
    "3935": {
      "fn": "SmartNodes.getValidatorState",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3936": {
      "fn": "SmartNodes.getValidatorState",
      "jump": "o",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3937": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2736,
        2999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3938": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3940": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3941": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3944": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3945": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "0"
    },
    "3946": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3948": {
      "branch": 176,
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "0"
    },
    "3949": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7C"
    },
    "3952": {
      "branch": 176,
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3953": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3955": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3956": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3958": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "0"
    },
    "3959": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3960": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF80"
    },
    "3963": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3964": {
      "branch": 177,
      "fn": "SmartNodes.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3965": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 40
    },
    "3966": {
      "op": "EXTCODESIZE"
    },
    "3967": {
      "op": "ISZERO"
    },
    "3968": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3969": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE3"
    },
    "3972": {
      "branch": 177,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3973": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3975": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3982": {
      "op": "SHL"
    },
    "3983": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3984": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3987": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3989": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3990": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "0"
    },
    "3991": {
      "op": "MSTORE"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3996": {
      "op": "DUP3"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "MSTORE"
    },
    "3999": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4034": {
      "op": "DUP3"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "MSTORE"
    },
    "4037": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4054": {
      "op": "SHL"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4057": {
      "op": "DUP3"
    },
    "4058": {
      "op": "ADD"
    },
    "4059": {
      "op": "MSTORE"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C3"
    },
    "4066": {
      "op": "JUMP"
    },
    "4067": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4068": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4070": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4071": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4074": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4075": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "0"
    },
    "4076": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4078": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "0"
    },
    "4079": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4080": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4081": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4082": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1005"
    },
    "4085": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4086": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4088": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4089": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4090": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4093": {
      "op": "NOT"
    },
    "4094": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "0"
    },
    "4095": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "4098": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "0"
    },
    "4099": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4100": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4101": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4102": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 41,
      "value": "0x104E"
    },
    "4105": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4107": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4108": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4109": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4111": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "ADD",
      "path": "6"
    },
    "4112": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4114": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4115": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4116": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4118": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4119": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4120": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4122": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "ADD",
      "path": "6"
    },
    "4123": {
      "op": "PUSH10",
      "value": "0x54656E736F724C696E6B"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4136": {
      "op": "SHL"
    },
    "4137": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4138": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4139": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "POP",
      "path": "6"
    },
    "4140": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4142": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4143": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4144": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4146": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "ADD",
      "path": "6"
    },
    "4147": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4149": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4150": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4151": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "4153": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4154": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4155": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4157": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "ADD",
      "path": "6"
    },
    "4158": {
      "op": "PUSH5",
      "value": "0x544C494E4B"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4166": {
      "op": "SHL"
    },
    "4167": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4168": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4169": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "POP",
      "path": "6"
    },
    "4170": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2135"
    },
    "4173": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        2787,
        2822
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4174": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2787,
        2822
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4175": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2832,
        2854
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 42,
      "value": "0x1059"
    },
    "4178": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2838,
        2848
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4179": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2850,
        2853
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "4181": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2832,
        2837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2055"
    },
    "4184": {
      "fn": "SmartNodes.initialize",
      "jump": "i",
      "offset": [
        2832,
        2854
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4185": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2832,
        2854
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4186": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2885,
        2886
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x1"
    },
    "4188": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2864,
        2882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "4190": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2864,
        2886
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4191": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2864,
        2886
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4192": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2864,
        2886
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4193": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2896,
        2909
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 44,
      "value": "0x70"
    },
    "4195": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2896,
        2913
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4196": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2896,
        2913
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4197": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2896,
        2913
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4198": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2923,
        2933
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x71"
    },
    "4200": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2923,
        2937
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4201": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2947,
        2960
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 46,
      "value": "0x72"
    },
    "4203": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2947,
        2964
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4204": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2947,
        2964
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4205": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4208": {
      "op": "NOT"
    },
    "4209": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2974,
        2992
      ],
      "op": "AND",
      "path": "6",
      "statement": 47
    },
    "4210": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2974,
        2992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC02"
    },
    "4213": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2974,
        2992
      ],
      "op": "OR",
      "path": "6"
    },
    "4214": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2974,
        2992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4215": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2974,
        2992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4216": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4217": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4218": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1089"
    },
    "4221": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4222": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4224": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4225": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4226": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4229": {
      "op": "NOT"
    },
    "4230": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "0"
    },
    "4231": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4232": {
      "fn": "SmartNodes.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4233": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4234": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "0"
    },
    "4235": {
      "fn": "SmartNodes.initialize",
      "jump": "o",
      "offset": [
        2736,
        2999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4236": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4237": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "4239": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0x37"
    },
    "4241": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4242": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4243": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D3"
    },
    "4246": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4247": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2821"
    },
    "4250": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4251": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4252": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8460,
        8475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4254": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4255": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4256": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4257": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8482
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6D"
    },
    "4259": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4261": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4262": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4264": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4265": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8478,
        8489
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4266": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8507,
        8513
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 49
    },
    "4267": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8507,
        8513
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4268": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8507,
        8522
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4269": {
      "branch": 140,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8507,
        8522
      ],
      "op": "EQ",
      "path": "6"
    },
    "4270": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10EF"
    },
    "4273": {
      "branch": 140,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4274": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4276": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4285": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4288": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4290": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4291": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "ADD",
      "path": "6"
    },
    "4292": {
      "op": "MSTORE"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4297": {
      "op": "DUP3"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH19",
      "value": "0x2537B1103237B2B9903737BA1032BC34B9BA17"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "4322": {
      "op": "SHL"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4325": {
      "op": "DUP3"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "MSTORE"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4330": {
      "op": "ADD"
    },
    "4331": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "4334": {
      "op": "JUMP"
    },
    "4335": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8499,
        8546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4336": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8579
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 50,
      "value": "0x4"
    },
    "4338": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4339": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8579
      ],
      "op": "ADD",
      "path": "6"
    },
    "4340": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8579
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4341": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4343": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8579
      ],
      "op": "AND",
      "path": "6"
    },
    "4344": {
      "branch": 141,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8564,
        8588
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4345": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1144"
    },
    "4348": {
      "branch": 141,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4349": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4351": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4360": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4363": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4365": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4366": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "ADD",
      "path": "6"
    },
    "4367": {
      "op": "MSTORE"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4372": {
      "op": "DUP3"
    },
    "4373": {
      "op": "ADD"
    },
    "4374": {
      "op": "MSTORE"
    },
    "4375": {
      "op": "PUSH32",
      "value": "0x4A6F6220697320616C726561647920636F6D706C657465642E00000000000000"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4410": {
      "op": "DUP3"
    },
    "4411": {
      "op": "ADD"
    },
    "4412": {
      "op": "MSTORE"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4415": {
      "op": "ADD"
    },
    "4416": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "4419": {
      "op": "JUMP"
    },
    "4420": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8556,
        8618
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4421": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8681,
        8697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4423": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8720,
        8726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4424": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4425": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8736,
        8758
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4427": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8736,
        8758
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4428": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8736,
        8758
      ],
      "op": "ADD",
      "path": "6"
    },
    "4429": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8736,
        8765
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4430": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8732,
        8765
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4431": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8732,
        8765
      ],
      "op": "LT",
      "path": "6"
    },
    "4432": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4433": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1195"
    },
    "4436": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4437": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8807
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4438": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8826
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4440": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8826
      ],
      "op": "ADD",
      "path": "6"
    },
    "4441": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8827,
        8828
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4442": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4443": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4444": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4445": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "LT",
      "path": "6"
    },
    "4446": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1169"
    },
    "4449": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4450": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1169"
    },
    "4453": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2855"
    },
    "4456": {
      "fn": "SmartNodes.completeJob",
      "jump": "i",
      "offset": [
        8804,
        8829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4457": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4458": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4460": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4461": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4462": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4463": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4465": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4466": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4467": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4468": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "ADD",
      "path": "6"
    },
    "4469": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4476": {
      "op": "SHL"
    },
    "4477": {
      "op": "SUB"
    },
    "4478": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8804,
        8829
      ],
      "op": "AND",
      "path": "6"
    },
    "4479": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8790,
        8800
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4480": {
      "branch": 142,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8790,
        8829
      ],
      "op": "SUB",
      "path": "6"
    },
    "4481": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8786,
        8905
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118D"
    },
    "4484": {
      "branch": 142,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8786,
        8905
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4485": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8863,
        8867
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x1"
    },
    "4487": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8849,
        8867
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4488": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8849,
        8867
      ],
      "op": "POP",
      "path": "6"
    },
    "4489": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8885,
        8890
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 52,
      "value": "0x1195"
    },
    "4492": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8885,
        8890
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4493": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8786,
        8905
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4494": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8767,
        8770
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 53,
      "value": "0x1"
    },
    "4496": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8767,
        8770
      ],
      "op": "ADD",
      "path": "6"
    },
    "4497": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1148"
    },
    "4500": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4501": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4502": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8715,
        8915
      ],
      "op": "POP",
      "path": "6"
    },
    "4503": {
      "branch": 143,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8946,
        8957
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 54
    },
    "4504": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11FE"
    },
    "4507": {
      "branch": 143,
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4508": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4510": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4517": {
      "op": "SHL"
    },
    "4518": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4519": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4522": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4524": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4525": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "ADD",
      "path": "6"
    },
    "4526": {
      "op": "MSTORE"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4531": {
      "op": "DUP3"
    },
    "4532": {
      "op": "ADD"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "PUSH32",
      "value": "0x4F6E6C792076616C696461746F7273206F662074686973206A6F62206D617920"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4569": {
      "op": "DUP3"
    },
    "4570": {
      "op": "ADD"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "op": "PUSH18",
      "value": "0x31B0B636103A3434B990333AB731BA34B7B7"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4593": {
      "op": "SHL"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4596": {
      "op": "DUP3"
    },
    "4597": {
      "op": "ADD"
    },
    "4598": {
      "op": "MSTORE"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4601": {
      "op": "ADD"
    },
    "4602": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "4605": {
      "op": "JUMP"
    },
    "4606": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8925,
        9033
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4607": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9090,
        9100
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 55
    },
    "4608": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9104,
        9109
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4610": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4611": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4612": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4613": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9089
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "4615": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9089
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4616": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9089
      ],
      "op": "ADD",
      "path": "6"
    },
    "4617": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4619": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4620": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4622": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4623": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9101
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4624": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9109
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4625": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9109
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4628": {
      "op": "NOT"
    },
    "4629": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9109
      ],
      "op": "AND",
      "path": "6"
    },
    "4630": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9109
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4631": {
      "branch": 144,
      "fn": "SmartNodes.completeJob",
      "offset": [
        9064,
        9109
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4632": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4634": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4641": {
      "op": "SHL"
    },
    "4642": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4643": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4644": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4646": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "ADD",
      "path": "6"
    },
    "4647": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "4650": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9043,
        9163
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4653": {
      "op": "DUP1"
    },
    "4654": {
      "op": "DUP3"
    },
    "4655": {
      "op": "MSTORE"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4658": {
      "op": "SWAP1"
    },
    "4659": {
      "op": "DUP3"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "MSTORE"
    },
    "4662": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220616C726561647920636F6E6669726D65642E00000000"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4697": {
      "op": "DUP3"
    },
    "4698": {
      "op": "ADD"
    },
    "4699": {
      "op": "MSTORE"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4702": {
      "op": "ADD"
    },
    "4703": {
      "op": "SWAP1"
    },
    "4704": {
      "op": "JUMP"
    },
    "4705": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4706": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9516,
        9538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4708": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9516,
        9538
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4709": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9516,
        9538
      ],
      "op": "ADD",
      "path": "6"
    },
    "4710": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9516,
        9545
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4711": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9512,
        9545
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4712": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9512,
        9545
      ],
      "op": "LT",
      "path": "6"
    },
    "4713": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4714": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D8"
    },
    "4717": {
      "branch": 144,
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4718": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9570,
        9597
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4720": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9610
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "4722": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4724": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9652
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "4726": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4728": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9656
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4729": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9675
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4731": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9675
      ],
      "op": "ADD",
      "path": "6"
    },
    "4732": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9676,
        9677
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4733": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4734": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4735": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4736": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "LT",
      "path": "6"
    },
    "4737": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128C"
    },
    "4740": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4741": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x128C"
    },
    "4744": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2855"
    },
    "4747": {
      "fn": "SmartNodes.completeJob",
      "jump": "i",
      "offset": [
        9653,
        9678
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4748": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4749": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4751": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4752": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4753": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4754": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4756": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4757": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4758": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4759": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4760": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4761": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "ADD",
      "path": "6"
    },
    "4762": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "op": "SUB"
    },
    "4771": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9653,
        9678
      ],
      "op": "AND",
      "path": "6"
    },
    "4772": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4773": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4774": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4775": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4776": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "ADD",
      "path": "6"
    },
    "4777": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4778": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4779": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4780": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4781": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4783": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4784": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4785": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "ADD",
      "path": "6"
    },
    "4786": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4787": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4788": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9632,
        9679
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4789": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4790": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4791": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4792": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4793": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "ADD",
      "path": "6"
    },
    "4794": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4795": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4796": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4797": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4798": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4799": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "ADD",
      "path": "6"
    },
    "4800": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4801": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4802": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9737,
        9749
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 56
    },
    "4803": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9737,
        9749
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4804": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4805": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9600,
        9697
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4806": {
      "op": "POP"
    },
    "4807": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9715,
        9757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12CF"
    },
    "4810": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9715,
        9757
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4811": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9715,
        9736
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2166"
    },
    "4814": {
      "fn": "SmartNodes.completeJob",
      "jump": "i",
      "offset": [
        9715,
        9757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4815": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9715,
        9757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9547,
        9550
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 57,
      "value": "0x1"
    },
    "4819": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9547,
        9550
      ],
      "op": "ADD",
      "path": "6"
    },
    "4820": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1261"
    },
    "4823": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4824": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9495,
        9772
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4825": {
      "op": "POP"
    },
    "4826": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 58,
      "value": "0x40"
    },
    "4828": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4829": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9804,
        9809
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4830": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9804,
        9809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4831": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x2244C8529CB95E213EE542E76E7776342B3DABD10203D01472BBF4441BE8929"
    },
    "4864": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4865": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4867": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4868": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        9791,
        9810
      ],
      "op": "LOG2",
      "path": "6"
    },
    "4869": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8450,
        9827
      ],
      "op": "POP",
      "path": "6"
    },
    "4870": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8450,
        9827
      ],
      "op": "POP",
      "path": "6"
    },
    "4871": {
      "fn": "SmartNodes.completeJob",
      "offset": [
        8405,
        9827
      ],
      "op": "POP",
      "path": "6"
    },
    "4872": {
      "fn": "SmartNodes.completeJob",
      "jump": "o",
      "offset": [
        8405,
        9827
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4873": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6933,
        7362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4874": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4875": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4877": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4878": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4879": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4880": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "4882": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4884": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4885": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4886": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4887": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4889": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4890": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4891": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7125
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4898": {
      "op": "SHL"
    },
    "4899": {
      "op": "SUB"
    },
    "4900": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4901": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "AND",
      "path": "1"
    },
    "4902": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4903": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4904": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4905": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4906": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4907": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4908": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4909": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7107,
        7134
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4910": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4911": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7026,
        7030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4912": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4913": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 59
    },
    "4914": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4915": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "LT",
      "path": "1"
    },
    "4916": {
      "branch": 167,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7152,
        7187
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4917": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x138E"
    },
    "4920": {
      "branch": 167,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4921": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4923": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4924": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4930": {
      "op": "SHL"
    },
    "4931": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4932": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4935": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4937": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4938": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "ADD",
      "path": "1"
    },
    "4939": {
      "op": "MSTORE"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4944": {
      "op": "DUP3"
    },
    "4945": {
      "op": "ADD"
    },
    "4946": {
      "op": "MSTORE"
    },
    "4947": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4982": {
      "op": "DUP3"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "MSTORE"
    },
    "4985": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4993": {
      "op": "SHL"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4996": {
      "op": "DUP3"
    },
    "4997": {
      "op": "ADD"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5001": {
      "op": "ADD"
    },
    "5002": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "5005": {
      "op": "JUMP"
    },
    "5006": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7144,
        7229
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5007": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7323
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 60,
      "value": "0x96E"
    },
    "5010": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7272,
        7277
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5011": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7279,
        7286
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5012": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7307,
        7322
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5013": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7304
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5014": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7288,
        7322
      ],
      "op": "SUB",
      "path": "1"
    },
    "5015": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7263,
        7271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0B"
    },
    "5018": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7263,
        7323
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5019": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5020": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5022": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5023": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 61,
      "value": "0x764"
    },
    "5026": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5027": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5028": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5029": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E87"
    },
    "5032": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5033": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5034": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3609
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 62,
      "value": "0x67"
    },
    "5036": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3610,
        3623
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5037": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5039": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5040": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13B9"
    },
    "5043": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5044": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5045": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1B"
    },
    "5048": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        3592,
        3624
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5049": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5050": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5051": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5052": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5053": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5055": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "ADD",
      "path": "6"
    },
    "5056": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5058": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5059": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5060": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5061": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SUB",
      "path": "6"
    },
    "5062": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5063": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5064": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3624
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5065": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3628,
        3629
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5067": {
      "branch": 145,
      "fn": "SmartNodes.createValidator",
      "offset": [
        3592,
        3629
      ],
      "op": "EQ",
      "path": "6"
    },
    "5068": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1431"
    },
    "5071": {
      "branch": 145,
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5072": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5074": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5081": {
      "op": "SHL"
    },
    "5082": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5083": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5086": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5088": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5089": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "ADD",
      "path": "6"
    },
    "5090": {
      "op": "MSTORE"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5095": {
      "op": "DUP3"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "MSTORE"
    },
    "5098": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220776974682074686973207075626C69634B6579486173"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5133": {
      "op": "DUP3"
    },
    "5134": {
      "op": "ADD"
    },
    "5135": {
      "op": "MSTORE"
    },
    "5136": {
      "op": "PUSH17",
      "value": "0x341030B63932B0B23C9032BC34B9BA3997"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "5156": {
      "op": "SHL"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5159": {
      "op": "DUP3"
    },
    "5160": {
      "op": "ADD"
    },
    "5161": {
      "op": "MSTORE"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "5168": {
      "op": "JUMP"
    },
    "5169": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3571,
        3704
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5170": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3756,
        3774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "5172": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3756,
        3774
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5173": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3715,
        3742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5175": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5176": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5177": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5178": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "5180": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5182": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5183": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5185": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5186": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3745,
        3775
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5187": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3785,
        3818
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 63
    },
    "5188": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3785,
        3818
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5189": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3785,
        3818
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5190": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3854
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 64,
      "value": "0x1"
    },
    "5192": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3854
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5193": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3854
      ],
      "op": "ADD",
      "path": "6"
    },
    "5194": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3867
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5195": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3867
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5202": {
      "op": "SHL"
    },
    "5203": {
      "op": "SUB"
    },
    "5204": {
      "op": "NOT"
    },
    "5205": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3867
      ],
      "op": "AND",
      "path": "6"
    },
    "5206": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3857,
        3867
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5207": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3867
      ],
      "op": "OR",
      "path": "6"
    },
    "5208": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3867
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5209": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3828,
        3867
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5210": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3900
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 65,
      "value": "0x2"
    },
    "5212": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3900
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5213": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3900
      ],
      "op": "ADD",
      "path": "6"
    },
    "5214": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3916
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1467"
    },
    "5217": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3903,
        3916
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5218": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3900
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5219": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3916
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295B"
    },
    "5222": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        3877,
        3916
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5223": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3877,
        3916
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5224": {
      "op": "POP"
    },
    "5225": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3944
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 66,
      "value": "0x5"
    },
    "5227": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3944
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5228": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3944
      ],
      "op": "ADD",
      "path": "6"
    },
    "5229": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5230": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5231": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5234": {
      "op": "NOT"
    },
    "5235": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "AND",
      "path": "6"
    },
    "5236": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "5239": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "OR",
      "path": "6"
    },
    "5240": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5241": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5242": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3997,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 67,
      "value": "0x6F"
    },
    "5244": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3997,
        4015
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5245": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3983,
        3993
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5246": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3926,
        3951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5248": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5249": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5250": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5251": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3982
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "5253": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5255": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5256": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5258": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5259": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5260": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5261": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        3994
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5262": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        4015
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5263": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        4015
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5264": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3962,
        4015
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5265": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 68
    },
    "5266": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4042
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x67"
    },
    "5268": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4042
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5269": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149F"
    },
    "5272": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5273": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4043,
        4056
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5274": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4043,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5275": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1B"
    },
    "5278": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        4025,
        4057
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5279": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5280": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5281": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5282": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5283": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5285": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5286": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5287": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5289": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5290": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5291": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5292": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "SUB",
      "path": "6"
    },
    "5293": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5294": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "ADD",
      "path": "6"
    },
    "5295": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5296": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4057
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5297": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4078
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5298": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4078
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5299": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4078
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5300": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4025,
        4078
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5301": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4106,
        4124
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x6F"
    },
    "5303": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4106,
        4124
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5304": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5306": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5307": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5308": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5309": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4105
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x68"
    },
    "5311": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5312": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5313": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5314": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5315": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4141
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14CC"
    },
    "5318": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4128,
        4141
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5319": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4125
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5320": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4141
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295B"
    },
    "5323": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        4088,
        4141
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5324": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4088,
        4141
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5325": {
      "op": "POP"
    },
    "5326": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4170,
        4188
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 70,
      "value": "0x6F"
    },
    "5328": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4170,
        4188
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5329": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4170,
        4188
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5330": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5332": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5333": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5334": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5335": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4169
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "5337": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5339": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5340": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5341": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5342": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5344": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5345": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5346": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5347": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4189
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5348": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4192,
        4193
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5350": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4193
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5351": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4151,
        4193
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5352": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4226,
        4244
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 71
    },
    "5353": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4226,
        4244
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5354": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5355": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5356": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4246,
        4256
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5357": {
      "op": "DUP2"
    },
    "5358": {
      "op": "MSTORE"
    },
    "5359": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4226,
        4244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5360": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4226,
        4244
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5361": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC278ABAF901EE66C9C5AD86C559C69D95B3121AB80FFA1BB4A0097A9B9AEE6A2"
    },
    "5394": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5395": {
      "op": "ADD"
    },
    "5396": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5398": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5399": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5400": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5401": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "SUB",
      "path": "6"
    },
    "5402": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5403": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4209,
        4257
      ],
      "op": "LOG2",
      "path": "6"
    },
    "5404": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4286
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 72,
      "value": "0x6F"
    },
    "5406": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5407": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5408": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5409": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4286
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5411": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x152B"
    },
    "5414": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5415": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "5418": {
      "fn": "SmartNodes.createValidator",
      "jump": "i",
      "offset": [
        4268,
        4288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5419": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5420": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5421": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5422": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "POP",
      "path": "6"
    },
    "5423": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5424": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        4268,
        4288
      ],
      "op": "POP",
      "path": "6"
    },
    "5425": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3561,
        4295
      ],
      "op": "POP",
      "path": "6"
    },
    "5426": {
      "fn": "SmartNodes.createValidator",
      "offset": [
        3498,
        4295
      ],
      "op": "POP",
      "path": "6"
    },
    "5427": {
      "fn": "SmartNodes.createValidator",
      "jump": "o",
      "offset": [
        3498,
        4295
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5428": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5429": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14073,
        14080
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5431": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14111
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 73,
      "value": "0x6C"
    },
    "5433": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14112,
        14125
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5434": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5436": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5437": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1546"
    },
    "5440": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5441": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5442": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1B"
    },
    "5445": {
      "fn": "SmartNodes.getUserId",
      "jump": "i",
      "offset": [
        14099,
        14126
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5446": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5447": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5448": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5449": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5450": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5452": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "ADD",
      "path": "6"
    },
    "5453": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5455": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5456": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5457": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5458": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SUB",
      "path": "6"
    },
    "5459": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5460": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5461": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14099,
        14126
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5462": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14092,
        14126
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5463": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        14092,
        14126
      ],
      "op": "POP",
      "path": "6"
    },
    "5464": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5465": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5466": {
      "fn": "SmartNodes.getUserId",
      "offset": [
        13988,
        14133
      ],
      "op": "POP",
      "path": "6"
    },
    "5467": {
      "fn": "SmartNodes.getUserId",
      "jump": "o",
      "offset": [
        13988,
        14133
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5468": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5469": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7457,
        7467
      ],
      "op": "CALLER",
      "path": "6"
    },
    "5470": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7414,
        7433
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5472": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5473": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5474": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5475": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7456
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "5477": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5479": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5480": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5481": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5482": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5484": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5485": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5486": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5487": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7436,
        7468
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5488": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5489": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5490": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5491": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7518
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "5493": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5494": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5495": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5496": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5497": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5498": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7508,
        7531
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5499": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 74,
      "value": "0x5"
    },
    "5501": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5502": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "ADD",
      "path": "6"
    },
    "5503": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5504": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "5507": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5508": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "DIV",
      "path": "6"
    },
    "5509": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "5511": {
      "branch": 146,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7549,
        7567
      ],
      "op": "AND",
      "path": "6"
    },
    "5512": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15CE"
    },
    "5515": {
      "branch": 146,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5516": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5518": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5527": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5530": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5532": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5533": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "ADD",
      "path": "6"
    },
    "5534": {
      "op": "MSTORE"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5539": {
      "op": "DUP3"
    },
    "5540": {
      "op": "ADD"
    },
    "5541": {
      "op": "MSTORE"
    },
    "5542": {
      "op": "PUSH24",
      "value": "0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5569": {
      "op": "SHL"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5572": {
      "op": "DUP3"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "MSTORE"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "5581": {
      "op": "JUMP"
    },
    "5582": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7541,
        7596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5583": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 75,
      "value": "0x0"
    },
    "5585": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5586": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5587": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5588": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7638
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "5590": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5592": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5593": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5595": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5596": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5597": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7648
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5598": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7657
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5599": {
      "branch": 147,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7627,
        7657
      ],
      "op": "EQ",
      "path": "6"
    },
    "5600": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1637"
    },
    "5603": {
      "branch": 147,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5604": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5606": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5613": {
      "op": "SHL"
    },
    "5614": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5615": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5618": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5620": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5621": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "ADD",
      "path": "6"
    },
    "5622": {
      "op": "MSTORE"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5625": {
      "op": "DUP1"
    },
    "5626": {
      "op": "DUP3"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "op": "MSTORE"
    },
    "5629": {
      "op": "PUSH32",
      "value": "0x4A6F62206372656174696F6E207265717565737420646F6573206E6F74206578"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5664": {
      "op": "DUP3"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "MSTORE"
    },
    "5667": {
      "op": "PUSH4",
      "value": "0x34B9BA17"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5674": {
      "op": "SHL"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5677": {
      "op": "DUP3"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "op": "MSTORE"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5682": {
      "op": "ADD"
    },
    "5683": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "5686": {
      "op": "JUMP"
    },
    "5687": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7606,
        7719
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5688": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7730,
        7756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5690": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5691": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5692": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5693": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "5695": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5697": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5698": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5699": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5700": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5702": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5703": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5704": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5705": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7813,
        7839
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5707": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7813,
        7839
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5708": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7813,
        7839
      ],
      "op": "ADD",
      "path": "6"
    },
    "5709": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7813,
        7846
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5710": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7876,
        7886
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 76
    },
    "5711": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5712": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5713": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7875
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5715": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7875
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5716": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7875
      ],
      "op": "ADD",
      "path": "6"
    },
    "5717": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5718": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5719": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5720": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5721": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7887
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5722": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5723": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5726": {
      "op": "NOT"
    },
    "5727": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "AND",
      "path": "6"
    },
    "5728": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7890,
        7894
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5730": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "OR",
      "path": "6"
    },
    "5731": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5732": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5733": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7857,
        7894
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "5735": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8005,
        8045
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5736": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8005,
        8045
      ],
      "op": "AND",
      "path": "6"
    },
    "5737": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8005,
        8030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1671"
    },
    "5740": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7759,
        7777
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5741": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8005,
        8021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2315"
    },
    "5744": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        8005,
        8030
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5745": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8005,
        8030
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5746": {
      "branch": 148,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8005,
        8045
      ],
      "op": "SUB",
      "path": "6"
    },
    "5747": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8001,
        8354
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1714"
    },
    "5750": {
      "branch": 148,
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8001,
        8354
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5751": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8061,
        8076
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5753": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5754": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5755": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5756": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8083
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6D"
    },
    "5758": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5760": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5761": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5763": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5764": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8079,
        8090
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5765": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8104,
        8118
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 77
    },
    "5766": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8104,
        8118
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5767": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8104,
        8118
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5768": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 78,
      "value": "0x1"
    },
    "5770": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5771": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5772": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "ADD",
      "path": "6"
    },
    "5773": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5774": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8141
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5775": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8141
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5776": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8141
      ],
      "op": "ADD",
      "path": "6"
    },
    "5777": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5778": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5785": {
      "op": "SHL"
    },
    "5786": {
      "op": "SUB"
    },
    "5787": {
      "op": "NOT"
    },
    "5788": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "AND",
      "path": "6"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5795": {
      "op": "SHL"
    },
    "5796": {
      "op": "SUB"
    },
    "5797": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5798": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5799": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8144,
        8159
      ],
      "op": "AND",
      "path": "6"
    },
    "5800": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5801": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5802": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5803": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "OR",
      "path": "6"
    },
    "5804": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5805": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8132,
        8159
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5806": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8188,
        8204
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 79,
      "value": "0x2"
    },
    "5808": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8188,
        8204
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5809": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8188,
        8204
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5810": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8188,
        8204
      ],
      "op": "ADD",
      "path": "6"
    },
    "5811": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8188,
        8204
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5812": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8173,
        8185
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5813": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8173,
        8185
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5814": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8173,
        8185
      ],
      "op": "ADD",
      "path": "6"
    },
    "5815": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8173,
        8204
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5816": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8243,
        8269
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 80,
      "value": "0x3"
    },
    "5818": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8243,
        8269
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5819": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8243,
        8269
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5820": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8243,
        8269
      ],
      "op": "ADD",
      "path": "6"
    },
    "5821": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8269
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5822": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8269
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5823": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16CB"
    },
    "5826": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8269
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5827": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8240
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5828": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8240
      ],
      "op": "ADD",
      "path": "6"
    },
    "5829": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8240
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5830": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8243,
        8269
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5831": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2430"
    },
    "5834": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        8218,
        8269
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5835": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8218,
        8269
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8300
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 81,
      "value": "0x6"
    },
    "5839": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8300
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5840": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8300
      ],
      "op": "ADD",
      "path": "6"
    },
    "5841": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8304
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5842": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8304
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5845": {
      "op": "NOT"
    },
    "5846": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8304
      ],
      "op": "AND",
      "path": "6"
    },
    "5847": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8304
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5848": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8304
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5849": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8303,
        8304
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5851": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 82
    },
    "5852": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5853": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5854": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8336
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "5856": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5858": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5859": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5861": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5862": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5863": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5864": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5865": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5866": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8283,
        8304
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5868": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5869": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "ADD",
      "path": "6"
    },
    "5870": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5871": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5878": {
      "op": "SHL"
    },
    "5879": {
      "op": "SUB"
    },
    "5880": {
      "op": "NOT"
    },
    "5881": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "AND",
      "path": "6"
    },
    "5882": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5883": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5884": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5886": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5887": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "ADD",
      "path": "6"
    },
    "5888": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5889": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5890": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5891": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8325,
        8343
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5892": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1710"
    },
    "5895": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5897": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5898": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "ADD",
      "path": "6"
    },
    "5899": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8303,
        8304
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5900": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2470"
    },
    "5903": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "i",
      "offset": [
        8318,
        8343
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5904": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5905": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "POP",
      "path": "6"
    },
    "5906": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8318,
        8343
      ],
      "op": "POP",
      "path": "6"
    },
    "5907": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8047,
        8354
      ],
      "op": "POP",
      "path": "6"
    },
    "5908": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        8001,
        8354
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5909": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7404,
        8360
      ],
      "op": "POP",
      "path": "6"
    },
    "5910": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7404,
        8360
      ],
      "op": "POP",
      "path": "6"
    },
    "5911": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7404,
        8360
      ],
      "op": "POP",
      "path": "6"
    },
    "5912": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7404,
        8360
      ],
      "op": "POP",
      "path": "6"
    },
    "5913": {
      "fn": "SmartNodes.approveJobCreation",
      "offset": [
        7352,
        8360
      ],
      "op": "POP",
      "path": "6"
    },
    "5914": {
      "fn": "SmartNodes.approveJobCreation",
      "jump": "o",
      "offset": [
        7352,
        8360
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5915": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4351,
        4942
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5916": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4422,
        4423
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 83,
      "value": "0x0"
    },
    "5918": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4413,
        4419
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5919": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4413,
        4423
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5924": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4413,
        4423
      ],
      "op": "AND",
      "path": "6"
    },
    "5925": {
      "branch": 149,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4413,
        4423
      ],
      "op": "GT",
      "path": "6"
    },
    "5926": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1741"
    },
    "5929": {
      "branch": 149,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5930": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5932": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5939": {
      "op": "SHL"
    },
    "5940": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5941": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5942": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5944": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "ADD",
      "path": "6"
    },
    "5945": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "5948": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5949": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AD"
    },
    "5952": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        4405,
        4461
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5953": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4405,
        4461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5954": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4489,
        4499
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 84
    },
    "5955": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5957": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5958": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5959": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5960": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "5962": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5964": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5965": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5967": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5968": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5969": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5970": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4479,
        4510
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "5975": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4479,
        4510
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5976": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4479,
        4510
      ],
      "op": "AND",
      "path": "6"
    },
    "5977": {
      "op": "GT"
    },
    "5978": {
      "branch": 150,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4479,
        4510
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5979": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x179E"
    },
    "5982": {
      "branch": 150,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5983": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5985": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5986": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5992": {
      "op": "SHL"
    },
    "5993": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5994": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5997": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5999": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6000": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "ADD",
      "path": "6"
    },
    "6001": {
      "op": "MSTORE"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6006": {
      "op": "DUP3"
    },
    "6007": {
      "op": "ADD"
    },
    "6008": {
      "op": "MSTORE"
    },
    "6009": {
      "op": "PUSH21",
      "value": "0x24B739BAB33334B1B4B2B73A103130B630B731B297"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "6033": {
      "op": "SHL"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6036": {
      "op": "DUP3"
    },
    "6037": {
      "op": "ADD"
    },
    "6038": {
      "op": "MSTORE"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6041": {
      "op": "ADD"
    },
    "6042": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "6045": {
      "op": "JUMP"
    },
    "6046": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4471,
        4536
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6047": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4590,
        4600
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6048": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4547,
        4566
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6050": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6051": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6052": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6053": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x66"
    },
    "6055": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6057": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6058": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6060": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6061": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6062": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6063": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4569,
        4601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6064": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4619,
        4635
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 85
    },
    "6065": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4619,
        4635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6066": {
      "branch": 151,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4619,
        4635
      ],
      "op": "SUB",
      "path": "6"
    },
    "6067": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FE"
    },
    "6070": {
      "branch": 151,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6071": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6073": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6080": {
      "op": "SHL"
    },
    "6081": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6082": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6085": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6087": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6088": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "ADD",
      "path": "6"
    },
    "6089": {
      "op": "MSTORE"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6094": {
      "op": "DUP3"
    },
    "6095": {
      "op": "ADD"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220646F6573206E6F742065786973742E00000000000000"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6132": {
      "op": "DUP3"
    },
    "6133": {
      "op": "ADD"
    },
    "6134": {
      "op": "MSTORE"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6137": {
      "op": "ADD"
    },
    "6138": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "6141": {
      "op": "JUMP"
    },
    "6142": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4611,
        4665
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6143": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4675,
        4702
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6145": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6146": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6147": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6148": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x65"
    },
    "6150": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6152": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6153": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6155": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6156": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4705,
        4728
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6157": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 86,
      "value": "0x5"
    },
    "6159": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6160": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "ADD",
      "path": "6"
    },
    "6161": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6162": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6165": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6166": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "DIV",
      "path": "6"
    },
    "6167": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "6169": {
      "branch": 152,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4746,
        4764
      ],
      "op": "AND",
      "path": "6"
    },
    "6170": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1860"
    },
    "6173": {
      "branch": 152,
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6174": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6176": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6183": {
      "op": "SHL"
    },
    "6184": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6185": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6188": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6190": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6191": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "ADD",
      "path": "6"
    },
    "6192": {
      "op": "MSTORE"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6197": {
      "op": "DUP3"
    },
    "6198": {
      "op": "ADD"
    },
    "6199": {
      "op": "MSTORE"
    },
    "6200": {
      "op": "PUSH24",
      "value": "0x2B30B634B230BA37B91034B9903737BA1030B1BA34BB3297"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6227": {
      "op": "SHL"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6230": {
      "op": "DUP3"
    },
    "6231": {
      "op": "ADD"
    },
    "6232": {
      "op": "MSTORE"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6235": {
      "op": "ADD"
    },
    "6236": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "6239": {
      "op": "JUMP"
    },
    "6240": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4738,
        4793
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6241": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4804,
        4851
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 87,
      "value": "0x1871"
    },
    "6244": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4817,
        4827
      ],
      "op": "CALLER",
      "path": "6"
    },
    "6245": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4837,
        4841
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "6246": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4844,
        4850
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6247": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4804,
        4851
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "6252": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4804,
        4851
      ],
      "op": "AND",
      "path": "6"
    },
    "6253": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4804,
        4816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x955"
    },
    "6256": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        4804,
        4851
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6257": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4804,
        4851
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6258": {
      "op": "POP"
    },
    "6259": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4877
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 88,
      "value": "0x3"
    },
    "6261": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4877
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6262": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4877
      ],
      "op": "ADD",
      "path": "6"
    },
    "6263": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6264": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6265": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4881,
        4887
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6266": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4881,
        4887
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6267": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4877
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6268": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4877
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6270": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4877
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6271": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188F"
    },
    "6274": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6275": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4881,
        4887
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6276": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4881,
        4887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6277": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "6282": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "AND",
      "path": "6"
    },
    "6283": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A37"
    },
    "6286": {
      "fn": "SmartNodes.lockTokens",
      "jump": "i",
      "offset": [
        4861,
        4887
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6287": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6288": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6289": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "POP",
      "path": "6"
    },
    "6290": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6293": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "EXP",
      "path": "6"
    },
    "6294": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6295": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6296": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6297": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "6302": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "MUL",
      "path": "6"
    },
    "6303": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "NOT",
      "path": "6"
    },
    "6304": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "AND",
      "path": "6"
    },
    "6305": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6306": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6307": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "6312": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "AND",
      "path": "6"
    },
    "6313": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "MUL",
      "path": "6"
    },
    "6314": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "OR",
      "path": "6"
    },
    "6315": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6316": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6317": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4861,
        4887
      ],
      "op": "POP",
      "path": "6"
    },
    "6318": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4916,
        4926
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 89
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6325": {
      "op": "SHL"
    },
    "6326": {
      "op": "SUB"
    },
    "6327": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "AND",
      "path": "6"
    },
    "6328": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
    },
    "6361": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4928,
        4934
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6362": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6364": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6365": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC41"
    },
    "6368": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6369": {
      "fn": "SmartNodes.lockTokens",
      "offset": [
        4903,
        4935
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6370": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6375": {
      "op": "SWAP2"
    },
    "6376": {
      "op": "SWAP1"
    },
    "6377": {
      "op": "SWAP2"
    },
    "6378": {
      "op": "AND"
    },
    "6379": {
      "op": "DUP2"
    },
    "6380": {
      "op": "MSTORE"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6383": {
      "op": "ADD"
    },
    "6384": {
      "op": "SWAP1"
    },
    "6385": {
      "op": "JUMP"
    },
    "6386": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6387": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14578,
        14594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6389": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14622,
        14632
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 90,
      "value": "0x71"
    },
    "6391": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14622,
        14632
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6392": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14614,
        14619
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6393": {
      "branch": 153,
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14614,
        14632
      ],
      "op": "LT",
      "path": "6"
    },
    "6394": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x193D"
    },
    "6397": {
      "branch": 153,
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6398": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6400": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6409": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6412": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6414": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6415": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "ADD",
      "path": "6"
    },
    "6416": {
      "op": "MSTORE"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6421": {
      "op": "DUP3"
    },
    "6422": {
      "op": "ADD"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH21",
      "value": "0x125B9D985B1A59081A9BD894995C5D595CDD081251"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6448": {
      "op": "SHL"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6451": {
      "op": "DUP3"
    },
    "6452": {
      "op": "ADD"
    },
    "6453": {
      "op": "MSTORE"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6456": {
      "op": "ADD"
    },
    "6457": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "6460": {
      "op": "JUMP"
    },
    "6461": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14606,
        14658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6462": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14668,
        14693
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6464": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6465": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6466": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6467": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14707
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "6469": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6471": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6472": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6474": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6475": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14696,
        14714
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6476": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14728,
        14737
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6477": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14728,
        14737
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6478": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14728,
        14746
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6479": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14728,
        14746
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6480": {
      "branch": 154,
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14728,
        14746
      ],
      "op": "SUB",
      "path": "6"
    },
    "6481": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14724,
        14960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19C5"
    },
    "6484": {
      "branch": 154,
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14724,
        14960
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6485": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14794
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6487": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6488": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6489": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6490": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6E"
    },
    "6492": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6494": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6495": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6496": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6497": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6499": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6500": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6501": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14815
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6502": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "6504": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6505": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6506": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6507": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6508": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6509": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6510": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6511": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MUL",
      "path": "6"
    },
    "6512": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6513": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6514": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6515": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6516": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6517": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6518": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6519": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6520": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6521": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6522": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6523": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6524": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6525": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14851
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6526": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6527": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6528": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6529": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14797,
        14851
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6530": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6531": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6532": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6533": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B7"
    },
    "6536": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6537": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6539": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MUL",
      "path": "6"
    },
    "6540": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6541": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6542": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6543": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6544": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6546": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6547": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6549": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6551": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6552": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6553": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6554": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6555": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "SUB"
    },
    "6564": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "AND",
      "path": "6"
    },
    "6565": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6566": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6567": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6569": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6570": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6571": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6572": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6573": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6575": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "ADD",
      "path": "6"
    },
    "6576": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6577": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6578": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "GT",
      "path": "6"
    },
    "6579": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1999"
    },
    "6582": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6583": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6584": {
      "op": "POP"
    },
    "6585": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6586": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14762,
        14851
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "6587": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "6588": {
      "op": "POP"
    },
    "6589": {
      "op": "POP"
    },
    "6590": {
      "op": "POP"
    },
    "6591": {
      "op": "POP"
    },
    "6592": {
      "op": "POP"
    },
    "6593": {
      "op": "POP"
    },
    "6594": {
      "op": "POP"
    },
    "6595": {
      "op": "POP"
    },
    "6596": {
      "fn": "SmartNodes.getJobRequestValidators",
      "jump": "o",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6597": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14724,
        14960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6598": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 91,
      "value": "0x40"
    },
    "6600": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6607": {
      "op": "SHL"
    },
    "6608": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6609": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6612": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6614": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6615": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "ADD",
      "path": "6"
    },
    "6616": {
      "op": "MSTORE"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6621": {
      "op": "DUP3"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "MSTORE"
    },
    "6624": {
      "op": "PUSH21",
      "value": "0x4A6F6252657175657374206E6F7420666F756E6421"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6648": {
      "op": "SHL"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6651": {
      "op": "DUP3"
    },
    "6652": {
      "op": "ADD"
    },
    "6653": {
      "op": "MSTORE"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14918,
        14949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "6660": {
      "op": "JUMP"
    },
    "6661": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14724,
        14960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6662": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14596,
        14966
      ],
      "op": "POP",
      "path": "6"
    },
    "6663": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6664": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6665": {
      "fn": "SmartNodes.getJobRequestValidators",
      "offset": [
        14493,
        14966
      ],
      "op": "POP",
      "path": "6"
    },
    "6666": {
      "fn": "SmartNodes.getJobRequestValidators",
      "jump": "o",
      "offset": [
        14493,
        14966
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6667": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6674": {
      "op": "SHL"
    },
    "6675": {
      "op": "SUB"
    },
    "6676": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 92
    },
    "6677": {
      "branch": 168,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10591,
        10610
      ],
      "op": "AND",
      "path": "1"
    },
    "6678": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A6D"
    },
    "6681": {
      "branch": 168,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6682": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6684": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6691": {
      "op": "SHL"
    },
    "6692": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6693": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6696": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6698": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6699": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "ADD",
      "path": "1"
    },
    "6700": {
      "op": "MSTORE"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6703": {
      "op": "DUP1"
    },
    "6704": {
      "op": "DUP3"
    },
    "6705": {
      "op": "ADD"
    },
    "6706": {
      "op": "MSTORE"
    },
    "6707": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6742": {
      "op": "DUP3"
    },
    "6743": {
      "op": "ADD"
    },
    "6744": {
      "op": "MSTORE"
    },
    "6745": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6752": {
      "op": "SHL"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6755": {
      "op": "DUP3"
    },
    "6756": {
      "op": "ADD"
    },
    "6757": {
      "op": "MSTORE"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6760": {
      "op": "ADD"
    },
    "6761": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "6764": {
      "op": "JUMP"
    },
    "6765": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10583,
        10651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6772": {
      "op": "SHL"
    },
    "6773": {
      "op": "SUB"
    },
    "6774": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 93
    },
    "6775": {
      "branch": 169,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10669,
        10690
      ],
      "op": "AND",
      "path": "1"
    },
    "6776": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ACE"
    },
    "6779": {
      "branch": 169,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6780": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6782": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6789": {
      "op": "SHL"
    },
    "6790": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6791": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6794": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6796": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6797": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "ADD",
      "path": "1"
    },
    "6798": {
      "op": "MSTORE"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6803": {
      "op": "DUP3"
    },
    "6804": {
      "op": "ADD"
    },
    "6805": {
      "op": "MSTORE"
    },
    "6806": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6841": {
      "op": "DUP3"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "MSTORE"
    },
    "6844": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6849": {
      "op": "SHL"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6852": {
      "op": "DUP3"
    },
    "6853": {
      "op": "ADD"
    },
    "6854": {
      "op": "MSTORE"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6857": {
      "op": "ADD"
    },
    "6858": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "6861": {
      "op": "JUMP"
    },
    "6862": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10661,
        10729
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6869": {
      "op": "SHL"
    },
    "6870": {
      "op": "SUB"
    },
    "6871": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 94
    },
    "6872": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6873": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "AND",
      "path": "1"
    },
    "6874": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6876": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6877": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6878": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6879": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10751
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "6881": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6883": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6884": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6885": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6886": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6888": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6889": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6890": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10758
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6891": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6892": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP8",
      "path": "1"
    },
    "6893": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "AND",
      "path": "1"
    },
    "6894": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6895": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6896": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6897": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6898": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6899": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6900": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6901": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6902": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6903": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10767
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6904": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6905": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6906": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10740,
        10776
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6907": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 95
    },
    "6908": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6909": {
      "op": "DUP5"
    },
    "6910": {
      "op": "DUP2"
    },
    "6911": {
      "op": "MSTORE"
    },
    "6912": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6945": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6949": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6950": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6951": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6952": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SUB",
      "path": "1"
    },
    "6953": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6954": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10791,
        10823
      ],
      "op": "LOG3",
      "path": "1"
    },
    "6955": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "6956": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "6957": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10460,
        10830
      ],
      "op": "POP",
      "path": "1"
    },
    "6958": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10460,
        10830
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6959": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10232,
        11637
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6960": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10388,
        10401
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 96,
      "value": "0x72"
    },
    "6962": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10388,
        10401
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6963": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10324,
        10340
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6965": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10324,
        10340
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6966": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10388,
        10401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "6968": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10388,
        10401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6969": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10388,
        10401
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6970": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10388,
        10401
      ],
      "op": "AND",
      "path": "6"
    },
    "6971": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6972": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6973": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "AND",
      "path": "6"
    },
    "6974": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "LT",
      "path": "6"
    },
    "6975": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6976": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6977": {
      "branch": 155,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6978": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10433
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B59"
    },
    "6981": {
      "branch": 155,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10433
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6982": {
      "op": "POP"
    },
    "6983": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x72"
    },
    "6985": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6986": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "6988": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6991": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6992": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6993": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "DIV",
      "path": "6"
    },
    "6994": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6995": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10420,
        10433
      ],
      "op": "AND",
      "path": "6"
    },
    "6996": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10405,
        10433
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6997": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10405,
        10433
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6998": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10405,
        10433
      ],
      "op": "AND",
      "path": "6"
    },
    "6999": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10405,
        10433
      ],
      "op": "GT",
      "path": "6"
    },
    "7000": {
      "branch": 156,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10405,
        10433
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7001": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10373,
        10433
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7002": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BCB"
    },
    "7005": {
      "branch": 156,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7006": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7008": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7015": {
      "op": "SHL"
    },
    "7016": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7017": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7020": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7022": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7023": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "ADD",
      "path": "6"
    },
    "7024": {
      "op": "MSTORE"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7029": {
      "op": "DUP3"
    },
    "7030": {
      "op": "ADD"
    },
    "7031": {
      "op": "MSTORE"
    },
    "7032": {
      "op": "PUSH32",
      "value": "0x6E56616C696461746F7273206D757374206265206265747765656E206D696E56"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7067": {
      "op": "DUP3"
    },
    "7068": {
      "op": "ADD"
    },
    "7069": {
      "op": "MSTORE"
    },
    "7070": {
      "op": "PUSH32",
      "value": "0x616C696461746F7220616E64206D617856616C696461746F7200000000000000"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7105": {
      "op": "DUP3"
    },
    "7106": {
      "op": "ADD"
    },
    "7107": {
      "op": "MSTORE"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7110": {
      "op": "ADD"
    },
    "7111": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "7114": {
      "op": "JUMP"
    },
    "7115": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10352,
        10516
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7116": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10561,
        10562
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 97,
      "value": "0x0"
    },
    "7118": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10558
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7119": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10562
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "7121": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10562
      ],
      "op": "AND",
      "path": "6"
    },
    "7122": {
      "branch": 157,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10562
      ],
      "op": "GT",
      "path": "6"
    },
    "7123": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10599
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7124": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10599
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7125": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10599
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE3"
    },
    "7128": {
      "branch": 157,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10599
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7129": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10599
      ],
      "op": "POP",
      "path": "6"
    },
    "7130": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10581,
        10599
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "7132": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10581,
        10599
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7133": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10566,
        10577
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7134": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10566,
        10599
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "7136": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10566,
        10599
      ],
      "op": "AND",
      "path": "6"
    },
    "7137": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10566,
        10599
      ],
      "op": "GT",
      "path": "6"
    },
    "7138": {
      "branch": 158,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10566,
        10599
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7139": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10547,
        10599
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7140": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C57"
    },
    "7143": {
      "branch": 158,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7144": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7146": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7147": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7154": {
      "op": "SHL"
    },
    "7155": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7156": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7159": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7161": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7162": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "ADD",
      "path": "6"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7166": {
      "op": "DUP2"
    },
    "7167": {
      "op": "ADD"
    },
    "7168": {
      "op": "SWAP2"
    },
    "7169": {
      "op": "SWAP1"
    },
    "7170": {
      "op": "SWAP2"
    },
    "7171": {
      "op": "MSTORE"
    },
    "7172": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820617661696C61626C652076616C696461746F727320"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7207": {
      "op": "DUP3"
    },
    "7208": {
      "op": "ADD"
    },
    "7209": {
      "op": "MSTORE"
    },
    "7210": {
      "op": "PUSH32",
      "value": "0x666F72206A6F622C20706C656173652074727920616761696E206C617465722E"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7245": {
      "op": "DUP3"
    },
    "7246": {
      "op": "ADD"
    },
    "7247": {
      "op": "MSTORE"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7250": {
      "op": "ADD"
    },
    "7251": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "7254": {
      "op": "JUMP"
    },
    "7255": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10526,
        10689
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7256": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10700,
        10735
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7258": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10752,
        10763
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7259": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "7261": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "AND",
      "path": "6"
    },
    "7262": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7271": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7272": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "GT",
      "path": "6"
    },
    "7273": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7274": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C75"
    },
    "7277": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7278": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C75"
    },
    "7281": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25D0"
    },
    "7284": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        10738,
        10764
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7285": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7286": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7288": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7289": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7290": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7291": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7292": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7293": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7294": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7296": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "MUL",
      "path": "6"
    },
    "7297": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7299": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "ADD",
      "path": "6"
    },
    "7300": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7301": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "ADD",
      "path": "6"
    },
    "7302": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7304": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7305": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7306": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7307": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C9E"
    },
    "7310": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7311": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7312": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7314": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "ADD",
      "path": "6"
    },
    "7315": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7317": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7318": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "MUL",
      "path": "6"
    },
    "7319": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7320": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "7321": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7322": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "7323": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "ADD",
      "path": "6"
    },
    "7324": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7325": {
      "op": "POP"
    },
    "7326": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7327": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10738,
        10764
      ],
      "op": "POP",
      "path": "6"
    },
    "7328": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10700,
        10764
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7329": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10700,
        10764
      ],
      "op": "POP",
      "path": "6"
    },
    "7330": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10774,
        10795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7332": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10815,
        10824
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7333": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7334": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10834,
        10845
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7335": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10830,
        10845
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "7337": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10830,
        10845
      ],
      "op": "AND",
      "path": "6"
    },
    "7338": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10830,
        10831
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7339": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10830,
        10845
      ],
      "op": "LT",
      "path": "6"
    },
    "7340": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7341": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DEC"
    },
    "7344": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7345": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10866,
        10879
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7347": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10897,
        11585
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7348": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10921,
        10922
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7349": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10904,
        10917
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7350": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10904,
        10922
      ],
      "op": "SUB",
      "path": "6"
    },
    "7351": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10897,
        11585
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DE3"
    },
    "7354": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10897,
        11585
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7355": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10942,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7357": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11120,
        11138
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "7359": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11120,
        11138
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7360": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11040,
        11055
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "7361": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11057,
        11067
      ],
      "op": "CALLER",
      "path": "6"
    },
    "7362": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7363": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7364": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CCC"
    },
    "7367": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7368": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "7371": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        11069,
        11076
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7372": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7373": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "7374": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11069,
        11076
      ],
      "op": "POP",
      "path": "6"
    },
    "7375": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7377": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7378": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7380": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "ADD",
      "path": "6"
    },
    "7381": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D03"
    },
    "7384": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7385": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7386": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7387": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7388": {
      "op": "SWAP3"
    },
    "7389": {
      "op": "DUP4"
    },
    "7390": {
      "op": "MSTORE"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7393": {
      "op": "SWAP2"
    },
    "7394": {
      "op": "SWAP1"
    },
    "7395": {
      "op": "SWAP2"
    },
    "7396": {
      "op": "SHL"
    },
    "7397": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7410": {
      "op": "NOT"
    },
    "7411": {
      "op": "AND"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7414": {
      "op": "DUP4"
    },
    "7415": {
      "op": "ADD"
    },
    "7416": {
      "op": "MSTORE"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7419": {
      "op": "DUP3"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "MSTORE"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "7424": {
      "op": "ADD"
    },
    "7425": {
      "op": "SWAP1"
    },
    "7426": {
      "op": "JUMP"
    },
    "7427": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7428": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7430": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7431": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7433": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7434": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7435": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SUB",
      "path": "6"
    },
    "7436": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SUB",
      "path": "6"
    },
    "7437": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7438": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7439": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7440": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7442": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11023,
        11077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7443": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10988,
        11099
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7444": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10988,
        11099
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7445": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10988,
        11099
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7446": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10988,
        11099
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7448": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10988,
        11099
      ],
      "op": "ADD",
      "path": "6"
    },
    "7449": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10988,
        11099
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7450": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7452": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11117
      ],
      "op": "SHR",
      "path": "6"
    },
    "7453": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11138
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D26"
    },
    "7456": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11138
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7457": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11138
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7458": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11138
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A54"
    },
    "7461": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        10959,
        11138
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7462": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10959,
        11138
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7463": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7465": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7466": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7467": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7468": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11179
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "7470": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7472": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7473": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7475": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7476": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7477": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11187
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7478": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10942,
        11138
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7479": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10942,
        11138
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7480": {
      "op": "POP"
    },
    "7481": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11191,
        11192
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7483": {
      "branch": 159,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11161,
        11192
      ],
      "op": "SUB",
      "path": "6"
    },
    "7484": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11157,
        11571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D7A"
    },
    "7487": {
      "branch": 159,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11157,
        11571
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7488": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11271,
        11306
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 98,
      "value": "0x1D4A"
    },
    "7491": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11293,
        11299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7492": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11301,
        11305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7494": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11271,
        11292
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2166"
    },
    "7497": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        11271,
        11306
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7498": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11271,
        11306
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7499": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11352,
        11358
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 99
    },
    "7500": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11346
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7501": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11347,
        11348
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7502": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7503": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7504": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7505": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "LT",
      "path": "6"
    },
    "7506": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D5D"
    },
    "7509": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7510": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D5D"
    },
    "7513": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2855"
    },
    "7516": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        11328,
        11349
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7517": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7518": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7520": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7521": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7522": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "MUL",
      "path": "6"
    },
    "7523": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7524": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7525": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7526": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "ADD",
      "path": "6"
    },
    "7527": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11349
      ],
      "op": "ADD",
      "path": "6"
    },
    "7528": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11328,
        11358
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7529": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 100
    },
    "7530": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D72"
    },
    "7533": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7534": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "7537": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        11380,
        11395
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7538": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7539": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "7540": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "POP",
      "path": "6"
    },
    "7541": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11380,
        11395
      ],
      "op": "POP",
      "path": "6"
    },
    "7542": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11157,
        11571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DDD"
    },
    "7545": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11157,
        11571
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7546": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11157,
        11571
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7547": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11432,
        11434
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x32"
    },
    "7549": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11424,
        11429
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7550": {
      "branch": 160,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11424,
        11434
      ],
      "op": "LT",
      "path": "6"
    },
    "7551": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7552": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D95"
    },
    "7555": {
      "branch": 160,
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7556": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 101
    },
    "7557": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8D"
    },
    "7560": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7561": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "7564": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "i",
      "offset": [
        11458,
        11465
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7565": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7566": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7567": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "POP",
      "path": "6"
    },
    "7568": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11458,
        11465
      ],
      "op": "POP",
      "path": "6"
    },
    "7569": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DDD"
    },
    "7572": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7573": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7574": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 102,
      "value": "0x40"
    },
    "7576": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7583": {
      "op": "SHL"
    },
    "7584": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7585": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7588": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7590": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7591": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "ADD",
      "path": "6"
    },
    "7592": {
      "op": "MSTORE"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7597": {
      "op": "DUP3"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH32",
      "value": "0x4D61782076616C696461746F7220726571756573747320726561636865640000"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7635": {
      "op": "DUP3"
    },
    "7636": {
      "op": "ADD"
    },
    "7637": {
      "op": "MSTORE"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11512,
        11552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "7644": {
      "op": "JUMP"
    },
    "7645": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11420,
        11571
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7646": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10924,
        11585
      ],
      "op": "POP",
      "path": "6"
    },
    "7647": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10897,
        11585
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB3"
    },
    "7650": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10897,
        11585
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7651": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10897,
        11585
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7652": {
      "op": "POP"
    },
    "7653": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10847,
        10850
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 103,
      "value": "0x1"
    },
    "7655": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10847,
        10850
      ],
      "op": "ADD",
      "path": "6"
    },
    "7656": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA5"
    },
    "7659": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7660": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10810,
        11595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7661": {
      "op": "POP"
    },
    "7662": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11612,
        11630
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 104
    },
    "7663": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        11612,
        11630
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7664": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "offset": [
        10232,
        11637
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7665": {
      "op": "POP"
    },
    "7666": {
      "op": "POP"
    },
    "7667": {
      "op": "POP"
    },
    "7668": {
      "fn": "SmartNodes._pseudorandomValidatorSelection",
      "jump": "o",
      "offset": [
        10232,
        11637
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7669": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7676": {
      "op": "SHL"
    },
    "7677": {
      "op": "SUB"
    },
    "7678": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7679": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7680": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "1"
    },
    "7681": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7683": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7684": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7685": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7686": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x34"
    },
    "7688": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7690": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7691": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7692": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7693": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7695": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7696": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7697": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7698": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7699": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7700": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "1"
    },
    "7701": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7702": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7703": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7704": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7705": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7706": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7707": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7710": {
      "op": "NOT"
    },
    "7711": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7712": {
      "branch": 170,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "1"
    },
    "7713": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E81"
    },
    "7716": {
      "branch": 170,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7717": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 105
    },
    "7718": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7719": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "1"
    },
    "7720": {
      "branch": 171,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7721": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E74"
    },
    "7724": {
      "branch": 171,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7725": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7727": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7734": {
      "op": "SHL"
    },
    "7735": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7736": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7739": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7741": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7742": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "1"
    },
    "7743": {
      "op": "MSTORE"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7748": {
      "op": "DUP3"
    },
    "7749": {
      "op": "ADD"
    },
    "7750": {
      "op": "MSTORE"
    },
    "7751": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7786": {
      "op": "DUP3"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "op": "MSTORE"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7791": {
      "op": "ADD"
    },
    "7792": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "7795": {
      "op": "JUMP"
    },
    "7796": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7797": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 106,
      "value": "0x1E81"
    },
    "7800": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7801": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7802": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7803": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7804": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "1"
    },
    "7805": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0B"
    },
    "7808": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7809": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7810": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "7811": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "7812": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "7813": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "1"
    },
    "7814": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7815": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        8476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7822": {
      "op": "SHL"
    },
    "7823": {
      "op": "SUB"
    },
    "7824": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 107
    },
    "7825": {
      "branch": 172,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7951,
        7969
      ],
      "op": "AND",
      "path": "1"
    },
    "7826": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EEB"
    },
    "7829": {
      "branch": 172,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7830": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7832": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7839": {
      "op": "SHL"
    },
    "7840": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7841": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7844": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7846": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7847": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "ADD",
      "path": "1"
    },
    "7848": {
      "op": "MSTORE"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7853": {
      "op": "DUP3"
    },
    "7854": {
      "op": "ADD"
    },
    "7855": {
      "op": "MSTORE"
    },
    "7856": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7891": {
      "op": "DUP3"
    },
    "7892": {
      "op": "ADD"
    },
    "7893": {
      "op": "MSTORE"
    },
    "7894": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7902": {
      "op": "SHL"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7905": {
      "op": "DUP3"
    },
    "7906": {
      "op": "ADD"
    },
    "7907": {
      "op": "MSTORE"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7910": {
      "op": "ADD"
    },
    "7911": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "7914": {
      "op": "JUMP"
    },
    "7915": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7943,
        8011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7922": {
      "op": "SHL"
    },
    "7923": {
      "op": "SUB"
    },
    "7924": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 108
    },
    "7925": {
      "branch": 173,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8029,
        8045
      ],
      "op": "AND",
      "path": "1"
    },
    "7926": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4D"
    },
    "7929": {
      "branch": 173,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7930": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7932": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7939": {
      "op": "SHL"
    },
    "7940": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7941": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7944": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7946": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7947": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "ADD",
      "path": "1"
    },
    "7948": {
      "op": "MSTORE"
    },
    "7949": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7953": {
      "op": "DUP3"
    },
    "7954": {
      "op": "ADD"
    },
    "7955": {
      "op": "MSTORE"
    },
    "7956": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7991": {
      "op": "DUP3"
    },
    "7992": {
      "op": "ADD"
    },
    "7993": {
      "op": "MSTORE"
    },
    "7994": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "8000": {
      "op": "SHL"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8003": {
      "op": "DUP3"
    },
    "8004": {
      "op": "ADD"
    },
    "8005": {
      "op": "MSTORE"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8008": {
      "op": "ADD"
    },
    "8009": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "8012": {
      "op": "JUMP"
    },
    "8013": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8021,
        8085
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8020": {
      "op": "SHL"
    },
    "8021": {
      "op": "SUB"
    },
    "8022": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8023": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "AND",
      "path": "1"
    },
    "8024": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8145,
        8164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8026": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8027": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8028": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8029": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "8031": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8033": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8034": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8036": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8037": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8038": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8167,
        8182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8039": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 109
    },
    "8040": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8041": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "LT",
      "path": "1"
    },
    "8042": {
      "branch": 174,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8200,
        8221
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8043": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC5"
    },
    "8046": {
      "branch": 174,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8047": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8049": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8050": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8056": {
      "op": "SHL"
    },
    "8057": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8058": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8061": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8063": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8064": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "ADD",
      "path": "1"
    },
    "8065": {
      "op": "MSTORE"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8070": {
      "op": "DUP3"
    },
    "8071": {
      "op": "ADD"
    },
    "8072": {
      "op": "MSTORE"
    },
    "8073": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8108": {
      "op": "DUP3"
    },
    "8109": {
      "op": "ADD"
    },
    "8110": {
      "op": "MSTORE"
    },
    "8111": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8120": {
      "op": "SHL"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8123": {
      "op": "DUP3"
    },
    "8124": {
      "op": "ADD"
    },
    "8125": {
      "op": "MSTORE"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8128": {
      "op": "ADD"
    },
    "8129": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "8132": {
      "op": "JUMP"
    },
    "8133": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8192,
        8264
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8140": {
      "op": "SHL"
    },
    "8141": {
      "op": "SUB"
    },
    "8142": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 110
    },
    "8143": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8144": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "AND",
      "path": "1"
    },
    "8145": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8147": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8148": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8149": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8150": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "8152": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8154": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8155": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8157": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8158": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8159": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8160": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8161": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8162": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8316,
        8336
      ],
      "op": "SUB",
      "path": "1"
    },
    "8163": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8164": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8336
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8165": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 111
    },
    "8166": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8167": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "AND",
      "path": "1"
    },
    "8168": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8169": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8170": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8171": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8172": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8369
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8173": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8174": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8175": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8176": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8177": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8178": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FFC"
    },
    "8181": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8182": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8183": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8330,
        8336
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8184": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289A"
    },
    "8187": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8188": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8189": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8190": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "8191": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "8192": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8193": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8194": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8195": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8356,
        8379
      ],
      "op": "POP",
      "path": "1"
    },
    "8196": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8412
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 112
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8203": {
      "op": "SHL"
    },
    "8204": {
      "op": "SUB"
    },
    "8205": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "8206": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8404,
        8408
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8213": {
      "op": "SHL"
    },
    "8214": {
      "op": "SUB"
    },
    "8215": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "AND",
      "path": "1"
    },
    "8216": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8249": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8414,
        8420
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8250": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8252": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8253": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2048"
    },
    "8256": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8257": {
      "op": "DUP2"
    },
    "8258": {
      "op": "MSTORE"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8261": {
      "op": "ADD"
    },
    "8262": {
      "op": "SWAP1"
    },
    "8263": {
      "op": "JUMP"
    },
    "8264": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8265": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8267": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8268": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8269": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8270": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SUB",
      "path": "1"
    },
    "8271": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8272": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8395,
        8421
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8273": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8432,
        8469
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 113,
      "value": "0x1E81"
    },
    "8276": {
      "fn": "SmartNodes.unlockTokens",
      "offset": [
        4948,
        6043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8277": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8284": {
      "op": "SHL"
    },
    "8285": {
      "op": "SUB"
    },
    "8286": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 114
    },
    "8287": {
      "branch": 175,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8835,
        8856
      ],
      "op": "AND",
      "path": "1"
    },
    "8288": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20AB"
    },
    "8291": {
      "branch": 175,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8292": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8294": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8301": {
      "op": "SHL"
    },
    "8302": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8303": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8306": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8308": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8309": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "ADD",
      "path": "1"
    },
    "8310": {
      "op": "MSTORE"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8315": {
      "op": "DUP3"
    },
    "8316": {
      "op": "ADD"
    },
    "8317": {
      "op": "MSTORE"
    },
    "8318": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8353": {
      "op": "DUP3"
    },
    "8354": {
      "op": "ADD"
    },
    "8355": {
      "op": "MSTORE"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8358": {
      "op": "ADD"
    },
    "8359": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "8362": {
      "op": "JUMP"
    },
    "8363": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8827,
        8892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8364": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8979,
        8985
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 115
    },
    "8365": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "8367": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8369": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8370": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8371": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20BD"
    },
    "8375": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8376": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8377": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289A"
    },
    "8380": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8381": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8382": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8383": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8384": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8963,
        8985
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8385": {
      "op": "POP"
    },
    "8386": {
      "op": "POP"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8393": {
      "op": "SHL"
    },
    "8394": {
      "op": "SUB"
    },
    "8395": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 116
    },
    "8396": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "AND",
      "path": "1"
    },
    "8397": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8399": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8400": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8401": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8402": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9004
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x33"
    },
    "8404": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8406": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8407": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8409": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8410": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8411": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8412": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8413": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8414": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8415": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8416": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20EA"
    },
    "8419": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8420": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8421": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9017,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8422": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289A"
    },
    "8425": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8426": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8427": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8428": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8429": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8995,
        9023
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8430": {
      "op": "POP"
    },
    "8431": {
      "op": "POP"
    },
    "8432": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 117,
      "value": "0x40"
    },
    "8434": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8435": {
      "op": "DUP2"
    },
    "8436": {
      "op": "DUP2"
    },
    "8437": {
      "op": "MSTORE"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8444": {
      "op": "SHL"
    },
    "8445": {
      "op": "SUB"
    },
    "8446": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8447": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "AND",
      "path": "1"
    },
    "8448": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8449": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8451": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9055,
        9056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8452": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8485": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8488": {
      "op": "ADD"
    },
    "8489": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8491": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8492": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8493": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8494": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SUB",
      "path": "1"
    },
    "8495": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8496": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9038,
        9075
      ],
      "op": "LOG3",
      "path": "1"
    },
    "8497": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9086,
        9134
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 118
    },
    "8498": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "POP",
      "path": "1"
    },
    "8499": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8752,
        9141
      ],
      "op": "POP",
      "path": "1"
    },
    "8500": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "o",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8501": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8502": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8504": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8505": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8508": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8509": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "8510": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8512": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "8513": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215C"
    },
    "8516": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8517": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8519": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8526": {
      "op": "SHL"
    },
    "8527": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8528": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8529": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8531": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "8532": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C3"
    },
    "8535": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8536": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A76"
    },
    "8539": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8540": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8541": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 119,
      "value": "0x2131"
    },
    "8544": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8545": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8546": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x238B"
    },
    "8549": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8550": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11643,
        12609
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8551": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11786,
        11787
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 120,
      "value": "0x0"
    },
    "8553": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11783
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8554": {
      "branch": 161,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11787
      ],
      "op": "GT",
      "path": "6"
    },
    "8555": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11823
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8556": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11823
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8557": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2177"
    },
    "8560": {
      "branch": 161,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11823
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8561": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11823
      ],
      "op": "POP",
      "path": "6"
    },
    "8562": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11805,
        11823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6F"
    },
    "8564": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11805,
        11823
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8565": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11791,
        11802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8566": {
      "branch": 162,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11791,
        11823
      ],
      "op": "LT",
      "path": "6"
    },
    "8567": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11772,
        11823
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8568": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B9"
    },
    "8571": {
      "branch": 162,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8572": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8574": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8581": {
      "op": "SHL"
    },
    "8582": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8583": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8586": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8588": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8589": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "ADD",
      "path": "6"
    },
    "8590": {
      "op": "MSTORE"
    },
    "8591": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8595": {
      "op": "DUP3"
    },
    "8596": {
      "op": "ADD"
    },
    "8597": {
      "op": "MSTORE"
    },
    "8598": {
      "op": "PUSH19",
      "value": "0x125B9D985B1A590815985B1A59185D1BDC9259"
    },
    "8618": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "8620": {
      "op": "SHL"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8623": {
      "op": "DUP3"
    },
    "8624": {
      "op": "ADD"
    },
    "8625": {
      "op": "MSTORE"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8628": {
      "op": "ADD"
    },
    "8629": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "8632": {
      "op": "JUMP"
    },
    "8633": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11751,
        11868
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8634": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11933,
        11934
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 121,
      "value": "0x0"
    },
    "8636": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8637": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8638": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8639": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "8641": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8643": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8644": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8646": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8647": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8648": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11899,
        11930
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8649": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2214"
    },
    "8652": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8653": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8655": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8662": {
      "op": "SHL"
    },
    "8663": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8664": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8667": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8669": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8670": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "ADD",
      "path": "6"
    },
    "8671": {
      "op": "MSTORE"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8676": {
      "op": "DUP3"
    },
    "8677": {
      "op": "ADD"
    },
    "8678": {
      "op": "MSTORE"
    },
    "8679": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206973206E6F74206F6E6C696E652E0000000000000000"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8714": {
      "op": "DUP3"
    },
    "8715": {
      "op": "ADD"
    },
    "8716": {
      "op": "MSTORE"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8719": {
      "op": "ADD"
    },
    "8720": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "8723": {
      "op": "JUMP"
    },
    "8724": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11878,
        11984
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8725": {
      "branch": 163,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11999,
        12007
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8726": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11995,
        12603
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8727": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11995,
        12603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22A2"
    },
    "8730": {
      "branch": 163,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11995,
        12603
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8731": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8733": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8734": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8735": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8736": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "8738": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8740": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8741": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8743": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8744": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8745": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12130
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8746": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12134,
        12135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8748": {
      "branch": 164,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12099,
        12135
      ],
      "op": "SUB",
      "path": "6"
    },
    "8749": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12095,
        12298
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2245"
    },
    "8752": {
      "branch": 164,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12095,
        12298
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8753": {
      "op": "POP"
    },
    "8754": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 122,
      "value": "0x0"
    },
    "8756": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8757": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8758": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8759": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "8761": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8763": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8764": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8766": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8767": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12186
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8768": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12189,
        12190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8770": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12190
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8771": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12155,
        12190
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8772": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "o",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8773": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12095,
        12298
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8774": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 123,
      "value": "0x40"
    },
    "8776": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8783": {
      "op": "SHL"
    },
    "8784": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8785": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8788": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8790": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8791": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "ADD",
      "path": "6"
    },
    "8792": {
      "op": "MSTORE"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8797": {
      "op": "DUP3"
    },
    "8798": {
      "op": "ADD"
    },
    "8799": {
      "op": "MSTORE"
    },
    "8800": {
      "op": "PUSH32",
      "value": "0x56616C696461746F72206265696E672061637469766174656420697320616C72"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8835": {
      "op": "DUP3"
    },
    "8836": {
      "op": "ADD"
    },
    "8837": {
      "op": "MSTORE"
    },
    "8838": {
      "op": "PUSH12",
      "value": "0x656164792061637469766521"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8853": {
      "op": "SHL"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8856": {
      "op": "DUP3"
    },
    "8857": {
      "op": "ADD"
    },
    "8858": {
      "op": "MSTORE"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8861": {
      "op": "ADD"
    },
    "8862": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12229,
        12283
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "8865": {
      "op": "JUMP"
    },
    "8866": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        11995,
        12603
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8867": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8869": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8870": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8871": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8872": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12426
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "8874": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8876": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8877": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8879": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8880": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8881": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8882": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12443,
        12444
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8884": {
      "branch": 165,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12408,
        12444
      ],
      "op": "SUB",
      "path": "6"
    },
    "8885": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12404,
        12593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22CD"
    },
    "8888": {
      "branch": 165,
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12404,
        12593
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8889": {
      "op": "POP"
    },
    "8890": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 124,
      "value": "0x0"
    },
    "8892": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8893": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8894": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8895": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12482
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x69"
    },
    "8897": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8899": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8900": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8902": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8903": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12495
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8904": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12498,
        12499
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8906": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12499
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8907": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12464,
        12499
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8908": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "o",
      "offset": [
        8752,
        9141
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8909": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12404,
        12593
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8910": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 125,
      "value": "0x40"
    },
    "8912": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8919": {
      "op": "SHL"
    },
    "8920": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8921": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8924": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8926": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8927": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "ADD",
      "path": "6"
    },
    "8928": {
      "op": "MSTORE"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8933": {
      "op": "DUP3"
    },
    "8934": {
      "op": "ADD"
    },
    "8935": {
      "op": "MSTORE"
    },
    "8936": {
      "op": "PUSH32",
      "value": "0x56616C696461746F7220697320616C726561647920696E616374697665210000"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8971": {
      "op": "DUP3"
    },
    "8972": {
      "op": "ADD"
    },
    "8973": {
      "op": "MSTORE"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8976": {
      "op": "ADD"
    },
    "8977": {
      "fn": "SmartNodes._updateValidatorState",
      "offset": [
        12538,
        12578
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C3"
    },
    "8980": {
      "op": "JUMP"
    },
    "8981": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9833,
        10182
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8982": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9924,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8984": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9924,
        9931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8985": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9924,
        9931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8986": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8987": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9994,
        10020
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "8989": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9994,
        10020
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8990": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9994,
        10020
      ],
      "op": "ADD",
      "path": "6"
    },
    "8991": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9994,
        10027
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8992": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9990,
        10027
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8993": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9990,
        10027
      ],
      "op": "LT",
      "path": "6"
    },
    "8994": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8995": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2384"
    },
    "8998": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8999": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10059
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9000": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10070
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9002": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10070
      ],
      "op": "ADD",
      "path": "6"
    },
    "9003": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9005": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10078
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9006": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10097
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "9008": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10097
      ],
      "op": "ADD",
      "path": "6"
    },
    "9009": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10098,
        10099
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9010": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9011": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9012": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9013": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "LT",
      "path": "6"
    },
    "9014": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2341"
    },
    "9017": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9018": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2341"
    },
    "9021": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2855"
    },
    "9024": {
      "fn": "SmartNodes._countSignatures",
      "jump": "i",
      "offset": [
        10071,
        10100
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9025": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9026": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9028": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9029": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9030": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9031": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9033": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9034": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9035": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9036": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9037": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9038": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "ADD",
      "path": "6"
    },
    "9039": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9046": {
      "op": "SHL"
    },
    "9047": {
      "op": "SUB"
    },
    "9048": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10071,
        10100
      ],
      "op": "AND",
      "path": "6"
    },
    "9049": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9050": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9051": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9052": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "ADD",
      "path": "6"
    },
    "9053": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9054": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9055": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9056": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9057": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9059": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "ADD",
      "path": "6"
    },
    "9060": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9061": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9062": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9063": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "9065": {
      "branch": 166,
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10052,
        10101
      ],
      "op": "AND",
      "path": "6"
    },
    "9066": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10048,
        10143
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9067": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10048,
        10143
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x237C"
    },
    "9070": {
      "branch": 166,
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10048,
        10143
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9071": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 126
    },
    "9072": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2378"
    },
    "9075": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9076": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2881"
    },
    "9079": {
      "fn": "SmartNodes._countSignatures",
      "jump": "i",
      "offset": [
        10121,
        10128
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9080": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9081": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9082": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "POP",
      "path": "6"
    },
    "9083": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10121,
        10128
      ],
      "op": "POP",
      "path": "6"
    },
    "9084": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10048,
        10143
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9085": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10029,
        10032
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 127,
      "value": "0x1"
    },
    "9087": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10029,
        10032
      ],
      "op": "ADD",
      "path": "6"
    },
    "9088": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x231A"
    },
    "9091": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9092": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9970,
        10153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9093": {
      "op": "POP"
    },
    "9094": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        10170,
        10175
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 128
    },
    "9095": {
      "fn": "SmartNodes._countSignatures",
      "offset": [
        9833,
        10182
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9096": {
      "op": "POP"
    },
    "9097": {
      "op": "POP"
    },
    "9098": {
      "fn": "SmartNodes._countSignatures",
      "jump": "o",
      "offset": [
        9833,
        10182
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9099": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9100": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9102": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9103": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9106": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9107": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "0"
    },
    "9108": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "9110": {
      "branch": 178,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "0"
    },
    "9111": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B2"
    },
    "9114": {
      "branch": 178,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9115": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9117": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9124": {
      "op": "SHL"
    },
    "9125": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9126": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9127": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9129": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "9130": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C3"
    },
    "9133": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9134": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A76"
    },
    "9137": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9138": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9139": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 129,
      "value": "0x36"
    },
    "9141": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23BE"
    },
    "9144": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2389,
        2394
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9145": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9146": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295B"
    },
    "9149": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9150": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9151": {
      "op": "POP"
    },
    "9152": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 130,
      "value": "0x37"
    },
    "9154": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD25"
    },
    "9157": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2414,
        2421
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9158": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9159": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295B"
    },
    "9162": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9163": {
      "op": "JUMPDEST"
    },
    "9164": {
      "op": "DUP3"
    },
    "9165": {
      "op": "DUP1"
    },
    "9166": {
      "op": "SLOAD"
    },
    "9167": {
      "op": "DUP3"
    },
    "9168": {
      "op": "DUP3"
    },
    "9169": {
      "op": "SSTORE"
    },
    "9170": {
      "op": "SWAP1"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9173": {
      "op": "MSTORE"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9178": {
      "op": "KECCAK256"
    },
    "9179": {
      "op": "SWAP1"
    },
    "9180": {
      "op": "DUP2"
    },
    "9181": {
      "op": "ADD"
    },
    "9182": {
      "op": "SWAP3"
    },
    "9183": {
      "op": "DUP3"
    },
    "9184": {
      "op": "ISZERO"
    },
    "9185": {
      "op": "PUSH2",
      "value": "0x2420"
    },
    "9188": {
      "op": "JUMPI"
    },
    "9189": {
      "op": "SWAP2"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9192": {
      "op": "MUL"
    },
    "9193": {
      "op": "DUP3"
    },
    "9194": {
      "op": "ADD"
    },
    "9195": {
      "op": "JUMPDEST"
    },
    "9196": {
      "op": "DUP3"
    },
    "9197": {
      "op": "DUP2"
    },
    "9198": {
      "op": "GT"
    },
    "9199": {
      "op": "ISZERO"
    },
    "9200": {
      "op": "PUSH2",
      "value": "0x2420"
    },
    "9203": {
      "op": "JUMPI"
    },
    "9204": {
      "op": "DUP3"
    },
    "9205": {
      "op": "MLOAD"
    },
    "9206": {
      "op": "DUP3"
    },
    "9207": {
      "op": "SLOAD"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9214": {
      "op": "SHL"
    },
    "9215": {
      "op": "SUB"
    },
    "9216": {
      "op": "NOT"
    },
    "9217": {
      "op": "AND"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9224": {
      "op": "SHL"
    },
    "9225": {
      "op": "SUB"
    },
    "9226": {
      "op": "SWAP1"
    },
    "9227": {
      "op": "SWAP2"
    },
    "9228": {
      "op": "AND"
    },
    "9229": {
      "op": "OR"
    },
    "9230": {
      "op": "DUP3"
    },
    "9231": {
      "op": "SSTORE"
    },
    "9232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9234": {
      "op": "SWAP1"
    },
    "9235": {
      "op": "SWAP3"
    },
    "9236": {
      "op": "ADD"
    },
    "9237": {
      "op": "SWAP2"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "SWAP1"
    },
    "9241": {
      "op": "SWAP2"
    },
    "9242": {
      "op": "ADD"
    },
    "9243": {
      "op": "SWAP1"
    },
    "9244": {
      "op": "PUSH2",
      "value": "0x23EB"
    },
    "9247": {
      "op": "JUMP"
    },
    "9248": {
      "op": "JUMPDEST"
    },
    "9249": {
      "op": "POP"
    },
    "9250": {
      "op": "PUSH2",
      "value": "0x242C"
    },
    "9253": {
      "op": "SWAP3"
    },
    "9254": {
      "op": "SWAP2"
    },
    "9255": {
      "op": "POP"
    },
    "9256": {
      "op": "PUSH2",
      "value": "0x248A"
    },
    "9259": {
      "jump": "i",
      "op": "JUMP"
    },
    "9260": {
      "op": "JUMPDEST"
    },
    "9261": {
      "op": "POP"
    },
    "9262": {
      "op": "SWAP1"
    },
    "9263": {
      "jump": "o",
      "op": "JUMP"
    },
    "9264": {
      "op": "JUMPDEST"
    },
    "9265": {
      "op": "DUP3"
    },
    "9266": {
      "op": "DUP1"
    },
    "9267": {
      "op": "SLOAD"
    },
    "9268": {
      "op": "DUP3"
    },
    "9269": {
      "op": "DUP3"
    },
    "9270": {
      "op": "SSTORE"
    },
    "9271": {
      "op": "SWAP1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9274": {
      "op": "MSTORE"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9279": {
      "op": "KECCAK256"
    },
    "9280": {
      "op": "SWAP1"
    },
    "9281": {
      "op": "DUP2"
    },
    "9282": {
      "op": "ADD"
    },
    "9283": {
      "op": "SWAP3"
    },
    "9284": {
      "op": "DUP3"
    },
    "9285": {
      "op": "ISZERO"
    },
    "9286": {
      "op": "PUSH2",
      "value": "0x2420"
    },
    "9289": {
      "op": "JUMPI"
    },
    "9290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9292": {
      "op": "MSTORE"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9297": {
      "op": "KECCAK256"
    },
    "9298": {
      "op": "SWAP2"
    },
    "9299": {
      "op": "DUP3"
    },
    "9300": {
      "op": "ADD"
    },
    "9301": {
      "op": "JUMPDEST"
    },
    "9302": {
      "op": "DUP3"
    },
    "9303": {
      "op": "DUP2"
    },
    "9304": {
      "op": "GT"
    },
    "9305": {
      "op": "ISZERO"
    },
    "9306": {
      "op": "PUSH2",
      "value": "0x2420"
    },
    "9309": {
      "op": "JUMPI"
    },
    "9310": {
      "op": "DUP3"
    },
    "9311": {
      "op": "SLOAD"
    },
    "9312": {
      "op": "DUP3"
    },
    "9313": {
      "op": "SSTORE"
    },
    "9314": {
      "op": "SWAP2"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9317": {
      "op": "ADD"
    },
    "9318": {
      "op": "SWAP2"
    },
    "9319": {
      "op": "SWAP1"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9322": {
      "op": "ADD"
    },
    "9323": {
      "op": "SWAP1"
    },
    "9324": {
      "op": "PUSH2",
      "value": "0x2455"
    },
    "9327": {
      "op": "JUMP"
    },
    "9328": {
      "op": "JUMPDEST"
    },
    "9329": {
      "op": "POP"
    },
    "9330": {
      "op": "DUP1"
    },
    "9331": {
      "op": "SLOAD"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9334": {
      "op": "DUP3"
    },
    "9335": {
      "op": "SSTORE"
    },
    "9336": {
      "op": "SWAP1"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9339": {
      "op": "MSTORE"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9344": {
      "op": "KECCAK256"
    },
    "9345": {
      "op": "SWAP1"
    },
    "9346": {
      "op": "DUP2"
    },
    "9347": {
      "op": "ADD"
    },
    "9348": {
      "op": "SWAP1"
    },
    "9349": {
      "op": "PUSH2",
      "value": "0x1089"
    },
    "9352": {
      "op": "SWAP2"
    },
    "9353": {
      "op": "SWAP1"
    },
    "9354": {
      "op": "JUMPDEST"
    },
    "9355": {
      "op": "JUMPDEST"
    },
    "9356": {
      "op": "DUP1"
    },
    "9357": {
      "op": "DUP3"
    },
    "9358": {
      "op": "GT"
    },
    "9359": {
      "op": "ISZERO"
    },
    "9360": {
      "op": "PUSH2",
      "value": "0x242C"
    },
    "9363": {
      "op": "JUMPI"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9366": {
      "op": "DUP2"
    },
    "9367": {
      "op": "SSTORE"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9370": {
      "op": "ADD"
    },
    "9371": {
      "op": "PUSH2",
      "value": "0x248B"
    },
    "9374": {
      "op": "JUMP"
    },
    "9375": {
      "op": "JUMPDEST"
    },
    "9376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9378": {
      "op": "JUMPDEST"
    },
    "9379": {
      "op": "DUP4"
    },
    "9380": {
      "op": "DUP2"
    },
    "9381": {
      "op": "LT"
    },
    "9382": {
      "op": "ISZERO"
    },
    "9383": {
      "op": "PUSH2",
      "value": "0x24BA"
    },
    "9386": {
      "op": "JUMPI"
    },
    "9387": {
      "op": "DUP2"
    },
    "9388": {
      "op": "DUP2"
    },
    "9389": {
      "op": "ADD"
    },
    "9390": {
      "op": "MLOAD"
    },
    "9391": {
      "op": "DUP4"
    },
    "9392": {
      "op": "DUP3"
    },
    "9393": {
      "op": "ADD"
    },
    "9394": {
      "op": "MSTORE"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9397": {
      "op": "ADD"
    },
    "9398": {
      "op": "PUSH2",
      "value": "0x24A2"
    },
    "9401": {
      "op": "JUMP"
    },
    "9402": {
      "op": "JUMPDEST"
    },
    "9403": {
      "op": "POP"
    },
    "9404": {
      "op": "POP"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9407": {
      "op": "SWAP2"
    },
    "9408": {
      "op": "ADD"
    },
    "9409": {
      "op": "MSTORE"
    },
    "9410": {
      "jump": "o",
      "op": "JUMP"
    },
    "9411": {
      "op": "JUMPDEST"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9414": {
      "op": "DUP2"
    },
    "9415": {
      "op": "MLOAD"
    },
    "9416": {
      "op": "DUP1"
    },
    "9417": {
      "op": "DUP5"
    },
    "9418": {
      "op": "MSTORE"
    },
    "9419": {
      "op": "PUSH2",
      "value": "0x24DB"
    },
    "9422": {
      "op": "DUP2"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9425": {
      "op": "DUP7"
    },
    "9426": {
      "op": "ADD"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9429": {
      "op": "DUP7"
    },
    "9430": {
      "op": "ADD"
    },
    "9431": {
      "op": "PUSH2",
      "value": "0x249F"
    },
    "9434": {
      "jump": "i",
      "op": "JUMP"
    },
    "9435": {
      "op": "JUMPDEST"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9438": {
      "op": "ADD"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9441": {
      "op": "NOT"
    },
    "9442": {
      "op": "AND"
    },
    "9443": {
      "op": "SWAP3"
    },
    "9444": {
      "op": "SWAP1"
    },
    "9445": {
      "op": "SWAP3"
    },
    "9446": {
      "op": "ADD"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9449": {
      "op": "ADD"
    },
    "9450": {
      "op": "SWAP3"
    },
    "9451": {
      "op": "SWAP2"
    },
    "9452": {
      "op": "POP"
    },
    "9453": {
      "op": "POP"
    },
    "9454": {
      "jump": "o",
      "op": "JUMP"
    },
    "9455": {
      "op": "JUMPDEST"
    },
    "9456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9458": {
      "op": "DUP2"
    },
    "9459": {
      "op": "MSTORE"
    },
    "9460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9462": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9467": {
      "op": "DUP4"
    },
    "9468": {
      "op": "ADD"
    },
    "9469": {
      "op": "DUP5"
    },
    "9470": {
      "op": "PUSH2",
      "value": "0x24C3"
    },
    "9473": {
      "jump": "i",
      "op": "JUMP"
    },
    "9474": {
      "op": "JUMPDEST"
    },
    "9475": {
      "op": "SWAP4"
    },
    "9476": {
      "op": "SWAP3"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "op": "POP"
    },
    "9479": {
      "op": "POP"
    },
    "9480": {
      "jump": "o",
      "op": "JUMP"
    },
    "9481": {
      "op": "JUMPDEST"
    },
    "9482": {
      "op": "DUP1"
    },
    "9483": {
      "op": "CALLDATALOAD"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9490": {
      "op": "SHL"
    },
    "9491": {
      "op": "SUB"
    },
    "9492": {
      "op": "DUP2"
    },
    "9493": {
      "op": "AND"
    },
    "9494": {
      "op": "DUP2"
    },
    "9495": {
      "op": "EQ"
    },
    "9496": {
      "op": "PUSH2",
      "value": "0x2520"
    },
    "9499": {
      "op": "JUMPI"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9502": {
      "op": "DUP1"
    },
    "9503": {
      "op": "REVERT"
    },
    "9504": {
      "op": "JUMPDEST"
    },
    "9505": {
      "op": "SWAP2"
    },
    "9506": {
      "op": "SWAP1"
    },
    "9507": {
      "op": "POP"
    },
    "9508": {
      "jump": "o",
      "op": "JUMP"
    },
    "9509": {
      "op": "JUMPDEST"
    },
    "9510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9512": {
      "op": "DUP1"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9515": {
      "op": "DUP4"
    },
    "9516": {
      "op": "DUP6"
    },
    "9517": {
      "op": "SUB"
    },
    "9518": {
      "op": "SLT"
    },
    "9519": {
      "op": "ISZERO"
    },
    "9520": {
      "op": "PUSH2",
      "value": "0x2538"
    },
    "9523": {
      "op": "JUMPI"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9526": {
      "op": "DUP1"
    },
    "9527": {
      "op": "REVERT"
    },
    "9528": {
      "op": "JUMPDEST"
    },
    "9529": {
      "op": "PUSH2",
      "value": "0x2541"
    },
    "9532": {
      "op": "DUP4"
    },
    "9533": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "9536": {
      "jump": "i",
      "op": "JUMP"
    },
    "9537": {
      "op": "JUMPDEST"
    },
    "9538": {
      "op": "SWAP5"
    },
    "9539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9541": {
      "op": "SWAP4"
    },
    "9542": {
      "op": "SWAP1"
    },
    "9543": {
      "op": "SWAP4"
    },
    "9544": {
      "op": "ADD"
    },
    "9545": {
      "op": "CALLDATALOAD"
    },
    "9546": {
      "op": "SWAP4"
    },
    "9547": {
      "op": "POP"
    },
    "9548": {
      "op": "POP"
    },
    "9549": {
      "op": "POP"
    },
    "9550": {
      "jump": "o",
      "op": "JUMP"
    },
    "9551": {
      "op": "JUMPDEST"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9554": {
      "op": "DUP1"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9557": {
      "op": "DUP4"
    },
    "9558": {
      "op": "DUP6"
    },
    "9559": {
      "op": "SUB"
    },
    "9560": {
      "op": "SLT"
    },
    "9561": {
      "op": "ISZERO"
    },
    "9562": {
      "op": "PUSH2",
      "value": "0x2562"
    },
    "9565": {
      "op": "JUMPI"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9568": {
      "op": "DUP1"
    },
    "9569": {
      "op": "REVERT"
    },
    "9570": {
      "op": "JUMPDEST"
    },
    "9571": {
      "op": "DUP3"
    },
    "9572": {
      "op": "CALLDATALOAD"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9575": {
      "op": "DUP2"
    },
    "9576": {
      "op": "AND"
    },
    "9577": {
      "op": "DUP2"
    },
    "9578": {
      "op": "EQ"
    },
    "9579": {
      "op": "PUSH2",
      "value": "0x2541"
    },
    "9582": {
      "op": "JUMPI"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9585": {
      "op": "DUP1"
    },
    "9586": {
      "op": "REVERT"
    },
    "9587": {
      "op": "JUMPDEST"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9590": {
      "op": "DUP1"
    },
    "9591": {
      "op": "DUP3"
    },
    "9592": {
      "op": "MSTORE"
    },
    "9593": {
      "op": "DUP3"
    },
    "9594": {
      "op": "MLOAD"
    },
    "9595": {
      "op": "DUP3"
    },
    "9596": {
      "op": "DUP3"
    },
    "9597": {
      "op": "ADD"
    },
    "9598": {
      "op": "DUP2"
    },
    "9599": {
      "op": "SWAP1"
    },
    "9600": {
      "op": "MSTORE"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9603": {
      "op": "SWAP2"
    },
    "9604": {
      "op": "SWAP1"
    },
    "9605": {
      "op": "DUP5"
    },
    "9606": {
      "op": "DUP3"
    },
    "9607": {
      "op": "ADD"
    },
    "9608": {
      "op": "SWAP1"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9611": {
      "op": "DUP6"
    },
    "9612": {
      "op": "ADD"
    },
    "9613": {
      "op": "SWAP1"
    },
    "9614": {
      "op": "DUP5"
    },
    "9615": {
      "op": "JUMPDEST"
    },
    "9616": {
      "op": "DUP2"
    },
    "9617": {
      "op": "DUP2"
    },
    "9618": {
      "op": "LT"
    },
    "9619": {
      "op": "ISZERO"
    },
    "9620": {
      "op": "PUSH2",
      "value": "0x25AB"
    },
    "9623": {
      "op": "JUMPI"
    },
    "9624": {
      "op": "DUP4"
    },
    "9625": {
      "op": "MLOAD"
    },
    "9626": {
      "op": "DUP4"
    },
    "9627": {
      "op": "MSTORE"
    },
    "9628": {
      "op": "SWAP3"
    },
    "9629": {
      "op": "DUP5"
    },
    "9630": {
      "op": "ADD"
    },
    "9631": {
      "op": "SWAP3"
    },
    "9632": {
      "op": "SWAP2"
    },
    "9633": {
      "op": "DUP5"
    },
    "9634": {
      "op": "ADD"
    },
    "9635": {
      "op": "SWAP2"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9638": {
      "op": "ADD"
    },
    "9639": {
      "op": "PUSH2",
      "value": "0x258F"
    },
    "9642": {
      "op": "JUMP"
    },
    "9643": {
      "op": "JUMPDEST"
    },
    "9644": {
      "op": "POP"
    },
    "9645": {
      "op": "SWAP1"
    },
    "9646": {
      "op": "SWAP7"
    },
    "9647": {
      "op": "SWAP6"
    },
    "9648": {
      "op": "POP"
    },
    "9649": {
      "op": "POP"
    },
    "9650": {
      "op": "POP"
    },
    "9651": {
      "op": "POP"
    },
    "9652": {
      "op": "POP"
    },
    "9653": {
      "op": "POP"
    },
    "9654": {
      "jump": "o",
      "op": "JUMP"
    },
    "9655": {
      "op": "JUMPDEST"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "DUP5"
    },
    "9662": {
      "op": "SUB"
    },
    "9663": {
      "op": "SLT"
    },
    "9664": {
      "op": "ISZERO"
    },
    "9665": {
      "op": "PUSH2",
      "value": "0x25C9"
    },
    "9668": {
      "op": "JUMPI"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9671": {
      "op": "DUP1"
    },
    "9672": {
      "op": "REVERT"
    },
    "9673": {
      "op": "JUMPDEST"
    },
    "9674": {
      "op": "POP"
    },
    "9675": {
      "op": "CALLDATALOAD"
    },
    "9676": {
      "op": "SWAP2"
    },
    "9677": {
      "op": "SWAP1"
    },
    "9678": {
      "op": "POP"
    },
    "9679": {
      "jump": "o",
      "op": "JUMP"
    },
    "9680": {
      "op": "JUMPDEST"
    },
    "9681": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9688": {
      "op": "SHL"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9691": {
      "op": "MSTORE"
    },
    "9692": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9696": {
      "op": "MSTORE"
    },
    "9697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9701": {
      "op": "REVERT"
    },
    "9702": {
      "op": "JUMPDEST"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9707": {
      "op": "DUP3"
    },
    "9708": {
      "op": "DUP5"
    },
    "9709": {
      "op": "SUB"
    },
    "9710": {
      "op": "SLT"
    },
    "9711": {
      "op": "ISZERO"
    },
    "9712": {
      "op": "PUSH2",
      "value": "0x25F8"
    },
    "9715": {
      "op": "JUMPI"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9718": {
      "op": "DUP1"
    },
    "9719": {
      "op": "REVERT"
    },
    "9720": {
      "op": "JUMPDEST"
    },
    "9721": {
      "op": "DUP2"
    },
    "9722": {
      "op": "CALLDATALOAD"
    },
    "9723": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9732": {
      "op": "DUP1"
    },
    "9733": {
      "op": "DUP3"
    },
    "9734": {
      "op": "GT"
    },
    "9735": {
      "op": "ISZERO"
    },
    "9736": {
      "op": "PUSH2",
      "value": "0x2610"
    },
    "9739": {
      "op": "JUMPI"
    },
    "9740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9742": {
      "op": "DUP1"
    },
    "9743": {
      "op": "REVERT"
    },
    "9744": {
      "op": "JUMPDEST"
    },
    "9745": {
      "op": "DUP2"
    },
    "9746": {
      "op": "DUP5"
    },
    "9747": {
      "op": "ADD"
    },
    "9748": {
      "op": "SWAP2"
    },
    "9749": {
      "op": "POP"
    },
    "9750": {
      "op": "DUP5"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9753": {
      "op": "DUP4"
    },
    "9754": {
      "op": "ADD"
    },
    "9755": {
      "op": "SLT"
    },
    "9756": {
      "op": "PUSH2",
      "value": "0x2624"
    },
    "9759": {
      "op": "JUMPI"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9762": {
      "op": "DUP1"
    },
    "9763": {
      "op": "REVERT"
    },
    "9764": {
      "op": "JUMPDEST"
    },
    "9765": {
      "op": "DUP2"
    },
    "9766": {
      "op": "CALLDATALOAD"
    },
    "9767": {
      "op": "DUP2"
    },
    "9768": {
      "op": "DUP2"
    },
    "9769": {
      "op": "GT"
    },
    "9770": {
      "op": "ISZERO"
    },
    "9771": {
      "op": "PUSH2",
      "value": "0x2636"
    },
    "9774": {
      "op": "JUMPI"
    },
    "9775": {
      "op": "PUSH2",
      "value": "0x2636"
    },
    "9778": {
      "op": "PUSH2",
      "value": "0x25D0"
    },
    "9781": {
      "jump": "i",
      "op": "JUMP"
    },
    "9782": {
      "op": "JUMPDEST"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9785": {
      "op": "MLOAD"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9788": {
      "op": "DUP3"
    },
    "9789": {
      "op": "ADD"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9792": {
      "op": "NOT"
    },
    "9793": {
      "op": "SWAP1"
    },
    "9794": {
      "op": "DUP2"
    },
    "9795": {
      "op": "AND"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9798": {
      "op": "ADD"
    },
    "9799": {
      "op": "AND"
    },
    "9800": {
      "op": "DUP2"
    },
    "9801": {
      "op": "ADD"
    },
    "9802": {
      "op": "SWAP1"
    },
    "9803": {
      "op": "DUP4"
    },
    "9804": {
      "op": "DUP3"
    },
    "9805": {
      "op": "GT"
    },
    "9806": {
      "op": "DUP2"
    },
    "9807": {
      "op": "DUP4"
    },
    "9808": {
      "op": "LT"
    },
    "9809": {
      "op": "OR"
    },
    "9810": {
      "op": "ISZERO"
    },
    "9811": {
      "op": "PUSH2",
      "value": "0x265E"
    },
    "9814": {
      "op": "JUMPI"
    },
    "9815": {
      "op": "PUSH2",
      "value": "0x265E"
    },
    "9818": {
      "op": "PUSH2",
      "value": "0x25D0"
    },
    "9821": {
      "jump": "i",
      "op": "JUMP"
    },
    "9822": {
      "op": "JUMPDEST"
    },
    "9823": {
      "op": "DUP2"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9826": {
      "op": "MSTORE"
    },
    "9827": {
      "op": "DUP3"
    },
    "9828": {
      "op": "DUP2"
    },
    "9829": {
      "op": "MSTORE"
    },
    "9830": {
      "op": "DUP8"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9833": {
      "op": "DUP5"
    },
    "9834": {
      "op": "DUP8"
    },
    "9835": {
      "op": "ADD"
    },
    "9836": {
      "op": "ADD"
    },
    "9837": {
      "op": "GT"
    },
    "9838": {
      "op": "ISZERO"
    },
    "9839": {
      "op": "PUSH2",
      "value": "0x2677"
    },
    "9842": {
      "op": "JUMPI"
    },
    "9843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9845": {
      "op": "DUP1"
    },
    "9846": {
      "op": "REVERT"
    },
    "9847": {
      "op": "JUMPDEST"
    },
    "9848": {
      "op": "DUP3"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9851": {
      "op": "DUP7"
    },
    "9852": {
      "op": "ADD"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9855": {
      "op": "DUP4"
    },
    "9856": {
      "op": "ADD"
    },
    "9857": {
      "op": "CALLDATACOPY"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9860": {
      "op": "SWAP3"
    },
    "9861": {
      "op": "DUP2"
    },
    "9862": {
      "op": "ADD"
    },
    "9863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9865": {
      "op": "ADD"
    },
    "9866": {
      "op": "SWAP3"
    },
    "9867": {
      "op": "SWAP1"
    },
    "9868": {
      "op": "SWAP3"
    },
    "9869": {
      "op": "MSTORE"
    },
    "9870": {
      "op": "POP"
    },
    "9871": {
      "op": "SWAP6"
    },
    "9872": {
      "op": "SWAP5"
    },
    "9873": {
      "op": "POP"
    },
    "9874": {
      "op": "POP"
    },
    "9875": {
      "op": "POP"
    },
    "9876": {
      "op": "POP"
    },
    "9877": {
      "op": "POP"
    },
    "9878": {
      "jump": "o",
      "op": "JUMP"
    },
    "9879": {
      "op": "JUMPDEST"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9882": {
      "op": "DUP1"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9887": {
      "op": "DUP5"
    },
    "9888": {
      "op": "DUP7"
    },
    "9889": {
      "op": "SUB"
    },
    "9890": {
      "op": "SLT"
    },
    "9891": {
      "op": "ISZERO"
    },
    "9892": {
      "op": "PUSH2",
      "value": "0x26AC"
    },
    "9895": {
      "op": "JUMPI"
    },
    "9896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9898": {
      "op": "DUP1"
    },
    "9899": {
      "op": "REVERT"
    },
    "9900": {
      "op": "JUMPDEST"
    },
    "9901": {
      "op": "PUSH2",
      "value": "0x26B5"
    },
    "9904": {
      "op": "DUP5"
    },
    "9905": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "9908": {
      "jump": "i",
      "op": "JUMP"
    },
    "9909": {
      "op": "JUMPDEST"
    },
    "9910": {
      "op": "SWAP3"
    },
    "9911": {
      "op": "POP"
    },
    "9912": {
      "op": "PUSH2",
      "value": "0x26C3"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9917": {
      "op": "DUP6"
    },
    "9918": {
      "op": "ADD"
    },
    "9919": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "9922": {
      "jump": "i",
      "op": "JUMP"
    },
    "9923": {
      "op": "JUMPDEST"
    },
    "9924": {
      "op": "SWAP2"
    },
    "9925": {
      "op": "POP"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9928": {
      "op": "DUP5"
    },
    "9929": {
      "op": "ADD"
    },
    "9930": {
      "op": "CALLDATALOAD"
    },
    "9931": {
      "op": "SWAP1"
    },
    "9932": {
      "op": "POP"
    },
    "9933": {
      "op": "SWAP3"
    },
    "9934": {
      "op": "POP"
    },
    "9935": {
      "op": "SWAP3"
    },
    "9936": {
      "op": "POP"
    },
    "9937": {
      "op": "SWAP3"
    },
    "9938": {
      "jump": "o",
      "op": "JUMP"
    },
    "9939": {
      "op": "JUMPDEST"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9944": {
      "op": "DUP3"
    },
    "9945": {
      "op": "DUP5"
    },
    "9946": {
      "op": "SUB"
    },
    "9947": {
      "op": "SLT"
    },
    "9948": {
      "op": "ISZERO"
    },
    "9949": {
      "op": "PUSH2",
      "value": "0x26E5"
    },
    "9952": {
      "op": "JUMPI"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9955": {
      "op": "DUP1"
    },
    "9956": {
      "op": "REVERT"
    },
    "9957": {
      "op": "JUMPDEST"
    },
    "9958": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9961": {
      "op": "DUP3"
    },
    "9962": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "9965": {
      "jump": "i",
      "op": "JUMP"
    },
    "9966": {
      "op": "JUMPDEST"
    },
    "9967": {
      "op": "DUP8"
    },
    "9968": {
      "op": "DUP2"
    },
    "9969": {
      "op": "MSTORE"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9976": {
      "op": "SHL"
    },
    "9977": {
      "op": "SUB"
    },
    "9978": {
      "op": "DUP8"
    },
    "9979": {
      "op": "AND"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9982": {
      "op": "DUP3"
    },
    "9983": {
      "op": "ADD"
    },
    "9984": {
      "op": "MSTORE"
    },
    "9985": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9989": {
      "op": "DUP3"
    },
    "9990": {
      "op": "ADD"
    },
    "9991": {
      "op": "DUP2"
    },
    "9992": {
      "op": "SWAP1"
    },
    "9993": {
      "op": "MSTORE"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9996": {
      "op": "SWAP1"
    },
    "9997": {
      "op": "PUSH2",
      "value": "0x2718"
    },
    "10000": {
      "op": "SWAP1"
    },
    "10001": {
      "op": "DUP4"
    },
    "10002": {
      "op": "ADD"
    },
    "10003": {
      "op": "DUP9"
    },
    "10004": {
      "op": "PUSH2",
      "value": "0x24C3"
    },
    "10007": {
      "jump": "i",
      "op": "JUMP"
    },
    "10008": {
      "op": "JUMPDEST"
    },
    "10009": {
      "op": "SWAP1"
    },
    "10010": {
      "op": "POP"
    },
    "10011": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10016": {
      "op": "DUP7"
    },
    "10017": {
      "op": "AND"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10020": {
      "op": "DUP4"
    },
    "10021": {
      "op": "ADD"
    },
    "10022": {
      "op": "MSTORE"
    },
    "10023": {
      "op": "DUP5"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10026": {
      "op": "DUP4"
    },
    "10027": {
      "op": "ADD"
    },
    "10028": {
      "op": "MSTORE"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10031": {
      "op": "DUP5"
    },
    "10032": {
      "op": "AND"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10035": {
      "op": "DUP4"
    },
    "10036": {
      "op": "ADD"
    },
    "10037": {
      "op": "MSTORE"
    },
    "10038": {
      "op": "DUP3"
    },
    "10039": {
      "op": "ISZERO"
    },
    "10040": {
      "op": "ISZERO"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10043": {
      "op": "DUP4"
    },
    "10044": {
      "op": "ADD"
    },
    "10045": {
      "op": "MSTORE"
    },
    "10046": {
      "op": "SWAP9"
    },
    "10047": {
      "op": "SWAP8"
    },
    "10048": {
      "op": "POP"
    },
    "10049": {
      "op": "POP"
    },
    "10050": {
      "op": "POP"
    },
    "10051": {
      "op": "POP"
    },
    "10052": {
      "op": "POP"
    },
    "10053": {
      "op": "POP"
    },
    "10054": {
      "op": "POP"
    },
    "10055": {
      "op": "POP"
    },
    "10056": {
      "jump": "o",
      "op": "JUMP"
    },
    "10057": {
      "op": "JUMPDEST"
    },
    "10058": {
      "op": "DUP5"
    },
    "10059": {
      "op": "DUP2"
    },
    "10060": {
      "op": "MSTORE"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10067": {
      "op": "SHL"
    },
    "10068": {
      "op": "SUB"
    },
    "10069": {
      "op": "DUP5"
    },
    "10070": {
      "op": "AND"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10073": {
      "op": "DUP3"
    },
    "10074": {
      "op": "ADD"
    },
    "10075": {
      "op": "MSTORE"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10080": {
      "op": "DUP3"
    },
    "10081": {
      "op": "ADD"
    },
    "10082": {
      "op": "DUP2"
    },
    "10083": {
      "op": "SWAP1"
    },
    "10084": {
      "op": "MSTORE"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10087": {
      "op": "SWAP1"
    },
    "10088": {
      "op": "PUSH2",
      "value": "0x2773"
    },
    "10091": {
      "op": "SWAP1"
    },
    "10092": {
      "op": "DUP4"
    },
    "10093": {
      "op": "ADD"
    },
    "10094": {
      "op": "DUP6"
    },
    "10095": {
      "op": "PUSH2",
      "value": "0x24C3"
    },
    "10098": {
      "jump": "i",
      "op": "JUMP"
    },
    "10099": {
      "op": "JUMPDEST"
    },
    "10100": {
      "op": "SWAP1"
    },
    "10101": {
      "op": "POP"
    },
    "10102": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10104": {
      "op": "DUP4"
    },
    "10105": {
      "op": "AND"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10108": {
      "op": "DUP4"
    },
    "10109": {
      "op": "ADD"
    },
    "10110": {
      "op": "MSTORE"
    },
    "10111": {
      "op": "SWAP6"
    },
    "10112": {
      "op": "SWAP5"
    },
    "10113": {
      "op": "POP"
    },
    "10114": {
      "op": "POP"
    },
    "10115": {
      "op": "POP"
    },
    "10116": {
      "op": "POP"
    },
    "10117": {
      "op": "POP"
    },
    "10118": {
      "jump": "o",
      "op": "JUMP"
    },
    "10119": {
      "op": "JUMPDEST"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10124": {
      "op": "DUP3"
    },
    "10125": {
      "op": "DUP5"
    },
    "10126": {
      "op": "SUB"
    },
    "10127": {
      "op": "SLT"
    },
    "10128": {
      "op": "ISZERO"
    },
    "10129": {
      "op": "PUSH2",
      "value": "0x2799"
    },
    "10132": {
      "op": "JUMPI"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10135": {
      "op": "DUP1"
    },
    "10136": {
      "op": "REVERT"
    },
    "10137": {
      "op": "JUMPDEST"
    },
    "10138": {
      "op": "DUP2"
    },
    "10139": {
      "op": "CALLDATALOAD"
    },
    "10140": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10145": {
      "op": "DUP2"
    },
    "10146": {
      "op": "AND"
    },
    "10147": {
      "op": "DUP2"
    },
    "10148": {
      "op": "EQ"
    },
    "10149": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "10152": {
      "op": "JUMPI"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10155": {
      "op": "DUP1"
    },
    "10156": {
      "op": "REVERT"
    },
    "10157": {
      "op": "JUMPDEST"
    },
    "10158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10160": {
      "op": "DUP1"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10163": {
      "op": "DUP4"
    },
    "10164": {
      "op": "DUP6"
    },
    "10165": {
      "op": "SUB"
    },
    "10166": {
      "op": "SLT"
    },
    "10167": {
      "op": "ISZERO"
    },
    "10168": {
      "op": "PUSH2",
      "value": "0x27C0"
    },
    "10171": {
      "op": "JUMPI"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10174": {
      "op": "DUP1"
    },
    "10175": {
      "op": "REVERT"
    },
    "10176": {
      "op": "JUMPDEST"
    },
    "10177": {
      "op": "PUSH2",
      "value": "0x27C9"
    },
    "10180": {
      "op": "DUP4"
    },
    "10181": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "10184": {
      "jump": "i",
      "op": "JUMP"
    },
    "10185": {
      "op": "JUMPDEST"
    },
    "10186": {
      "op": "SWAP2"
    },
    "10187": {
      "op": "POP"
    },
    "10188": {
      "op": "PUSH2",
      "value": "0x27D7"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10193": {
      "op": "DUP5"
    },
    "10194": {
      "op": "ADD"
    },
    "10195": {
      "op": "PUSH2",
      "value": "0x2509"
    },
    "10198": {
      "jump": "i",
      "op": "JUMP"
    },
    "10199": {
      "op": "JUMPDEST"
    },
    "10200": {
      "op": "SWAP1"
    },
    "10201": {
      "op": "POP"
    },
    "10202": {
      "op": "SWAP3"
    },
    "10203": {
      "op": "POP"
    },
    "10204": {
      "op": "SWAP3"
    },
    "10205": {
      "op": "SWAP1"
    },
    "10206": {
      "op": "POP"
    },
    "10207": {
      "jump": "o",
      "op": "JUMP"
    },
    "10208": {
      "op": "JUMPDEST"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10211": {
      "op": "DUP1"
    },
    "10212": {
      "op": "DUP3"
    },
    "10213": {
      "op": "MSTORE"
    },
    "10214": {
      "op": "DUP3"
    },
    "10215": {
      "op": "MLOAD"
    },
    "10216": {
      "op": "DUP3"
    },
    "10217": {
      "op": "DUP3"
    },
    "10218": {
      "op": "ADD"
    },
    "10219": {
      "op": "DUP2"
    },
    "10220": {
      "op": "SWAP1"
    },
    "10221": {
      "op": "MSTORE"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10224": {
      "op": "SWAP2"
    },
    "10225": {
      "op": "SWAP1"
    },
    "10226": {
      "op": "DUP5"
    },
    "10227": {
      "op": "DUP3"
    },
    "10228": {
      "op": "ADD"
    },
    "10229": {
      "op": "SWAP1"
    },
    "10230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10232": {
      "op": "DUP6"
    },
    "10233": {
      "op": "ADD"
    },
    "10234": {
      "op": "SWAP1"
    },
    "10235": {
      "op": "DUP5"
    },
    "10236": {
      "op": "JUMPDEST"
    },
    "10237": {
      "op": "DUP2"
    },
    "10238": {
      "op": "DUP2"
    },
    "10239": {
      "op": "LT"
    },
    "10240": {
      "op": "ISZERO"
    },
    "10241": {
      "op": "PUSH2",
      "value": "0x25AB"
    },
    "10244": {
      "op": "JUMPI"
    },
    "10245": {
      "op": "DUP4"
    },
    "10246": {
      "op": "MLOAD"
    },
    "10247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10253": {
      "op": "SHL"
    },
    "10254": {
      "op": "SUB"
    },
    "10255": {
      "op": "AND"
    },
    "10256": {
      "op": "DUP4"
    },
    "10257": {
      "op": "MSTORE"
    },
    "10258": {
      "op": "SWAP3"
    },
    "10259": {
      "op": "DUP5"
    },
    "10260": {
      "op": "ADD"
    },
    "10261": {
      "op": "SWAP3"
    },
    "10262": {
      "op": "SWAP2"
    },
    "10263": {
      "op": "DUP5"
    },
    "10264": {
      "op": "ADD"
    },
    "10265": {
      "op": "SWAP2"
    },
    "10266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10268": {
      "op": "ADD"
    },
    "10269": {
      "op": "PUSH2",
      "value": "0x27FC"
    },
    "10272": {
      "op": "JUMP"
    },
    "10273": {
      "op": "JUMPDEST"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10276": {
      "op": "DUP2"
    },
    "10277": {
      "op": "DUP2"
    },
    "10278": {
      "op": "SHR"
    },
    "10279": {
      "op": "SWAP1"
    },
    "10280": {
      "op": "DUP3"
    },
    "10281": {
      "op": "AND"
    },
    "10282": {
      "op": "DUP1"
    },
    "10283": {
      "op": "PUSH2",
      "value": "0x2835"
    },
    "10286": {
      "op": "JUMPI"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10289": {
      "op": "DUP3"
    },
    "10290": {
      "op": "AND"
    },
    "10291": {
      "op": "SWAP2"
    },
    "10292": {
      "op": "POP"
    },
    "10293": {
      "op": "JUMPDEST"
    },
    "10294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10296": {
      "op": "DUP3"
    },
    "10297": {
      "op": "LT"
    },
    "10298": {
      "op": "DUP2"
    },
    "10299": {
      "op": "SUB"
    },
    "10300": {
      "op": "PUSH2",
      "value": "0x1A05"
    },
    "10303": {
      "op": "JUMPI"
    },
    "10304": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10311": {
      "op": "SHL"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10314": {
      "op": "MSTORE"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10319": {
      "op": "MSTORE"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10324": {
      "op": "REVERT"
    },
    "10325": {
      "op": "JUMPDEST"
    },
    "10326": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10333": {
      "op": "SHL"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10336": {
      "op": "MSTORE"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10339": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10341": {
      "op": "MSTORE"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10346": {
      "op": "REVERT"
    },
    "10347": {
      "op": "JUMPDEST"
    },
    "10348": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10355": {
      "op": "SHL"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10358": {
      "op": "MSTORE"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10363": {
      "op": "MSTORE"
    },
    "10364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10368": {
      "op": "REVERT"
    },
    "10369": {
      "op": "JUMPDEST"
    },
    "10370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10374": {
      "op": "DUP3"
    },
    "10375": {
      "op": "ADD"
    },
    "10376": {
      "op": "PUSH2",
      "value": "0x2893"
    },
    "10379": {
      "op": "JUMPI"
    },
    "10380": {
      "op": "PUSH2",
      "value": "0x2893"
    },
    "10383": {
      "op": "PUSH2",
      "value": "0x286B"
    },
    "10386": {
      "jump": "i",
      "op": "JUMP"
    },
    "10387": {
      "op": "JUMPDEST"
    },
    "10388": {
      "op": "POP"
    },
    "10389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10391": {
      "op": "ADD"
    },
    "10392": {
      "op": "SWAP1"
    },
    "10393": {
      "jump": "o",
      "op": "JUMP"
    },
    "10394": {
      "op": "JUMPDEST"
    },
    "10395": {
      "op": "DUP1"
    },
    "10396": {
      "op": "DUP3"
    },
    "10397": {
      "op": "ADD"
    },
    "10398": {
      "op": "DUP1"
    },
    "10399": {
      "op": "DUP3"
    },
    "10400": {
      "op": "GT"
    },
    "10401": {
      "op": "ISZERO"
    },
    "10402": {
      "op": "PUSH2",
      "value": "0x76A"
    },
    "10405": {
      "op": "JUMPI"
    },
    "10406": {
      "op": "PUSH2",
      "value": "0x76A"
    },
    "10409": {
      "op": "PUSH2",
      "value": "0x286B"
    },
    "10412": {
      "jump": "i",
      "op": "JUMP"
    },
    "10413": {
      "op": "JUMPDEST"
    },
    "10414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10416": {
      "op": "DUP1"
    },
    "10417": {
      "op": "DUP3"
    },
    "10418": {
      "op": "MSTORE"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10421": {
      "op": "SWAP1"
    },
    "10422": {
      "op": "DUP3"
    },
    "10423": {
      "op": "ADD"
    },
    "10424": {
      "op": "MSTORE"
    },
    "10425": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
    },
    "10458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10460": {
      "op": "DUP3"
    },
    "10461": {
      "op": "ADD"
    },
    "10462": {
      "op": "MSTORE"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10467": {
      "op": "SHL"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10470": {
      "op": "DUP3"
    },
    "10471": {
      "op": "ADD"
    },
    "10472": {
      "op": "MSTORE"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10475": {
      "op": "ADD"
    },
    "10476": {
      "op": "SWAP1"
    },
    "10477": {
      "jump": "o",
      "op": "JUMP"
    },
    "10478": {
      "op": "JUMPDEST"
    },
    "10479": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10484": {
      "op": "DUP3"
    },
    "10485": {
      "op": "DUP2"
    },
    "10486": {
      "op": "AND"
    },
    "10487": {
      "op": "DUP3"
    },
    "10488": {
      "op": "DUP3"
    },
    "10489": {
      "op": "AND"
    },
    "10490": {
      "op": "SUB"
    },
    "10491": {
      "op": "SWAP1"
    },
    "10492": {
      "op": "DUP1"
    },
    "10493": {
      "op": "DUP3"
    },
    "10494": {
      "op": "GT"
    },
    "10495": {
      "op": "ISZERO"
    },
    "10496": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10499": {
      "op": "JUMPI"
    },
    "10500": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x286B"
    },
    "10506": {
      "jump": "i",
      "op": "JUMP"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10510": {
      "op": "DUP3"
    },
    "10511": {
      "op": "GT"
    },
    "10512": {
      "op": "ISZERO"
    },
    "10513": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "10516": {
      "op": "JUMPI"
    },
    "10517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10519": {
      "op": "DUP2"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10522": {
      "op": "MSTORE"
    },
    "10523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10527": {
      "op": "KECCAK256"
    },
    "10528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10530": {
      "op": "DUP6"
    },
    "10531": {
      "op": "ADD"
    },
    "10532": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10534": {
      "op": "SHR"
    },
    "10535": {
      "op": "DUP2"
    },
    "10536": {
      "op": "ADD"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10539": {
      "op": "DUP7"
    },
    "10540": {
      "op": "LT"
    },
    "10541": {
      "op": "ISZERO"
    },
    "10542": {
      "op": "PUSH2",
      "value": "0x2934"
    },
    "10545": {
      "op": "JUMPI"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "op": "DUP1"
    },
    "10548": {
      "op": "JUMPDEST"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10551": {
      "op": "DUP6"
    },
    "10552": {
      "op": "ADD"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10555": {
      "op": "SHR"
    },
    "10556": {
      "op": "DUP3"
    },
    "10557": {
      "op": "ADD"
    },
    "10558": {
      "op": "SWAP2"
    },
    "10559": {
      "op": "POP"
    },
    "10560": {
      "op": "JUMPDEST"
    },
    "10561": {
      "op": "DUP2"
    },
    "10562": {
      "op": "DUP2"
    },
    "10563": {
      "op": "LT"
    },
    "10564": {
      "op": "ISZERO"
    },
    "10565": {
      "op": "PUSH2",
      "value": "0x2953"
    },
    "10568": {
      "op": "JUMPI"
    },
    "10569": {
      "op": "DUP3"
    },
    "10570": {
      "op": "DUP2"
    },
    "10571": {
      "op": "SSTORE"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10574": {
      "op": "ADD"
    },
    "10575": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10578": {
      "op": "JUMP"
    },
    "10579": {
      "op": "JUMPDEST"
    },
    "10580": {
      "op": "POP"
    },
    "10581": {
      "op": "POP"
    },
    "10582": {
      "op": "POP"
    },
    "10583": {
      "op": "POP"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "op": "POP"
    },
    "10586": {
      "jump": "o",
      "op": "JUMP"
    },
    "10587": {
      "op": "JUMPDEST"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "MLOAD"
    },
    "10590": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10599": {
      "op": "DUP2"
    },
    "10600": {
      "op": "GT"
    },
    "10601": {
      "op": "ISZERO"
    },
    "10602": {
      "op": "PUSH2",
      "value": "0x2975"
    },
    "10605": {
      "op": "JUMPI"
    },
    "10606": {
      "op": "PUSH2",
      "value": "0x2975"
    },
    "10609": {
      "op": "PUSH2",
      "value": "0x25D0"
    },
    "10612": {
      "jump": "i",
      "op": "JUMP"
    },
    "10613": {
      "op": "JUMPDEST"
    },
    "10614": {
      "op": "PUSH2",
      "value": "0x2989"
    },
    "10617": {
      "op": "DUP2"
    },
    "10618": {
      "op": "PUSH2",
      "value": "0x2983"
    },
    "10621": {
      "op": "DUP5"
    },
    "10622": {
      "op": "SLOAD"
    },
    "10623": {
      "op": "PUSH2",
      "value": "0x2821"
    },
    "10626": {
      "jump": "i",
      "op": "JUMP"
    },
    "10627": {
      "op": "JUMPDEST"
    },
    "10628": {
      "op": "DUP5"
    },
    "10629": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10632": {
      "jump": "i",
      "op": "JUMP"
    },
    "10633": {
      "op": "JUMPDEST"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10636": {
      "op": "DUP1"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10639": {
      "op": "DUP4"
    },
    "10640": {
      "op": "GT"
    },
    "10641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10643": {
      "op": "DUP2"
    },
    "10644": {
      "op": "EQ"
    },
    "10645": {
      "op": "PUSH2",
      "value": "0x29BE"
    },
    "10648": {
      "op": "JUMPI"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10651": {
      "op": "DUP5"
    },
    "10652": {
      "op": "ISZERO"
    },
    "10653": {
      "op": "PUSH2",
      "value": "0x29A6"
    },
    "10656": {
      "op": "JUMPI"
    },
    "10657": {
      "op": "POP"
    },
    "10658": {
      "op": "DUP6"
    },
    "10659": {
      "op": "DUP4"
    },
    "10660": {
      "op": "ADD"
    },
    "10661": {
      "op": "MLOAD"
    },
    "10662": {
      "op": "JUMPDEST"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10665": {
      "op": "NOT"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10668": {
      "op": "DUP7"
    },
    "10669": {
      "op": "SWAP1"
    },
    "10670": {
      "op": "SHL"
    },
    "10671": {
      "op": "SHR"
    },
    "10672": {
      "op": "NOT"
    },
    "10673": {
      "op": "AND"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10676": {
      "op": "DUP6"
    },
    "10677": {
      "op": "SWAP1"
    },
    "10678": {
      "op": "SHL"
    },
    "10679": {
      "op": "OR"
    },
    "10680": {
      "op": "DUP6"
    },
    "10681": {
      "op": "SSTORE"
    },
    "10682": {
      "op": "PUSH2",
      "value": "0x2953"
    },
    "10685": {
      "op": "JUMP"
    },
    "10686": {
      "op": "JUMPDEST"
    },
    "10687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10689": {
      "op": "DUP6"
    },
    "10690": {
      "op": "DUP2"
    },
    "10691": {
      "op": "MSTORE"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10694": {
      "op": "DUP2"
    },
    "10695": {
      "op": "KECCAK256"
    },
    "10696": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10698": {
      "op": "NOT"
    },
    "10699": {
      "op": "DUP7"
    },
    "10700": {
      "op": "AND"
    },
    "10701": {
      "op": "SWAP2"
    },
    "10702": {
      "op": "JUMPDEST"
    },
    "10703": {
      "op": "DUP3"
    },
    "10704": {
      "op": "DUP2"
    },
    "10705": {
      "op": "LT"
    },
    "10706": {
      "op": "ISZERO"
    },
    "10707": {
      "op": "PUSH2",
      "value": "0x29ED"
    },
    "10710": {
      "op": "JUMPI"
    },
    "10711": {
      "op": "DUP9"
    },
    "10712": {
      "op": "DUP7"
    },
    "10713": {
      "op": "ADD"
    },
    "10714": {
      "op": "MLOAD"
    },
    "10715": {
      "op": "DUP3"
    },
    "10716": {
      "op": "SSTORE"
    },
    "10717": {
      "op": "SWAP5"
    },
    "10718": {
      "op": "DUP5"
    },
    "10719": {
      "op": "ADD"
    },
    "10720": {
      "op": "SWAP5"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10723": {
      "op": "SWAP1"
    },
    "10724": {
      "op": "SWAP2"
    },
    "10725": {
      "op": "ADD"
    },
    "10726": {
      "op": "SWAP1"
    },
    "10727": {
      "op": "DUP5"
    },
    "10728": {
      "op": "ADD"
    },
    "10729": {
      "op": "PUSH2",
      "value": "0x29CE"
    },
    "10732": {
      "op": "JUMP"
    },
    "10733": {
      "op": "JUMPDEST"
    },
    "10734": {
      "op": "POP"
    },
    "10735": {
      "op": "DUP6"
    },
    "10736": {
      "op": "DUP3"
    },
    "10737": {
      "op": "LT"
    },
    "10738": {
      "op": "ISZERO"
    },
    "10739": {
      "op": "PUSH2",
      "value": "0x2A0B"
    },
    "10742": {
      "op": "JUMPI"
    },
    "10743": {
      "op": "DUP8"
    },
    "10744": {
      "op": "DUP6"
    },
    "10745": {
      "op": "ADD"
    },
    "10746": {
      "op": "MLOAD"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10749": {
      "op": "NOT"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10752": {
      "op": "DUP9"
    },
    "10753": {
      "op": "SWAP1"
    },
    "10754": {
      "op": "SHL"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10757": {
      "op": "AND"
    },
    "10758": {
      "op": "SHR"
    },
    "10759": {
      "op": "NOT"
    },
    "10760": {
      "op": "AND"
    },
    "10761": {
      "op": "DUP2"
    },
    "10762": {
      "op": "SSTORE"
    },
    "10763": {
      "op": "JUMPDEST"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "op": "POP"
    },
    "10766": {
      "op": "POP"
    },
    "10767": {
      "op": "POP"
    },
    "10768": {
      "op": "POP"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10771": {
      "op": "SWAP1"
    },
    "10772": {
      "op": "DUP2"
    },
    "10773": {
      "op": "SHL"
    },
    "10774": {
      "op": "ADD"
    },
    "10775": {
      "op": "SWAP1"
    },
    "10776": {
      "op": "SSTORE"
    },
    "10777": {
      "op": "POP"
    },
    "10778": {
      "jump": "o",
      "op": "JUMP"
    },
    "10779": {
      "op": "JUMPDEST"
    },
    "10780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10782": {
      "op": "DUP3"
    },
    "10783": {
      "op": "MLOAD"
    },
    "10784": {
      "op": "PUSH2",
      "value": "0x2A2D"
    },
    "10787": {
      "op": "DUP2"
    },
    "10788": {
      "op": "DUP5"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10791": {
      "op": "DUP8"
    },
    "10792": {
      "op": "ADD"
    },
    "10793": {
      "op": "PUSH2",
      "value": "0x249F"
    },
    "10796": {
      "jump": "i",
      "op": "JUMP"
    },
    "10797": {
      "op": "JUMPDEST"
    },
    "10798": {
      "op": "SWAP2"
    },
    "10799": {
      "op": "SWAP1"
    },
    "10800": {
      "op": "SWAP2"
    },
    "10801": {
      "op": "ADD"
    },
    "10802": {
      "op": "SWAP3"
    },
    "10803": {
      "op": "SWAP2"
    },
    "10804": {
      "op": "POP"
    },
    "10805": {
      "op": "POP"
    },
    "10806": {
      "jump": "o",
      "op": "JUMP"
    },
    "10807": {
      "op": "JUMPDEST"
    },
    "10808": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10813": {
      "op": "DUP2"
    },
    "10814": {
      "op": "DUP2"
    },
    "10815": {
      "op": "AND"
    },
    "10816": {
      "op": "DUP4"
    },
    "10817": {
      "op": "DUP3"
    },
    "10818": {
      "op": "AND"
    },
    "10819": {
      "op": "ADD"
    },
    "10820": {
      "op": "SWAP1"
    },
    "10821": {
      "op": "DUP1"
    },
    "10822": {
      "op": "DUP3"
    },
    "10823": {
      "op": "GT"
    },
    "10824": {
      "op": "ISZERO"
    },
    "10825": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10828": {
      "op": "JUMPI"
    },
    "10829": {
      "op": "PUSH2",
      "value": "0x2384"
    },
    "10832": {
      "op": "PUSH2",
      "value": "0x286B"
    },
    "10835": {
      "jump": "i",
      "op": "JUMP"
    },
    "10836": {
      "op": "JUMPDEST"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10839": {
      "op": "DUP3"
    },
    "10840": {
      "op": "PUSH2",
      "value": "0x2A71"
    },
    "10843": {
      "op": "JUMPI"
    },
    "10844": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10851": {
      "op": "SHL"
    },
    "10852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10854": {
      "op": "MSTORE"
    },
    "10855": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10859": {
      "op": "MSTORE"
    },
    "10860": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10864": {
      "op": "REVERT"
    },
    "10865": {
      "op": "JUMPDEST"
    },
    "10866": {
      "op": "POP"
    },
    "10867": {
      "op": "MOD"
    },
    "10868": {
      "op": "SWAP1"
    },
    "10869": {
      "jump": "o",
      "op": "JUMP"
    },
    "10870": {
      "op": "JUMPDEST"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10873": {
      "op": "DUP1"
    },
    "10874": {
      "op": "DUP3"
    },
    "10875": {
      "op": "MSTORE"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10878": {
      "op": "SWAP1"
    },
    "10879": {
      "op": "DUP3"
    },
    "10880": {
      "op": "ADD"
    },
    "10881": {
      "op": "MSTORE"
    },
    "10882": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "10915": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10917": {
      "op": "DUP3"
    },
    "10918": {
      "op": "ADD"
    },
    "10919": {
      "op": "MSTORE"
    },
    "10920": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10934": {
      "op": "SHL"
    },
    "10935": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10937": {
      "op": "DUP3"
    },
    "10938": {
      "op": "ADD"
    },
    "10939": {
      "op": "MSTORE"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10942": {
      "op": "ADD"
    },
    "10943": {
      "op": "SWAP1"
    },
    "10944": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "bb7db93e44926325a5735fe6bebafc5fb3b844e6",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin-upgradeable/contracts/proxy/utils/Initializable.sol\";\n\ncontract SmartNodes is Initializable, ERC20Upgradeable {\n    // // Modifier to require multisignature validation\n    // modifier onlyMultiSig() {\n    //     // Check if the function invocation is authorized by a specified number of validators\n    //     require(\n    //         countSignatures(msg.sender) >= requiredSignatures,\n    //         \"Multisignature validation required\"\n    //     );\n    //     _;\n    // }\n\n    struct Validator {\n        uint256 id;\n        address validatorAddress;\n        string publicKeyHash;\n        uint32 locked;\n        uint256 unlockTime;\n        uint8 reputation;\n        bool isActive;\n    }\n\n    struct User {\n        uint256 id;\n        address userAddress;\n        string publicKeyHash;\n        uint8 reputation;\n    }\n\n    struct Job {\n        uint256 id;\n        address owner;\n        uint256 capacity;\n        address[] validatorAddresses;\n        bool isCompleted;\n        mapping(address => bool) completeConfirmations;\n        uint8 completeCount;\n    }\n\n    struct JobRequest {\n        uint256 id;\n        address creator;\n        uint256 capacity;\n        address[] validatorAddresses;\n        mapping(address => bool) signatures;\n    }\n\n    // Validator mappings\n    mapping(uint256 => Validator) public validators;\n    mapping(address => uint256) public validatorIdByAddress;\n    mapping(string => uint256) public validatorIdByHash;\n    mapping(uint256 => string) public validatorHashById;\n    mapping(uint256 => uint256) public validatorStateById;\n\n    // User mappings\n    mapping(uint256 => User) public users;\n    mapping(address => uint256) public userIdByAddress;\n    mapping(string => uint256) public userIdByHash;\n\n    // Job mappings\n    mapping(uint256 => Job) public jobs;\n    mapping(uint256 => JobRequest) public jobRequests;\n\n    // Counters for users\n    uint256 public validatorIdCounter;\n    uint256 public userIdCounter;\n    uint256 public jobCounter;\n\n    // Minimum and maximum required signatures for any job\n    uint8 public minValidators;\n    uint8 public maxValidators;\n\n    // Events\n    event ValidatorCreated(uint256 indexed id, address validatorAddress);\n    event TokensLocked(address indexed validator, uint256 amount);\n    event UnlockInitiated(address indexed validator, uint256 unlockTime);\n    event TokensUnlocked(address indexed validator, uint256 amount);\n    event ValidatorActivated(uint256 indexed validatorId);\n    event ValidatorDeactivated(uint256 indexed validatorId);\n    event JobCompleted(uint256 indexed jobId);\n\n    function initialize() public initializer {\n        __ERC20_init(\"TensorLink\", \"TLINK\");\n        _mint(msg.sender, 100);\n        validatorIdCounter = 1;\n        userIdCounter = 1;\n        jobCounter = 1;\n        minValidators = 2;\n        maxValidators = 12;\n    }\n\n    // Role creation methods (User & Validator)\n    function createUser(string memory publicKeyHash) external {\n        require(userIdByAddress[msg.sender] == 0, \"User already registered.\");\n        users[userIdCounter] = User({\n            id: userIdCounter,\n            userAddress: msg.sender,\n            reputation: 0,\n            publicKeyHash: publicKeyHash\n        });\n\n        userIdByHash[publicKeyHash] = userIdCounter;\n        userIdByAddress[msg.sender] = userIdCounter++;\n    }\n\n    function createValidator(string memory publicKeyHash) external {\n        require(\n            validatorIdByHash[publicKeyHash] == 0,\n            \"Validator with this publicKeyHash already exists.\"\n        );\n\n        Validator storage validator = validators[validatorIdCounter];\n        validator.id = validatorIdCounter;\n        validator.validatorAddress = msg.sender;\n        validator.publicKeyHash = publicKeyHash;\n        validator.isActive = true;\n\n        validatorIdByAddress[msg.sender] = validatorIdCounter;\n        validatorIdByHash[publicKeyHash] = validatorIdCounter;\n        validatorHashById[validatorIdCounter] = publicKeyHash;\n        validatorStateById[validatorIdCounter] = 1;\n\n        emit ValidatorCreated(validatorIdCounter, msg.sender);\n\n        validatorIdCounter++;\n    }\n\n    /// Validator Token Locking and Unlocking ///\n    function lockTokens(uint32 amount) external {\n        require(amount > 0, \"Amount must be greater than zero.\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\n\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        require(validatorId != 0, \"Validator does not exist.\");\n        Validator storage validator = validators[validatorId];\n        require(validator.isActive, \"Validator is not active.\");\n\n        transferFrom(msg.sender, address(this), amount);\n        validator.locked += amount;\n\n        emit TokensLocked(msg.sender, amount);\n    }\n\n    function unlockTokens(uint32 amount) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n\n        require(amount <= validator.locked, \"Amount exceeds locked balance.\");\n        require(amount > 0, \"Amount must be greater than zero.\");\n\n        // Initialize the unlock time if it's the first unlock attempt\n        if (validator.unlockTime == 0) {\n            validator.unlockTime = block.timestamp + 50400; // 14 day unlocking period\n            emit UnlockInitiated(msg.sender, validator.unlockTime); // Optional: emit an event\n        } else {\n            // On subsequent attempts, check if the unlock period has elapsed\n            require(\n                block.timestamp >= validator.unlockTime,\n                \"Tokens are still locked.\"\n            );\n\n            validator.locked -= amount;\n            _mint(msg.sender, amount); // Mint tokens back to the validator's address\n\n            emit TokensUnlocked(msg.sender, amount); // Optional: emit an event when tokens are unlocked\n        }\n    }\n\n    // User Job Requesting\n    function requestJob(\n        uint8 nValidators,\n        uint256 capacity\n    ) external returns (uint256[] memory) {\n        require(userIdByAddress[msg.sender] != 0, \"User not registered.\");\n        require(capacity > 0, \"Capacity must be greater zero.\");\n        // require(workerAddresses.length > 0)\n\n        JobRequest storage request = jobRequests[jobCounter];\n        request.id = jobCounter;\n        request.creator = msg.sender;\n        request.capacity = capacity;\n\n        // Select validators pseudorandomly\n        uint256[] memory selectedValidatorIds = _pseudorandomValidatorSelection(\n            nValidators\n        );\n\n        address[] memory selectedValidators = new address[](\n            selectedValidatorIds.length\n        );\n\n        // Change selected validators to the busy (active) state and grab their address\n        for (uint256 i = 0; i < selectedValidatorIds.length; i++) {\n            selectedValidators[i] = validators[selectedValidatorIds[i]]\n                .validatorAddress;\n        }\n\n        request.validatorAddresses = selectedValidators; // Store the selected validators\n        jobCounter++; // Increment jobCounter after storing the job request\n\n        return selectedValidatorIds;\n    }\n\n    // Validator job creation voting\n    function approveJobCreation(uint256 jobId) external {\n        uint256 validatorId = validatorIdByAddress[msg.sender];\n        Validator storage validator = validators[validatorId];\n        require(validator.isActive, \"Validator is not active.\");\n        require(\n            jobRequests[jobId].id == jobId,\n            \"Job creation request does not exist.\"\n        );\n\n        JobRequest storage request = jobRequests[jobId];\n        uint8 nValidators = uint8(request.validatorAddresses.length);\n        request.signatures[msg.sender] = true;\n\n        // Final signature triggers the deletion of the job request and the creation of the job\n        if (_countSignatures(request) == nValidators) {\n            Job storage job = jobs[jobId];\n            job.id = jobId;\n            job.owner = request.creator;\n            job.capacity = request.capacity;\n            job.validatorAddresses = request.validatorAddresses;\n            job.completeCount = 0;\n            delete jobRequests[jobId];\n        }\n    }\n\n    // Validator job completion voting\n    function completeJob(uint256 jobId) external {\n        Job storage job = jobs[jobId];\n        require(job.id == jobId, \"Job does not exist.\");\n        require(job.isCompleted == false, \"Job is already completed.\");\n\n        // Check if sender is one of the validators\n        bool isValidator = false;\n        for (uint i = 0; i < job.validatorAddresses.length; i++) {\n            if (msg.sender == job.validatorAddresses[i]) {\n                isValidator = true;\n                break;\n            }\n        }\n\n        require(\n            isValidator,\n            \"Only validators of this job may call this function\"\n        );\n        require(\n            job.completeConfirmations[msg.sender] = false,\n            \"Validator already confirmed.\"\n        );\n\n        job.completeConfirmations[msg.sender] = true;\n        job.completeCount++;\n\n        // If all validators have confirmed status, mark job as complete\n        if (job.completeCount == job.validatorAddresses.length) {\n            job.isCompleted = true;\n\n            // Move all validators to the inactive state\n            for (uint i = 0; i < job.validatorAddresses.length; i++) {\n                Validator storage validator = validators[\n                    validatorIdByAddress[job.validatorAddresses[i]]\n                ];\n                _updateValidatorState(validator.id, false);\n            }\n\n            emit JobCompleted(jobId);\n        }\n    }\n\n    function _countSignatures(\n        JobRequest storage request\n    ) internal view returns (uint256) {\n        uint256 count = 0;\n        for (uint256 i = 0; i < request.validatorAddresses.length; i++) {\n            if (request.signatures[request.validatorAddresses[i]]) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    // Pseudorandom selection of validators\n    function _pseudorandomValidatorSelection(\n        uint8 nValidators\n    ) internal returns (uint256[] memory) {\n        require(\n            nValidators >= minValidators && nValidators <= maxValidators,\n            \"nValidators must be between minValidator and maxValidator\"\n        );\n        require(\n            nValidators > 0 && nValidators <= validatorIdCounter,\n            \"Not enough available validators for job, please try again later.\"\n        );\n\n        uint256[] memory selectedValidators = new uint256[](nValidators);\n        uint256 selectedCount = 0;\n\n        for (uint256 i = 0; i < nValidators; i++) {\n            uint256 nonce = 0;\n            while (selectedCount == i) {\n                uint256 randId = uint256(\n                    keccak256(\n                        abi.encodePacked(block.timestamp, msg.sender, nonce++)\n                    )\n                ) % validatorIdCounter;\n\n                if (validatorStateById[randId] == 1) {\n                    // Mark selected validator as busy\n                    _updateValidatorState(randId, true);\n                    selectedValidators[i] = randId;\n                    selectedCount++;\n                } else if (nonce < 50) {\n                    nonce++;\n                } else {\n                    revert(\"Max validator requests reached\");\n                }\n            }\n        }\n\n        return selectedValidators;\n    }\n\n    function _updateValidatorState(\n        uint256 validatorId,\n        bool activate\n    ) internal {\n        require(\n            validatorId > 0 && validatorId < validatorIdCounter,\n            \"Invalid ValidatorId\"\n        );\n        require(\n            validatorStateById[validatorId] > 0,\n            \"Validator is not online.\"\n        );\n\n        if (activate) {\n            // Move validator to the active state if not already active\n            if (validatorStateById[validatorId] == 1) {\n                validatorStateById[validatorId] = 2;\n            } else {\n                revert(\"Validator being activated is already active!\");\n            }\n        } else {\n            // Move validator to the inactive state if not already inactive\n            if (validatorStateById[validatorId] == 2) {\n                validatorStateById[validatorId] = 1;\n            } else {\n                revert(\"Validator is already inactive!\");\n            }\n        }\n    }\n\n    function _activateValidator(uint256 validatorId) internal {\n        require(\n            0 < validatorId && validatorId < validatorIdCounter,\n            \"Validator ID must be valid.\"\n        );\n\n        Validator storage validator = validators[validatorId];\n        require(!validator.isActive, \"Validator already active!\");\n        validator.isActive = true;\n        validatorStateById[validatorId] = 1;\n        emit ValidatorActivated(validatorId);\n    }\n\n    function _deactivateValidator(uint256 validatorId) internal {\n        require(\n            0 < validatorId && validatorId < validatorIdCounter,\n            \"Validator ID must be valid.\"\n        );\n        Validator storage validator = validators[validatorId];\n\n        require(validator.isActive, \"Validator not active!\");\n        validator.isActive = false;\n\n        validatorStateById[validatorId] = 0;\n        emit ValidatorActivated(validatorId);\n    }\n\n    function random() external view returns (uint256) {\n        return uint256(keccak256(abi.encodePacked((block.timestamp))));\n    }\n\n    function getjobCounter() external view returns (uint256) {\n        return jobCounter;\n    }\n\n    function getValidatorIdCounter() external view returns (uint256) {\n        return validatorIdCounter;\n    }\n\n    function getUserIdCounter() external view returns (uint256) {\n        return userIdCounter;\n    }\n\n    function getUserId(\n        string memory publicKeyHash\n    ) external view returns (uint256) {\n        return userIdByHash[publicKeyHash];\n    }\n\n    function getValidatorState(\n        uint256 validatorId\n    ) external view returns (uint256) {\n        require(\n            validatorId > 0 && validatorId < validatorIdCounter,\n            \"Invalid ValidatorId!\"\n        );\n        return validatorStateById[validatorId];\n    }\n\n    // Returns a list of all the selected validators for a job request\n    function getJobRequestValidators(\n        uint256 reqId\n    ) external view returns (address[] memory) {\n        require(reqId < jobCounter, \"Invalid jobRequest ID\");\n        JobRequest storage jobReq = jobRequests[reqId];\n        if (jobReq.id == reqId) {\n            address[] memory jobReqAddresses = jobRequests[reqId]\n                .validatorAddresses;\n            return jobReqAddresses;\n        } else {\n            revert(\"JobRequest not found!\");\n        }\n    }\n}\n",
  "sourceMap": "217:14751:6:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SmartNodes.sol",
  "type": "contract"
}